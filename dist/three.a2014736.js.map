{"version":3,"sources":["three.js/build/three.js"],"names":["global","factory","exports","module","define","amd","globalThis","self","THREE","REVISION","MOUSE","LEFT","MIDDLE","RIGHT","ROTATE","DOLLY","PAN","TOUCH","DOLLY_PAN","DOLLY_ROTATE","CullFaceNone","CullFaceBack","CullFaceFront","CullFaceFrontBack","BasicShadowMap","PCFShadowMap","PCFSoftShadowMap","VSMShadowMap","FrontSide","BackSide","DoubleSide","FlatShading","SmoothShading","NoBlending","NormalBlending","AdditiveBlending","SubtractiveBlending","MultiplyBlending","CustomBlending","AddEquation","SubtractEquation","ReverseSubtractEquation","MinEquation","MaxEquation","ZeroFactor","OneFactor","SrcColorFactor","OneMinusSrcColorFactor","SrcAlphaFactor","OneMinusSrcAlphaFactor","DstAlphaFactor","OneMinusDstAlphaFactor","DstColorFactor","OneMinusDstColorFactor","SrcAlphaSaturateFactor","NeverDepth","AlwaysDepth","LessDepth","LessEqualDepth","EqualDepth","GreaterEqualDepth","GreaterDepth","NotEqualDepth","MultiplyOperation","MixOperation","AddOperation","NoToneMapping","LinearToneMapping","ReinhardToneMapping","CineonToneMapping","ACESFilmicToneMapping","CustomToneMapping","UVMapping","CubeReflectionMapping","CubeRefractionMapping","EquirectangularReflectionMapping","EquirectangularRefractionMapping","CubeUVReflectionMapping","CubeUVRefractionMapping","RepeatWrapping","ClampToEdgeWrapping","MirroredRepeatWrapping","NearestFilter","NearestMipmapNearestFilter","NearestMipMapNearestFilter","NearestMipmapLinearFilter","NearestMipMapLinearFilter","LinearFilter","LinearMipmapNearestFilter","LinearMipMapNearestFilter","LinearMipmapLinearFilter","LinearMipMapLinearFilter","UnsignedByteType","ByteType","ShortType","UnsignedShortType","IntType","UnsignedIntType","FloatType","HalfFloatType","UnsignedShort4444Type","UnsignedShort5551Type","UnsignedShort565Type","UnsignedInt248Type","AlphaFormat","RGBFormat","RGBAFormat","LuminanceFormat","LuminanceAlphaFormat","RGBEFormat","DepthFormat","DepthStencilFormat","RedFormat","RedIntegerFormat","RGFormat","RGIntegerFormat","RGBIntegerFormat","RGBAIntegerFormat","RGB_S3TC_DXT1_Format","RGBA_S3TC_DXT1_Format","RGBA_S3TC_DXT3_Format","RGBA_S3TC_DXT5_Format","RGB_PVRTC_4BPPV1_Format","RGB_PVRTC_2BPPV1_Format","RGBA_PVRTC_4BPPV1_Format","RGBA_PVRTC_2BPPV1_Format","RGB_ETC1_Format","RGB_ETC2_Format","RGBA_ETC2_EAC_Format","RGBA_ASTC_4x4_Format","RGBA_ASTC_5x4_Format","RGBA_ASTC_5x5_Format","RGBA_ASTC_6x5_Format","RGBA_ASTC_6x6_Format","RGBA_ASTC_8x5_Format","RGBA_ASTC_8x6_Format","RGBA_ASTC_8x8_Format","RGBA_ASTC_10x5_Format","RGBA_ASTC_10x6_Format","RGBA_ASTC_10x8_Format","RGBA_ASTC_10x10_Format","RGBA_ASTC_12x10_Format","RGBA_ASTC_12x12_Format","RGBA_BPTC_Format","SRGB8_ALPHA8_ASTC_4x4_Format","SRGB8_ALPHA8_ASTC_5x4_Format","SRGB8_ALPHA8_ASTC_5x5_Format","SRGB8_ALPHA8_ASTC_6x5_Format","SRGB8_ALPHA8_ASTC_6x6_Format","SRGB8_ALPHA8_ASTC_8x5_Format","SRGB8_ALPHA8_ASTC_8x6_Format","SRGB8_ALPHA8_ASTC_8x8_Format","SRGB8_ALPHA8_ASTC_10x5_Format","SRGB8_ALPHA8_ASTC_10x6_Format","SRGB8_ALPHA8_ASTC_10x8_Format","SRGB8_ALPHA8_ASTC_10x10_Format","SRGB8_ALPHA8_ASTC_12x10_Format","SRGB8_ALPHA8_ASTC_12x12_Format","LoopOnce","LoopRepeat","LoopPingPong","InterpolateDiscrete","InterpolateLinear","InterpolateSmooth","ZeroCurvatureEnding","ZeroSlopeEnding","WrapAroundEnding","NormalAnimationBlendMode","AdditiveAnimationBlendMode","TrianglesDrawMode","TriangleStripDrawMode","TriangleFanDrawMode","LinearEncoding","sRGBEncoding","GammaEncoding","RGBEEncoding","LogLuvEncoding","RGBM7Encoding","RGBM16Encoding","RGBDEncoding","BasicDepthPacking","RGBADepthPacking","TangentSpaceNormalMap","ObjectSpaceNormalMap","ZeroStencilOp","KeepStencilOp","ReplaceStencilOp","IncrementStencilOp","DecrementStencilOp","IncrementWrapStencilOp","DecrementWrapStencilOp","InvertStencilOp","NeverStencilFunc","LessStencilFunc","EqualStencilFunc","LessEqualStencilFunc","GreaterStencilFunc","NotEqualStencilFunc","GreaterEqualStencilFunc","AlwaysStencilFunc","StaticDrawUsage","DynamicDrawUsage","StreamDrawUsage","StaticReadUsage","DynamicReadUsage","StreamReadUsage","StaticCopyUsage","DynamicCopyUsage","StreamCopyUsage","GLSL1","GLSL3","EventDispatcher","type","listener","_listeners","undefined","listeners","indexOf","push","listenerArray","index","splice","event","target","array","slice","i","l","length","call","_lut","toString","_seed","DEG2RAD","Math","PI","RAD2DEG","generateUUID","d0","random","d1","d2","d3","uuid","toUpperCase","clamp","value","min","max","euclideanModulo","n","m","mapLinear","x","a1","a2","b1","b2","inverseLerp","y","lerp","t","damp","lambda","dt","exp","pingpong","abs","smoothstep","smootherstep","randInt","low","high","floor","randFloat","randFloatSpread","range","seededRandom","s","degToRad","degrees","radToDeg","radians","isPowerOfTwo","ceilPowerOfTwo","pow","ceil","log","LN2","floorPowerOfTwo","setQuaternionFromProperEuler","q","a","b","c","order","cos","sin","c2","s2","c13","s13","c1_3","s1_3","c3_1","s3_1","set","console","warn","MathUtils","Object","freeze","__proto__","Vector2","scalar","Error","constructor","v","w","addVectors","subVectors","multiplyScalar","e","elements","minVal","maxVal","divideScalar","round","sqrt","angle","atan2","distanceToSquared","dx","dy","normalize","alpha","v1","v2","offset","attribute","getX","getY","center","prototype","isVector2","Matrix3","arguments","error","n11","n12","n13","n21","n22","n23","n31","n32","n33","te","me","xAxis","yAxis","zAxis","setFromMatrix3Column","multiplyMatrices","ae","be","a11","a12","a13","a21","a22","a23","a31","a32","a33","b11","b12","b13","b21","b22","b23","b31","b32","b33","d","f","g","h","t11","t12","t13","det","detInv","tmp","matrix4","setFromMatrix4","invert","transpose","r","tx","ty","sx","sy","rotation","cx","cy","theta","matrix","fromArray","isMatrix3","_canvas","ImageUtils","image","test","src","HTMLCanvasElement","canvas","document","createElementNS","width","height","context","getContext","ImageData","putImageData","drawImage","toDataURL","textureId","Texture","DEFAULT_IMAGE","mapping","DEFAULT_MAPPING","wrapS","wrapT","magFilter","minFilter","format","anisotropy","encoding","defineProperty","name","mipmaps","internalFormat","repeat","matrixAutoUpdate","generateMipmaps","premultiplyAlpha","flipY","unpackAlignment","version","onUpdate","setUvTransform","copy","source","meta","isRootObject","textures","output","metadata","generator","wrap","images","url","Array","isArray","isDataTexture","serializeImage","dispatchEvent","uv","applyMatrix3","isTexture","HTMLImageElement","ImageBitmap","getDataURL","data","Vector4","z","acos","epsilon","epsilon2","m11","m12","m13","m21","m22","m23","m31","m32","m33","xx","yy","zz","xy","xz","yz","getZ","getW","isVector4","WebGLRenderTarget","options","depth","scissor","scissorTest","viewport","texture","depthBuffer","stencilBuffer","depthTexture","dispose","clone","isWebGLRenderTarget","WebGLMultipleRenderTargets","count","il","isWebGLMultipleRenderTargets","WebGLMultisampleRenderTarget","samples","isWebGLMultisampleRenderTarget","Quaternion","_x","_y","_z","_w","_onChangeCallback","quaternion","euler","update","isEuler","_order","c1","c3","s1","s3","axis","halfAngle","trace","vFrom","vTo","dot","Number","EPSILON","step","angleTo","slerp","conjugate","p","multiplyQuaternions","qax","qay","qaz","qaw","qbx","qby","qbz","qbw","qb","cosHalfTheta","sqrSinHalfTheta","sinHalfTheta","halfTheta","ratioA","ratioB","qa","callback","qm","slerpQuaternions","dst","dstOffset","src0","srcOffset0","src1","srcOffset1","x0","y0","z0","w0","x1","y1","z1","w1","dir","sqrSin","len","tDir","isQuaternion","Vector3","multiplyVectors","applyQuaternion","_quaternion$4","setFromEuler","setFromAxisAngle","qx","qy","qz","qw","ix","iy","iz","iw","camera","applyMatrix4","matrixWorldInverse","projectionMatrix","projectionMatrixInverse","matrixWorld","crossVectors","ax","ay","az","bx","by","bz","denominator","lengthSq","planeNormal","_vector$c","projectOnVector","sub","normal","dz","setFromSphericalCoords","radius","phi","sinPhiRadius","setFromCylindricalCoords","setFromMatrixColumn","sz","isVector3","Box3","Infinity","minX","minY","minZ","maxX","maxY","maxZ","points","makeEmpty","expandByPoint","size","halfSize","_vector$b","add","object","expandByObject","box","isEmpty","point","vector","addScalar","updateWorldMatrix","geometry","boundingBox","computeBoundingBox","_box$3","union","children","sphere","clampPoint","plane","constant","triangle","getCenter","_center","_extents","_v0$2","_v1$7","_v2$3","_f0","_f1","_f2","axes","satForAxes","_triangleNormal","clampedPoint","getSize","_points","setFromPoints","equals","isBox3","_testAxis","v0","extents","j","p0","p1","p2","_box$2","_v1$6","_toFarthestPoint","_toPoint","Sphere","optionalCenter","maxRadiusSq","distanceTo","radiusSum","intersectsSphere","distanceToPoint","deltaLengthSq","expandByScalar","getMaxScaleOnAxis","missingRadiusHalf","_vector$a","_segCenter","_segDir","_diff","_edge1","_edge2","_normal$1","Ray","origin","direction","ray","at","directionDistance","distanceSqToPoint","optionalPointOnRay","optionalPointOnSegment","segExtent","a01","b0","s0","sqrDist","extDet","invDet","tca","radius2","thc","t0","t1","distanceToPlane","distToPoint","tmin","tmax","tymin","tymax","tzmin","tzmax","invdirx","invdiry","invdirz","intersectBox","backfaceCulling","DdN","sign","DdQxE2","DdE1xQ","cross","QdN","transformDirection","Matrix4","n14","n24","n34","n41","n42","n43","n44","scaleX","_v1$5","scaleY","scaleZ","af","bf","ce","cf","de","df","ac","ad","bc","bd","compose","_zero","_one","eye","up","a14","a24","a34","a41","a42","a43","a44","b14","b24","b34","b41","b42","b43","b44","t14","scaleXSq","scaleYSq","scaleZSq","yx","zx","zy","position","scale","x2","y2","z2","wx","wy","wz","determinant","_m1$2","invSX","invSY","invSZ","setFromRotationMatrix","left","right","top","bottom","near","far","isMatrix4","_matrix$1","_quaternion$3","Euler","DefaultOrder","asin","makeRotationFromQuaternion","newOrder","setFromQuaternion","optionalResult","RotationOrders","Layers","mask","channel","layers","_object3DId","_v1$4","_q1","_m1$1","_target","_position$3","_scale$2","_quaternion$2","_xAxis","_yAxis","_zAxis","_addedEvent","_removedEvent","Object3D","parent","DefaultUp","onRotationChange","onQuaternionChange","_onChange","defineProperties","configurable","enumerable","modelViewMatrix","normalMatrix","DefaultMatrixAutoUpdate","matrixWorldNeedsUpdate","visible","castShadow","receiveShadow","frustumCulled","renderOrder","animations","userData","updateMatrix","premultiply","decompose","multiply","rotateOnAxis","distance","translateOnAxis","setFromMatrixPosition","isCamera","isLight","lookAt","extractRotation","isObject3D","remove","id","getObjectByProperty","child","traverse","traverseVisible","traverseAncestors","force","updateMatrixWorld","updateParents","updateChildren","geometries","materials","shapes","skeletons","JSON","stringify","toArray","isInstancedMesh","instanceMatrix","toJSON","instanceColor","serialize","library","element","isMesh","isLine","isPoints","parameters","shape","isSkinnedMesh","bindMode","bindMatrix","skeleton","material","uuids","animation","extractFromCache","cache","values","key","recursive","parse","_vector1","_vector2$1","_normalMatrix","Plane","setFromNormalAndCoplanarPoint","inverseNormalLength","negate","line","delta","start","startSign","endSign","end","intersectsPlane","optionalNormalMatrix","getNormalMatrix","referencePoint","coplanarPoint","isPlane","_v0$1","_v1$3","_v2$2","_v3$1","_vab","_vac","_vbc","_vap","_vbp","_vcp","Triangle","i0","i1","i2","getNormal","setFromCoplanarPoints","getBarycoord","uv1","uv2","uv3","getUV","containsPoint","isFrontFacing","intersectsTriangle","d4","vc","addScaledVector","d5","d6","vb","va","denom","targetLengthSq","dot00","dot01","dot02","dot11","dot12","invDenom","u","p3","materialId","Material","fog","blending","side","vertexColors","opacity","transparent","blendSrc","blendDst","blendEquation","blendSrcAlpha","blendDstAlpha","blendEquationAlpha","depthFunc","depthTest","depthWrite","stencilWriteMask","stencilFunc","stencilRef","stencilFuncMask","stencilFail","stencilZFail","stencilZPass","stencilWrite","clippingPlanes","clipIntersection","clipShadows","shadowSide","colorWrite","precision","polygonOffset","polygonOffsetFactor","polygonOffsetUnits","dithering","alphaTest","alphaToCoverage","premultipliedAlpha","toneMapped","onBeforeCompile","newValue","flatShading","currentValue","isColor","isRoot","color","getHex","roughness","metalness","sheen","emissive","emissiveIntensity","specular","shininess","clearcoat","clearcoatRoughness","clearcoatMap","clearcoatRoughnessMap","clearcoatNormalMap","clearcoatNormalScale","map","matcap","alphaMap","lightMap","lightMapIntensity","aoMap","aoMapIntensity","bumpMap","bumpScale","normalMap","normalMapType","normalScale","displacementMap","displacementScale","displacementBias","roughnessMap","metalnessMap","emissiveMap","specularMap","envMap","combine","envMapIntensity","reflectivity","refractionRatio","gradientMap","transmission","transmissionMap","thickness","thicknessMap","attenuationDistance","attenuationColor","sizeAttenuation","linewidth","dashSize","gapSize","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","morphTargets","morphNormals","srcPlanes","dstPlanes","isMaterial","_colorKeywords","_hslA","_hslB","hue2rgb","SRGBToLinear","LinearToSRGB","Color","setRGB","setHex","setStyle","hex","style","handleAlpha","string","parseFloat","exec","components","parseInt","setHSL","charAt","setColorName","toLowerCase","gammaFactor","safeInverse","copyGammaToLinear","copyLinearToGamma","copySRGBToLinear","copyLinearToSRGB","hue","saturation","lightness","getHSL","color1","color2","normalized","NAMES","MeshBasicMaterial","setValues","isMeshBasicMaterial","_vector$9","_vector2","BufferAttribute","itemSize","TypeError","usage","updateRange","index1","index2","colors","vectors","fromBufferAttribute","setXY","setXYZ","applyNormalMatrix","onUploadCallback","isBufferAttribute","Int8BufferAttribute","Int8Array","Uint8BufferAttribute","Uint8Array","Uint8ClampedBufferAttribute","Uint8ClampedArray","Int16BufferAttribute","Int16Array","Uint16BufferAttribute","Uint16Array","Int32BufferAttribute","Int32Array","Uint32BufferAttribute","Uint32Array","Float16BufferAttribute","isFloat16BufferAttribute","Float32BufferAttribute","Float32Array","Float64BufferAttribute","Float64Array","arrayMax","TYPED_ARRAYS","getTypedArray","buffer","_id","_m1","_obj","_offset","_box$1","_boxMorphTargets","_vector$8","BufferGeometry","attributes","morphAttributes","morphTargetsRelative","groups","boundingSphere","drawRange","materialIndex","needsUpdate","tangent","computeBoundingSphere","makeRotationX","makeRotationY","makeRotationZ","makeTranslation","makeScale","translate","setAttribute","morphAttributesPosition","isGLBufferAttribute","setFromBufferAttribute","morphAttribute","isNaN","jl","indices","positions","normals","uvs","nVertices","tangents","tan1","tan2","vA","vB","vC","uvA","uvB","uvC","sdir","tdir","handleTriangle","isFinite","group","tmp2","n2","handleVertex","positionAttribute","getAttribute","normalAttribute","pA","pB","pC","nA","nB","nC","cb","ab","normalizeNormals","isBufferGeometry","attribute1","attributeArray1","attribute2","attributeArray2","attributeOffset","convertBufferAttribute","array2","geometry2","newAttribute","morphArray","addGroup","keys","hasMorphAttributes","attributeArray","setIndex","_inverseMatrix$2","_ray$2","_sphere$3","_vA$1","_vB$1","_vC$1","_tempA","_tempB","_tempC","_morphA","_morphB","_morphC","_uvA$1","_uvB$1","_uvC$1","_intersectionPoint","_intersectionPointWorld","Mesh","updateMorphTargets","morphTargetInfluences","morphTargetDictionary","assign","ml","String","raycaster","intersects","intersectsBox","intersection","morphPosition","groupMaterial","checkBufferGeometryIntersection","faceIndex","face","isGeometry","checkIntersection","intersect","intersectTriangle","morphInfluences","influence","boneTransform","BoxGeometry","widthSegments","heightSegments","depthSegments","scope","vertices","numberOfVertices","groupStart","buildPlane","udir","vdir","gridX","gridY","segmentWidth","segmentHeight","widthHalf","heightHalf","depthHalf","gridX1","gridY1","vertexCounter","groupCount","cloneUniforms","property","mergeUniforms","uniforms","merged","UniformsUtils","merge","default_vertex","default_fragment","ShaderMaterial","defines","vertexShader","fragmentShader","lights","clipping","extensions","derivatives","fragDepth","drawBuffers","shaderTextureLOD","defaultAttributeValues","index0AttributeName","uniformsNeedUpdate","glslVersion","uniform","isShaderMaterial","Camera","PerspectiveCamera","fov","aspect","zoom","focus","view","filmGauge","filmOffset","updateProjectionMatrix","focalLength","vExtentSlope","getFilmHeight","atan","tan","fullWidth","fullHeight","enabled","offsetX","offsetY","skew","getFilmWidth","makePerspective","isPerspectiveCamera","CubeCamera","renderTarget","isWebGLCubeRenderTarget","cameraPX","cameraNX","cameraPY","cameraNY","cameraPZ","cameraNZ","renderer","scene","currentXrEnabled","xr","currentRenderTarget","getRenderTarget","setRenderTarget","render","CubeTexture","_needsFlipEnvMap","isCubeTexture","WebGLCubeRenderTarget","dummy","isInteger","shader","tEquirect","mesh","currentMinFilter","stencil","clear","_sphere$2","_vector$7","Frustum","p4","p5","planes","frustum","me0","me1","me2","me3","me4","me5","me6","me7","me8","me9","me10","me11","me12","me13","me14","me15","setComponents","sprite","negRadius","WebGLAnimation","isAnimating","animationLoop","requestId","onAnimationFrame","time","frame","requestAnimationFrame","stop","cancelAnimationFrame","setAnimationLoop","setContext","WebGLAttributes","gl","capabilities","isWebGL2","buffers","WeakMap","createBuffer","bufferType","bindBuffer","bufferData","FLOAT","HALF_FLOAT","UNSIGNED_SHORT","SHORT","UNSIGNED_INT","INT","BYTE","UNSIGNED_BYTE","bytesPerElement","BYTES_PER_ELEMENT","updateBuffer","bufferSubData","subarray","get","isInterleavedBufferAttribute","deleteBuffer","delete","cached","elementSize","PlaneGeometry","width_half","height_half","segment_width","segment_height","alphamap_fragment","alphamap_pars_fragment","alphatest_fragment","aomap_fragment","aomap_pars_fragment","begin_vertex","beginnormal_vertex","bsdfs","bumpmap_pars_fragment","clipping_planes_fragment","clipping_planes_pars_fragment","clipping_planes_pars_vertex","clipping_planes_vertex","color_fragment","color_pars_fragment","color_pars_vertex","color_vertex","common","cube_uv_reflection_fragment","defaultnormal_vertex","displacementmap_pars_vertex","displacementmap_vertex","emissivemap_fragment","emissivemap_pars_fragment","encodings_fragment","encodings_pars_fragment","envmap_fragment","envmap_common_pars_fragment","envmap_pars_fragment","envmap_pars_vertex","envmap_vertex","fog_vertex","fog_pars_vertex","fog_fragment","fog_pars_fragment","gradientmap_pars_fragment","lightmap_fragment","lightmap_pars_fragment","lights_lambert_vertex","lights_pars_begin","envmap_physical_pars_fragment","lights_toon_fragment","lights_toon_pars_fragment","lights_phong_fragment","lights_phong_pars_fragment","lights_physical_fragment","lights_physical_pars_fragment","lights_fragment_begin","lights_fragment_maps","lights_fragment_end","logdepthbuf_fragment","logdepthbuf_pars_fragment","logdepthbuf_pars_vertex","logdepthbuf_vertex","map_fragment","map_pars_fragment","map_particle_fragment","map_particle_pars_fragment","metalnessmap_fragment","metalnessmap_pars_fragment","morphnormal_vertex","morphtarget_pars_vertex","morphtarget_vertex","normal_fragment_begin","normal_fragment_maps","normalmap_pars_fragment","clearcoat_normal_fragment_begin","clearcoat_normal_fragment_maps","clearcoat_pars_fragment","packing","premultiplied_alpha_fragment","project_vertex","dithering_fragment","dithering_pars_fragment","roughnessmap_fragment","roughnessmap_pars_fragment","shadowmap_pars_fragment","shadowmap_pars_vertex","shadowmap_vertex","shadowmask_pars_fragment","skinbase_vertex","skinning_pars_vertex","skinning_vertex","skinnormal_vertex","specularmap_fragment","specularmap_pars_fragment","tonemapping_fragment","tonemapping_pars_fragment","transmission_fragment","transmission_pars_fragment","uv_pars_fragment","uv_pars_vertex","uv_vertex","uv2_pars_fragment","uv2_pars_vertex","uv2_vertex","worldpos_vertex","background_frag","background_vert","cube_frag","cube_vert","depth_frag","depth_vert","distanceRGBA_frag","distanceRGBA_vert","equirect_frag","equirect_vert","linedashed_frag","linedashed_vert","meshbasic_frag","meshbasic_vert","meshlambert_frag","meshlambert_vert","meshmatcap_frag","meshmatcap_vert","meshtoon_frag","meshtoon_vert","meshphong_frag","meshphong_vert","meshphysical_frag","meshphysical_vert","normal_frag","normal_vert","points_frag","points_vert","shadow_frag","shadow_vert","sprite_frag","sprite_vert","ShaderChunk","UniformsLib","diffuse","uvTransform","uv2Transform","specularmap","envmap","flipEnvMap","maxMipLevel","aomap","lightmap","emissivemap","bumpmap","normalmap","displacementmap","roughnessmap","metalnessmap","gradientmap","fogDensity","fogNear","fogFar","fogColor","ambientLightColor","lightProbe","directionalLights","properties","directionalLightShadows","shadowBias","shadowNormalBias","shadowRadius","shadowMapSize","directionalShadowMap","directionalShadowMatrix","spotLights","coneCos","penumbraCos","decay","spotLightShadows","spotShadowMap","spotShadowMatrix","pointLights","pointLightShadows","shadowCameraNear","shadowCameraFar","pointShadowMap","pointShadowMatrix","hemisphereLights","skyColor","groundColor","rectAreaLights","ltc_1","ltc_2","ShaderLib","basic","lambert","phong","standard","toon","dashed","totalSize","background","t2D","cube","equirect","distanceRGBA","referencePosition","nearDistance","farDistance","shadow","physical","transmissionSamplerSize","transmissionSamplerMap","WebGLBackground","cubemaps","state","objects","clearColor","clearAlpha","planeMesh","boxMesh","currentBackground","currentBackgroundVersion","currentTonemapping","renderList","forceClear","isScene","session","getSession","environmentBlendMode","setClear","autoClear","autoClearColor","autoClearDepth","autoClearStencil","deleteAttribute","onBeforeRender","copyPosition","toneMapping","unshift","getClearColor","setClearColor","getClearAlpha","setClearAlpha","WebGLBindingStates","maxVertexAttributes","getParameter","MAX_VERTEX_ATTRIBS","extension","vaoAvailable","bindingStates","defaultState","createBindingState","currentState","setup","program","updateBuffers","getBindingState","bindVertexArrayObject","saveCache","ELEMENT_ARRAY_BUFFER","setupVertexAttributes","createVertexArrayObject","createVertexArray","createVertexArrayOES","vao","bindVertexArray","bindVertexArrayOES","deleteVertexArrayObject","deleteVertexArray","deleteVertexArrayOES","programMap","stateMap","newAttributes","enabledAttributes","attributeDivisors","cachedAttributes","geometryAttributes","attributesNum","cachedAttribute","geometryAttribute","initAttributes","enableAttribute","enableAttributeAndDivisor","meshPerAttribute","enableVertexAttribArray","disableUnusedAttributes","disableVertexAttribArray","vertexAttribPointer","stride","vertexAttribIPointer","isInstancedBufferGeometry","programAttributes","getAttributes","materialDefaultAttributeValues","programAttribute","isInstancedInterleavedBuffer","_maxInstanceCount","ARRAY_BUFFER","isInstancedBufferAttribute","vertexAttrib2fv","vertexAttrib3fv","vertexAttrib4fv","vertexAttrib1fv","reset","geometryId","programId","releaseStatesOfGeometry","releaseStatesOfProgram","resetDefaultState","WebGLBufferRenderer","info","mode","setMode","drawArrays","renderInstances","primcount","methodName","WebGLCapabilities","maxAnisotropy","getMaxAnisotropy","has","MAX_TEXTURE_MAX_ANISOTROPY_EXT","getMaxPrecision","getShaderPrecisionFormat","VERTEX_SHADER","HIGH_FLOAT","FRAGMENT_SHADER","MEDIUM_FLOAT","WebGL2RenderingContext","WebGL2ComputeRenderingContext","maxPrecision","logarithmicDepthBuffer","maxTextures","MAX_TEXTURE_IMAGE_UNITS","maxVertexTextures","MAX_VERTEX_TEXTURE_IMAGE_UNITS","maxTextureSize","MAX_TEXTURE_SIZE","maxCubemapSize","MAX_CUBE_MAP_TEXTURE_SIZE","maxAttributes","maxVertexUniforms","MAX_VERTEX_UNIFORM_VECTORS","maxVaryings","MAX_VARYING_VECTORS","maxFragmentUniforms","MAX_FRAGMENT_UNIFORM_VECTORS","vertexTextures","floatFragmentTextures","floatVertexTextures","maxSamples","MAX_SAMPLES","WebGLClipping","globalState","numGlobalPlanes","localClippingEnabled","renderingShadows","viewNormalMatrix","numPlanes","numIntersection","init","enableLocalClipping","projectPlanes","beginShadows","endShadows","resetGlobalState","setState","useCache","materialProperties","nGlobal","lGlobal","dstArray","clippingState","skipTransform","nPlanes","flatSize","viewMatrix","i4","WebGLCubeMaps","mapTextureMapping","cubemap","fromEquirectangularTexture","addEventListener","onTextureDispose","removeEventListener","WebGLExtensions","getExtension","WebGLGeometries","wireframeAttributes","onGeometryDispose","memory","updateWireframeAttribute","geometryIndex","geometryPosition","previousAttribute","getWireframeAttribute","currentAttribute","WebGLIndexedBufferRenderer","drawElements","WebGLInfo","calls","triangles","lines","instanceCount","TRIANGLES","LINES","LINE_STRIP","LINE_LOOP","POINTS","programs","autoReset","numericalSort","absNumericalSort","WebGLMorphtargets","influencesList","workInfluences","objectInfluences","influences","sort","MAX_SAFE_INTEGER","morphInfluencesSum","hasAttribute","morphBaseInfluence","getUniforms","setValue","WebGLObjects","updateMap","buffergeometry","hasEventListener","onInstancedMeshDispose","instancedMesh","DataTexture2DArray","wrapR","isDataTexture2DArray","DataTexture3D","isDataTexture3D","emptyTexture","emptyTexture2dArray","emptyTexture3d","emptyCubeTexture","arrayCacheF32","arrayCacheI32","mat4array","mat3array","mat2array","flatten","nBlocks","blockSize","firstElem","arraysEqual","copyArray","allocTexUnits","allocateTextureUnit","setValueV1f","uniform1f","addr","setValueV2f","uniform2f","uniform2fv","setValueV3f","uniform3f","uniform3fv","setValueV4f","uniform4f","uniform4fv","setValueM2","uniformMatrix2fv","setValueM3","uniformMatrix3fv","setValueM4","uniformMatrix4fv","setValueV1i","uniform1i","setValueV2i","uniform2iv","setValueV3i","uniform3iv","setValueV4i","uniform4iv","setValueV1ui","uniform1ui","setValueV2ui","uniform2uiv","setValueV3ui","uniform3uiv","setValueV4ui","uniform4uiv","setValueT1","unit","safeSetTexture2D","setValueT3D1","setTexture3D","setValueT6","safeSetTextureCube","setValueT2DArray1","setTexture2DArray","getSingularSetter","setValueV1fArray","uniform1fv","setValueV2fArray","setValueV3fArray","setValueV4fArray","setValueM2Array","setValueM3Array","setValueM4Array","setValueV1iArray","uniform1iv","setValueV2iArray","setValueV3iArray","setValueV4iArray","setValueV1uiArray","uniform1uiv","setValueV2uiArray","setValueV3uiArray","setValueV4uiArray","setValueT1Array","units","setValueT6Array","getPureArraySetter","SingleUniform","activeInfo","PureArrayUniform","updateCache","StructuredUniform","seq","RePathPart","addUniform","container","uniformObject","parseUniform","path","pathLength","lastIndex","match","matchEnd","idIsIndex","subscript","next","WebGLUniforms","getProgramParameter","ACTIVE_UNIFORMS","getActiveUniform","getUniformLocation","setOptional","upload","seqWithValue","WebGLShader","createShader","shaderSource","compileShader","programIdCount","addLineNumbers","split","join","getEncodingComponents","getShaderErrors","status","getShaderParameter","COMPILE_STATUS","getShaderInfoLog","trim","getShaderSource","getTexelDecodingFunction","functionName","getTexelEncodingFunction","getToneMappingFunction","toneMappingName","generateExtensions","chunks","extensionDerivatives","envMapCubeUV","tangentSpaceNormalMap","shaderID","extensionFragDepth","rendererExtensionFragDepth","extensionDrawBuffers","rendererExtensionDrawBuffers","extensionShaderTextureLOD","rendererExtensionShaderTextureLod","filter","filterEmptyLine","generateDefines","fetchAttributeLocations","ACTIVE_ATTRIBUTES","getActiveAttrib","getAttribLocation","replaceLightNums","replace","numDirLights","numSpotLights","numRectAreaLights","numPointLights","numHemiLights","numDirLightShadows","numSpotLightShadows","numPointLightShadows","replaceClippingPlaneNums","numClippingPlanes","numClipIntersection","includePattern","resolveIncludes","includeReplacer","include","deprecatedUnrollLoopPattern","unrollLoopPattern","unrollLoops","loopReplacer","deprecatedLoopReplacer","snippet","generatePrecision","precisionstring","generateShadowMapTypeDefine","shadowMapTypeDefine","shadowMapType","generateEnvMapTypeDefine","envMapTypeDefine","envMapMode","generateEnvMapModeDefine","envMapModeDefine","generateEnvMapBlendingDefine","envMapBlendingDefine","WebGLProgram","cacheKey","gammaFactorDefine","customExtensions","customDefines","createProgram","prefixVertex","prefixFragment","versionString","isRawShaderMaterial","shaderName","instancing","instancingColor","supportsVertexTextures","maxBones","useFog","fogExp2","objectSpaceNormalMap","vertexTangents","vertexAlphas","vertexUvs","uvsVertexOnly","skinning","useVertexTexture","doubleSided","flipSided","shadowMapEnabled","physicallyCorrectLights","mapEncoding","matcapEncoding","envMapEncoding","emissiveMapEncoding","lightMapEncoding","outputEncoding","depthPacking","vertexGlsl","fragmentGlsl","glVertexShader","glFragmentShader","attachShader","bindAttribLocation","linkProgram","debug","checkShaderErrors","programLog","getProgramInfoLog","vertexLog","fragmentLog","runnable","haveDiagnostics","LINK_STATUS","vertexErrors","fragmentErrors","getError","VALIDATE_STATUS","diagnostics","prefix","deleteShader","cachedUniforms","destroy","deleteProgram","usedTimes","WebGLPrograms","shaderIDs","MeshDepthMaterial","MeshDistanceMaterial","MeshNormalMaterial","MeshLambertMaterial","MeshPhongMaterial","MeshToonMaterial","MeshStandardMaterial","MeshPhysicalMaterial","MeshMatcapMaterial","LineBasicMaterial","LineDashedMaterial","PointsMaterial","ShadowMaterial","SpriteMaterial","parameterNames","getMaxBones","bones","nVertexUniforms","nVertexMatrices","getTextureEncodingFromMap","getParameters","shadows","environment","isMeshStandardMaterial","isFogExp2","directional","spot","rectArea","hemi","shadowMap","customProgramCacheKey","getProgramCacheKey","acquireProgram","pl","preexistingProgram","releaseProgram","pop","WebGLProperties","painterSortStable","groupOrder","reversePainterSortStable","WebGLRenderList","renderItems","renderItemsIndex","opaque","transmissive","defaultProgram","getNextRenderItem","renderItem","customOpaqueSort","customTransparentSort","finish","WebGLRenderLists","lists","renderCallDepth","list","UniformsCache","light","halfWidth","halfHeight","ShadowUniformsCache","nextVersion","shadowCastingLightsFirst","lightA","lightB","WebGLLights","shadowCache","hash","directionalLength","pointLength","spotLength","rectAreaLength","hemiLength","numDirectionalShadows","numPointShadows","numSpotShadows","ambient","probe","directionalShadow","spotShadow","rectAreaLTC1","rectAreaLTC2","pointShadow","vector3","matrix42","intensity","isAmbientLight","isLightProbe","sh","coefficients","isDirectionalLight","shadowUniforms","bias","normalBias","mapSize","isSpotLight","penumbra","isRectAreaLight","isPointLight","isHemisphereLight","LTC_FLOAT_1","LTC_FLOAT_2","LTC_HALF_1","LTC_HALF_2","setupView","identity","WebGLRenderState","lightsArray","shadowsArray","pushLight","pushShadow","shadowLight","setupLights","setupLightsView","WebGLRenderStates","renderStates","renderState","isMeshDepthMaterial","isMeshDistanceMaterial","vsm_frag","vsm_vert","WebGLShadowMap","_renderer","_objects","_capabilities","_frustum","_shadowMapSize","_viewportSize","_viewport","_depthMaterials","_distanceMaterials","_materialCache","_maxTextureSize","shadowMaterialVertical","SAMPLE_RATE","HALF_SAMPLE_RATE","shadow_pass","resolution","shadowMaterialHorizontal","HORIZONTAL_PASS","fullScreenTri","fullScreenMesh","autoUpdate","activeCubeFace","getActiveCubeFace","activeMipmapLevel","getActiveMipmapLevel","_state","setBlending","setTest","setScissorTest","shadowFrameExtents","getFrameExtents","isPointLightShadow","pars","mapPass","viewportCount","getViewportCount","vp","getViewport","updateMatrices","getFrustum","renderObject","VSMPass","renderBufferDirect","getDepthMaterialVariant","useMorphing","getDistanceMaterialVariant","getDepthMaterial","result","getMaterialVariant","customMaterial","customDepthMaterial","customDistanceMaterial","keyA","keyB","materialsForVariant","cachedMaterial","shadowCamera","intersectsObject","k","kl","depthMaterial","WebGLState","ColorBuffer","locked","currentColorMask","currentColorClear","setMask","colorMask","setLocked","lock","DepthBuffer","currentDepthMask","currentDepthFunc","currentDepthClear","enable","DEPTH_TEST","disable","depthMask","setFunc","NEVER","ALWAYS","LESS","LEQUAL","EQUAL","GEQUAL","GREATER","NOTEQUAL","clearDepth","StencilBuffer","currentStencilMask","currentStencilFunc","currentStencilRef","currentStencilFuncMask","currentStencilFail","currentStencilZFail","currentStencilZPass","currentStencilClear","stencilTest","STENCIL_TEST","stencilMask","setOp","stencilOp","clearStencil","colorBuffer","enabledCapabilities","xrFramebuffer","currentBoundFramebuffers","currentProgram","currentBlendingEnabled","currentBlending","currentBlendEquation","currentBlendSrc","currentBlendDst","currentBlendEquationAlpha","currentBlendSrcAlpha","currentBlendDstAlpha","currentPremultipledAlpha","currentFlipSided","currentCullFace","currentLineWidth","currentPolygonOffsetFactor","currentPolygonOffsetUnits","MAX_COMBINED_TEXTURE_IMAGE_UNITS","lineWidthAvailable","glVersion","VERSION","currentTextureSlot","currentBoundTextures","scissorParam","SCISSOR_BOX","viewportParam","VIEWPORT","currentScissor","currentViewport","createTexture","bindTexture","texParameteri","TEXTURE_MIN_FILTER","NEAREST","TEXTURE_MAG_FILTER","texImage2D","RGBA","emptyTextures","TEXTURE_2D","TEXTURE_CUBE_MAP","TEXTURE_CUBE_MAP_POSITIVE_X","setFlipSided","setCullFace","CULL_FACE","bindXRFramebuffer","framebuffer","bindFramebuffer","FRAMEBUFFER","DRAW_FRAMEBUFFER","useProgram","equationToGL","FUNC_ADD","FUNC_SUBTRACT","FUNC_REVERSE_SUBTRACT","MIN","MAX","MIN_EXT","MAX_EXT","factorToGL","ZERO","ONE","SRC_COLOR","SRC_ALPHA","SRC_ALPHA_SATURATE","DST_COLOR","DST_ALPHA","ONE_MINUS_SRC_COLOR","ONE_MINUS_SRC_ALPHA","ONE_MINUS_DST_COLOR","ONE_MINUS_DST_ALPHA","BLEND","blendFuncSeparate","blendFunc","blendEquationSeparate","setMaterial","frontFaceCW","setPolygonOffset","SAMPLE_ALPHA_TO_COVERAGE","frontFace","CW","CCW","cullFace","BACK","FRONT","FRONT_AND_BACK","setLineWidth","lineWidth","factor","POLYGON_OFFSET_FILL","SCISSOR_TEST","activeTexture","webglSlot","TEXTURE0","webglType","webglTexture","boundTexture","unbindTexture","compressedTexImage2D","apply","texImage3D","KEEP","READ_FRAMEBUFFER","WebGLTextures","_gl","utils","_videoTextures","useOffscreenCanvas","OffscreenCanvas","err","createCanvas","resizeImage","needsPowerOfTwo","needsNewCanvas","maxSize","isPowerOfTwo$1","textureNeedsPowerOfTwo","textureNeedsGenerateMipmaps","supportsMips","generateMipmap","textureProperties","__maxMipLevel","log2","getInternalFormat","internalFormatName","glFormat","glType","RED","R32F","R16F","R8","RGB","RGB32F","RGB16F","RGB8","RGBA32F","RGBA16F","RGBA8","filterFallback","LINEAR","deallocateTexture","isVideoTexture","onRenderTargetDispose","deallocateRenderTarget","__webglInit","deleteTexture","__webglTexture","renderTargetProperties","deleteFramebuffer","__webglFramebuffer","__webglDepthbuffer","deleteRenderbuffer","__webglMultisampledFramebuffer","__webglColorRenderbuffer","__webglDepthRenderbuffer","attachmentProperties","textureUnits","resetTextureUnits","textureUnit","setTexture2D","slot","updateVideoTexture","__version","complete","uploadTexture","TEXTURE_2D_ARRAY","TEXTURE_3D","setTextureCube","uploadCubeTexture","wrappingToGL","REPEAT","CLAMP_TO_EDGE","MIRRORED_REPEAT","filterToGL","NEAREST_MIPMAP_NEAREST","NEAREST_MIPMAP_LINEAR","LINEAR_MIPMAP_NEAREST","LINEAR_MIPMAP_LINEAR","setTextureParameters","textureType","TEXTURE_WRAP_S","TEXTURE_WRAP_T","TEXTURE_WRAP_R","__currentAnisotropy","texParameterf","TEXTURE_MAX_ANISOTROPY_EXT","initTexture","pixelStorei","UNPACK_FLIP_Y_WEBGL","UNPACK_PREMULTIPLY_ALPHA_WEBGL","UNPACK_ALIGNMENT","UNPACK_COLORSPACE_CONVERSION_WEBGL","NONE","convert","glInternalFormat","mipmap","isDepthTexture","DEPTH_COMPONENT","DEPTH_COMPONENT32F","DEPTH_COMPONENT24","DEPTH24_STENCIL8","DEPTH_COMPONENT16","DEPTH_STENCIL","isCompressedTexture","isCompressed","cubeImage","mipmapImage","setupFrameBufferTexture","attachment","textureTarget","framebufferTexture2D","setupRenderBufferStorage","renderbuffer","isMultisample","bindRenderbuffer","RENDERBUFFER","getRenderTargetSamples","renderbufferStorageMultisample","renderbufferStorage","framebufferRenderbuffer","DEPTH_ATTACHMENT","DEPTH_STENCIL_ATTACHMENT","setupDepthTexture","isCube","webglDepthTexture","setupDepthRenderbuffer","createRenderbuffer","setupRenderTarget","isMultipleRenderTargets","isRenderTarget3D","createFramebuffer","COLOR_ATTACHMENT0","glTextureType","isTexture3D","updateRenderTargetMipmap","updateMultisampleRenderTarget","COLOR_BUFFER_BIT","DEPTH_BUFFER_BIT","STENCIL_BUFFER_BIT","blitFramebuffer","warnedTexture2D","warnedTextureCube","WebGLUtils","UNSIGNED_SHORT_4_4_4_4","UNSIGNED_SHORT_5_5_5_1","UNSIGNED_SHORT_5_6_5","HALF_FLOAT_OES","ALPHA","LUMINANCE","LUMINANCE_ALPHA","RED_INTEGER","RG","RG_INTEGER","RGB_INTEGER","RGBA_INTEGER","COMPRESSED_RGB_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT1_EXT","COMPRESSED_RGBA_S3TC_DXT3_EXT","COMPRESSED_RGBA_S3TC_DXT5_EXT","COMPRESSED_RGB_PVRTC_4BPPV1_IMG","COMPRESSED_RGB_PVRTC_2BPPV1_IMG","COMPRESSED_RGBA_PVRTC_4BPPV1_IMG","COMPRESSED_RGBA_PVRTC_2BPPV1_IMG","COMPRESSED_RGB_ETC1_WEBGL","COMPRESSED_RGB8_ETC2","COMPRESSED_RGBA8_ETC2_EAC","UNSIGNED_INT_24_8","UNSIGNED_INT_24_8_WEBGL","ArrayCamera","cameras","isArrayCamera","Group","isGroup","_moveEvent","WebXRController","_targetRay","_grip","_hand","joints","inputState","pinching","hasLinearVelocity","linearVelocity","hasAngularVelocity","angularVelocity","inputSource","referenceSpace","inputPose","gripPose","handPose","targetRay","grip","hand","visibilityState","getPose","targetRaySpace","transform","inputjoint","jointPose","getJointPose","jointName","joint","jointRadius","indexTip","thumbTip","distanceToPinch","threshold","handedness","gripSpace","WebXRManager","framebufferScaleFactor","referenceSpaceType","pose","controllers","inputSourcesMap","Map","cameraL","cameraR","cameraVR","_currentDepthNear","_currentDepthFar","cameraAutoUpdate","isPresenting","getController","controller","getTargetRaySpace","getControllerGrip","getGripSpace","getHand","getHandSpace","onSessionEvent","onSessionEnd","forEach","disconnect","setFramebufferScaleFactor","setReferenceSpaceType","getReferenceSpace","setSession","onInputSourcesChange","getContextAttributes","xrCompatible","makeXRCompatible","layerInit","antialias","baseLayer","XRWebGLLayer","updateRenderState","requestReferenceSpace","inputSources","removed","added","cameraLPos","cameraRPos","setProjectionFromUnion","ipd","projL","projR","topFov","bottomFov","leftFov","rightFov","zOffset","xOffset","translateX","translateZ","near2","far2","left2","right2","top2","bottom2","updateCamera","depthNear","depthFar","getCamera","onAnimationFrameCallback","getViewerPose","views","cameraVRNeedsUpdate","WebGLMaterials","refreshFogUniforms","isFog","density","refreshMaterialUniforms","pixelRatio","transmissionRenderTarget","refreshUniformsCommon","isMeshLambertMaterial","refreshUniformsLambert","isMeshToonMaterial","refreshUniformsToon","isMeshPhongMaterial","refreshUniformsPhong","isMeshPhysicalMaterial","refreshUniformsPhysical","refreshUniformsStandard","isMeshMatcapMaterial","refreshUniformsMatcap","refreshUniformsDepth","refreshUniformsDistance","isMeshNormalMaterial","refreshUniformsNormal","isLineBasicMaterial","refreshUniformsLine","isLineDashedMaterial","refreshUniformsDash","isPointsMaterial","refreshUniformsPoints","isSpriteMaterial","refreshUniformsSprites","isShadowMaterial","uvScaleMap","uv2ScaleMap","createCanvasElement","display","WebGLRenderer","_context","_alpha","_depth","_stencil","_antialias","_premultipliedAlpha","_preserveDrawingBuffer","preserveDrawingBuffer","_powerPreference","powerPreference","_failIfMajorPerformanceCaveat","failIfMajorPerformanceCaveat","currentRenderList","currentRenderState","renderListStack","renderStateStack","domElement","sortObjects","toneMappingExposure","_this","_isContextLost","_currentActiveCubeFace","_currentActiveMipmapLevel","_currentRenderTarget","_currentMaterialId","_currentCamera","_currentViewport","_currentScissor","_currentScissorTest","_width","_height","_pixelRatio","_opaqueSort","_transparentSort","_scissor","_scissorTest","_currentDrawBuffers","_clippingEnabled","_localClippingEnabled","_transmissionRenderTarget","_projScreenMatrix","_vector3","_emptyScene","overrideMaterial","getTargetPixelRatio","contextNames","contextAttributes","contextName","onContextLost","onContextRestore","isWebGL1Renderer","shift","message","programCache","renderLists","morphtargets","bufferRenderer","indexedBufferRenderer","initGLContext","forceContextLoss","loseContext","forceContextRestore","restoreContext","getPixelRatio","setPixelRatio","setSize","updateStyle","setViewport","getDrawingBufferSize","setDrawingBufferSize","getCurrentViewport","getScissor","setScissor","getScissorTest","boolean","setOpaqueSort","method","setTransparentSort","bits","onXRSessionStart","onXRSessionEnd","preventDefault","infoAutoReset","shadowMapAutoUpdate","shadowMapNeedsUpdate","onMaterialDispose","deallocateMaterial","releaseMaterialProgramReferences","renderObjectImmediate","renderBufferImmediate","hasPositions","hasNormals","hasUvs","hasColors","positionArray","DYNAMIC_DRAW","normalArray","uvArray","colorArray","setProgram","rangeFactor","dataCount","rangeStart","rangeCount","drawStart","drawEnd","drawCount","isLineSegments","isLineLoop","isSprite","compile","material2","getProgram","window","setFromProjectionMatrix","projectObject","opaqueObjects","transmissiveObjects","transparentObjects","renderObjects","renderTransmissiveObjects","onAfterRender","isLOD","intersectsSprite","isImmediateRenderObject","camera2","lightsStateVersion","programCacheKey","updateCommonMaterialProperties","onBuild","needsLights","materialNeedsLights","progUniforms","uniformsList","needsProgramChange","refreshProgram","refreshMaterial","refreshLights","p_uniforms","m_uniforms","uCamPos","cameraPosition","isOrthographicCamera","boneTexture","computeBoneTexture","boneTextureSize","markUniformsLightsNeedsUpdate","framebufferBound","drawBuffersWEBGL","layer","framebufferTextureLayer","readRenderTargetPixels","activeCubeFaceIndex","textureFormat","IMPLEMENTATION_COLOR_READ_FORMAT","halfFloatSupportedByExt","IMPLEMENTATION_COLOR_READ_TYPE","checkFramebufferStatus","FRAMEBUFFER_COMPLETE","readPixels","copyFramebufferToTexture","level","levelScale","copyTexImage2D","copyTextureToTexture","srcTexture","dstTexture","texSubImage2D","compressedTexSubImage2D","copyTextureToTexture3D","sourceBox","glTarget","unpackRowLen","UNPACK_ROW_LENGTH","unpackImageHeight","UNPACK_IMAGE_HEIGHT","unpackSkipPixels","UNPACK_SKIP_PIXELS","unpackSkipRows","UNPACK_SKIP_ROWS","unpackSkipImages","UNPACK_SKIP_IMAGES","texSubImage3D","resetState","__THREE_DEVTOOLS__","CustomEvent","detail","WebGL1Renderer","FogExp2","Fog","Scene","InterleavedBuffer","arrayBuffers","_uuid","ib","setUsage","isInterleavedBuffer","_vector$6","InterleavedBufferAttribute","interleavedBuffer","interleavedBuffers","_geometry","_intersectPoint","_worldScale","_mvPosition","_alignedPosition","_rotatedPosition","_viewWorldMatrix","_vA","_vB","_vC","_uvA","_uvB","_uvC","Sprite","float32Array","setFromMatrixScale","transformVertex","vertexPosition","mvPosition","_v1$2","_v2$1","LOD","_currentLevel","levels","addLevel","getObjectForDistance","raycast","_basePosition","_skinIndex","_skinWeight","_vector$5","_matrix","SkinnedMesh","bindMatrixInverse","calculateInverses","skinWeight","manhattanLength","setXYZW","skinIndex","weight","getComponent","boneIndex","boneInverses","Bone","isBone","DataTexture","_offsetMatrix","_identityMatrix","Skeleton","boneMatrices","inverse","bone","json","boneInverse","_instanceLocalMatrix","_instanceWorldMatrix","_instanceIntersects","_mesh","InstancedMesh","raycastTimes","instanceId","getMatrixAt","linecap","linejoin","_start$1","_end$1","_inverseMatrix$1","_ray$1","_sphere$1","Line","lineDistances","params","localThreshold","localThresholdSq","vStart","vEnd","interSegment","interRay","distSq","distanceSqToSegment","_start","_end","LineSegments","LineLoop","_inverseMatrix","_ray","_sphere","_position$2","Points","testPoint","rayPointDistanceSq","intersectPoint","closestPointToPoint","distanceToRay","VideoTexture","video","updateVideo","requestVideoFrameCallback","hasVideoFrameCallback","readyState","HAVE_CURRENT_DATA","CompressedTexture","CanvasTexture","isCanvasTexture","DepthTexture","CircleGeometry","segments","thetaStart","thetaLength","vertex","segment","CylinderGeometry","radiusTop","radiusBottom","radialSegments","openEnded","indexArray","generateTorso","generateCap","slope","indexRow","sinTheta","cosTheta","centerIndexStart","centerIndexEnd","ConeGeometry","PolyhedronGeometry","vertexBuffer","uvBuffer","subdivide","applyRadius","generateUVs","computeVertexNormals","getVertexByIndex","subdivideFace","cols","aj","bj","rows","pushVertex","azimuth","inclination","correctUVs","correctSeam","centroid","azi","correctUV","DodecahedronGeometry","_v0","_v1$1","_normal","_triangle","EdgesGeometry","thresholdAngle","precisionPoints","thresholdDot","indexAttr","getIndex","positionAttr","indexCount","indexArr","vertKeys","hashes","edgeData","jNext","vecHash0","vecHash1","reverseHash","index0","Earcut","triangulate","holeIndices","dim","hasHoles","outerLen","outerNode","linkedList","prev","invSize","eliminateHoles","earcutLinked","clockwise","last","signedArea","insertNode","removeNode","filterPoints","again","steiner","area","ear","pass","indexCurve","isEarHashed","isEar","cureLocalIntersections","splitEarcut","pointInTriangle","minTX","minTY","maxTX","maxTY","zOrder","prevZ","nextZ","locallyInside","isValidDiagonal","splitPolygon","queue","getLeftmost","compareX","eliminateHole","hole","findHoleBridge","hx","hy","mx","my","tanMin","sectorContainsSector","sortLinked","tail","numMerges","pSize","qSize","inSize","leftmost","px","py","intersectsPolygon","middleInside","q1","q2","o1","o2","o3","o4","onSegment","num","inside","Node","an","bp","sum","ShapeUtils","contour","pts","holes","faces","removeDupEndPts","addContour","holeIndex","ExtrudeGeometry","verticesArray","addShape","placeholder","curveSegments","steps","bevelEnabled","bevelThickness","bevelSize","bevelOffset","bevelSegments","extrudePath","uvgen","UVGenerator","WorldUVGenerator","amount","extrudePts","extrudeByPath","splineTube","binormal","position2","getSpacedPoints","computeFrenetFrames","shapePoints","extractPoints","reverse","isClockWise","hl","ahole","triangulateShape","concat","scalePt2","pt","vec","vlen","flen","getBevelVec","inPt","inPrev","inNext","v_trans_x","v_trans_y","shrink_by","v_prev_x","v_prev_y","v_next_x","v_next_y","v_prev_lensq","collinear0","v_prev_len","v_next_len","ptPrevShift_x","ptPrevShift_y","ptNextShift_x","ptNextShift_y","sf","v_trans_lensq","direction_eq","contourMovements","holesMovements","oneHoleMovements","verticesMovements","bs","vert","binormals","buildLidFaces","buildSideFaces","f3","layeroffset","sidewalls","sl","slen1","slen2","f4","addVertex","nextIndex","generateTopUV","addUV","generateSideWallUV","vector2","toJSON$1","indexA","indexB","indexC","a_x","a_y","b_x","b_y","c_x","c_y","indexD","a_z","b_z","c_z","d_x","d_y","d_z","IcosahedronGeometry","LatheGeometry","phiStart","phiLength","inverseSegments","base","n1","OctahedronGeometry","ParametricGeometry","func","slices","stacks","EPS","pu","pv","sliceCount","RingGeometry","innerRadius","outerRadius","thetaSegments","phiSegments","radiusStep","thetaSegmentLevel","ShapeGeometry","indexOffset","shapeVertices","shapeHoles","shapeHole","SphereGeometry","thetaEnd","grid","verticesRow","uOffset","TetrahedronGeometry","TextGeometry","text","font","isFont","generateShapes","TorusGeometry","tube","tubularSegments","arc","TorusKnotGeometry","P1","P2","B","T","N","calculatePositionOnCurve","cu","su","quOverP","cs","TubeGeometry","closed","frames","P","generateBufferData","generateSegment","generateIndices","getPointAt","WireframeGeometry","edge","edges","o","ol","edge1","edge2","Geometries","BoxBufferGeometry","CircleBufferGeometry","ConeBufferGeometry","CylinderBufferGeometry","DodecahedronBufferGeometry","ExtrudeBufferGeometry","IcosahedronBufferGeometry","LatheBufferGeometry","OctahedronBufferGeometry","ParametricBufferGeometry","PlaneBufferGeometry","PolyhedronBufferGeometry","RingBufferGeometry","ShapeBufferGeometry","SphereBufferGeometry","TetrahedronBufferGeometry","TextBufferGeometry","TorusBufferGeometry","TorusKnotBufferGeometry","TubeBufferGeometry","RawShaderMaterial","ior","Materials","AnimationUtils","arraySlice","from","to","isTypedArray","convertArray","forceClone","ArrayBuffer","isView","DataView","getKeyframeOrder","times","compareTime","sortedArray","nValues","srcOffset","flattenJSON","jsonKeys","valuePropertyName","subclip","sourceClip","startFrame","endFrame","fps","clip","tracks","track","valueSize","getValueSize","minStartTime","resetDuration","makeClipAdditive","targetClip","referenceFrame","referenceClip","numTracks","referenceTime","referenceTrack","referenceTrackType","ValueTypeName","targetTrack","find","referenceOffset","referenceValueSize","createInterpolant","isInterpolantFactoryMethodGLTFCubicSpline","targetOffset","targetValueSize","referenceValue","startIndex","endIndex","interpolant","evaluate","resultBuffer","referenceQuat","numTimes","valueStart","multiplyQuaternionsFlat","valueEnd","blendMode","Interpolant","parameterPositions","sampleValues","sampleSize","_cachedIndex","settings","DefaultSettings_","pp","validate_interval","seek","linear_scan","forward_scan","giveUpAt","afterEnd_","t1global","beforeStart_","mid","intervalChanged_","interpolate_","copySampleValue_","CubicInterpolant","_weightPrev","_offsetPrev","_weightNext","_offsetNext","endingStart","endingEnd","iPrev","iNext","tPrev","tNext","getSettings_","halfDt","o0","oP","oN","wP","wN","ppp","sP","sN","LinearInterpolant","offset1","offset0","weight1","weight0","DiscreteInterpolant","KeyframeTrack","interpolation","TimeBufferType","ValueBufferType","setInterpolation","DefaultInterpolation","factoryMethod","InterpolantFactoryMethodDiscrete","InterpolantFactoryMethodLinear","InterpolantFactoryMethodSmooth","timeOffset","timeScale","startTime","endTime","nKeys","valid","prevTime","currTime","smoothInterpolation","getInterpolation","writeIndex","keep","timeNext","offsetP","offsetN","readOffset","writeOffset","TypedKeyframeTrack","trackType","BooleanKeyframeTrack","ColorKeyframeTrack","NumberKeyframeTrack","QuaternionLinearInterpolant","slerpFlat","QuaternionKeyframeTrack","StringKeyframeTrack","VectorKeyframeTrack","AnimationClip","duration","validate","optimize","jsonTracks","frameTime","parseKeyframeTrack","clipTracks","morphTargetSequence","noLoop","numMorphTargets","objectOrClipArray","clipArray","animationToMorphTargets","pattern","morphTarget","parts","animationMorphTargets","clips","CreateFromMorphTargetSequence","addNonemptyTrack","trackName","animationKeys","propertyName","destTracks","clipName","hierarchyTracks","hierarchy","morphTargetNames","morphTargetName","animationKey","boneName","getTrackTypeForValueTypeName","typeName","Cache","files","file","LoadingManager","onLoad","onProgress","onError","isLoading","itemsLoaded","itemsTotal","urlModifier","handlers","onStart","itemStart","itemEnd","itemError","resolveURL","setURLModifier","addHandler","regex","loader","removeHandler","getHandler","DefaultLoadingManager","Loader","manager","crossOrigin","withCredentials","resourcePath","requestHeader","Promise","resolve","reject","load","loading","FileLoader","setTimeout","dataUriRegex","dataUriRegexResult","request","mimeType","isBase64","decodeURIComponent","atob","response","responseType","charCodeAt","Blob","parser","DOMParser","parseFromString","XMLHttpRequest","open","callbacks","overrideMimeType","header","setRequestHeader","send","AnimationLoader","setPath","setWithCredentials","CompressedTextureLoader","setResponseType","loaded","loadTexture","texDatas","mipmapCount","isCubemap","ImageLoader","onImageLoad","onImageError","substr","CubeTextureLoader","urls","setCrossOrigin","DataTextureLoader","texData","TextureLoader","isJPEG","search","Curve","arcLengthDivisions","optionalTarget","getUtoTmapping","getPoint","divisions","lengths","getLengths","cacheArcLengths","current","arcLengths","targetArcLength","comparison","lengthBefore","lengthAfter","segmentLength","segmentFraction","t2","pt1","pt2","getTangent","mat","getTangentAt","MAX_VALUE","tz","makeRotationAxis","EllipseCurve","aX","aY","xRadius","yRadius","aStartAngle","aEndAngle","aClockwise","aRotation","twoPi","deltaAngle","samePoints","isEllipseCurve","ArcCurve","aRadius","isArcCurve","CubicPoly","c0","initCatmullRom","x3","tension","initNonuniformCatmullRom","dt0","dt1","dt2","calc","t3","pz","CatmullRomCurve3","curveType","intPoint","isCatmullRomCurve3","CatmullRom","QuadraticBezierP0","QuadraticBezierP1","QuadraticBezierP2","QuadraticBezier","CubicBezierP0","CubicBezierP1","CubicBezierP2","CubicBezierP3","CubicBezier","CubicBezierCurve","v3","isCubicBezierCurve","CubicBezierCurve3","isCubicBezierCurve3","LineCurve","isLineCurve","LineCurve3","isLineCurve3","QuadraticBezierCurve","isQuadraticBezierCurve","QuadraticBezierCurve3","isQuadraticBezierCurve3","SplineCurve","isSplineCurve","Curves","CurvePath","curves","autoClose","curve","startPoint","endPoint","getLength","curveLengths","getCurveLengths","diff","lens","cacheLengths","sums","getPoints","fromJSON","Path","currentPoint","moveTo","lineTo","aCPx","aCPy","aCP1x","aCP1y","aCP2x","aCP2y","npts","absarc","absellipse","firstPoint","lastPoint","Shape","holesPts","getPointsHoles","Light","HemisphereLight","_projScreenMatrix$1","_lightPositionWorld$1","_lookTarget$1","LightShadow","_frameExtents","_viewportCount","_viewports","shadowMatrix","viewportIndex","SpotLightShadow","isSpotLightShadow","SpotLight","power","_lightPositionWorld","_lookTarget","PointLightShadow","_cubeDirections","_cubeUps","PointLight","OrthographicCamera","scaleW","scaleH","makeOrthographic","DirectionalLightShadow","isDirectionalLightShadow","DirectionalLight","AmbientLight","RectAreaLight","SphericalHarmonics3","coeff","shBasis","isSphericalHarmonics3","LightProbe","MaterialLoader","getTexture","shading","LoaderUtils","TextDecoder","decode","fromCharCode","escape","lastIndexOf","InstancedBufferGeometry","InstancedBufferAttribute","BufferGeometryLoader","interleavedBufferMap","arrayBufferMap","getInterleavedBuffer","getArrayBuffer","arrayBuffer","typedArray","bufferAttribute","bufferAttributeConstr","drawcalls","offsets","ObjectLoader","extractUrlBase","parseAnimations","parseShapes","parseGeometries","parseImages","parseTextures","parseMaterials","parseObject","parseSkeletons","bindSkeletons","hasImages","geometryShapes","bufferGeometryLoader","details","setTextures","loadImage","deserializeImage","currentUrl","deserializedImage","parseConstant","TEXTURE_MAPPING","TEXTURE_WRAPPING","TEXTURE_FILTER","getGeometry","getMaterial","objectAnimations","bind","setResourcePath","ImageBitmapLoader","createImageBitmap","fetch","fetchOptions","credentials","headers","then","res","blob","colorSpaceConversion","imageBitmap","catch","isImageBitmapLoader","ShapePath","subPaths","currentPath","quadraticCurveTo","bezierCurveTo","splineThru","isCCW","noHoles","toShapesNoHoles","inSubpaths","tmpPath","tmpShape","isPointInsidePolygon","inPolygon","polyLen","edgeLowPt","edgeHighPt","edgeDx","edgeDy","perpEdge","solid","holesFirst","betterShapeHoles","newShapes","newShapeHoles","mainIdx","tmpPoints","ambiguous","toChange","sIdx","sLen","sho","hIdx","ho","hole_unassigned","s2Idx","froms","tos","tmpHoles","Font","paths","createPaths","toShapes","chars","line_height","yMax","yMin","underlineThickness","char","ret","createPath","glyph","glyphs","familyName","cpx","cpy","cpx1","cpy1","cpx2","cpy2","outline","_cachedOutline","action","ha","FontLoader","substring","AudioContext","webkitAudioContext","AudioLoader","bufferCopy","decodeAudioData","audioBuffer","HemisphereLightProbe","sky","ground","isHemisphereLightProbe","AmbientLightProbe","isAmbientLightProbe","_eyeRight","_eyeLeft","StereoCamera","eyeSep","_cache","eyeSepHalf","eyeSepOnProjection","ymax","xmin","xmax","Clock","autoStart","oldTime","elapsedTime","running","now","getElapsedTime","getDelta","newTime","performance","Date","_position$1","_quaternion$1","_scale$1","_orientation$1","AudioListener","gain","createGain","connect","destination","timeDelta","_clock","setTargetAtTime","currentTime","positionX","linearRampToValueAtTime","positionY","positionZ","forwardX","forwardY","forwardZ","upX","upY","upZ","setPosition","setOrientation","Audio","getInput","autoplay","detune","loop","loopStart","loopEnd","playbackRate","isPlaying","hasPlaybackControl","sourceType","_startedAt","_progress","_connected","filters","audioNode","mediaElement","createMediaElementSource","mediaStream","createMediaStreamSource","play","delay","createBufferSource","onended","onEnded","setDetune","setPlaybackRate","getOutput","getFilters","setFilters","_position","_quaternion","_scale","_orientation","PositionalAudio","panner","createPanner","panningModel","refDistance","rolloffFactor","distanceModel","maxDistance","coneInnerAngle","coneOuterAngle","coneOuterGain","orientationX","orientationY","orientationZ","AudioAnalyser","audio","fftSize","analyser","createAnalyser","frequencyBinCount","getByteFrequencyData","getFrequencyData","PropertyMixer","binding","mixFunction","mixFunctionAdditive","setIdentity","_slerp","_slerpAdditive","_setAdditiveIdentityQuaternion","_workIndex","_select","_setAdditiveIdentityOther","_lerp","_lerpAdditive","_setAdditiveIdentityNumeric","_mixBufferRegion","_mixBufferRegionAdditive","_setIdentity","_origIndex","_addIndex","cumulativeWeight","cumulativeWeightAdditive","useCount","referenceCount","accuIndex","currentWeight","mix","weightAdditive","originalValueOffset","getValue","targetIndex","workOffset","_RESERVED_CHARS_RE","_reservedRe","RegExp","_wordChar","_wordCharOrDot","_directoryRe","_nodeRe","_objectRe","_propertyRe","_trackRe","_supportedObjectNames","Composite","targetGroup","optionalParsedPath","parsedPath","PropertyBinding","parseTrackName","_targetGroup","_bindings","subscribe_","firstValidIndex","nCachedObjects_","bindings","unbind","rootNode","node","findNode","nodeName","_getValue_unbound","_setValue_unbound","resolvedProperty","propertyIndex","targetObject","dest","targetArray","sourceArray","objectName","_getValue_unavailable","_setValue_unavailable","objectIndex","nodeProperty","versioning","Versioning","None","NeedsUpdate","MatrixWorldNeedsUpdate","bindingType","BindingType","Direct","ArrayElement","HasFromToArray","EntireArray","GetterByBindingType","SetterByBindingTypeAndVersioning","root","isAnimationObjectGroup","matches","results","lastDot","getBoneByName","searchNodeSubtree","childNode","subTreeNode","_getValue_direct","_getValue_array","_getValue_arrayElement","_getValue_toArray","_setValue_direct","_setValue_direct_setNeedsUpdate","_setValue_direct_setMatrixWorldNeedsUpdate","_setValue_array","_setValue_array_setNeedsUpdate","_setValue_array_setMatrixWorldNeedsUpdate","_setValue_arrayElement","_setValue_arrayElement_setNeedsUpdate","_setValue_arrayElement_setMatrixWorldNeedsUpdate","_setValue_fromArray","_setValue_fromArray_setNeedsUpdate","_setValue_fromArray_setMatrixWorldNeedsUpdate","AnimationObjectGroup","_indicesByUUID","_paths","_parsedPaths","_bindingsIndicesByPath","stats","total","inUse","bindingsPerObject","indicesByUUID","parsedPaths","nBindings","knownObject","nObjects","nCachedObjects","firstActiveIndex","lastCachedObject","bindingsForPath","lastCached","lastCachedIndex","firstActiveObject","firstActive","lastObject","indicesByPath","lastBindingsIndex","lastBindings","lastBindingsPath","AnimationAction","mixer","localRoot","_mixer","_clip","_localRoot","nTracks","interpolants","interpolantSettings","_interpolantSettings","_interpolants","_propertyBindings","_cacheIndex","_byClipCacheIndex","_timeScaleInterpolant","_weightInterpolant","_loopCount","_startTime","_effectiveTimeScale","_effectiveWeight","repetitions","paused","clampWhenFinished","zeroSlopeAtStart","zeroSlopeAtEnd","_activateAction","_deactivateAction","stopFading","stopWarping","_isActiveAction","_scheduleFading","fadeOutAction","warp","fadeOut","fadeIn","fadeInDuration","fadeOutDuration","startEndRatio","endStartRatio","fadeInAction","crossFadeFrom","weightInterpolant","_takeBackControlInterpolant","startTimeScale","endTimeScale","_lendControlInterpolant","timeScaleInterpolant","_root","deltaTime","timeDirection","_updateWeight","timeRunning","_updateTimeScale","clipTime","_updateTime","propertyMixers","accumulateAdditive","accumulate","interpolantValue","loopCount","pingPong","_setEndings","handle_stop","loopDelta","pending","atStart","atEnd","weightNow","weightThen","AnimationMixer","_initMemoryManager","_accuIndex","prototypeAction","rootUuid","bindingsByRoot","_bindingsByRootAndName","bindingsByName","_addInactiveBinding","create","clipUuid","actionsForClip","_actionsByClip","_bindAction","knownActions","_addInactiveAction","_lendBinding","saveOriginalState","_lendAction","restoreOriginalState","_takeBackBinding","_takeBackAction","_actions","_nActiveActions","_nActiveBindings","_controlInterpolants","_nActiveControlInterpolants","actions","controlInterpolants","actionsByClip","actionByRoot","lastInactiveAction","cacheIndex","knownActionsForClip","lastKnownAction","byClipCacheIndex","_removeInactiveBindingsForAction","_removeInactiveBinding","prevIndex","lastActiveIndex","firstInactiveAction","firstInactiveIndex","lastActiveAction","bindingByName","propBinding","lastInactiveBinding","firstInactiveBinding","lastActiveBinding","_controlInterpolantsResultBuffer","__cacheIndex","lastActiveInterpolant","optionalRoot","clipObject","findByName","existingAction","newAction","nActions","_update","timeInSeconds","actionsToRemove","_removeInactiveAction","Uniform","InstancedInterleavedBuffer","GLBufferAttribute","Raycaster","coords","unproject","intersectObject","ascSort","Spherical","other","setFromCartesianCoords","Cylindrical","_vector$4","Box2","isBox2","_startP","_startEnd","Line3","clampToLine","startEnd2","startEnd_startP","closestPointToPointParameter","ImmediateRenderObject","_vector$3","SpotLightHelper","cone","coneLength","coneWidth","_vector$2","_boneMatrix","_matrixWorldInv","SkeletonHelper","getBoneList","isSkeletonHelper","boneList","PointLightHelper","sphereSize","_vector$1","_color1","_color2","HemisphereLightHelper","rotateY","GridHelper","PolarGridHelper","radials","circles","_v1","_v2","_v3","DirectionalLightHelper","lightPlane","targetLine","_vector","_camera","CameraHelper","pointMap","colorFrustum","colorCone","colorUp","colorTarget","colorCross","addLine","addPoint","setPoint","_box","BoxHelper","setFromObject","Box3Helper","PlaneHelper","positions2","_axis","_lineGeometry","_coneGeometry","ArrowHelper","headLength","headWidth","setDirection","setLength","AxesHelper","_floatView","_int32View","DataUtils","val","LOD_MIN","LOD_MAX","SIZE_MAX","EXTRA_LOD_SIGMA","TOTAL_LODS","ENCODINGS","backgroundMaterial","backgroundBox","_flatCamera","_createPlanes","_lodPlanes","_sizeLods","_sigmas","_clearColor","_oldTarget","PHI","INV_PHI","_axisDirections","convertLinearToRGBE","maxComponent","fExp","PMREMGenerator","_pingPongRenderTarget","_blurMaterial","_getBlurShader","_equirectShader","_cubemapShader","_compileMaterial","sigma","cubeUVRenderTarget","_allocateTargets","_sceneToCubeUV","_blur","_applyPMREM","_cleanup","equirectangular","_fromTexture","_getCubemapShader","_getEquirectShader","outputTarget","_setViewport","_textureToCubeUV","_isLDR","_createRenderTarget","tmpMesh","cubeCamera","upSign","forwardSign","originalAutoClear","useSolidColor","convertSRGBToLinear","col","poleAxis","lodIn","lodOut","pingPongRenderTarget","_halfBlur","targetIn","targetOut","sigmaRadians","blurMaterial","STANDARD_DEVIATIONS","blurMesh","blurUniforms","pixels","radiansPerPixel","sigmaPixels","weights","outputSize","lod","sizeLod","texelSize","cubeFaces","positionSize","uvSize","faceIndexSize","coordinates","fill","shaderMaterial","_getCommonVertexShader","_getEncodings","LineStrip","LinePieces","NoColors","FaceColors","VertexColors","MeshFaceMaterial","MultiMaterial","isMultiMaterial","PointCloud","Particle","ParticleSystem","PointCloudMaterial","ParticleBasicMaterial","ParticleSystemMaterial","Vertex","DynamicBufferAttribute","Int8Attribute","Uint8Attribute","Uint8ClampedAttribute","Int16Attribute","Uint16Attribute","Int32Attribute","Uint32Attribute","Float32Attribute","Float64Attribute","construct","fromPoints","AxisHelper","BoundingBoxHelper","EdgesHelper","setColors","WireframeHelper","Handlers","XHRLoader","BinaryTextureLoader","empty","isIntersectionBox","isIntersectionSphere","setFromMatrix","flattenToArrayOffset","multiplyVector3","multiplyVector3Array","applyToBufferAttribute","applyToVector3Array","getInverse","extractPosition","getPosition","setRotationFromQuaternion","multiplyToArray","multiplyVector4","rotateAxis","crossVector","rotateX","rotateZ","rotateByAxis","makeFrustum","isIntersectionLine","intersectsLine","isIntersectionPlane","getArea","barycoordFromPoint","midpoint","getMidpoint","prototypenormal","getPlane","extractAllPoints","extrude","makeGeometry","fromAttribute","distanceToManhattan","manhattanDistanceTo","lengthManhattan","setEulerFromRotationMatrix","setEulerFromQuaternion","getPositionFromMatrix","getScaleFromMatrix","getColumnFromMatrix","applyProjection","getChildByName","getObjectByName","renderDepth","getWorldRotation","applyMatrix","eulerOrder","useQuaternion","setDrawMode","drawMode","initBones","setLens","setFocalLength","onlyShadow","shadowCameraFov","shadowCameraLeft","shadowCameraRight","shadowCameraTop","shadowCameraBottom","shadowCameraVisible","shadowDarkness","shadowMapWidth","shadowMapHeight","dynamic","setDynamic","copyIndicesArray","setArray","addIndex","addAttribute","addDrawCall","clearDrawCalls","clearGroups","computeOffsets","removeAttribute","getArrays","addShapeList","wrapAround","overdraw","wrapRGB","clearTarget","animate","getCurrentRenderTarget","getPrecision","resetGLState","supportsFloatTextures","supportsHalfFloatTextures","supportsStandardDerivatives","supportsCompressedTextureS3TC","supportsCompressedTexturePVRTC","supportsBlendMinMax","supportsInstancedArrays","enableScissorTest","initMaterial","addPrePlugin","addPostPlugin","updateShadowMap","setFaceCulling","allocTextureUnit","setTexture","getActiveMipMapLevel","shadowMapCullFace","vr","gammaInput","gammaOutput","toneMappingWhitePoint","renderReverseSided","renderSingleSided","WebGLRenderTargetCube","audioLoader","setBuffer","getData","updateCubeMap","loadTextureCube","loadCompressedTexture","loadCompressedTextureCube","CanvasRenderer","JSONLoader","SceneUtils","createMultiMaterialObject","detach","attach","LensFlare","revision","__THREE__"],"mappings":"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","file":"three.a2014736.js","sourceRoot":"..","sourcesContent":["/**\n * @license\n * Copyright 2010-2021 Three.js Authors\n * SPDX-License-Identifier: MIT\n */\n(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(exports) :\n\ttypeof define === 'function' && define.amd ? define(['exports'], factory) :\n\t(global = typeof globalThis !== 'undefined' ? globalThis : global || self, factory(global.THREE = {}));\n}(this, (function (exports) { 'use strict';\n\n\tconst REVISION = '129';\n\tconst MOUSE = {\n\t\tLEFT: 0,\n\t\tMIDDLE: 1,\n\t\tRIGHT: 2,\n\t\tROTATE: 0,\n\t\tDOLLY: 1,\n\t\tPAN: 2\n\t};\n\tconst TOUCH = {\n\t\tROTATE: 0,\n\t\tPAN: 1,\n\t\tDOLLY_PAN: 2,\n\t\tDOLLY_ROTATE: 3\n\t};\n\tconst CullFaceNone = 0;\n\tconst CullFaceBack = 1;\n\tconst CullFaceFront = 2;\n\tconst CullFaceFrontBack = 3;\n\tconst BasicShadowMap = 0;\n\tconst PCFShadowMap = 1;\n\tconst PCFSoftShadowMap = 2;\n\tconst VSMShadowMap = 3;\n\tconst FrontSide = 0;\n\tconst BackSide = 1;\n\tconst DoubleSide = 2;\n\tconst FlatShading = 1;\n\tconst SmoothShading = 2;\n\tconst NoBlending = 0;\n\tconst NormalBlending = 1;\n\tconst AdditiveBlending = 2;\n\tconst SubtractiveBlending = 3;\n\tconst MultiplyBlending = 4;\n\tconst CustomBlending = 5;\n\tconst AddEquation = 100;\n\tconst SubtractEquation = 101;\n\tconst ReverseSubtractEquation = 102;\n\tconst MinEquation = 103;\n\tconst MaxEquation = 104;\n\tconst ZeroFactor = 200;\n\tconst OneFactor = 201;\n\tconst SrcColorFactor = 202;\n\tconst OneMinusSrcColorFactor = 203;\n\tconst SrcAlphaFactor = 204;\n\tconst OneMinusSrcAlphaFactor = 205;\n\tconst DstAlphaFactor = 206;\n\tconst OneMinusDstAlphaFactor = 207;\n\tconst DstColorFactor = 208;\n\tconst OneMinusDstColorFactor = 209;\n\tconst SrcAlphaSaturateFactor = 210;\n\tconst NeverDepth = 0;\n\tconst AlwaysDepth = 1;\n\tconst LessDepth = 2;\n\tconst LessEqualDepth = 3;\n\tconst EqualDepth = 4;\n\tconst GreaterEqualDepth = 5;\n\tconst GreaterDepth = 6;\n\tconst NotEqualDepth = 7;\n\tconst MultiplyOperation = 0;\n\tconst MixOperation = 1;\n\tconst AddOperation = 2;\n\tconst NoToneMapping = 0;\n\tconst LinearToneMapping = 1;\n\tconst ReinhardToneMapping = 2;\n\tconst CineonToneMapping = 3;\n\tconst ACESFilmicToneMapping = 4;\n\tconst CustomToneMapping = 5;\n\tconst UVMapping = 300;\n\tconst CubeReflectionMapping = 301;\n\tconst CubeRefractionMapping = 302;\n\tconst EquirectangularReflectionMapping = 303;\n\tconst EquirectangularRefractionMapping = 304;\n\tconst CubeUVReflectionMapping = 306;\n\tconst CubeUVRefractionMapping = 307;\n\tconst RepeatWrapping = 1000;\n\tconst ClampToEdgeWrapping = 1001;\n\tconst MirroredRepeatWrapping = 1002;\n\tconst NearestFilter = 1003;\n\tconst NearestMipmapNearestFilter = 1004;\n\tconst NearestMipMapNearestFilter = 1004;\n\tconst NearestMipmapLinearFilter = 1005;\n\tconst NearestMipMapLinearFilter = 1005;\n\tconst LinearFilter = 1006;\n\tconst LinearMipmapNearestFilter = 1007;\n\tconst LinearMipMapNearestFilter = 1007;\n\tconst LinearMipmapLinearFilter = 1008;\n\tconst LinearMipMapLinearFilter = 1008;\n\tconst UnsignedByteType = 1009;\n\tconst ByteType = 1010;\n\tconst ShortType = 1011;\n\tconst UnsignedShortType = 1012;\n\tconst IntType = 1013;\n\tconst UnsignedIntType = 1014;\n\tconst FloatType = 1015;\n\tconst HalfFloatType = 1016;\n\tconst UnsignedShort4444Type = 1017;\n\tconst UnsignedShort5551Type = 1018;\n\tconst UnsignedShort565Type = 1019;\n\tconst UnsignedInt248Type = 1020;\n\tconst AlphaFormat = 1021;\n\tconst RGBFormat = 1022;\n\tconst RGBAFormat = 1023;\n\tconst LuminanceFormat = 1024;\n\tconst LuminanceAlphaFormat = 1025;\n\tconst RGBEFormat = RGBAFormat;\n\tconst DepthFormat = 1026;\n\tconst DepthStencilFormat = 1027;\n\tconst RedFormat = 1028;\n\tconst RedIntegerFormat = 1029;\n\tconst RGFormat = 1030;\n\tconst RGIntegerFormat = 1031;\n\tconst RGBIntegerFormat = 1032;\n\tconst RGBAIntegerFormat = 1033;\n\tconst RGB_S3TC_DXT1_Format = 33776;\n\tconst RGBA_S3TC_DXT1_Format = 33777;\n\tconst RGBA_S3TC_DXT3_Format = 33778;\n\tconst RGBA_S3TC_DXT5_Format = 33779;\n\tconst RGB_PVRTC_4BPPV1_Format = 35840;\n\tconst RGB_PVRTC_2BPPV1_Format = 35841;\n\tconst RGBA_PVRTC_4BPPV1_Format = 35842;\n\tconst RGBA_PVRTC_2BPPV1_Format = 35843;\n\tconst RGB_ETC1_Format = 36196;\n\tconst RGB_ETC2_Format = 37492;\n\tconst RGBA_ETC2_EAC_Format = 37496;\n\tconst RGBA_ASTC_4x4_Format = 37808;\n\tconst RGBA_ASTC_5x4_Format = 37809;\n\tconst RGBA_ASTC_5x5_Format = 37810;\n\tconst RGBA_ASTC_6x5_Format = 37811;\n\tconst RGBA_ASTC_6x6_Format = 37812;\n\tconst RGBA_ASTC_8x5_Format = 37813;\n\tconst RGBA_ASTC_8x6_Format = 37814;\n\tconst RGBA_ASTC_8x8_Format = 37815;\n\tconst RGBA_ASTC_10x5_Format = 37816;\n\tconst RGBA_ASTC_10x6_Format = 37817;\n\tconst RGBA_ASTC_10x8_Format = 37818;\n\tconst RGBA_ASTC_10x10_Format = 37819;\n\tconst RGBA_ASTC_12x10_Format = 37820;\n\tconst RGBA_ASTC_12x12_Format = 37821;\n\tconst RGBA_BPTC_Format = 36492;\n\tconst SRGB8_ALPHA8_ASTC_4x4_Format = 37840;\n\tconst SRGB8_ALPHA8_ASTC_5x4_Format = 37841;\n\tconst SRGB8_ALPHA8_ASTC_5x5_Format = 37842;\n\tconst SRGB8_ALPHA8_ASTC_6x5_Format = 37843;\n\tconst SRGB8_ALPHA8_ASTC_6x6_Format = 37844;\n\tconst SRGB8_ALPHA8_ASTC_8x5_Format = 37845;\n\tconst SRGB8_ALPHA8_ASTC_8x6_Format = 37846;\n\tconst SRGB8_ALPHA8_ASTC_8x8_Format = 37847;\n\tconst SRGB8_ALPHA8_ASTC_10x5_Format = 37848;\n\tconst SRGB8_ALPHA8_ASTC_10x6_Format = 37849;\n\tconst SRGB8_ALPHA8_ASTC_10x8_Format = 37850;\n\tconst SRGB8_ALPHA8_ASTC_10x10_Format = 37851;\n\tconst SRGB8_ALPHA8_ASTC_12x10_Format = 37852;\n\tconst SRGB8_ALPHA8_ASTC_12x12_Format = 37853;\n\tconst LoopOnce = 2200;\n\tconst LoopRepeat = 2201;\n\tconst LoopPingPong = 2202;\n\tconst InterpolateDiscrete = 2300;\n\tconst InterpolateLinear = 2301;\n\tconst InterpolateSmooth = 2302;\n\tconst ZeroCurvatureEnding = 2400;\n\tconst ZeroSlopeEnding = 2401;\n\tconst WrapAroundEnding = 2402;\n\tconst NormalAnimationBlendMode = 2500;\n\tconst AdditiveAnimationBlendMode = 2501;\n\tconst TrianglesDrawMode = 0;\n\tconst TriangleStripDrawMode = 1;\n\tconst TriangleFanDrawMode = 2;\n\tconst LinearEncoding = 3000;\n\tconst sRGBEncoding = 3001;\n\tconst GammaEncoding = 3007;\n\tconst RGBEEncoding = 3002;\n\tconst LogLuvEncoding = 3003;\n\tconst RGBM7Encoding = 3004;\n\tconst RGBM16Encoding = 3005;\n\tconst RGBDEncoding = 3006;\n\tconst BasicDepthPacking = 3200;\n\tconst RGBADepthPacking = 3201;\n\tconst TangentSpaceNormalMap = 0;\n\tconst ObjectSpaceNormalMap = 1;\n\tconst ZeroStencilOp = 0;\n\tconst KeepStencilOp = 7680;\n\tconst ReplaceStencilOp = 7681;\n\tconst IncrementStencilOp = 7682;\n\tconst DecrementStencilOp = 7683;\n\tconst IncrementWrapStencilOp = 34055;\n\tconst DecrementWrapStencilOp = 34056;\n\tconst InvertStencilOp = 5386;\n\tconst NeverStencilFunc = 512;\n\tconst LessStencilFunc = 513;\n\tconst EqualStencilFunc = 514;\n\tconst LessEqualStencilFunc = 515;\n\tconst GreaterStencilFunc = 516;\n\tconst NotEqualStencilFunc = 517;\n\tconst GreaterEqualStencilFunc = 518;\n\tconst AlwaysStencilFunc = 519;\n\tconst StaticDrawUsage = 35044;\n\tconst DynamicDrawUsage = 35048;\n\tconst StreamDrawUsage = 35040;\n\tconst StaticReadUsage = 35045;\n\tconst DynamicReadUsage = 35049;\n\tconst StreamReadUsage = 35041;\n\tconst StaticCopyUsage = 35046;\n\tconst DynamicCopyUsage = 35050;\n\tconst StreamCopyUsage = 35042;\n\tconst GLSL1 = '100';\n\tconst GLSL3 = '300 es';\n\n\t/**\n\t * https://github.com/mrdoob/eventdispatcher.js/\n\t */\n\tclass EventDispatcher {\n\t\taddEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) this._listeners = {};\n\t\t\tconst listeners = this._listeners;\n\n\t\t\tif (listeners[type] === undefined) {\n\t\t\t\tlisteners[type] = [];\n\t\t\t}\n\n\t\t\tif (listeners[type].indexOf(listener) === -1) {\n\t\t\t\tlisteners[type].push(listener);\n\t\t\t}\n\t\t}\n\n\t\thasEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return false;\n\t\t\tconst listeners = this._listeners;\n\t\t\treturn listeners[type] !== undefined && listeners[type].indexOf(listener) !== -1;\n\t\t}\n\n\t\tremoveEventListener(type, listener) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tconst index = listenerArray.indexOf(listener);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\tlistenerArray.splice(index, 1);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._listeners === undefined) return;\n\t\t\tconst listeners = this._listeners;\n\t\t\tconst listenerArray = listeners[event.type];\n\n\t\t\tif (listenerArray !== undefined) {\n\t\t\t\tevent.target = this; // Make a copy, in case listeners are removed while iterating.\n\n\t\t\t\tconst array = listenerArray.slice(0);\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tarray[i].call(this, event);\n\t\t\t\t}\n\n\t\t\t\tevent.target = null;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _lut = [];\n\n\tfor (let i = 0; i < 256; i++) {\n\t\t_lut[i] = (i < 16 ? '0' : '') + i.toString(16);\n\t}\n\n\tlet _seed = 1234567;\n\tconst DEG2RAD = Math.PI / 180;\n\tconst RAD2DEG = 180 / Math.PI; // http://stackoverflow.com/questions/105034/how-to-create-a-guid-uuid-in-javascript/21963136#21963136\n\n\tfunction generateUUID() {\n\t\tconst d0 = Math.random() * 0xffffffff | 0;\n\t\tconst d1 = Math.random() * 0xffffffff | 0;\n\t\tconst d2 = Math.random() * 0xffffffff | 0;\n\t\tconst d3 = Math.random() * 0xffffffff | 0;\n\t\tconst uuid = _lut[d0 & 0xff] + _lut[d0 >> 8 & 0xff] + _lut[d0 >> 16 & 0xff] + _lut[d0 >> 24 & 0xff] + '-' + _lut[d1 & 0xff] + _lut[d1 >> 8 & 0xff] + '-' + _lut[d1 >> 16 & 0x0f | 0x40] + _lut[d1 >> 24 & 0xff] + '-' + _lut[d2 & 0x3f | 0x80] + _lut[d2 >> 8 & 0xff] + '-' + _lut[d2 >> 16 & 0xff] + _lut[d2 >> 24 & 0xff] + _lut[d3 & 0xff] + _lut[d3 >> 8 & 0xff] + _lut[d3 >> 16 & 0xff] + _lut[d3 >> 24 & 0xff]; // .toUpperCase() here flattens concatenated strings to save heap memory space.\n\n\t\treturn uuid.toUpperCase();\n\t}\n\n\tfunction clamp(value, min, max) {\n\t\treturn Math.max(min, Math.min(max, value));\n\t} // compute euclidian modulo of m % n\n\t// https://en.wikipedia.org/wiki/Modulo_operation\n\n\n\tfunction euclideanModulo(n, m) {\n\t\treturn (n % m + m) % m;\n\t} // Linear mapping from range <a1, a2> to range <b1, b2>\n\n\n\tfunction mapLinear(x, a1, a2, b1, b2) {\n\t\treturn b1 + (x - a1) * (b2 - b1) / (a2 - a1);\n\t} // https://www.gamedev.net/tutorials/programming/general-and-gameplay-programming/inverse-lerp-a-super-useful-yet-often-overlooked-function-r5230/\n\n\n\tfunction inverseLerp(x, y, value) {\n\t\tif (x !== y) {\n\t\t\treturn (value - x) / (y - x);\n\t\t} else {\n\t\t\treturn 0;\n\t\t}\n\t} // https://en.wikipedia.org/wiki/Linear_interpolation\n\n\n\tfunction lerp(x, y, t) {\n\t\treturn (1 - t) * x + t * y;\n\t} // http://www.rorydriscoll.com/2016/03/07/frame-rate-independent-damping-using-lerp/\n\n\n\tfunction damp(x, y, lambda, dt) {\n\t\treturn lerp(x, y, 1 - Math.exp(-lambda * dt));\n\t} // https://www.desmos.com/calculator/vcsjnyz7x4\n\n\n\tfunction pingpong(x, length = 1) {\n\t\treturn length - Math.abs(euclideanModulo(x, length * 2) - length);\n\t} // http://en.wikipedia.org/wiki/Smoothstep\n\n\n\tfunction smoothstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * (3 - 2 * x);\n\t}\n\n\tfunction smootherstep(x, min, max) {\n\t\tif (x <= min) return 0;\n\t\tif (x >= max) return 1;\n\t\tx = (x - min) / (max - min);\n\t\treturn x * x * x * (x * (x * 6 - 15) + 10);\n\t} // Random integer from <low, high> interval\n\n\n\tfunction randInt(low, high) {\n\t\treturn low + Math.floor(Math.random() * (high - low + 1));\n\t} // Random float from <low, high> interval\n\n\n\tfunction randFloat(low, high) {\n\t\treturn low + Math.random() * (high - low);\n\t} // Random float from <-range/2, range/2> interval\n\n\n\tfunction randFloatSpread(range) {\n\t\treturn range * (0.5 - Math.random());\n\t} // Deterministic pseudo-random float in the interval [ 0, 1 ]\n\n\n\tfunction seededRandom(s) {\n\t\tif (s !== undefined) _seed = s % 2147483647; // Park-Miller algorithm\n\n\t\t_seed = _seed * 16807 % 2147483647;\n\t\treturn (_seed - 1) / 2147483646;\n\t}\n\n\tfunction degToRad(degrees) {\n\t\treturn degrees * DEG2RAD;\n\t}\n\n\tfunction radToDeg(radians) {\n\t\treturn radians * RAD2DEG;\n\t}\n\n\tfunction isPowerOfTwo(value) {\n\t\treturn (value & value - 1) === 0 && value !== 0;\n\t}\n\n\tfunction ceilPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction floorPowerOfTwo(value) {\n\t\treturn Math.pow(2, Math.floor(Math.log(value) / Math.LN2));\n\t}\n\n\tfunction setQuaternionFromProperEuler(q, a, b, c, order) {\n\t\t// Intrinsic Proper Euler Angles - see https://en.wikipedia.org/wiki/Euler_angles\n\t\t// rotations are applied to the axes in the order specified by 'order'\n\t\t// rotation by angle 'a' is applied first, then by angle 'b', then by angle 'c'\n\t\t// angles are in radians\n\t\tconst cos = Math.cos;\n\t\tconst sin = Math.sin;\n\t\tconst c2 = cos(b / 2);\n\t\tconst s2 = sin(b / 2);\n\t\tconst c13 = cos((a + c) / 2);\n\t\tconst s13 = sin((a + c) / 2);\n\t\tconst c1_3 = cos((a - c) / 2);\n\t\tconst s1_3 = sin((a - c) / 2);\n\t\tconst c3_1 = cos((c - a) / 2);\n\t\tconst s3_1 = sin((c - a) / 2);\n\n\t\tswitch (order) {\n\t\t\tcase 'XYX':\n\t\t\t\tq.set(c2 * s13, s2 * c1_3, s2 * s1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YZY':\n\t\t\t\tq.set(s2 * s1_3, c2 * s13, s2 * c1_3, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZXZ':\n\t\t\t\tq.set(s2 * c1_3, s2 * s1_3, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'XZX':\n\t\t\t\tq.set(c2 * s13, s2 * s3_1, s2 * c3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'YXY':\n\t\t\t\tq.set(s2 * c3_1, c2 * s13, s2 * s3_1, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tcase 'ZYZ':\n\t\t\t\tq.set(s2 * s3_1, s2 * c3_1, c2 * s13, c2 * c13);\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.MathUtils: .setQuaternionFromProperEuler() encountered an unknown order: ' + order);\n\t\t}\n\t}\n\n\tvar MathUtils = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tDEG2RAD: DEG2RAD,\n\t\tRAD2DEG: RAD2DEG,\n\t\tgenerateUUID: generateUUID,\n\t\tclamp: clamp,\n\t\teuclideanModulo: euclideanModulo,\n\t\tmapLinear: mapLinear,\n\t\tinverseLerp: inverseLerp,\n\t\tlerp: lerp,\n\t\tdamp: damp,\n\t\tpingpong: pingpong,\n\t\tsmoothstep: smoothstep,\n\t\tsmootherstep: smootherstep,\n\t\trandInt: randInt,\n\t\trandFloat: randFloat,\n\t\trandFloatSpread: randFloatSpread,\n\t\tseededRandom: seededRandom,\n\t\tdegToRad: degToRad,\n\t\tradToDeg: radToDeg,\n\t\tisPowerOfTwo: isPowerOfTwo,\n\t\tceilPowerOfTwo: ceilPowerOfTwo,\n\t\tfloorPowerOfTwo: floorPowerOfTwo,\n\t\tsetQuaternionFromProperEuler: setQuaternionFromProperEuler\n\t});\n\n\tclass Vector2 {\n\t\tconstructor(x = 0, y = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.x;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.x = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.y;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.y = value;\n\t\t}\n\n\t\tset(x, y) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6];\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7];\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y;\n\t\t}\n\n\t\tcross(v) {\n\t\t\treturn this.x * v.y - this.y * v.x;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tangle() {\n\t\t\t// computes the angle in radians with respect to the positive x-axis\n\t\t\tconst angle = Math.atan2(-this.y, -this.x) + Math.PI;\n\t\t\treturn angle;\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y;\n\t\t\treturn dx * dx + dy * dy;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector2: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateAround(center, angle) {\n\t\t\tconst c = Math.cos(angle),\n\t\t\t\t\t\ts = Math.sin(angle);\n\t\t\tconst x = this.x - center.x;\n\t\t\tconst y = this.y - center.y;\n\t\t\tthis.x = x * c - y * s + center.x;\n\t\t\tthis.y = x * s + y * c + center.y;\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector2.prototype.isVector2 = true;\n\n\tclass Matrix3 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix3: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n21, n22, n23, n31, n32, n33) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[1] = n21;\n\t\t\tte[2] = n31;\n\t\t\tte[3] = n12;\n\t\t\tte[4] = n22;\n\t\t\tte[5] = n32;\n\t\t\tte[6] = n13;\n\t\t\tte[7] = n23;\n\t\t\tte[8] = n33;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 1, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrix3Column(this, 0);\n\t\t\tyAxis.setFromMatrix3Column(this, 1);\n\t\t\tzAxis.setFromMatrix3Column(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix4(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[4], me[8], me[1], me[5], me[9], me[2], me[6], me[10]);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m) {\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[3],\n\t\t\t\t\t\ta13 = ae[6];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[4],\n\t\t\t\t\t\ta23 = ae[7];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[5],\n\t\t\t\t\t\ta33 = ae[8];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[3],\n\t\t\t\t\t\tb13 = be[6];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[4],\n\t\t\t\t\t\tb23 = be[7];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[5],\n\t\t\t\t\t\tb33 = be[8];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31;\n\t\t\tte[3] = a11 * b12 + a12 * b22 + a13 * b32;\n\t\t\tte[6] = a11 * b13 + a12 * b23 + a13 * b33;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31;\n\t\t\tte[4] = a21 * b12 + a22 * b22 + a23 * b32;\n\t\t\tte[7] = a21 * b13 + a22 * b23 + a23 * b33;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31;\n\t\t\tte[5] = a31 * b12 + a32 * b22 + a33 * b32;\n\t\t\tte[8] = a31 * b13 + a32 * b23 + a33 * b33;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[8] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst a = te[0],\n\t\t\t\t\t\tb = te[1],\n\t\t\t\t\t\tc = te[2],\n\t\t\t\t\t\td = te[3],\n\t\t\t\t\t\te = te[4],\n\t\t\t\t\t\tf = te[5],\n\t\t\t\t\t\tg = te[6],\n\t\t\t\t\t\th = te[7],\n\t\t\t\t\t\ti = te[8];\n\t\t\treturn a * e * i - a * f * h - b * d * i + b * f * g + c * d * h - c * e * g;\n\t\t}\n\n\t\tinvert() {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn12 = te[3],\n\t\t\t\t\t\tn22 = te[4],\n\t\t\t\t\t\tn32 = te[5],\n\t\t\t\t\t\tn13 = te[6],\n\t\t\t\t\t\tn23 = te[7],\n\t\t\t\t\t\tn33 = te[8],\n\t\t\t\t\t\tt11 = n33 * n22 - n32 * n23,\n\t\t\t\t\t\tt12 = n32 * n13 - n33 * n12,\n\t\t\t\t\t\tt13 = n23 * n12 - n22 * n13,\n\t\t\t\t\t\tdet = n11 * t11 + n21 * t12 + n31 * t13;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n31 * n23 - n33 * n21) * detInv;\n\t\t\tte[2] = (n32 * n21 - n31 * n22) * detInv;\n\t\t\tte[3] = t12 * detInv;\n\t\t\tte[4] = (n33 * n11 - n31 * n13) * detInv;\n\t\t\tte[5] = (n31 * n12 - n32 * n11) * detInv;\n\t\t\tte[6] = t13 * detInv;\n\t\t\tte[7] = (n21 * n13 - n23 * n11) * detInv;\n\t\t\tte[8] = (n22 * n11 - n21 * n12) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranspose() {\n\t\t\tlet tmp;\n\t\t\tconst m = this.elements;\n\t\t\ttmp = m[1];\n\t\t\tm[1] = m[3];\n\t\t\tm[3] = tmp;\n\t\t\ttmp = m[2];\n\t\t\tm[2] = m[6];\n\t\t\tm[6] = tmp;\n\t\t\ttmp = m[5];\n\t\t\tm[5] = m[7];\n\t\t\tm[7] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetNormalMatrix(matrix4) {\n\t\t\treturn this.setFromMatrix4(matrix4).invert().transpose();\n\t\t}\n\n\t\ttransposeIntoArray(r) {\n\t\t\tconst m = this.elements;\n\t\t\tr[0] = m[0];\n\t\t\tr[1] = m[3];\n\t\t\tr[2] = m[6];\n\t\t\tr[3] = m[1];\n\t\t\tr[4] = m[4];\n\t\t\tr[5] = m[7];\n\t\t\tr[6] = m[2];\n\t\t\tr[7] = m[5];\n\t\t\tr[8] = m[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetUvTransform(tx, ty, sx, sy, rotation, cx, cy) {\n\t\t\tconst c = Math.cos(rotation);\n\t\t\tconst s = Math.sin(rotation);\n\t\t\tthis.set(sx * c, sx * s, -sx * (c * cx + s * cy) + cx + tx, -sy * s, sy * c, -sy * (-s * cx + c * cy) + cy + ty, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(sx, sy) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= sx;\n\t\t\tte[3] *= sx;\n\t\t\tte[6] *= sx;\n\t\t\tte[1] *= sy;\n\t\t\tte[4] *= sy;\n\t\t\tte[7] *= sy;\n\t\t\treturn this;\n\t\t}\n\n\t\trotate(theta) {\n\t\t\tconst c = Math.cos(theta);\n\t\t\tconst s = Math.sin(theta);\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = te[0],\n\t\t\t\t\t\ta12 = te[3],\n\t\t\t\t\t\ta13 = te[6];\n\t\t\tconst a21 = te[1],\n\t\t\t\t\t\ta22 = te[4],\n\t\t\t\t\t\ta23 = te[7];\n\t\t\tte[0] = c * a11 + s * a21;\n\t\t\tte[3] = c * a12 + s * a22;\n\t\t\tte[6] = c * a13 + s * a23;\n\t\t\tte[1] = -s * a11 + c * a21;\n\t\t\tte[4] = -s * a12 + c * a22;\n\t\t\tte[7] = -s * a13 + c * a23;\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(tx, ty) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] += tx * te[2];\n\t\t\tte[3] += tx * te[5];\n\t\t\tte[6] += tx * te[8];\n\t\t\tte[1] += ty * te[2];\n\t\t\tte[4] += ty * te[5];\n\t\t\tte[7] += ty * te[8];\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\treturn array;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().fromArray(this.elements);\n\t\t}\n\n\t}\n\n\tMatrix3.prototype.isMatrix3 = true;\n\n\tlet _canvas;\n\n\tclass ImageUtils {\n\t\tstatic getDataURL(image) {\n\t\t\tif (/^data:/i.test(image.src)) {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tif (typeof HTMLCanvasElement == 'undefined') {\n\t\t\t\treturn image.src;\n\t\t\t}\n\n\t\t\tlet canvas;\n\n\t\t\tif (image instanceof HTMLCanvasElement) {\n\t\t\t\tcanvas = image;\n\t\t\t} else {\n\t\t\t\tif (_canvas === undefined) _canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t\t\t_canvas.width = image.width;\n\t\t\t\t_canvas.height = image.height;\n\n\t\t\t\tconst context = _canvas.getContext('2d');\n\n\t\t\t\tif (image instanceof ImageData) {\n\t\t\t\t\tcontext.putImageData(image, 0, 0);\n\t\t\t\t} else {\n\t\t\t\t\tcontext.drawImage(image, 0, 0, image.width, image.height);\n\t\t\t\t}\n\n\t\t\t\tcanvas = _canvas;\n\t\t\t}\n\n\t\t\tif (canvas.width > 2048 || canvas.height > 2048) {\n\t\t\t\tconsole.warn('THREE.ImageUtils.getDataURL: Image converted to jpg for performance reasons', image);\n\t\t\t\treturn canvas.toDataURL('image/jpeg', 0.6);\n\t\t\t} else {\n\t\t\t\treturn canvas.toDataURL('image/png');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tlet textureId = 0;\n\n\tclass Texture extends EventDispatcher {\n\t\tconstructor(image = Texture.DEFAULT_IMAGE, mapping = Texture.DEFAULT_MAPPING, wrapS = ClampToEdgeWrapping, wrapT = ClampToEdgeWrapping, magFilter = LinearFilter, minFilter = LinearMipmapLinearFilter, format = RGBAFormat, type = UnsignedByteType, anisotropy = 1, encoding = LinearEncoding) {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: textureId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.image = image;\n\t\t\tthis.mipmaps = [];\n\t\t\tthis.mapping = mapping;\n\t\t\tthis.wrapS = wrapS;\n\t\t\tthis.wrapT = wrapT;\n\t\t\tthis.magFilter = magFilter;\n\t\t\tthis.minFilter = minFilter;\n\t\t\tthis.anisotropy = anisotropy;\n\t\t\tthis.format = format;\n\t\t\tthis.internalFormat = null;\n\t\t\tthis.type = type;\n\t\t\tthis.offset = new Vector2(0, 0);\n\t\t\tthis.repeat = new Vector2(1, 1);\n\t\t\tthis.center = new Vector2(0, 0);\n\t\t\tthis.rotation = 0;\n\t\t\tthis.matrixAutoUpdate = true;\n\t\t\tthis.matrix = new Matrix3();\n\t\t\tthis.generateMipmaps = true;\n\t\t\tthis.premultiplyAlpha = false;\n\t\t\tthis.flipY = true;\n\t\t\tthis.unpackAlignment = 4; // valid values: 1, 2, 4, 8 (see http://www.khronos.org/opengles/sdk/docs/man/xhtml/glPixelStorei.xml)\n\t\t\t// Values of encoding !== THREE.LinearEncoding only supported on map, envMap and emissiveMap.\n\t\t\t//\n\t\t\t// Also changing the encoding after already used by a Material will not automatically make the Material\n\t\t\t// update. You need to explicitly call Material.needsUpdate to trigger it to recompile.\n\n\t\t\tthis.encoding = encoding;\n\t\t\tthis.version = 0;\n\t\t\tthis.onUpdate = null;\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.setUvTransform(this.offset.x, this.offset.y, this.repeat.x, this.repeat.y, this.rotation, this.center.x, this.center.y);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.image = source.image;\n\t\t\tthis.mipmaps = source.mipmaps.slice(0);\n\t\t\tthis.mapping = source.mapping;\n\t\t\tthis.wrapS = source.wrapS;\n\t\t\tthis.wrapT = source.wrapT;\n\t\t\tthis.magFilter = source.magFilter;\n\t\t\tthis.minFilter = source.minFilter;\n\t\t\tthis.anisotropy = source.anisotropy;\n\t\t\tthis.format = source.format;\n\t\t\tthis.internalFormat = source.internalFormat;\n\t\t\tthis.type = source.type;\n\t\t\tthis.offset.copy(source.offset);\n\t\t\tthis.repeat.copy(source.repeat);\n\t\t\tthis.center.copy(source.center);\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.generateMipmaps = source.generateMipmaps;\n\t\t\tthis.premultiplyAlpha = source.premultiplyAlpha;\n\t\t\tthis.flipY = source.flipY;\n\t\t\tthis.unpackAlignment = source.unpackAlignment;\n\t\t\tthis.encoding = source.encoding;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (!isRootObject && meta.textures[this.uuid] !== undefined) {\n\t\t\t\treturn meta.textures[this.uuid];\n\t\t\t}\n\n\t\t\tconst output = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Texture',\n\t\t\t\t\tgenerator: 'Texture.toJSON'\n\t\t\t\t},\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tname: this.name,\n\t\t\t\tmapping: this.mapping,\n\t\t\t\trepeat: [this.repeat.x, this.repeat.y],\n\t\t\t\toffset: [this.offset.x, this.offset.y],\n\t\t\t\tcenter: [this.center.x, this.center.y],\n\t\t\t\trotation: this.rotation,\n\t\t\t\twrap: [this.wrapS, this.wrapT],\n\t\t\t\tformat: this.format,\n\t\t\t\ttype: this.type,\n\t\t\t\tencoding: this.encoding,\n\t\t\t\tminFilter: this.minFilter,\n\t\t\t\tmagFilter: this.magFilter,\n\t\t\t\tanisotropy: this.anisotropy,\n\t\t\t\tflipY: this.flipY,\n\t\t\t\tpremultiplyAlpha: this.premultiplyAlpha,\n\t\t\t\tunpackAlignment: this.unpackAlignment\n\t\t\t};\n\n\t\t\tif (this.image !== undefined) {\n\t\t\t\t// TODO: Move to THREE.Image\n\t\t\t\tconst image = this.image;\n\n\t\t\t\tif (image.uuid === undefined) {\n\t\t\t\t\timage.uuid = generateUUID(); // UGH\n\t\t\t\t}\n\n\t\t\t\tif (!isRootObject && meta.images[image.uuid] === undefined) {\n\t\t\t\t\tlet url;\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\t// process array of images e.g. CubeTexture\n\t\t\t\t\t\turl = [];\n\n\t\t\t\t\t\tfor (let i = 0, l = image.length; i < l; i++) {\n\t\t\t\t\t\t\t// check cube texture with data textures\n\t\t\t\t\t\t\tif (image[i].isDataTexture) {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i].image));\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\turl.push(serializeImage(image[i]));\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// process single image\n\t\t\t\t\t\turl = serializeImage(image);\n\t\t\t\t\t}\n\n\t\t\t\t\tmeta.images[image.uuid] = {\n\t\t\t\t\t\tuuid: image.uuid,\n\t\t\t\t\t\turl: url\n\t\t\t\t\t};\n\t\t\t\t}\n\n\t\t\t\toutput.image = image.uuid;\n\t\t\t}\n\n\t\t\tif (!isRootObject) {\n\t\t\t\tmeta.textures[this.uuid] = output;\n\t\t\t}\n\n\t\t\treturn output;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\ttransformUv(uv) {\n\t\t\tif (this.mapping !== UVMapping) return uv;\n\t\t\tuv.applyMatrix3(this.matrix);\n\n\t\t\tif (uv.x < 0 || uv.x > 1) {\n\t\t\t\tswitch (this.wrapS) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.x = uv.x < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.x) % 2) === 1) {\n\t\t\t\t\t\t\tuv.x = Math.ceil(uv.x) - uv.x;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.x = uv.x - Math.floor(uv.x);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (uv.y < 0 || uv.y > 1) {\n\t\t\t\tswitch (this.wrapT) {\n\t\t\t\t\tcase RepeatWrapping:\n\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase ClampToEdgeWrapping:\n\t\t\t\t\t\tuv.y = uv.y < 0 ? 0 : 1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase MirroredRepeatWrapping:\n\t\t\t\t\t\tif (Math.abs(Math.floor(uv.y) % 2) === 1) {\n\t\t\t\t\t\t\tuv.y = Math.ceil(uv.y) - uv.y;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tuv.y = uv.y - Math.floor(uv.y);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.flipY) {\n\t\t\t\tuv.y = 1 - uv.y;\n\t\t\t}\n\n\t\t\treturn uv;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tTexture.DEFAULT_IMAGE = undefined;\n\tTexture.DEFAULT_MAPPING = UVMapping;\n\tTexture.prototype.isTexture = true;\n\n\tfunction serializeImage(image) {\n\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t// default images\n\t\t\treturn ImageUtils.getDataURL(image);\n\t\t} else {\n\t\t\tif (image.data) {\n\t\t\t\t// images of DataTexture\n\t\t\t\treturn {\n\t\t\t\t\tdata: Array.prototype.slice.call(image.data),\n\t\t\t\t\twidth: image.width,\n\t\t\t\t\theight: image.height,\n\t\t\t\t\ttype: image.data.constructor.name\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.Texture: Unable to serialize Texture.');\n\t\t\t\treturn {};\n\t\t\t}\n\t\t}\n\t}\n\n\tclass Vector4 {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t}\n\n\t\tget width() {\n\t\t\treturn this.z;\n\t\t}\n\n\t\tset width(value) {\n\t\t\tthis.z = value;\n\t\t}\n\n\t\tget height() {\n\t\t\treturn this.w;\n\t\t}\n\n\t\tset height(value) {\n\t\t\tthis.w = value;\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\tthis.w = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(w) {\n\t\t\tthis.w = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 3:\n\t\t\t\t\tthis.w = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tcase 3:\n\t\t\t\t\treturn this.w;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z, this.w);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\tthis.w = v.w !== undefined ? v.w : 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\tthis.w += v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\tthis.w += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\tthis.w = a.w + b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\tthis.w += v.w * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\tthis.w -= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\tthis.w -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\tthis.w = a.w - b.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v) {\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\tthis.w *= v.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\tthis.w *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z,\n\t\t\t\t\t\tw = this.w;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z + e[12] * w;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z + e[13] * w;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z + e[14] * w;\n\t\t\tthis.w = e[3] * x + e[7] * y + e[11] * z + e[15] * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tsetAxisAngleFromQuaternion(q) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/quaternionToAngle/index.htm\n\t\t\t// q is assumed to be normalized\n\t\t\tthis.w = 2 * Math.acos(q.w);\n\t\t\tconst s = Math.sqrt(1 - q.w * q.w);\n\n\t\t\tif (s < 0.0001) {\n\t\t\t\tthis.x = 1;\n\t\t\t\tthis.y = 0;\n\t\t\t\tthis.z = 0;\n\t\t\t} else {\n\t\t\t\tthis.x = q.x / s;\n\t\t\t\tthis.y = q.y / s;\n\t\t\t\tthis.z = q.z / s;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetAxisAngleFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToAngle/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tlet angle, x, y, z; // variables for result\n\n\t\t\tconst epsilon = 0.01,\n\t\t\t\t\t\t// margin to allow for rounding errors\n\t\t\tepsilon2 = 0.1,\n\t\t\t\t\t\t// margin to distinguish between 0 and 180 degrees\n\t\t\tte = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\n\t\t\tif (Math.abs(m12 - m21) < epsilon && Math.abs(m13 - m31) < epsilon && Math.abs(m23 - m32) < epsilon) {\n\t\t\t\t// singularity found\n\t\t\t\t// first check for identity matrix which must have +1 for all terms\n\t\t\t\t// in leading diagonal and zero in other terms\n\t\t\t\tif (Math.abs(m12 + m21) < epsilon2 && Math.abs(m13 + m31) < epsilon2 && Math.abs(m23 + m32) < epsilon2 && Math.abs(m11 + m22 + m33 - 3) < epsilon2) {\n\t\t\t\t\t// this singularity is identity matrix so angle = 0\n\t\t\t\t\tthis.set(1, 0, 0, 0);\n\t\t\t\t\treturn this; // zero angle, arbitrary axis\n\t\t\t\t} // otherwise this singularity is angle = 180\n\n\n\t\t\t\tangle = Math.PI;\n\t\t\t\tconst xx = (m11 + 1) / 2;\n\t\t\t\tconst yy = (m22 + 1) / 2;\n\t\t\t\tconst zz = (m33 + 1) / 2;\n\t\t\t\tconst xy = (m12 + m21) / 4;\n\t\t\t\tconst xz = (m13 + m31) / 4;\n\t\t\t\tconst yz = (m23 + m32) / 4;\n\n\t\t\t\tif (xx > yy && xx > zz) {\n\t\t\t\t\t// m11 is the largest diagonal term\n\t\t\t\t\tif (xx < epsilon) {\n\t\t\t\t\t\tx = 0;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tx = Math.sqrt(xx);\n\t\t\t\t\t\ty = xy / x;\n\t\t\t\t\t\tz = xz / x;\n\t\t\t\t\t}\n\t\t\t\t} else if (yy > zz) {\n\t\t\t\t\t// m22 is the largest diagonal term\n\t\t\t\t\tif (yy < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0;\n\t\t\t\t\t\tz = 0.707106781;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ty = Math.sqrt(yy);\n\t\t\t\t\t\tx = xy / y;\n\t\t\t\t\t\tz = yz / y;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// m33 is the largest diagonal term so base result on this\n\t\t\t\t\tif (zz < epsilon) {\n\t\t\t\t\t\tx = 0.707106781;\n\t\t\t\t\t\ty = 0.707106781;\n\t\t\t\t\t\tz = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tz = Math.sqrt(zz);\n\t\t\t\t\t\tx = xz / z;\n\t\t\t\t\t\ty = yz / z;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.set(x, y, z, angle);\n\t\t\t\treturn this; // return 180 deg rotation\n\t\t\t} // as we have reached here there are no singularities so we can handle normally\n\n\n\t\t\tlet s = Math.sqrt((m32 - m23) * (m32 - m23) + (m13 - m31) * (m13 - m31) + (m21 - m12) * (m21 - m12)); // used to normalize\n\n\t\t\tif (Math.abs(s) < 0.001) s = 1; // prevent divide by zero, should not happen if matrix is orthogonal and should be\n\t\t\t// caught by singularity test above, but I've left it in just in case\n\n\t\t\tthis.x = (m32 - m23) / s;\n\t\t\tthis.y = (m13 - m31) / s;\n\t\t\tthis.z = (m21 - m12) / s;\n\t\t\tthis.w = Math.acos((m11 + m22 + m33 - 1) / 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\tthis.w = Math.min(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\tthis.w = Math.max(this.w, v.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\tthis.w = Math.max(min.w, Math.min(max.w, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\tthis.w = Math.max(minVal, Math.min(maxVal, this.w));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\tthis.w = Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\tthis.w = Math.ceil(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\tthis.w = Math.round(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\tthis.w = this.w < 0 ? Math.ceil(this.w) : Math.floor(this.w);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\tthis.w = -this.w;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z + this.w * v.w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z + this.w * this.w);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z) + Math.abs(this.w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\tthis.w += (v.w - this.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\tthis.w = v1.w + (v2.w - v1.w) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z && v.w === this.w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\tthis.w = array[offset + 3];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\tarray[offset + 3] = this.w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector4: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\tthis.w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\tthis.w = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector4.prototype.isVector4 = true;\n\n\t/*\n\t In options, we can specify:\n\t * Texture parameters for an auto-generated target texture\n\t * depthBuffer/stencilBuffer: Booleans to indicate if we should generate these buffers\n\t*/\n\n\tclass WebGLRenderTarget extends EventDispatcher {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper();\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t\tthis.depth = 1;\n\t\t\tthis.scissor = new Vector4(0, 0, width, height);\n\t\t\tthis.scissorTest = false;\n\t\t\tthis.viewport = new Vector4(0, 0, width, height);\n\t\t\toptions = options || {};\n\t\t\tthis.texture = new Texture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.image = {};\n\t\t\tthis.texture.image.width = width;\n\t\t\tthis.texture.image.height = height;\n\t\t\tthis.texture.image.depth = 1;\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.depthBuffer = options.depthBuffer !== undefined ? options.depthBuffer : true;\n\t\t\tthis.stencilBuffer = options.stencilBuffer !== undefined ? options.stencilBuffer : false;\n\t\t\tthis.depthTexture = options.depthTexture !== undefined ? options.depthTexture : null;\n\t\t}\n\n\t\tsetTexture(texture) {\n\t\t\ttexture.image = {\n\t\t\t\twidth: this.width,\n\t\t\t\theight: this.height,\n\t\t\t\tdepth: this.depth\n\t\t\t};\n\t\t\tthis.texture = texture;\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\t\t\t\tthis.texture.image.width = width;\n\t\t\t\tthis.texture.image.height = height;\n\t\t\t\tthis.texture.image.depth = depth;\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.copy(source.viewport);\n\t\t\tthis.texture = source.texture.clone();\n\t\t\tthis.texture.image = { ...this.texture.image\n\t\t\t}; // See #20328.\n\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tWebGLRenderTarget.prototype.isWebGLRenderTarget = true;\n\n\tclass WebGLMultipleRenderTargets extends WebGLRenderTarget {\n\t\tconstructor(width, height, count) {\n\t\t\tsuper(width, height);\n\t\t\tconst texture = this.texture;\n\t\t\tthis.texture = [];\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tthis.texture[i] = texture.clone();\n\t\t\t}\n\t\t}\n\n\t\tsetSize(width, height, depth = 1) {\n\t\t\tif (this.width !== width || this.height !== height || this.depth !== depth) {\n\t\t\t\tthis.width = width;\n\t\t\t\tthis.height = height;\n\t\t\t\tthis.depth = depth;\n\n\t\t\t\tfor (let i = 0, il = this.texture.length; i < il; i++) {\n\t\t\t\t\tthis.texture[i].image.width = width;\n\t\t\t\t\tthis.texture[i].image.height = height;\n\t\t\t\t\tthis.texture[i].image.depth = depth;\n\t\t\t\t}\n\n\t\t\t\tthis.dispose();\n\t\t\t}\n\n\t\t\tthis.viewport.set(0, 0, width, height);\n\t\t\tthis.scissor.set(0, 0, width, height);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.dispose();\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\tthis.depth = source.depth;\n\t\t\tthis.viewport.set(0, 0, this.width, this.height);\n\t\t\tthis.scissor.set(0, 0, this.width, this.height);\n\t\t\tthis.depthBuffer = source.depthBuffer;\n\t\t\tthis.stencilBuffer = source.stencilBuffer;\n\t\t\tthis.depthTexture = source.depthTexture;\n\t\t\tthis.texture.length = 0;\n\n\t\t\tfor (let i = 0, il = source.texture.length; i < il; i++) {\n\t\t\t\tthis.texture[i] = source.texture[i].clone();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultipleRenderTargets.prototype.isWebGLMultipleRenderTargets = true;\n\n\tclass WebGLMultisampleRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(width, height, options) {\n\t\t\tsuper(width, height, options);\n\t\t\tthis.samples = 4;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy.call(this, source);\n\t\t\tthis.samples = source.samples;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tWebGLMultisampleRenderTarget.prototype.isWebGLMultisampleRenderTarget = true;\n\n\tclass Quaternion {\n\t\tconstructor(x = 0, y = 0, z = 0, w = 1) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\t\t}\n\n\t\tstatic slerp(qa, qb, qm, t) {\n\t\t\tconsole.warn('THREE.Quaternion: Static .slerp() has been deprecated. Use qm.slerpQuaternions( qa, qb, t ) instead.');\n\t\t\treturn qm.slerpQuaternions(qa, qb, t);\n\t\t}\n\n\t\tstatic slerpFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1, t) {\n\t\t\t// fuzz-free, array-based Quaternion SLERP operation\n\t\t\tlet x0 = src0[srcOffset0 + 0],\n\t\t\t\t\ty0 = src0[srcOffset0 + 1],\n\t\t\t\t\tz0 = src0[srcOffset0 + 2],\n\t\t\t\t\tw0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1 + 0],\n\t\t\t\t\t\ty1 = src1[srcOffset1 + 1],\n\t\t\t\t\t\tz1 = src1[srcOffset1 + 2],\n\t\t\t\t\t\tw1 = src1[srcOffset1 + 3];\n\n\t\t\tif (t === 0) {\n\t\t\t\tdst[dstOffset + 0] = x0;\n\t\t\t\tdst[dstOffset + 1] = y0;\n\t\t\t\tdst[dstOffset + 2] = z0;\n\t\t\t\tdst[dstOffset + 3] = w0;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (t === 1) {\n\t\t\t\tdst[dstOffset + 0] = x1;\n\t\t\t\tdst[dstOffset + 1] = y1;\n\t\t\t\tdst[dstOffset + 2] = z1;\n\t\t\t\tdst[dstOffset + 3] = w1;\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (w0 !== w1 || x0 !== x1 || y0 !== y1 || z0 !== z1) {\n\t\t\t\tlet s = 1 - t;\n\t\t\t\tconst cos = x0 * x1 + y0 * y1 + z0 * z1 + w0 * w1,\n\t\t\t\t\t\t\tdir = cos >= 0 ? 1 : -1,\n\t\t\t\t\t\t\tsqrSin = 1 - cos * cos; // Skip the Slerp for tiny steps to avoid numeric problems:\n\n\t\t\t\tif (sqrSin > Number.EPSILON) {\n\t\t\t\t\tconst sin = Math.sqrt(sqrSin),\n\t\t\t\t\t\t\t\tlen = Math.atan2(sin, cos * dir);\n\t\t\t\t\ts = Math.sin(s * len) / sin;\n\t\t\t\t\tt = Math.sin(t * len) / sin;\n\t\t\t\t}\n\n\t\t\t\tconst tDir = t * dir;\n\t\t\t\tx0 = x0 * s + x1 * tDir;\n\t\t\t\ty0 = y0 * s + y1 * tDir;\n\t\t\t\tz0 = z0 * s + z1 * tDir;\n\t\t\t\tw0 = w0 * s + w1 * tDir; // Normalize in case we just did a lerp:\n\n\t\t\t\tif (s === 1 - t) {\n\t\t\t\t\tconst f = 1 / Math.sqrt(x0 * x0 + y0 * y0 + z0 * z0 + w0 * w0);\n\t\t\t\t\tx0 *= f;\n\t\t\t\t\ty0 *= f;\n\t\t\t\t\tz0 *= f;\n\t\t\t\t\tw0 *= f;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdst[dstOffset] = x0;\n\t\t\tdst[dstOffset + 1] = y0;\n\t\t\tdst[dstOffset + 2] = z0;\n\t\t\tdst[dstOffset + 3] = w0;\n\t\t}\n\n\t\tstatic multiplyQuaternionsFlat(dst, dstOffset, src0, srcOffset0, src1, srcOffset1) {\n\t\t\tconst x0 = src0[srcOffset0];\n\t\t\tconst y0 = src0[srcOffset0 + 1];\n\t\t\tconst z0 = src0[srcOffset0 + 2];\n\t\t\tconst w0 = src0[srcOffset0 + 3];\n\t\t\tconst x1 = src1[srcOffset1];\n\t\t\tconst y1 = src1[srcOffset1 + 1];\n\t\t\tconst z1 = src1[srcOffset1 + 2];\n\t\t\tconst w1 = src1[srcOffset1 + 3];\n\t\t\tdst[dstOffset] = x0 * w1 + w0 * x1 + y0 * z1 - z0 * y1;\n\t\t\tdst[dstOffset + 1] = y0 * w1 + w0 * y1 + z0 * x1 - x0 * z1;\n\t\t\tdst[dstOffset + 2] = z0 * w1 + w0 * z1 + x0 * y1 - y0 * x1;\n\t\t\tdst[dstOffset + 3] = w0 * w1 - x0 * x1 - y0 * y1 - z0 * z1;\n\t\t\treturn dst;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget w() {\n\t\t\treturn this._w;\n\t\t}\n\n\t\tset w(value) {\n\t\t\tthis._w = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, w) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._w = w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._w);\n\t\t}\n\n\t\tcopy(quaternion) {\n\t\t\tthis._x = quaternion.x;\n\t\t\tthis._y = quaternion.y;\n\t\t\tthis._z = quaternion.z;\n\t\t\tthis._w = quaternion.w;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromEuler(euler, update) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tthrow new Error('THREE.Quaternion: .setFromEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst x = euler._x,\n\t\t\t\t\t\ty = euler._y,\n\t\t\t\t\t\tz = euler._z,\n\t\t\t\t\t\torder = euler._order; // http://www.mathworks.com/matlabcentral/fileexchange/\n\t\t\t// \t20696-function-to-convert-between-dcm-euler-angles-quaternions-and-euler-vectors/\n\t\t\t//\tcontent/SpinCalc.m\n\n\t\t\tconst cos = Math.cos;\n\t\t\tconst sin = Math.sin;\n\t\t\tconst c1 = cos(x / 2);\n\t\t\tconst c2 = cos(y / 2);\n\t\t\tconst c3 = cos(z / 2);\n\t\t\tconst s1 = sin(x / 2);\n\t\t\tconst s2 = sin(y / 2);\n\t\t\tconst s3 = sin(z / 2);\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._x = s1 * c2 * c3 + c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 + s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 - s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 - s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._x = s1 * c2 * c3 - c1 * s2 * s3;\n\t\t\t\t\tthis._y = c1 * s2 * c3 - s1 * c2 * s3;\n\t\t\t\t\tthis._z = c1 * c2 * s3 + s1 * s2 * c3;\n\t\t\t\t\tthis._w = c1 * c2 * c3 + s1 * s2 * s3;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Quaternion: .setFromEuler() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromAxisAngle(axis, angle) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/angleToQuaternion/index.htm\n\t\t\t// assumes axis is normalized\n\t\t\tconst halfAngle = angle / 2,\n\t\t\t\t\t\ts = Math.sin(halfAngle);\n\t\t\tthis._x = axis.x * s;\n\t\t\tthis._y = axis.y * s;\n\t\t\tthis._z = axis.z * s;\n\t\t\tthis._w = Math.cos(halfAngle);\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m) {\n\t\t\t// http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements,\n\t\t\t\t\t\tm11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8],\n\t\t\t\t\t\tm21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9],\n\t\t\t\t\t\tm31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10],\n\t\t\t\t\t\ttrace = m11 + m22 + m33;\n\n\t\t\tif (trace > 0) {\n\t\t\t\tconst s = 0.5 / Math.sqrt(trace + 1.0);\n\t\t\t\tthis._w = 0.25 / s;\n\t\t\t\tthis._x = (m32 - m23) * s;\n\t\t\t\tthis._y = (m13 - m31) * s;\n\t\t\t\tthis._z = (m21 - m12) * s;\n\t\t\t} else if (m11 > m22 && m11 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\n\t\t\t\tthis._w = (m32 - m23) / s;\n\t\t\t\tthis._x = 0.25 * s;\n\t\t\t\tthis._y = (m12 + m21) / s;\n\t\t\t\tthis._z = (m13 + m31) / s;\n\t\t\t} else if (m22 > m33) {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\n\t\t\t\tthis._w = (m13 - m31) / s;\n\t\t\t\tthis._x = (m12 + m21) / s;\n\t\t\t\tthis._y = 0.25 * s;\n\t\t\t\tthis._z = (m23 + m32) / s;\n\t\t\t} else {\n\t\t\t\tconst s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\n\t\t\t\tthis._w = (m21 - m12) / s;\n\t\t\t\tthis._x = (m13 + m31) / s;\n\t\t\t\tthis._y = (m23 + m32) / s;\n\t\t\t\tthis._z = 0.25 * s;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromUnitVectors(vFrom, vTo) {\n\t\t\t// assumes direction vectors vFrom and vTo are normalized\n\t\t\tlet r = vFrom.dot(vTo) + 1;\n\n\t\t\tif (r < Number.EPSILON) {\n\t\t\t\t// vFrom and vTo point in opposite directions\n\t\t\t\tr = 0;\n\n\t\t\t\tif (Math.abs(vFrom.x) > Math.abs(vFrom.z)) {\n\t\t\t\t\tthis._x = -vFrom.y;\n\t\t\t\t\tthis._y = vFrom.x;\n\t\t\t\t\tthis._z = 0;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t} else {\n\t\t\t\t\tthis._x = 0;\n\t\t\t\t\tthis._y = -vFrom.z;\n\t\t\t\t\tthis._z = vFrom.y;\n\t\t\t\t\tthis._w = r;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// crossVectors( vFrom, vTo ); // inlined to avoid cyclic dependency on Vector3\n\t\t\t\tthis._x = vFrom.y * vTo.z - vFrom.z * vTo.y;\n\t\t\t\tthis._y = vFrom.z * vTo.x - vFrom.x * vTo.z;\n\t\t\t\tthis._z = vFrom.x * vTo.y - vFrom.y * vTo.x;\n\t\t\t\tthis._w = r;\n\t\t\t}\n\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tangleTo(q) {\n\t\t\treturn 2 * Math.acos(Math.abs(clamp(this.dot(q), -1, 1)));\n\t\t}\n\n\t\trotateTowards(q, step) {\n\t\t\tconst angle = this.angleTo(q);\n\t\t\tif (angle === 0) return this;\n\t\t\tconst t = Math.min(1, step / angle);\n\t\t\tthis.slerp(q, t);\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\treturn this.set(0, 0, 0, 1);\n\t\t}\n\n\t\tinvert() {\n\t\t\t// quaternion is assumed to have unit length\n\t\t\treturn this.conjugate();\n\t\t}\n\n\t\tconjugate() {\n\t\t\tthis._x *= -1;\n\t\t\tthis._y *= -1;\n\t\t\tthis._z *= -1;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this._x * v._x + this._y * v._y + this._z * v._z + this._w * v._w;\n\t\t}\n\n\t\tlengthSq() {\n\t\t\treturn this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this._x * this._x + this._y * this._y + this._z * this._z + this._w * this._w);\n\t\t}\n\n\t\tnormalize() {\n\t\t\tlet l = this.length();\n\n\t\t\tif (l === 0) {\n\t\t\t\tthis._x = 0;\n\t\t\t\tthis._y = 0;\n\t\t\t\tthis._z = 0;\n\t\t\t\tthis._w = 1;\n\t\t\t} else {\n\t\t\t\tl = 1 / l;\n\t\t\t\tthis._x = this._x * l;\n\t\t\t\tthis._y = this._y * l;\n\t\t\t\tthis._z = this._z * l;\n\t\t\t\tthis._w = this._w * l;\n\t\t\t}\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(q, p) {\n\t\t\tif (p !== undefined) {\n\t\t\t\tconsole.warn('THREE.Quaternion: .multiply() now only accepts one argument. Use .multiplyQuaternions( a, b ) instead.');\n\t\t\t\treturn this.multiplyQuaternions(q, p);\n\t\t\t}\n\n\t\t\treturn this.multiplyQuaternions(this, q);\n\t\t}\n\n\t\tpremultiply(q) {\n\t\t\treturn this.multiplyQuaternions(q, this);\n\t\t}\n\n\t\tmultiplyQuaternions(a, b) {\n\t\t\t// from http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/code/index.htm\n\t\t\tconst qax = a._x,\n\t\t\t\t\t\tqay = a._y,\n\t\t\t\t\t\tqaz = a._z,\n\t\t\t\t\t\tqaw = a._w;\n\t\t\tconst qbx = b._x,\n\t\t\t\t\t\tqby = b._y,\n\t\t\t\t\t\tqbz = b._z,\n\t\t\t\t\t\tqbw = b._w;\n\t\t\tthis._x = qax * qbw + qaw * qbx + qay * qbz - qaz * qby;\n\t\t\tthis._y = qay * qbw + qaw * qby + qaz * qbx - qax * qbz;\n\t\t\tthis._z = qaz * qbw + qaw * qbz + qax * qby - qay * qbx;\n\t\t\tthis._w = qaw * qbw - qax * qbx - qay * qby - qaz * qbz;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerp(qb, t) {\n\t\t\tif (t === 0) return this;\n\t\t\tif (t === 1) return this.copy(qb);\n\t\t\tconst x = this._x,\n\t\t\t\t\t\ty = this._y,\n\t\t\t\t\t\tz = this._z,\n\t\t\t\t\t\tw = this._w; // http://www.euclideanspace.com/maths/algebra/realNormedAlgebra/quaternions/slerp/\n\n\t\t\tlet cosHalfTheta = w * qb._w + x * qb._x + y * qb._y + z * qb._z;\n\n\t\t\tif (cosHalfTheta < 0) {\n\t\t\t\tthis._w = -qb._w;\n\t\t\t\tthis._x = -qb._x;\n\t\t\t\tthis._y = -qb._y;\n\t\t\t\tthis._z = -qb._z;\n\t\t\t\tcosHalfTheta = -cosHalfTheta;\n\t\t\t} else {\n\t\t\t\tthis.copy(qb);\n\t\t\t}\n\n\t\t\tif (cosHalfTheta >= 1.0) {\n\t\t\t\tthis._w = w;\n\t\t\t\tthis._x = x;\n\t\t\t\tthis._y = y;\n\t\t\t\tthis._z = z;\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sqrSinHalfTheta = 1.0 - cosHalfTheta * cosHalfTheta;\n\n\t\t\tif (sqrSinHalfTheta <= Number.EPSILON) {\n\t\t\t\tconst s = 1 - t;\n\t\t\t\tthis._w = s * w + t * this._w;\n\t\t\t\tthis._x = s * x + t * this._x;\n\t\t\t\tthis._y = s * y + t * this._y;\n\t\t\t\tthis._z = s * z + t * this._z;\n\t\t\t\tthis.normalize();\n\n\t\t\t\tthis._onChangeCallback();\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst sinHalfTheta = Math.sqrt(sqrSinHalfTheta);\n\t\t\tconst halfTheta = Math.atan2(sinHalfTheta, cosHalfTheta);\n\t\t\tconst ratioA = Math.sin((1 - t) * halfTheta) / sinHalfTheta,\n\t\t\t\t\t\tratioB = Math.sin(t * halfTheta) / sinHalfTheta;\n\t\t\tthis._w = w * ratioA + this._w * ratioB;\n\t\t\tthis._x = x * ratioA + this._x * ratioB;\n\t\t\tthis._y = y * ratioA + this._y * ratioB;\n\t\t\tthis._z = z * ratioA + this._z * ratioB;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tslerpQuaternions(qa, qb, t) {\n\t\t\tthis.copy(qa).slerp(qb, t);\n\t\t}\n\n\t\tequals(quaternion) {\n\t\t\treturn quaternion._x === this._x && quaternion._y === this._y && quaternion._z === this._z && quaternion._w === this._w;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis._x = array[offset];\n\t\t\tthis._y = array[offset + 1];\n\t\t\tthis._z = array[offset + 2];\n\t\t\tthis._w = array[offset + 3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._w;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis._x = attribute.getX(index);\n\t\t\tthis._y = attribute.getY(index);\n\t\t\tthis._z = attribute.getZ(index);\n\t\t\tthis._w = attribute.getW(index);\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tQuaternion.prototype.isQuaternion = true;\n\n\tclass Vector3 {\n\t\tconstructor(x = 0, y = 0, z = 0) {\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t}\n\n\t\tset(x, y, z) {\n\t\t\tif (z === undefined) z = this.z; // sprite.scale.set(x,y)\n\n\t\t\tthis.x = x;\n\t\t\tthis.y = y;\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.x = scalar;\n\t\t\tthis.y = scalar;\n\t\t\tthis.z = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(x) {\n\t\t\tthis.x = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(y) {\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(z) {\n\t\t\tthis.z = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponent(index, value) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\tthis.x = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 1:\n\t\t\t\t\tthis.y = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 2:\n\t\t\t\t\tthis.z = value;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetComponent(index) {\n\t\t\tswitch (index) {\n\t\t\t\tcase 0:\n\t\t\t\t\treturn this.x;\n\n\t\t\t\tcase 1:\n\t\t\t\t\treturn this.y;\n\n\t\t\t\tcase 2:\n\t\t\t\t\treturn this.z;\n\n\t\t\t\tdefault:\n\t\t\t\t\tthrow new Error('index is out of range: ' + index);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.x, this.y, this.z);\n\t\t}\n\n\t\tcopy(v) {\n\t\t\tthis.x = v.x;\n\t\t\tthis.y = v.y;\n\t\t\tthis.z = v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .add() now only accepts one argument. Use .addVectors( a, b ) instead.');\n\t\t\t\treturn this.addVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x += v.x;\n\t\t\tthis.y += v.y;\n\t\t\tthis.z += v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.x += s;\n\t\t\tthis.y += s;\n\t\t\tthis.z += s;\n\t\t\treturn this;\n\t\t}\n\n\t\taddVectors(a, b) {\n\t\t\tthis.x = a.x + b.x;\n\t\t\tthis.y = a.y + b.y;\n\t\t\tthis.z = a.z + b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledVector(v, s) {\n\t\t\tthis.x += v.x * s;\n\t\t\tthis.y += v.y * s;\n\t\t\tthis.z += v.z * s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .sub() now only accepts one argument. Use .subVectors( a, b ) instead.');\n\t\t\t\treturn this.subVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x -= v.x;\n\t\t\tthis.y -= v.y;\n\t\t\tthis.z -= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubScalar(s) {\n\t\t\tthis.x -= s;\n\t\t\tthis.y -= s;\n\t\t\tthis.z -= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsubVectors(a, b) {\n\t\t\tthis.x = a.x - b.x;\n\t\t\tthis.y = a.y - b.y;\n\t\t\tthis.z = a.z - b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .multiply() now only accepts one argument. Use .multiplyVectors( a, b ) instead.');\n\t\t\t\treturn this.multiplyVectors(v, w);\n\t\t\t}\n\n\t\t\tthis.x *= v.x;\n\t\t\tthis.y *= v.y;\n\t\t\tthis.z *= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(scalar) {\n\t\t\tthis.x *= scalar;\n\t\t\tthis.y *= scalar;\n\t\t\tthis.z *= scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyVectors(a, b) {\n\t\t\tthis.x = a.x * b.x;\n\t\t\tthis.y = a.y * b.y;\n\t\t\tthis.z = a.z * b.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Vector3: .applyEuler() now expects an Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromEuler(euler));\n\t\t}\n\n\t\tapplyAxisAngle(axis, angle) {\n\t\t\treturn this.applyQuaternion(_quaternion$4.setFromAxisAngle(axis, angle));\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[3] * y + e[6] * z;\n\t\t\tthis.y = e[1] * x + e[4] * y + e[7] * z;\n\t\t\tthis.z = e[2] * x + e[5] * y + e[8] * z;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\treturn this.applyMatrix3(m).normalize();\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tconst w = 1 / (e[3] * x + e[7] * y + e[11] * z + e[15]);\n\t\t\tthis.x = (e[0] * x + e[4] * y + e[8] * z + e[12]) * w;\n\t\t\tthis.y = (e[1] * x + e[5] * y + e[9] * z + e[13]) * w;\n\t\t\tthis.z = (e[2] * x + e[6] * y + e[10] * z + e[14]) * w;\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst qx = q.x,\n\t\t\t\t\t\tqy = q.y,\n\t\t\t\t\t\tqz = q.z,\n\t\t\t\t\t\tqw = q.w; // calculate quat * vector\n\n\t\t\tconst ix = qw * x + qy * z - qz * y;\n\t\t\tconst iy = qw * y + qz * x - qx * z;\n\t\t\tconst iz = qw * z + qx * y - qy * x;\n\t\t\tconst iw = -qx * x - qy * y - qz * z; // calculate result * inverse quat\n\n\t\t\tthis.x = ix * qw + iw * -qx + iy * -qz - iz * -qy;\n\t\t\tthis.y = iy * qw + iw * -qy + iz * -qx - ix * -qz;\n\t\t\tthis.z = iz * qw + iw * -qz + ix * -qy - iy * -qx;\n\t\t\treturn this;\n\t\t}\n\n\t\tproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.matrixWorldInverse).applyMatrix4(camera.projectionMatrix);\n\t\t}\n\n\t\tunproject(camera) {\n\t\t\treturn this.applyMatrix4(camera.projectionMatrixInverse).applyMatrix4(camera.matrixWorld);\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\t// input: THREE.Matrix4 affine matrix\n\t\t\t// vector interpreted as a direction\n\t\t\tconst x = this.x,\n\t\t\t\t\t\ty = this.y,\n\t\t\t\t\t\tz = this.z;\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[0] * x + e[4] * y + e[8] * z;\n\t\t\tthis.y = e[1] * x + e[5] * y + e[9] * z;\n\t\t\tthis.z = e[2] * x + e[6] * y + e[10] * z;\n\t\t\treturn this.normalize();\n\t\t}\n\n\t\tdivide(v) {\n\t\t\tthis.x /= v.x;\n\t\t\tthis.y /= v.y;\n\t\t\tthis.z /= v.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdivideScalar(scalar) {\n\t\t\treturn this.multiplyScalar(1 / scalar);\n\t\t}\n\n\t\tmin(v) {\n\t\t\tthis.x = Math.min(this.x, v.x);\n\t\t\tthis.y = Math.min(this.y, v.y);\n\t\t\tthis.z = Math.min(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tmax(v) {\n\t\t\tthis.x = Math.max(this.x, v.x);\n\t\t\tthis.y = Math.max(this.y, v.y);\n\t\t\tthis.z = Math.max(this.z, v.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tclamp(min, max) {\n\t\t\t// assumes min < max, componentwise\n\t\t\tthis.x = Math.max(min.x, Math.min(max.x, this.x));\n\t\t\tthis.y = Math.max(min.y, Math.min(max.y, this.y));\n\t\t\tthis.z = Math.max(min.z, Math.min(max.z, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampScalar(minVal, maxVal) {\n\t\t\tthis.x = Math.max(minVal, Math.min(maxVal, this.x));\n\t\t\tthis.y = Math.max(minVal, Math.min(maxVal, this.y));\n\t\t\tthis.z = Math.max(minVal, Math.min(maxVal, this.z));\n\t\t\treturn this;\n\t\t}\n\n\t\tclampLength(min, max) {\n\t\t\tconst length = this.length();\n\t\t\treturn this.divideScalar(length || 1).multiplyScalar(Math.max(min, Math.min(max, length)));\n\t\t}\n\n\t\tfloor() {\n\t\t\tthis.x = Math.floor(this.x);\n\t\t\tthis.y = Math.floor(this.y);\n\t\t\tthis.z = Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tceil() {\n\t\t\tthis.x = Math.ceil(this.x);\n\t\t\tthis.y = Math.ceil(this.y);\n\t\t\tthis.z = Math.ceil(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tround() {\n\t\t\tthis.x = Math.round(this.x);\n\t\t\tthis.y = Math.round(this.y);\n\t\t\tthis.z = Math.round(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\troundToZero() {\n\t\t\tthis.x = this.x < 0 ? Math.ceil(this.x) : Math.floor(this.x);\n\t\t\tthis.y = this.y < 0 ? Math.ceil(this.y) : Math.floor(this.y);\n\t\t\tthis.z = this.z < 0 ? Math.ceil(this.z) : Math.floor(this.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.x = -this.x;\n\t\t\tthis.y = -this.y;\n\t\t\tthis.z = -this.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tdot(v) {\n\t\t\treturn this.x * v.x + this.y * v.y + this.z * v.z;\n\t\t} // TODO lengthSquared?\n\n\n\t\tlengthSq() {\n\t\t\treturn this.x * this.x + this.y * this.y + this.z * this.z;\n\t\t}\n\n\t\tlength() {\n\t\t\treturn Math.sqrt(this.x * this.x + this.y * this.y + this.z * this.z);\n\t\t}\n\n\t\tmanhattanLength() {\n\t\t\treturn Math.abs(this.x) + Math.abs(this.y) + Math.abs(this.z);\n\t\t}\n\n\t\tnormalize() {\n\t\t\treturn this.divideScalar(this.length() || 1);\n\t\t}\n\n\t\tsetLength(length) {\n\t\t\treturn this.normalize().multiplyScalar(length);\n\t\t}\n\n\t\tlerp(v, alpha) {\n\t\t\tthis.x += (v.x - this.x) * alpha;\n\t\t\tthis.y += (v.y - this.y) * alpha;\n\t\t\tthis.z += (v.z - this.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpVectors(v1, v2, alpha) {\n\t\t\tthis.x = v1.x + (v2.x - v1.x) * alpha;\n\t\t\tthis.y = v1.y + (v2.y - v1.y) * alpha;\n\t\t\tthis.z = v1.z + (v2.z - v1.z) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tcross(v, w) {\n\t\t\tif (w !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: .cross() now only accepts one argument. Use .crossVectors( a, b ) instead.');\n\t\t\t\treturn this.crossVectors(v, w);\n\t\t\t}\n\n\t\t\treturn this.crossVectors(this, v);\n\t\t}\n\n\t\tcrossVectors(a, b) {\n\t\t\tconst ax = a.x,\n\t\t\t\t\t\tay = a.y,\n\t\t\t\t\t\taz = a.z;\n\t\t\tconst bx = b.x,\n\t\t\t\t\t\tby = b.y,\n\t\t\t\t\t\tbz = b.z;\n\t\t\tthis.x = ay * bz - az * by;\n\t\t\tthis.y = az * bx - ax * bz;\n\t\t\tthis.z = ax * by - ay * bx;\n\t\t\treturn this;\n\t\t}\n\n\t\tprojectOnVector(v) {\n\t\t\tconst denominator = v.lengthSq();\n\t\t\tif (denominator === 0) return this.set(0, 0, 0);\n\t\t\tconst scalar = v.dot(this) / denominator;\n\t\t\treturn this.copy(v).multiplyScalar(scalar);\n\t\t}\n\n\t\tprojectOnPlane(planeNormal) {\n\t\t\t_vector$c.copy(this).projectOnVector(planeNormal);\n\n\t\t\treturn this.sub(_vector$c);\n\t\t}\n\n\t\treflect(normal) {\n\t\t\t// reflect incident vector off plane orthogonal to normal\n\t\t\t// normal is assumed to have unit length\n\t\t\treturn this.sub(_vector$c.copy(normal).multiplyScalar(2 * this.dot(normal)));\n\t\t}\n\n\t\tangleTo(v) {\n\t\t\tconst denominator = Math.sqrt(this.lengthSq() * v.lengthSq());\n\t\t\tif (denominator === 0) return Math.PI / 2;\n\t\t\tconst theta = this.dot(v) / denominator; // clamp, to handle numerical problems\n\n\t\t\treturn Math.acos(clamp(theta, -1, 1));\n\t\t}\n\n\t\tdistanceTo(v) {\n\t\t\treturn Math.sqrt(this.distanceToSquared(v));\n\t\t}\n\n\t\tdistanceToSquared(v) {\n\t\t\tconst dx = this.x - v.x,\n\t\t\t\t\t\tdy = this.y - v.y,\n\t\t\t\t\t\tdz = this.z - v.z;\n\t\t\treturn dx * dx + dy * dy + dz * dz;\n\t\t}\n\n\t\tmanhattanDistanceTo(v) {\n\t\t\treturn Math.abs(this.x - v.x) + Math.abs(this.y - v.y) + Math.abs(this.z - v.z);\n\t\t}\n\n\t\tsetFromSpherical(s) {\n\t\t\treturn this.setFromSphericalCoords(s.radius, s.phi, s.theta);\n\t\t}\n\n\t\tsetFromSphericalCoords(radius, phi, theta) {\n\t\t\tconst sinPhiRadius = Math.sin(phi) * radius;\n\t\t\tthis.x = sinPhiRadius * Math.sin(theta);\n\t\t\tthis.y = Math.cos(phi) * radius;\n\t\t\tthis.z = sinPhiRadius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCylindrical(c) {\n\t\t\treturn this.setFromCylindricalCoords(c.radius, c.theta, c.y);\n\t\t}\n\n\t\tsetFromCylindricalCoords(radius, theta, y) {\n\t\t\tthis.x = radius * Math.sin(theta);\n\t\t\tthis.y = y;\n\t\t\tthis.z = radius * Math.cos(theta);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixPosition(m) {\n\t\t\tconst e = m.elements;\n\t\t\tthis.x = e[12];\n\t\t\tthis.y = e[13];\n\t\t\tthis.z = e[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixScale(m) {\n\t\t\tconst sx = this.setFromMatrixColumn(m, 0).length();\n\t\t\tconst sy = this.setFromMatrixColumn(m, 1).length();\n\t\t\tconst sz = this.setFromMatrixColumn(m, 2).length();\n\t\t\tthis.x = sx;\n\t\t\tthis.y = sy;\n\t\t\tthis.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrixColumn(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 4);\n\t\t}\n\n\t\tsetFromMatrix3Column(m, index) {\n\t\t\treturn this.fromArray(m.elements, index * 3);\n\t\t}\n\n\t\tequals(v) {\n\t\t\treturn v.x === this.x && v.y === this.y && v.z === this.z;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.x = array[offset];\n\t\t\tthis.y = array[offset + 1];\n\t\t\tthis.z = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.x;\n\t\t\tarray[offset + 1] = this.y;\n\t\t\tarray[offset + 2] = this.z;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index, offset) {\n\t\t\tif (offset !== undefined) {\n\t\t\t\tconsole.warn('THREE.Vector3: offset has been removed from .fromBufferAttribute().');\n\t\t\t}\n\n\t\t\tthis.x = attribute.getX(index);\n\t\t\tthis.y = attribute.getY(index);\n\t\t\tthis.z = attribute.getZ(index);\n\t\t\treturn this;\n\t\t}\n\n\t\trandom() {\n\t\t\tthis.x = Math.random();\n\t\t\tthis.y = Math.random();\n\t\t\tthis.z = Math.random();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tVector3.prototype.isVector3 = true;\n\n\tconst _vector$c = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$4 = /*@__PURE__*/new Quaternion();\n\n\tclass Box3 {\n\t\tconstructor(min = new Vector3(+Infinity, +Infinity, +Infinity), max = new Vector3(-Infinity, -Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromArray(array) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\tconst x = array[i];\n\t\t\t\tconst y = array[i + 1];\n\t\t\t\tconst z = array[i + 2];\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromBufferAttribute(attribute) {\n\t\t\tlet minX = +Infinity;\n\t\t\tlet minY = +Infinity;\n\t\t\tlet minZ = +Infinity;\n\t\t\tlet maxX = -Infinity;\n\t\t\tlet maxY = -Infinity;\n\t\t\tlet maxZ = -Infinity;\n\n\t\t\tfor (let i = 0, l = attribute.count; i < l; i++) {\n\t\t\t\tconst x = attribute.getX(i);\n\t\t\t\tconst y = attribute.getY(i);\n\t\t\t\tconst z = attribute.getZ(i);\n\t\t\t\tif (x < minX) minX = x;\n\t\t\t\tif (y < minY) minY = y;\n\t\t\t\tif (z < minZ) minZ = z;\n\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\tif (z > maxZ) maxZ = z;\n\t\t\t}\n\n\t\t\tthis.min.set(minX, minY, minZ);\n\t\t\tthis.max.set(maxX, maxY, maxZ);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$b.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.makeEmpty();\n\t\t\treturn this.expandByObject(object);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = this.min.z = +Infinity;\n\t\t\tthis.max.x = this.max.y = this.max.z = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y || this.max.z < this.min.z;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getSize() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByObject(object) {\n\t\t\t// Computes the world-axis-aligned bounding box of an object (including its children),\n\t\t\t// accounting for both the object's, and children's, world transforms\n\t\t\tobject.updateWorldMatrix(false, false);\n\t\t\tconst geometry = object.geometry;\n\n\t\t\tif (geometry !== undefined) {\n\t\t\t\tif (geometry.boundingBox === null) {\n\t\t\t\t\tgeometry.computeBoundingBox();\n\t\t\t\t}\n\n\t\t\t\t_box$3.copy(geometry.boundingBox);\n\n\t\t\t\t_box$3.applyMatrix4(object.matrixWorld);\n\n\t\t\t\tthis.union(_box$3);\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tthis.expandByObject(children[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y || point.z < this.min.z || point.z > this.max.z ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y && this.min.z <= box.min.z && box.max.z <= this.max.z;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .getParameter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y), (point.z - this.min.z) / (this.max.z - this.min.z));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 6 splitting planes to rule out intersections.\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y || box.max.z < this.min.z || box.min.z > this.max.z ? false : true;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\t// Find the point on the AABB closest to the sphere center.\n\t\t\tthis.clampPoint(sphere.center, _vector$b); // If that point is inside the sphere, the AABB and sphere intersect.\n\n\t\t\treturn _vector$b.distanceToSquared(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// We compute the minimum and maximum dot product values. If those values\n\t\t\t// are on the same side (back or front) of the plane, then there is no intersection.\n\t\t\tlet min, max;\n\n\t\t\tif (plane.normal.x > 0) {\n\t\t\t\tmin = plane.normal.x * this.min.x;\n\t\t\t\tmax = plane.normal.x * this.max.x;\n\t\t\t} else {\n\t\t\t\tmin = plane.normal.x * this.max.x;\n\t\t\t\tmax = plane.normal.x * this.min.x;\n\t\t\t}\n\n\t\t\tif (plane.normal.y > 0) {\n\t\t\t\tmin += plane.normal.y * this.min.y;\n\t\t\t\tmax += plane.normal.y * this.max.y;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.y * this.max.y;\n\t\t\t\tmax += plane.normal.y * this.min.y;\n\t\t\t}\n\n\t\t\tif (plane.normal.z > 0) {\n\t\t\t\tmin += plane.normal.z * this.min.z;\n\t\t\t\tmax += plane.normal.z * this.max.z;\n\t\t\t} else {\n\t\t\t\tmin += plane.normal.z * this.max.z;\n\t\t\t\tmax += plane.normal.z * this.min.z;\n\t\t\t}\n\n\t\t\treturn min <= -plane.constant && max >= -plane.constant;\n\t\t}\n\n\t\tintersectsTriangle(triangle) {\n\t\t\tif (this.isEmpty()) {\n\t\t\t\treturn false;\n\t\t\t} // compute box center and extents\n\n\n\t\t\tthis.getCenter(_center);\n\n\t\t\t_extents.subVectors(this.max, _center); // translate triangle to aabb origin\n\n\n\t\t\t_v0$2.subVectors(triangle.a, _center);\n\n\t\t\t_v1$7.subVectors(triangle.b, _center);\n\n\t\t\t_v2$3.subVectors(triangle.c, _center); // compute edge vectors for triangle\n\n\n\t\t\t_f0.subVectors(_v1$7, _v0$2);\n\n\t\t\t_f1.subVectors(_v2$3, _v1$7);\n\n\t\t\t_f2.subVectors(_v0$2, _v2$3); // test against axes that are given by cross product combinations of the edges of the triangle and the edges of the aabb\n\t\t\t// make an axis testing of each of the 3 sides of the aabb against each of the 3 sides of the triangle = 9 axis of separation\n\t\t\t// axis_ij = u_i x f_j (u0, u1, u2 = face normals of aabb = x,y,z axes vectors since aabb is axis aligned)\n\n\n\t\t\tlet axes = [0, -_f0.z, _f0.y, 0, -_f1.z, _f1.y, 0, -_f2.z, _f2.y, _f0.z, 0, -_f0.x, _f1.z, 0, -_f1.x, _f2.z, 0, -_f2.x, -_f0.y, _f0.x, 0, -_f1.y, _f1.x, 0, -_f2.y, _f2.x, 0];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // test 3 face normals from the aabb\n\n\n\t\t\taxes = [1, 0, 0, 0, 1, 0, 0, 0, 1];\n\n\t\t\tif (!satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents)) {\n\t\t\t\treturn false;\n\t\t\t} // finally testing the face normal of the triangle\n\t\t\t// use already existing triangle edge vectors here\n\n\n\t\t\t_triangleNormal.crossVectors(_f0, _f1);\n\n\t\t\taxes = [_triangleNormal.x, _triangleNormal.y, _triangleNormal.z];\n\t\t\treturn satForAxes(axes, _v0$2, _v1$7, _v2$3, _extents);\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box3: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$b.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tgetBoundingSphere(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.error('THREE.Box3: .getBoundingSphere() target is now required'); //target = new Sphere(); // removed to avoid cyclic dependency\n\t\t\t}\n\n\t\t\tthis.getCenter(target.center);\n\t\t\ttarget.radius = this.getSize(_vector$b).length() * 0.5;\n\t\t\treturn target;\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max); // ensure that if there is no overlap, the result is fully empty, not slightly empty with non-inf/+inf values that will cause subsequence intersects to erroneously return valid values.\n\n\t\t\tif (this.isEmpty()) this.makeEmpty();\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\t// transform of empty box is an empty box.\n\t\t\tif (this.isEmpty()) return this; // NOTE: I am using a binary pattern to specify all 2^3 combinations below\n\n\t\t\t_points[0].set(this.min.x, this.min.y, this.min.z).applyMatrix4(matrix); // 000\n\n\n\t\t\t_points[1].set(this.min.x, this.min.y, this.max.z).applyMatrix4(matrix); // 001\n\n\n\t\t\t_points[2].set(this.min.x, this.max.y, this.min.z).applyMatrix4(matrix); // 010\n\n\n\t\t\t_points[3].set(this.min.x, this.max.y, this.max.z).applyMatrix4(matrix); // 011\n\n\n\t\t\t_points[4].set(this.max.x, this.min.y, this.min.z).applyMatrix4(matrix); // 100\n\n\n\t\t\t_points[5].set(this.max.x, this.min.y, this.max.z).applyMatrix4(matrix); // 101\n\n\n\t\t\t_points[6].set(this.max.x, this.max.y, this.min.z).applyMatrix4(matrix); // 110\n\n\n\t\t\t_points[7].set(this.max.x, this.max.y, this.max.z).applyMatrix4(matrix); // 111\n\n\n\t\t\tthis.setFromPoints(_points);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox3.prototype.isBox3 = true;\n\tconst _points = [/*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3(), /*@__PURE__*/new Vector3()];\n\n\tconst _vector$b = /*@__PURE__*/new Vector3();\n\n\tconst _box$3 = /*@__PURE__*/new Box3(); // triangle centered vertices\n\n\n\tconst _v0$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$7 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$3 = /*@__PURE__*/new Vector3(); // triangle edge vectors\n\n\n\tconst _f0 = /*@__PURE__*/new Vector3();\n\n\tconst _f1 = /*@__PURE__*/new Vector3();\n\n\tconst _f2 = /*@__PURE__*/new Vector3();\n\n\tconst _center = /*@__PURE__*/new Vector3();\n\n\tconst _extents = /*@__PURE__*/new Vector3();\n\n\tconst _triangleNormal = /*@__PURE__*/new Vector3();\n\n\tconst _testAxis = /*@__PURE__*/new Vector3();\n\n\tfunction satForAxes(axes, v0, v1, v2, extents) {\n\t\tfor (let i = 0, j = axes.length - 3; i <= j; i += 3) {\n\t\t\t_testAxis.fromArray(axes, i); // project the aabb onto the seperating axis\n\n\n\t\t\tconst r = extents.x * Math.abs(_testAxis.x) + extents.y * Math.abs(_testAxis.y) + extents.z * Math.abs(_testAxis.z); // project all 3 vertices of the triangle onto the seperating axis\n\n\t\t\tconst p0 = v0.dot(_testAxis);\n\t\t\tconst p1 = v1.dot(_testAxis);\n\t\t\tconst p2 = v2.dot(_testAxis); // actual test, basically see if either of the most extreme of the triangle points intersects r\n\n\t\t\tif (Math.max(-Math.max(p0, p1, p2), Math.min(p0, p1, p2)) > r) {\n\t\t\t\t// points of the projected triangle are outside the projected half-length of the aabb\n\t\t\t\t// the axis is seperating and we can exit\n\t\t\t\treturn false;\n\t\t\t}\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tconst _box$2 = /*@__PURE__*/new Box3();\n\n\tconst _v1$6 = /*@__PURE__*/new Vector3();\n\n\tconst _toFarthestPoint = /*@__PURE__*/new Vector3();\n\n\tconst _toPoint = /*@__PURE__*/new Vector3();\n\n\tclass Sphere {\n\t\tconstructor(center = new Vector3(), radius = -1) {\n\t\t\tthis.center = center;\n\t\t\tthis.radius = radius;\n\t\t}\n\n\t\tset(center, radius) {\n\t\t\tthis.center.copy(center);\n\t\t\tthis.radius = radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points, optionalCenter) {\n\t\t\tconst center = this.center;\n\n\t\t\tif (optionalCenter !== undefined) {\n\t\t\t\tcenter.copy(optionalCenter);\n\t\t\t} else {\n\t\t\t\t_box$2.setFromPoints(points).getCenter(center);\n\t\t\t}\n\n\t\t\tlet maxRadiusSq = 0;\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(points[i]));\n\t\t\t}\n\n\t\t\tthis.radius = Math.sqrt(maxRadiusSq);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(sphere) {\n\t\t\tthis.center.copy(sphere.center);\n\t\t\tthis.radius = sphere.radius;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\treturn this.radius < 0;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.center.set(0, 0, 0);\n\t\t\tthis.radius = -1;\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.distanceToSquared(this.center) <= this.radius * this.radius;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn point.distanceTo(this.center) - this.radius;\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst radiusSum = this.radius + sphere.radius;\n\t\t\treturn sphere.center.distanceToSquared(this.center) <= radiusSum * radiusSum;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsSphere(this);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\treturn Math.abs(plane.distanceToPoint(this.center)) <= this.radius;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tconst deltaLengthSq = this.center.distanceToSquared(point);\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Sphere: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.copy(point);\n\n\t\t\tif (deltaLengthSq > this.radius * this.radius) {\n\t\t\t\ttarget.sub(this.center).normalize();\n\t\t\t\ttarget.multiplyScalar(this.radius).add(this.center);\n\t\t\t}\n\n\t\t\treturn target;\n\t\t}\n\n\t\tgetBoundingBox(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Sphere: .getBoundingBox() target is now required');\n\t\t\t\ttarget = new Box3();\n\t\t\t}\n\n\t\t\tif (this.isEmpty()) {\n\t\t\t\t// Empty sphere produces empty bounding box\n\t\t\t\ttarget.makeEmpty();\n\t\t\t\treturn target;\n\t\t\t}\n\n\t\t\ttarget.set(this.center, this.center);\n\t\t\ttarget.expandByScalar(this.radius);\n\t\t\treturn target;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.center.applyMatrix4(matrix);\n\t\t\tthis.radius = this.radius * matrix.getMaxScaleOnAxis();\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.center.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L649-L671\n\t\t\t_toPoint.subVectors(point, this.center);\n\n\t\t\tconst lengthSq = _toPoint.lengthSq();\n\n\t\t\tif (lengthSq > this.radius * this.radius) {\n\t\t\t\tconst length = Math.sqrt(lengthSq);\n\t\t\t\tconst missingRadiusHalf = (length - this.radius) * 0.5; // Nudge this sphere towards the target point. Add half the missing distance to radius,\n\t\t\t\t// and the other half to position. This gives a tighter enclosure, instead of if\n\t\t\t\t// the whole missing distance were just added to radius.\n\n\t\t\t\tthis.center.add(_toPoint.multiplyScalar(missingRadiusHalf / length));\n\t\t\t\tthis.radius += missingRadiusHalf;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(sphere) {\n\t\t\t// from https://github.com/juj/MathGeoLib/blob/2940b99b99cfe575dd45103ef20f4019dee15b54/src/Geometry/Sphere.cpp#L759-L769\n\t\t\t// To enclose another sphere into this sphere, we only need to enclose two points:\n\t\t\t// 1) Enclose the farthest point on the other sphere into this sphere.\n\t\t\t// 2) Enclose the opposite point of the farthest point into this sphere.\n\t\t\t_toFarthestPoint.subVectors(sphere.center, this.center).normalize().multiplyScalar(sphere.radius);\n\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).add(_toFarthestPoint));\n\t\t\tthis.expandByPoint(_v1$6.copy(sphere.center).sub(_toFarthestPoint));\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sphere) {\n\t\t\treturn sphere.center.equals(this.center) && sphere.radius === this.radius;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$a = /*@__PURE__*/new Vector3();\n\n\tconst _segCenter = /*@__PURE__*/new Vector3();\n\n\tconst _segDir = /*@__PURE__*/new Vector3();\n\n\tconst _diff = /*@__PURE__*/new Vector3();\n\n\tconst _edge1 = /*@__PURE__*/new Vector3();\n\n\tconst _edge2 = /*@__PURE__*/new Vector3();\n\n\tconst _normal$1 = /*@__PURE__*/new Vector3();\n\n\tclass Ray {\n\t\tconstructor(origin = new Vector3(), direction = new Vector3(0, 0, -1)) {\n\t\t\tthis.origin = origin;\n\t\t\tthis.direction = direction;\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\tthis.origin.copy(origin);\n\t\t\tthis.direction.copy(direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(ray) {\n\t\t\tthis.origin.copy(ray.origin);\n\t\t\tthis.direction.copy(ray.direction);\n\t\t\treturn this;\n\t\t}\n\n\t\tat(t, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Ray: .at() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(t).add(this.origin);\n\t\t}\n\n\t\tlookAt(v) {\n\t\t\tthis.direction.copy(v).sub(this.origin).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\trecast(t) {\n\t\t\tthis.origin.copy(this.at(t, _vector$a));\n\t\t\treturn this;\n\t\t}\n\n\t\tclosestPointToPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Ray: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.subVectors(point, this.origin);\n\t\t\tconst directionDistance = target.dot(this.direction);\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn target.copy(this.origin);\n\t\t\t}\n\n\t\t\treturn target.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn Math.sqrt(this.distanceSqToPoint(point));\n\t\t}\n\n\t\tdistanceSqToPoint(point) {\n\t\t\tconst directionDistance = _vector$a.subVectors(point, this.origin).dot(this.direction); // point behind the ray\n\n\n\t\t\tif (directionDistance < 0) {\n\t\t\t\treturn this.origin.distanceToSquared(point);\n\t\t\t}\n\n\t\t\t_vector$a.copy(this.direction).multiplyScalar(directionDistance).add(this.origin);\n\n\t\t\treturn _vector$a.distanceToSquared(point);\n\t\t}\n\n\t\tdistanceSqToSegment(v0, v1, optionalPointOnRay, optionalPointOnSegment) {\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteDistRaySegment.h\n\t\t\t// It returns the min distance between the ray and the segment\n\t\t\t// defined by v0 and v1\n\t\t\t// It can also set two optional targets :\n\t\t\t// - The closest point on the ray\n\t\t\t// - The closest point on the segment\n\t\t\t_segCenter.copy(v0).add(v1).multiplyScalar(0.5);\n\n\t\t\t_segDir.copy(v1).sub(v0).normalize();\n\n\t\t\t_diff.copy(this.origin).sub(_segCenter);\n\n\t\t\tconst segExtent = v0.distanceTo(v1) * 0.5;\n\t\t\tconst a01 = -this.direction.dot(_segDir);\n\n\t\t\tconst b0 = _diff.dot(this.direction);\n\n\t\t\tconst b1 = -_diff.dot(_segDir);\n\n\t\t\tconst c = _diff.lengthSq();\n\n\t\t\tconst det = Math.abs(1 - a01 * a01);\n\t\t\tlet s0, s1, sqrDist, extDet;\n\n\t\t\tif (det > 0) {\n\t\t\t\t// The ray and segment are not parallel.\n\t\t\t\ts0 = a01 * b1 - b0;\n\t\t\t\ts1 = a01 * b0 - b1;\n\t\t\t\textDet = segExtent * det;\n\n\t\t\t\tif (s0 >= 0) {\n\t\t\t\t\tif (s1 >= -extDet) {\n\t\t\t\t\t\tif (s1 <= extDet) {\n\t\t\t\t\t\t\t// region 0\n\t\t\t\t\t\t\t// Minimum at interior points of ray and segment.\n\t\t\t\t\t\t\tconst invDet = 1 / det;\n\t\t\t\t\t\t\ts0 *= invDet;\n\t\t\t\t\t\t\ts1 *= invDet;\n\t\t\t\t\t\t\tsqrDist = s0 * (s0 + a01 * s1 + 2 * b0) + s1 * (a01 * s0 + s1 + 2 * b1) + c;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// region 1\n\t\t\t\t\t\t\ts1 = segExtent;\n\t\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 5\n\t\t\t\t\t\ts1 = -segExtent;\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (s1 <= -extDet) {\n\t\t\t\t\t\t// region 4\n\t\t\t\t\t\ts0 = Math.max(0, -(-a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? -segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else if (s1 <= extDet) {\n\t\t\t\t\t\t// region 3\n\t\t\t\t\t\ts0 = 0;\n\t\t\t\t\t\ts1 = Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// region 2\n\t\t\t\t\t\ts0 = Math.max(0, -(a01 * segExtent + b0));\n\t\t\t\t\t\ts1 = s0 > 0 ? segExtent : Math.min(Math.max(-segExtent, -b1), segExtent);\n\t\t\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Ray and segment are parallel.\n\t\t\t\ts1 = a01 > 0 ? -segExtent : segExtent;\n\t\t\t\ts0 = Math.max(0, -(a01 * s1 + b0));\n\t\t\t\tsqrDist = -s0 * s0 + s1 * (s1 + 2 * b1) + c;\n\t\t\t}\n\n\t\t\tif (optionalPointOnRay) {\n\t\t\t\toptionalPointOnRay.copy(this.direction).multiplyScalar(s0).add(this.origin);\n\t\t\t}\n\n\t\t\tif (optionalPointOnSegment) {\n\t\t\t\toptionalPointOnSegment.copy(_segDir).multiplyScalar(s1).add(_segCenter);\n\t\t\t}\n\n\t\t\treturn sqrDist;\n\t\t}\n\n\t\tintersectSphere(sphere, target) {\n\t\t\t_vector$a.subVectors(sphere.center, this.origin);\n\n\t\t\tconst tca = _vector$a.dot(this.direction);\n\n\t\t\tconst d2 = _vector$a.dot(_vector$a) - tca * tca;\n\t\t\tconst radius2 = sphere.radius * sphere.radius;\n\t\t\tif (d2 > radius2) return null;\n\t\t\tconst thc = Math.sqrt(radius2 - d2); // t0 = first intersect point - entrance on front of sphere\n\n\t\t\tconst t0 = tca - thc; // t1 = second intersect point - exit point on back of sphere\n\n\t\t\tconst t1 = tca + thc; // test to see if both t0 and t1 are behind the ray - if so, return null\n\n\t\t\tif (t0 < 0 && t1 < 0) return null; // test to see if t0 is behind the ray:\n\t\t\t// if it is, the ray is inside the sphere, so return the second exit point scaled by t1,\n\t\t\t// in order to always return an intersect point that is in front of the ray.\n\n\t\t\tif (t0 < 0) return this.at(t1, target); // else t0 is in front of the ray, so return the first collision point scaled by t0\n\n\t\t\treturn this.at(t0, target);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn this.distanceSqToPoint(sphere.center) <= sphere.radius * sphere.radius;\n\t\t}\n\n\t\tdistanceToPlane(plane) {\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (plane.distanceToPoint(this.origin) === 0) {\n\t\t\t\t\treturn 0;\n\t\t\t\t} // Null is preferable to undefined since undefined means.... it is undefined\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(this.origin.dot(plane.normal) + plane.constant) / denominator; // Return if the ray never intersects the plane\n\n\t\t\treturn t >= 0 ? t : null;\n\t\t}\n\n\t\tintersectPlane(plane, target) {\n\t\t\tconst t = this.distanceToPlane(plane);\n\n\t\t\tif (t === null) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn this.at(t, target);\n\t\t}\n\n\t\tintersectsPlane(plane) {\n\t\t\t// check if the ray lies on the plane first\n\t\t\tconst distToPoint = plane.distanceToPoint(this.origin);\n\n\t\t\tif (distToPoint === 0) {\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\tconst denominator = plane.normal.dot(this.direction);\n\n\t\t\tif (denominator * distToPoint < 0) {\n\t\t\t\treturn true;\n\t\t\t} // ray origin is behind the plane (and is pointing behind it)\n\n\n\t\t\treturn false;\n\t\t}\n\n\t\tintersectBox(box, target) {\n\t\t\tlet tmin, tmax, tymin, tymax, tzmin, tzmax;\n\t\t\tconst invdirx = 1 / this.direction.x,\n\t\t\t\t\t\tinvdiry = 1 / this.direction.y,\n\t\t\t\t\t\tinvdirz = 1 / this.direction.z;\n\t\t\tconst origin = this.origin;\n\n\t\t\tif (invdirx >= 0) {\n\t\t\t\ttmin = (box.min.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.max.x - origin.x) * invdirx;\n\t\t\t} else {\n\t\t\t\ttmin = (box.max.x - origin.x) * invdirx;\n\t\t\t\ttmax = (box.min.x - origin.x) * invdirx;\n\t\t\t}\n\n\t\t\tif (invdiry >= 0) {\n\t\t\t\ttymin = (box.min.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.max.y - origin.y) * invdiry;\n\t\t\t} else {\n\t\t\t\ttymin = (box.max.y - origin.y) * invdiry;\n\t\t\t\ttymax = (box.min.y - origin.y) * invdiry;\n\t\t\t}\n\n\t\t\tif (tmin > tymax || tymin > tmax) return null; // These lines also handle the case where tmin or tmax is NaN\n\t\t\t// (result of 0 * Infinity). x !== x returns true if x is NaN\n\n\t\t\tif (tymin > tmin || tmin !== tmin) tmin = tymin;\n\t\t\tif (tymax < tmax || tmax !== tmax) tmax = tymax;\n\n\t\t\tif (invdirz >= 0) {\n\t\t\t\ttzmin = (box.min.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.max.z - origin.z) * invdirz;\n\t\t\t} else {\n\t\t\t\ttzmin = (box.max.z - origin.z) * invdirz;\n\t\t\t\ttzmax = (box.min.z - origin.z) * invdirz;\n\t\t\t}\n\n\t\t\tif (tmin > tzmax || tzmin > tmax) return null;\n\t\t\tif (tzmin > tmin || tmin !== tmin) tmin = tzmin;\n\t\t\tif (tzmax < tmax || tmax !== tmax) tmax = tzmax; //return point closest to the ray (positive side)\n\n\t\t\tif (tmax < 0) return null;\n\t\t\treturn this.at(tmin >= 0 ? tmin : tmax, target);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn this.intersectBox(box, _vector$a) !== null;\n\t\t}\n\n\t\tintersectTriangle(a, b, c, backfaceCulling, target) {\n\t\t\t// Compute the offset origin, edges, and normal.\n\t\t\t// from http://www.geometrictools.com/GTEngine/Include/Mathematics/GteIntrRay3Triangle3.h\n\t\t\t_edge1.subVectors(b, a);\n\n\t\t\t_edge2.subVectors(c, a);\n\n\t\t\t_normal$1.crossVectors(_edge1, _edge2); // Solve Q + t*D = b1*E1 + b2*E2 (Q = kDiff, D = ray direction,\n\t\t\t// E1 = kEdge1, E2 = kEdge2, N = Cross(E1,E2)) by\n\t\t\t//\t |Dot(D,N)|*b1 = sign(Dot(D,N))*Dot(D,Cross(Q,E2))\n\t\t\t//\t |Dot(D,N)|*b2 = sign(Dot(D,N))*Dot(D,Cross(E1,Q))\n\t\t\t//\t |Dot(D,N)|*t = -sign(Dot(D,N))*Dot(Q,N)\n\n\n\t\t\tlet DdN = this.direction.dot(_normal$1);\n\t\t\tlet sign;\n\n\t\t\tif (DdN > 0) {\n\t\t\t\tif (backfaceCulling) return null;\n\t\t\t\tsign = 1;\n\t\t\t} else if (DdN < 0) {\n\t\t\t\tsign = -1;\n\t\t\t\tDdN = -DdN;\n\t\t\t} else {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\t_diff.subVectors(this.origin, a);\n\n\t\t\tconst DdQxE2 = sign * this.direction.dot(_edge2.crossVectors(_diff, _edge2)); // b1 < 0, no intersection\n\n\t\t\tif (DdQxE2 < 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst DdE1xQ = sign * this.direction.dot(_edge1.cross(_diff)); // b2 < 0, no intersection\n\n\t\t\tif (DdE1xQ < 0) {\n\t\t\t\treturn null;\n\t\t\t} // b1+b2 > 1, no intersection\n\n\n\t\t\tif (DdQxE2 + DdE1xQ > DdN) {\n\t\t\t\treturn null;\n\t\t\t} // Line intersects triangle, check if ray does.\n\n\n\t\t\tconst QdN = -sign * _diff.dot(_normal$1); // t < 0, no intersection\n\n\n\t\t\tif (QdN < 0) {\n\t\t\t\treturn null;\n\t\t\t} // Ray intersects triangle.\n\n\n\t\t\treturn this.at(QdN / DdN, target);\n\t\t}\n\n\t\tapplyMatrix4(matrix4) {\n\t\t\tthis.origin.applyMatrix4(matrix4);\n\t\t\tthis.direction.transformDirection(matrix4);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(ray) {\n\t\t\treturn ray.origin.equals(this.origin) && ray.direction.equals(this.direction);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass Matrix4 {\n\t\tconstructor() {\n\t\t\tthis.elements = [1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1];\n\n\t\t\tif (arguments.length > 0) {\n\t\t\t\tconsole.error('THREE.Matrix4: the constructor no longer reads arguments. use .set() instead.');\n\t\t\t}\n\t\t}\n\n\t\tset(n11, n12, n13, n14, n21, n22, n23, n24, n31, n32, n33, n34, n41, n42, n43, n44) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] = n11;\n\t\t\tte[4] = n12;\n\t\t\tte[8] = n13;\n\t\t\tte[12] = n14;\n\t\t\tte[1] = n21;\n\t\t\tte[5] = n22;\n\t\t\tte[9] = n23;\n\t\t\tte[13] = n24;\n\t\t\tte[2] = n31;\n\t\t\tte[6] = n32;\n\t\t\tte[10] = n33;\n\t\t\tte[14] = n34;\n\t\t\tte[3] = n41;\n\t\t\tte[7] = n42;\n\t\t\tte[11] = n43;\n\t\t\tte[15] = n44;\n\t\t\treturn this;\n\t\t}\n\n\t\tidentity() {\n\t\t\tthis.set(1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Matrix4().fromArray(this.elements);\n\t\t}\n\n\t\tcopy(m) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\t\t\tte[0] = me[0];\n\t\t\tte[1] = me[1];\n\t\t\tte[2] = me[2];\n\t\t\tte[3] = me[3];\n\t\t\tte[4] = me[4];\n\t\t\tte[5] = me[5];\n\t\t\tte[6] = me[6];\n\t\t\tte[7] = me[7];\n\t\t\tte[8] = me[8];\n\t\t\tte[9] = me[9];\n\t\t\tte[10] = me[10];\n\t\t\tte[11] = me[11];\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\tte[15] = me[15];\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyPosition(m) {\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tme = m.elements;\n\t\t\tte[12] = me[12];\n\t\t\tte[13] = me[13];\n\t\t\tte[14] = me[14];\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromMatrix3(m) {\n\t\t\tconst me = m.elements;\n\t\t\tthis.set(me[0], me[3], me[6], 0, me[1], me[4], me[7], 0, me[2], me[5], me[8], 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractBasis(xAxis, yAxis, zAxis) {\n\t\t\txAxis.setFromMatrixColumn(this, 0);\n\t\t\tyAxis.setFromMatrixColumn(this, 1);\n\t\t\tzAxis.setFromMatrixColumn(this, 2);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeBasis(xAxis, yAxis, zAxis) {\n\t\t\tthis.set(xAxis.x, yAxis.x, zAxis.x, 0, xAxis.y, yAxis.y, zAxis.y, 0, xAxis.z, yAxis.z, zAxis.z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\textractRotation(m) {\n\t\t\t// this method does not support reflection matrices\n\t\t\tconst te = this.elements;\n\t\t\tconst me = m.elements;\n\n\t\t\tconst scaleX = 1 / _v1$5.setFromMatrixColumn(m, 0).length();\n\n\t\t\tconst scaleY = 1 / _v1$5.setFromMatrixColumn(m, 1).length();\n\n\t\t\tconst scaleZ = 1 / _v1$5.setFromMatrixColumn(m, 2).length();\n\n\t\t\tte[0] = me[0] * scaleX;\n\t\t\tte[1] = me[1] * scaleX;\n\t\t\tte[2] = me[2] * scaleX;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = me[4] * scaleY;\n\t\t\tte[5] = me[5] * scaleY;\n\t\t\tte[6] = me[6] * scaleY;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = me[8] * scaleZ;\n\t\t\tte[9] = me[9] * scaleZ;\n\t\t\tte[10] = me[10] * scaleZ;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromEuler(euler) {\n\t\t\tif (!(euler && euler.isEuler)) {\n\t\t\t\tconsole.error('THREE.Matrix4: .makeRotationFromEuler() now expects a Euler rotation rather than a Vector3 and order.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = euler.x,\n\t\t\t\t\t\ty = euler.y,\n\t\t\t\t\t\tz = euler.z;\n\t\t\tconst a = Math.cos(x),\n\t\t\t\t\t\tb = Math.sin(x);\n\t\t\tconst c = Math.cos(y),\n\t\t\t\t\t\td = Math.sin(y);\n\t\t\tconst e = Math.cos(z),\n\t\t\t\t\t\tf = Math.sin(z);\n\n\t\t\tif (euler.order === 'XYZ') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -c * f;\n\t\t\t\tte[8] = d;\n\t\t\t\tte[1] = af + be * d;\n\t\t\t\tte[5] = ae - bf * d;\n\t\t\t\tte[9] = -b * c;\n\t\t\t\tte[2] = bf - ae * d;\n\t\t\t\tte[6] = be + af * d;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YXZ') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce + df * b;\n\t\t\t\tte[4] = de * b - cf;\n\t\t\t\tte[8] = a * d;\n\t\t\t\tte[1] = a * f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b;\n\t\t\t\tte[2] = cf * b - de;\n\t\t\t\tte[6] = df + ce * b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZXY') {\n\t\t\t\tconst ce = c * e,\n\t\t\t\t\t\t\tcf = c * f,\n\t\t\t\t\t\t\tde = d * e,\n\t\t\t\t\t\t\tdf = d * f;\n\t\t\t\tte[0] = ce - df * b;\n\t\t\t\tte[4] = -a * f;\n\t\t\t\tte[8] = de + cf * b;\n\t\t\t\tte[1] = cf + de * b;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = df - ce * b;\n\t\t\t\tte[2] = -a * d;\n\t\t\t\tte[6] = b;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'ZYX') {\n\t\t\t\tconst ae = a * e,\n\t\t\t\t\t\t\taf = a * f,\n\t\t\t\t\t\t\tbe = b * e,\n\t\t\t\t\t\t\tbf = b * f;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = be * d - af;\n\t\t\t\tte[8] = ae * d + bf;\n\t\t\t\tte[1] = c * f;\n\t\t\t\tte[5] = bf * d + ae;\n\t\t\t\tte[9] = af * d - be;\n\t\t\t\tte[2] = -d;\n\t\t\t\tte[6] = b * c;\n\t\t\t\tte[10] = a * c;\n\t\t\t} else if (euler.order === 'YZX') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = bd - ac * f;\n\t\t\t\tte[8] = bc * f + ad;\n\t\t\t\tte[1] = f;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = -b * e;\n\t\t\t\tte[2] = -d * e;\n\t\t\t\tte[6] = ad * f + bc;\n\t\t\t\tte[10] = ac - bd * f;\n\t\t\t} else if (euler.order === 'XZY') {\n\t\t\t\tconst ac = a * c,\n\t\t\t\t\t\t\tad = a * d,\n\t\t\t\t\t\t\tbc = b * c,\n\t\t\t\t\t\t\tbd = b * d;\n\t\t\t\tte[0] = c * e;\n\t\t\t\tte[4] = -f;\n\t\t\t\tte[8] = d * e;\n\t\t\t\tte[1] = ac * f + bd;\n\t\t\t\tte[5] = a * e;\n\t\t\t\tte[9] = ad * f - bc;\n\t\t\t\tte[2] = bc * f - ad;\n\t\t\t\tte[6] = b * e;\n\t\t\t\tte[10] = bd * f + ac;\n\t\t\t} // bottom row\n\n\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0; // last column\n\n\t\t\tte[12] = 0;\n\t\t\tte[13] = 0;\n\t\t\tte[14] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationFromQuaternion(q) {\n\t\t\treturn this.compose(_zero, q, _one);\n\t\t}\n\n\t\tlookAt(eye, target, up) {\n\t\t\tconst te = this.elements;\n\n\t\t\t_z.subVectors(eye, target);\n\n\t\t\tif (_z.lengthSq() === 0) {\n\t\t\t\t// eye and target are in the same position\n\t\t\t\t_z.z = 1;\n\t\t\t}\n\n\t\t\t_z.normalize();\n\n\t\t\t_x.crossVectors(up, _z);\n\n\t\t\tif (_x.lengthSq() === 0) {\n\t\t\t\t// up and z are parallel\n\t\t\t\tif (Math.abs(up.z) === 1) {\n\t\t\t\t\t_z.x += 0.0001;\n\t\t\t\t} else {\n\t\t\t\t\t_z.z += 0.0001;\n\t\t\t\t}\n\n\t\t\t\t_z.normalize();\n\n\t\t\t\t_x.crossVectors(up, _z);\n\t\t\t}\n\n\t\t\t_x.normalize();\n\n\t\t\t_y.crossVectors(_z, _x);\n\n\t\t\tte[0] = _x.x;\n\t\t\tte[4] = _y.x;\n\t\t\tte[8] = _z.x;\n\t\t\tte[1] = _x.y;\n\t\t\tte[5] = _y.y;\n\t\t\tte[9] = _z.y;\n\t\t\tte[2] = _x.z;\n\t\t\tte[6] = _y.z;\n\t\t\tte[10] = _z.z;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(m, n) {\n\t\t\tif (n !== undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .multiply() now only accepts one argument. Use .multiplyMatrices( a, b ) instead.');\n\t\t\t\treturn this.multiplyMatrices(m, n);\n\t\t\t}\n\n\t\t\treturn this.multiplyMatrices(this, m);\n\t\t}\n\n\t\tpremultiply(m) {\n\t\t\treturn this.multiplyMatrices(m, this);\n\t\t}\n\n\t\tmultiplyMatrices(a, b) {\n\t\t\tconst ae = a.elements;\n\t\t\tconst be = b.elements;\n\t\t\tconst te = this.elements;\n\t\t\tconst a11 = ae[0],\n\t\t\t\t\t\ta12 = ae[4],\n\t\t\t\t\t\ta13 = ae[8],\n\t\t\t\t\t\ta14 = ae[12];\n\t\t\tconst a21 = ae[1],\n\t\t\t\t\t\ta22 = ae[5],\n\t\t\t\t\t\ta23 = ae[9],\n\t\t\t\t\t\ta24 = ae[13];\n\t\t\tconst a31 = ae[2],\n\t\t\t\t\t\ta32 = ae[6],\n\t\t\t\t\t\ta33 = ae[10],\n\t\t\t\t\t\ta34 = ae[14];\n\t\t\tconst a41 = ae[3],\n\t\t\t\t\t\ta42 = ae[7],\n\t\t\t\t\t\ta43 = ae[11],\n\t\t\t\t\t\ta44 = ae[15];\n\t\t\tconst b11 = be[0],\n\t\t\t\t\t\tb12 = be[4],\n\t\t\t\t\t\tb13 = be[8],\n\t\t\t\t\t\tb14 = be[12];\n\t\t\tconst b21 = be[1],\n\t\t\t\t\t\tb22 = be[5],\n\t\t\t\t\t\tb23 = be[9],\n\t\t\t\t\t\tb24 = be[13];\n\t\t\tconst b31 = be[2],\n\t\t\t\t\t\tb32 = be[6],\n\t\t\t\t\t\tb33 = be[10],\n\t\t\t\t\t\tb34 = be[14];\n\t\t\tconst b41 = be[3],\n\t\t\t\t\t\tb42 = be[7],\n\t\t\t\t\t\tb43 = be[11],\n\t\t\t\t\t\tb44 = be[15];\n\t\t\tte[0] = a11 * b11 + a12 * b21 + a13 * b31 + a14 * b41;\n\t\t\tte[4] = a11 * b12 + a12 * b22 + a13 * b32 + a14 * b42;\n\t\t\tte[8] = a11 * b13 + a12 * b23 + a13 * b33 + a14 * b43;\n\t\t\tte[12] = a11 * b14 + a12 * b24 + a13 * b34 + a14 * b44;\n\t\t\tte[1] = a21 * b11 + a22 * b21 + a23 * b31 + a24 * b41;\n\t\t\tte[5] = a21 * b12 + a22 * b22 + a23 * b32 + a24 * b42;\n\t\t\tte[9] = a21 * b13 + a22 * b23 + a23 * b33 + a24 * b43;\n\t\t\tte[13] = a21 * b14 + a22 * b24 + a23 * b34 + a24 * b44;\n\t\t\tte[2] = a31 * b11 + a32 * b21 + a33 * b31 + a34 * b41;\n\t\t\tte[6] = a31 * b12 + a32 * b22 + a33 * b32 + a34 * b42;\n\t\t\tte[10] = a31 * b13 + a32 * b23 + a33 * b33 + a34 * b43;\n\t\t\tte[14] = a31 * b14 + a32 * b24 + a33 * b34 + a34 * b44;\n\t\t\tte[3] = a41 * b11 + a42 * b21 + a43 * b31 + a44 * b41;\n\t\t\tte[7] = a41 * b12 + a42 * b22 + a43 * b32 + a44 * b42;\n\t\t\tte[11] = a41 * b13 + a42 * b23 + a43 * b33 + a44 * b43;\n\t\t\tte[15] = a41 * b14 + a42 * b24 + a43 * b34 + a44 * b44;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tconst te = this.elements;\n\t\t\tte[0] *= s;\n\t\t\tte[4] *= s;\n\t\t\tte[8] *= s;\n\t\t\tte[12] *= s;\n\t\t\tte[1] *= s;\n\t\t\tte[5] *= s;\n\t\t\tte[9] *= s;\n\t\t\tte[13] *= s;\n\t\t\tte[2] *= s;\n\t\t\tte[6] *= s;\n\t\t\tte[10] *= s;\n\t\t\tte[14] *= s;\n\t\t\tte[3] *= s;\n\t\t\tte[7] *= s;\n\t\t\tte[11] *= s;\n\t\t\tte[15] *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeterminant() {\n\t\t\tconst te = this.elements;\n\t\t\tconst n11 = te[0],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn14 = te[12];\n\t\t\tconst n21 = te[1],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn24 = te[13];\n\t\t\tconst n31 = te[2],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn34 = te[14];\n\t\t\tconst n41 = te[3],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn44 = te[15]; //TODO: make this more efficient\n\t\t\t//( based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm )\n\n\t\t\treturn n41 * (+n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34) + n42 * (+n11 * n23 * n34 - n11 * n24 * n33 + n14 * n21 * n33 - n13 * n21 * n34 + n13 * n24 * n31 - n14 * n23 * n31) + n43 * (+n11 * n24 * n32 - n11 * n22 * n34 - n14 * n21 * n32 + n12 * n21 * n34 + n14 * n22 * n31 - n12 * n24 * n31) + n44 * (-n13 * n22 * n31 - n11 * n23 * n32 + n11 * n22 * n33 + n13 * n21 * n32 - n12 * n21 * n33 + n12 * n23 * n31);\n\t\t}\n\n\t\ttranspose() {\n\t\t\tconst te = this.elements;\n\t\t\tlet tmp;\n\t\t\ttmp = te[1];\n\t\t\tte[1] = te[4];\n\t\t\tte[4] = tmp;\n\t\t\ttmp = te[2];\n\t\t\tte[2] = te[8];\n\t\t\tte[8] = tmp;\n\t\t\ttmp = te[6];\n\t\t\tte[6] = te[9];\n\t\t\tte[9] = tmp;\n\t\t\ttmp = te[3];\n\t\t\tte[3] = te[12];\n\t\t\tte[12] = tmp;\n\t\t\ttmp = te[7];\n\t\t\tte[7] = te[13];\n\t\t\tte[13] = tmp;\n\t\t\ttmp = te[11];\n\t\t\tte[11] = te[14];\n\t\t\tte[14] = tmp;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPosition(x, y, z) {\n\t\t\tconst te = this.elements;\n\n\t\t\tif (x.isVector3) {\n\t\t\t\tte[12] = x.x;\n\t\t\t\tte[13] = x.y;\n\t\t\t\tte[14] = x.z;\n\t\t\t} else {\n\t\t\t\tte[12] = x;\n\t\t\t\tte[13] = y;\n\t\t\t\tte[14] = z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tinvert() {\n\t\t\t// based on http://www.euclideanspace.com/maths/algebra/matrix/functions/inverse/fourD/index.htm\n\t\t\tconst te = this.elements,\n\t\t\t\t\t\tn11 = te[0],\n\t\t\t\t\t\tn21 = te[1],\n\t\t\t\t\t\tn31 = te[2],\n\t\t\t\t\t\tn41 = te[3],\n\t\t\t\t\t\tn12 = te[4],\n\t\t\t\t\t\tn22 = te[5],\n\t\t\t\t\t\tn32 = te[6],\n\t\t\t\t\t\tn42 = te[7],\n\t\t\t\t\t\tn13 = te[8],\n\t\t\t\t\t\tn23 = te[9],\n\t\t\t\t\t\tn33 = te[10],\n\t\t\t\t\t\tn43 = te[11],\n\t\t\t\t\t\tn14 = te[12],\n\t\t\t\t\t\tn24 = te[13],\n\t\t\t\t\t\tn34 = te[14],\n\t\t\t\t\t\tn44 = te[15],\n\t\t\t\t\t\tt11 = n23 * n34 * n42 - n24 * n33 * n42 + n24 * n32 * n43 - n22 * n34 * n43 - n23 * n32 * n44 + n22 * n33 * n44,\n\t\t\t\t\t\tt12 = n14 * n33 * n42 - n13 * n34 * n42 - n14 * n32 * n43 + n12 * n34 * n43 + n13 * n32 * n44 - n12 * n33 * n44,\n\t\t\t\t\t\tt13 = n13 * n24 * n42 - n14 * n23 * n42 + n14 * n22 * n43 - n12 * n24 * n43 - n13 * n22 * n44 + n12 * n23 * n44,\n\t\t\t\t\t\tt14 = n14 * n23 * n32 - n13 * n24 * n32 - n14 * n22 * n33 + n12 * n24 * n33 + n13 * n22 * n34 - n12 * n23 * n34;\n\t\t\tconst det = n11 * t11 + n21 * t12 + n31 * t13 + n41 * t14;\n\t\t\tif (det === 0) return this.set(0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0);\n\t\t\tconst detInv = 1 / det;\n\t\t\tte[0] = t11 * detInv;\n\t\t\tte[1] = (n24 * n33 * n41 - n23 * n34 * n41 - n24 * n31 * n43 + n21 * n34 * n43 + n23 * n31 * n44 - n21 * n33 * n44) * detInv;\n\t\t\tte[2] = (n22 * n34 * n41 - n24 * n32 * n41 + n24 * n31 * n42 - n21 * n34 * n42 - n22 * n31 * n44 + n21 * n32 * n44) * detInv;\n\t\t\tte[3] = (n23 * n32 * n41 - n22 * n33 * n41 - n23 * n31 * n42 + n21 * n33 * n42 + n22 * n31 * n43 - n21 * n32 * n43) * detInv;\n\t\t\tte[4] = t12 * detInv;\n\t\t\tte[5] = (n13 * n34 * n41 - n14 * n33 * n41 + n14 * n31 * n43 - n11 * n34 * n43 - n13 * n31 * n44 + n11 * n33 * n44) * detInv;\n\t\t\tte[6] = (n14 * n32 * n41 - n12 * n34 * n41 - n14 * n31 * n42 + n11 * n34 * n42 + n12 * n31 * n44 - n11 * n32 * n44) * detInv;\n\t\t\tte[7] = (n12 * n33 * n41 - n13 * n32 * n41 + n13 * n31 * n42 - n11 * n33 * n42 - n12 * n31 * n43 + n11 * n32 * n43) * detInv;\n\t\t\tte[8] = t13 * detInv;\n\t\t\tte[9] = (n14 * n23 * n41 - n13 * n24 * n41 - n14 * n21 * n43 + n11 * n24 * n43 + n13 * n21 * n44 - n11 * n23 * n44) * detInv;\n\t\t\tte[10] = (n12 * n24 * n41 - n14 * n22 * n41 + n14 * n21 * n42 - n11 * n24 * n42 - n12 * n21 * n44 + n11 * n22 * n44) * detInv;\n\t\t\tte[11] = (n13 * n22 * n41 - n12 * n23 * n41 - n13 * n21 * n42 + n11 * n23 * n42 + n12 * n21 * n43 - n11 * n22 * n43) * detInv;\n\t\t\tte[12] = t14 * detInv;\n\t\t\tte[13] = (n13 * n24 * n31 - n14 * n23 * n31 + n14 * n21 * n33 - n11 * n24 * n33 - n13 * n21 * n34 + n11 * n23 * n34) * detInv;\n\t\t\tte[14] = (n14 * n22 * n31 - n12 * n24 * n31 - n14 * n21 * n32 + n11 * n24 * n32 + n12 * n21 * n34 - n11 * n22 * n34) * detInv;\n\t\t\tte[15] = (n12 * n23 * n31 - n13 * n22 * n31 + n13 * n21 * n32 - n11 * n23 * n32 - n12 * n21 * n33 + n11 * n22 * n33) * detInv;\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(v) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = v.x,\n\t\t\t\t\t\ty = v.y,\n\t\t\t\t\t\tz = v.z;\n\t\t\tte[0] *= x;\n\t\t\tte[4] *= y;\n\t\t\tte[8] *= z;\n\t\t\tte[1] *= x;\n\t\t\tte[5] *= y;\n\t\t\tte[9] *= z;\n\t\t\tte[2] *= x;\n\t\t\tte[6] *= y;\n\t\t\tte[10] *= z;\n\t\t\tte[3] *= x;\n\t\t\tte[7] *= y;\n\t\t\tte[11] *= z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxScaleOnAxis() {\n\t\t\tconst te = this.elements;\n\t\t\tconst scaleXSq = te[0] * te[0] + te[1] * te[1] + te[2] * te[2];\n\t\t\tconst scaleYSq = te[4] * te[4] + te[5] * te[5] + te[6] * te[6];\n\t\t\tconst scaleZSq = te[8] * te[8] + te[9] * te[9] + te[10] * te[10];\n\t\t\treturn Math.sqrt(Math.max(scaleXSq, scaleYSq, scaleZSq));\n\t\t}\n\n\t\tmakeTranslation(x, y, z) {\n\t\t\tthis.set(1, 0, 0, x, 0, 1, 0, y, 0, 0, 1, z, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationX(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(1, 0, 0, 0, 0, c, -s, 0, 0, s, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationY(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, 0, s, 0, 0, 1, 0, 0, -s, 0, c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationZ(theta) {\n\t\t\tconst c = Math.cos(theta),\n\t\t\t\t\t\ts = Math.sin(theta);\n\t\t\tthis.set(c, -s, 0, 0, s, c, 0, 0, 0, 0, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeRotationAxis(axis, angle) {\n\t\t\t// Based on http://www.gamedev.net/reference/articles/article1199.asp\n\t\t\tconst c = Math.cos(angle);\n\t\t\tconst s = Math.sin(angle);\n\t\t\tconst t = 1 - c;\n\t\t\tconst x = axis.x,\n\t\t\t\t\t\ty = axis.y,\n\t\t\t\t\t\tz = axis.z;\n\t\t\tconst tx = t * x,\n\t\t\t\t\t\tty = t * y;\n\t\t\tthis.set(tx * x + c, tx * y - s * z, tx * z + s * y, 0, tx * y + s * z, ty * y + c, ty * z - s * x, 0, tx * z - s * y, ty * z + s * x, t * z * z + c, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeScale(x, y, z) {\n\t\t\tthis.set(x, 0, 0, 0, 0, y, 0, 0, 0, 0, z, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeShear(xy, xz, yx, yz, zx, zy) {\n\t\t\tthis.set(1, yx, zx, 0, xy, 1, zy, 0, xz, yz, 1, 0, 0, 0, 0, 1);\n\t\t\treturn this;\n\t\t}\n\n\t\tcompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\t\t\tconst x = quaternion._x,\n\t\t\t\t\t\ty = quaternion._y,\n\t\t\t\t\t\tz = quaternion._z,\n\t\t\t\t\t\tw = quaternion._w;\n\t\t\tconst x2 = x + x,\n\t\t\t\t\t\ty2 = y + y,\n\t\t\t\t\t\tz2 = z + z;\n\t\t\tconst xx = x * x2,\n\t\t\t\t\t\txy = x * y2,\n\t\t\t\t\t\txz = x * z2;\n\t\t\tconst yy = y * y2,\n\t\t\t\t\t\tyz = y * z2,\n\t\t\t\t\t\tzz = z * z2;\n\t\t\tconst wx = w * x2,\n\t\t\t\t\t\twy = w * y2,\n\t\t\t\t\t\twz = w * z2;\n\t\t\tconst sx = scale.x,\n\t\t\t\t\t\tsy = scale.y,\n\t\t\t\t\t\tsz = scale.z;\n\t\t\tte[0] = (1 - (yy + zz)) * sx;\n\t\t\tte[1] = (xy + wz) * sx;\n\t\t\tte[2] = (xz - wy) * sx;\n\t\t\tte[3] = 0;\n\t\t\tte[4] = (xy - wz) * sy;\n\t\t\tte[5] = (1 - (xx + zz)) * sy;\n\t\t\tte[6] = (yz + wx) * sy;\n\t\t\tte[7] = 0;\n\t\t\tte[8] = (xz + wy) * sz;\n\t\t\tte[9] = (yz - wx) * sz;\n\t\t\tte[10] = (1 - (xx + yy)) * sz;\n\t\t\tte[11] = 0;\n\t\t\tte[12] = position.x;\n\t\t\tte[13] = position.y;\n\t\t\tte[14] = position.z;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tdecompose(position, quaternion, scale) {\n\t\t\tconst te = this.elements;\n\n\t\t\tlet sx = _v1$5.set(te[0], te[1], te[2]).length();\n\n\t\t\tconst sy = _v1$5.set(te[4], te[5], te[6]).length();\n\n\t\t\tconst sz = _v1$5.set(te[8], te[9], te[10]).length(); // if determine is negative, we need to invert one scale\n\n\n\t\t\tconst det = this.determinant();\n\t\t\tif (det < 0) sx = -sx;\n\t\t\tposition.x = te[12];\n\t\t\tposition.y = te[13];\n\t\t\tposition.z = te[14]; // scale the rotation part\n\n\t\t\t_m1$2.copy(this);\n\n\t\t\tconst invSX = 1 / sx;\n\t\t\tconst invSY = 1 / sy;\n\t\t\tconst invSZ = 1 / sz;\n\t\t\t_m1$2.elements[0] *= invSX;\n\t\t\t_m1$2.elements[1] *= invSX;\n\t\t\t_m1$2.elements[2] *= invSX;\n\t\t\t_m1$2.elements[4] *= invSY;\n\t\t\t_m1$2.elements[5] *= invSY;\n\t\t\t_m1$2.elements[6] *= invSY;\n\t\t\t_m1$2.elements[8] *= invSZ;\n\t\t\t_m1$2.elements[9] *= invSZ;\n\t\t\t_m1$2.elements[10] *= invSZ;\n\t\t\tquaternion.setFromRotationMatrix(_m1$2);\n\t\t\tscale.x = sx;\n\t\t\tscale.y = sy;\n\t\t\tscale.z = sz;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakePerspective(left, right, top, bottom, near, far) {\n\t\t\tif (far === undefined) {\n\t\t\t\tconsole.warn('THREE.Matrix4: .makePerspective() has been redefined and has a new signature. Please check the docs.');\n\t\t\t}\n\n\t\t\tconst te = this.elements;\n\t\t\tconst x = 2 * near / (right - left);\n\t\t\tconst y = 2 * near / (top - bottom);\n\t\t\tconst a = (right + left) / (right - left);\n\t\t\tconst b = (top + bottom) / (top - bottom);\n\t\t\tconst c = -(far + near) / (far - near);\n\t\t\tconst d = -2 * far * near / (far - near);\n\t\t\tte[0] = x;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = a;\n\t\t\tte[12] = 0;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = y;\n\t\t\tte[9] = b;\n\t\t\tte[13] = 0;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = c;\n\t\t\tte[14] = d;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = -1;\n\t\t\tte[15] = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeOrthographic(left, right, top, bottom, near, far) {\n\t\t\tconst te = this.elements;\n\t\t\tconst w = 1.0 / (right - left);\n\t\t\tconst h = 1.0 / (top - bottom);\n\t\t\tconst p = 1.0 / (far - near);\n\t\t\tconst x = (right + left) * w;\n\t\t\tconst y = (top + bottom) * h;\n\t\t\tconst z = (far + near) * p;\n\t\t\tte[0] = 2 * w;\n\t\t\tte[4] = 0;\n\t\t\tte[8] = 0;\n\t\t\tte[12] = -x;\n\t\t\tte[1] = 0;\n\t\t\tte[5] = 2 * h;\n\t\t\tte[9] = 0;\n\t\t\tte[13] = -y;\n\t\t\tte[2] = 0;\n\t\t\tte[6] = 0;\n\t\t\tte[10] = -2 * p;\n\t\t\tte[14] = -z;\n\t\t\tte[3] = 0;\n\t\t\tte[7] = 0;\n\t\t\tte[11] = 0;\n\t\t\tte[15] = 1;\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(matrix) {\n\t\t\tconst te = this.elements;\n\t\t\tconst me = matrix.elements;\n\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tif (te[i] !== me[i]) return false;\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tfor (let i = 0; i < 16; i++) {\n\t\t\t\tthis.elements[i] = array[i + offset];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst te = this.elements;\n\t\t\tarray[offset] = te[0];\n\t\t\tarray[offset + 1] = te[1];\n\t\t\tarray[offset + 2] = te[2];\n\t\t\tarray[offset + 3] = te[3];\n\t\t\tarray[offset + 4] = te[4];\n\t\t\tarray[offset + 5] = te[5];\n\t\t\tarray[offset + 6] = te[6];\n\t\t\tarray[offset + 7] = te[7];\n\t\t\tarray[offset + 8] = te[8];\n\t\t\tarray[offset + 9] = te[9];\n\t\t\tarray[offset + 10] = te[10];\n\t\t\tarray[offset + 11] = te[11];\n\t\t\tarray[offset + 12] = te[12];\n\t\t\tarray[offset + 13] = te[13];\n\t\t\tarray[offset + 14] = te[14];\n\t\t\tarray[offset + 15] = te[15];\n\t\t\treturn array;\n\t\t}\n\n\t}\n\n\tMatrix4.prototype.isMatrix4 = true;\n\n\tconst _v1$5 = /*@__PURE__*/new Vector3();\n\n\tconst _m1$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _zero = /*@__PURE__*/new Vector3(0, 0, 0);\n\n\tconst _one = /*@__PURE__*/new Vector3(1, 1, 1);\n\n\tconst _x = /*@__PURE__*/new Vector3();\n\n\tconst _y = /*@__PURE__*/new Vector3();\n\n\tconst _z = /*@__PURE__*/new Vector3();\n\n\tconst _matrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _quaternion$3 = /*@__PURE__*/new Quaternion();\n\n\tclass Euler {\n\t\tconstructor(x = 0, y = 0, z = 0, order = Euler.DefaultOrder) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order;\n\t\t}\n\n\t\tget x() {\n\t\t\treturn this._x;\n\t\t}\n\n\t\tset x(value) {\n\t\t\tthis._x = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget y() {\n\t\t\treturn this._y;\n\t\t}\n\n\t\tset y(value) {\n\t\t\tthis._y = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget z() {\n\t\t\treturn this._z;\n\t\t}\n\n\t\tset z(value) {\n\t\t\tthis._z = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tget order() {\n\t\t\treturn this._order;\n\t\t}\n\n\t\tset order(value) {\n\t\t\tthis._order = value;\n\n\t\t\tthis._onChangeCallback();\n\t\t}\n\n\t\tset(x, y, z, order) {\n\t\t\tthis._x = x;\n\t\t\tthis._y = y;\n\t\t\tthis._z = z;\n\t\t\tthis._order = order || this._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this._x, this._y, this._z, this._order);\n\t\t}\n\n\t\tcopy(euler) {\n\t\t\tthis._x = euler._x;\n\t\t\tthis._y = euler._y;\n\t\t\tthis._z = euler._z;\n\t\t\tthis._order = euler._order;\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromRotationMatrix(m, order, update) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tconst te = m.elements;\n\t\t\tconst m11 = te[0],\n\t\t\t\t\t\tm12 = te[4],\n\t\t\t\t\t\tm13 = te[8];\n\t\t\tconst m21 = te[1],\n\t\t\t\t\t\tm22 = te[5],\n\t\t\t\t\t\tm23 = te[9];\n\t\t\tconst m31 = te[2],\n\t\t\t\t\t\tm32 = te[6],\n\t\t\t\t\t\tm33 = te[10];\n\t\t\torder = order || this._order;\n\n\t\t\tswitch (order) {\n\t\t\t\tcase 'XYZ':\n\t\t\t\t\tthis._y = Math.asin(clamp(m13, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m13) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YXZ':\n\t\t\t\t\tthis._x = Math.asin(-clamp(m23, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m23) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t\tthis._z = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZXY':\n\t\t\t\t\tthis._x = Math.asin(clamp(m32, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m32) < 0.9999999) {\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'ZYX':\n\t\t\t\t\tthis._y = Math.asin(-clamp(m31, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m31) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m33);\n\t\t\t\t\t\tthis._z = Math.atan2(m21, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._z = Math.atan2(-m12, m22);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'YZX':\n\t\t\t\t\tthis._z = Math.asin(clamp(m21, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m21) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(-m31, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = 0;\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m33);\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'XZY':\n\t\t\t\t\tthis._z = Math.asin(-clamp(m12, -1, 1));\n\n\t\t\t\t\tif (Math.abs(m12) < 0.9999999) {\n\t\t\t\t\t\tthis._x = Math.atan2(m32, m22);\n\t\t\t\t\t\tthis._y = Math.atan2(m13, m11);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis._x = Math.atan2(-m23, m33);\n\t\t\t\t\t\tthis._y = 0;\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.warn('THREE.Euler: .setFromRotationMatrix() encountered an unknown order: ' + order);\n\t\t\t}\n\n\t\t\tthis._order = order;\n\t\t\tif (update !== false) this._onChangeCallback();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromQuaternion(q, order, update) {\n\t\t\t_matrix$1.makeRotationFromQuaternion(q);\n\n\t\t\treturn this.setFromRotationMatrix(_matrix$1, order, update);\n\t\t}\n\n\t\tsetFromVector3(v, order) {\n\t\t\treturn this.set(v.x, v.y, v.z, order || this._order);\n\t\t}\n\n\t\treorder(newOrder) {\n\t\t\t// WARNING: this discards revolution information -bhouston\n\t\t\t_quaternion$3.setFromEuler(this);\n\n\t\t\treturn this.setFromQuaternion(_quaternion$3, newOrder);\n\t\t}\n\n\t\tequals(euler) {\n\t\t\treturn euler._x === this._x && euler._y === this._y && euler._z === this._z && euler._order === this._order;\n\t\t}\n\n\t\tfromArray(array) {\n\t\t\tthis._x = array[0];\n\t\t\tthis._y = array[1];\n\t\t\tthis._z = array[2];\n\t\t\tif (array[3] !== undefined) this._order = array[3];\n\n\t\t\tthis._onChangeCallback();\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this._x;\n\t\t\tarray[offset + 1] = this._y;\n\t\t\tarray[offset + 2] = this._z;\n\t\t\tarray[offset + 3] = this._order;\n\t\t\treturn array;\n\t\t}\n\n\t\ttoVector3(optionalResult) {\n\t\t\tif (optionalResult) {\n\t\t\t\treturn optionalResult.set(this._x, this._y, this._z);\n\t\t\t} else {\n\t\t\t\treturn new Vector3(this._x, this._y, this._z);\n\t\t\t}\n\t\t}\n\n\t\t_onChange(callback) {\n\t\t\tthis._onChangeCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\t_onChangeCallback() {}\n\n\t}\n\n\tEuler.prototype.isEuler = true;\n\tEuler.DefaultOrder = 'XYZ';\n\tEuler.RotationOrders = ['XYZ', 'YZX', 'ZXY', 'XZY', 'YXZ', 'ZYX'];\n\n\tclass Layers {\n\t\tconstructor() {\n\t\t\tthis.mask = 1 | 0;\n\t\t}\n\n\t\tset(channel) {\n\t\t\tthis.mask = 1 << channel | 0;\n\t\t}\n\n\t\tenable(channel) {\n\t\t\tthis.mask |= 1 << channel | 0;\n\t\t}\n\n\t\tenableAll() {\n\t\t\tthis.mask = 0xffffffff | 0;\n\t\t}\n\n\t\ttoggle(channel) {\n\t\t\tthis.mask ^= 1 << channel | 0;\n\t\t}\n\n\t\tdisable(channel) {\n\t\t\tthis.mask &= ~(1 << channel | 0);\n\t\t}\n\n\t\tdisableAll() {\n\t\t\tthis.mask = 0;\n\t\t}\n\n\t\ttest(layers) {\n\t\t\treturn (this.mask & layers.mask) !== 0;\n\t\t}\n\n\t}\n\n\tlet _object3DId = 0;\n\n\tconst _v1$4 = /*@__PURE__*/new Vector3();\n\n\tconst _q1 = /*@__PURE__*/new Quaternion();\n\n\tconst _m1$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _target = /*@__PURE__*/new Vector3();\n\n\tconst _position$3 = /*@__PURE__*/new Vector3();\n\n\tconst _scale$2 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$2 = /*@__PURE__*/new Quaternion();\n\n\tconst _xAxis = /*@__PURE__*/new Vector3(1, 0, 0);\n\n\tconst _yAxis = /*@__PURE__*/new Vector3(0, 1, 0);\n\n\tconst _zAxis = /*@__PURE__*/new Vector3(0, 0, 1);\n\n\tconst _addedEvent = {\n\t\ttype: 'added'\n\t};\n\tconst _removedEvent = {\n\t\ttype: 'removed'\n\t};\n\n\tclass Object3D extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _object3DId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Object3D';\n\t\t\tthis.parent = null;\n\t\t\tthis.children = [];\n\t\t\tthis.up = Object3D.DefaultUp.clone();\n\t\t\tconst position = new Vector3();\n\t\t\tconst rotation = new Euler();\n\t\t\tconst quaternion = new Quaternion();\n\t\t\tconst scale = new Vector3(1, 1, 1);\n\n\t\t\tfunction onRotationChange() {\n\t\t\t\tquaternion.setFromEuler(rotation, false);\n\t\t\t}\n\n\t\t\tfunction onQuaternionChange() {\n\t\t\t\trotation.setFromQuaternion(quaternion, undefined, false);\n\t\t\t}\n\n\t\t\trotation._onChange(onRotationChange);\n\n\t\t\tquaternion._onChange(onQuaternionChange);\n\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tposition: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: position\n\t\t\t\t},\n\t\t\t\trotation: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: rotation\n\t\t\t\t},\n\t\t\t\tquaternion: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: quaternion\n\t\t\t\t},\n\t\t\t\tscale: {\n\t\t\t\t\tconfigurable: true,\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: scale\n\t\t\t\t},\n\t\t\t\tmodelViewMatrix: {\n\t\t\t\t\tvalue: new Matrix4()\n\t\t\t\t},\n\t\t\t\tnormalMatrix: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.matrixWorld = new Matrix4();\n\t\t\tthis.matrixAutoUpdate = Object3D.DefaultMatrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.visible = true;\n\t\t\tthis.castShadow = false;\n\t\t\tthis.receiveShadow = false;\n\t\t\tthis.frustumCulled = true;\n\t\t\tthis.renderOrder = 0;\n\t\t\tthis.animations = [];\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tonBeforeRender() {}\n\n\t\tonAfterRender() {}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\t\t\tthis.matrix.premultiply(matrix);\n\t\t\tthis.matrix.decompose(this.position, this.quaternion, this.scale);\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\tthis.quaternion.premultiply(q);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRotationFromAxisAngle(axis, angle) {\n\t\t\t// assumes axis is normalized\n\t\t\tthis.quaternion.setFromAxisAngle(axis, angle);\n\t\t}\n\n\t\tsetRotationFromEuler(euler) {\n\t\t\tthis.quaternion.setFromEuler(euler, true);\n\t\t}\n\n\t\tsetRotationFromMatrix(m) {\n\t\t\t// assumes the upper 3x3 of m is a pure rotation matrix (i.e, unscaled)\n\t\t\tthis.quaternion.setFromRotationMatrix(m);\n\t\t}\n\n\t\tsetRotationFromQuaternion(q) {\n\t\t\t// assumes q is normalized\n\t\t\tthis.quaternion.copy(q);\n\t\t}\n\n\t\trotateOnAxis(axis, angle) {\n\t\t\t// rotate object on axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.multiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateOnWorldAxis(axis, angle) {\n\t\t\t// rotate object on axis in world space\n\t\t\t// axis is assumed to be normalized\n\t\t\t// method assumes no rotated parent\n\t\t\t_q1.setFromAxisAngle(axis, angle);\n\n\t\t\tthis.quaternion.premultiply(_q1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\treturn this.rotateOnAxis(_xAxis, angle);\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\treturn this.rotateOnAxis(_yAxis, angle);\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\treturn this.rotateOnAxis(_zAxis, angle);\n\t\t}\n\n\t\ttranslateOnAxis(axis, distance) {\n\t\t\t// translate object by distance along axis in object space\n\t\t\t// axis is assumed to be normalized\n\t\t\t_v1$4.copy(axis).applyQuaternion(this.quaternion);\n\n\t\t\tthis.position.add(_v1$4.multiplyScalar(distance));\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslateX(distance) {\n\t\t\treturn this.translateOnAxis(_xAxis, distance);\n\t\t}\n\n\t\ttranslateY(distance) {\n\t\t\treturn this.translateOnAxis(_yAxis, distance);\n\t\t}\n\n\t\ttranslateZ(distance) {\n\t\t\treturn this.translateOnAxis(_zAxis, distance);\n\t\t}\n\n\t\tlocalToWorld(vector) {\n\t\t\treturn vector.applyMatrix4(this.matrixWorld);\n\t\t}\n\n\t\tworldToLocal(vector) {\n\t\t\treturn vector.applyMatrix4(_m1$1.copy(this.matrixWorld).invert());\n\t\t}\n\n\t\tlookAt(x, y, z) {\n\t\t\t// This method does not support objects having non-uniformly-scaled parent(s)\n\t\t\tif (x.isVector3) {\n\t\t\t\t_target.copy(x);\n\t\t\t} else {\n\t\t\t\t_target.set(x, y, z);\n\t\t\t}\n\n\t\t\tconst parent = this.parent;\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_position$3.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\tif (this.isCamera || this.isLight) {\n\t\t\t\t_m1$1.lookAt(_position$3, _target, this.up);\n\t\t\t} else {\n\t\t\t\t_m1$1.lookAt(_target, _position$3, this.up);\n\t\t\t}\n\n\t\t\tthis.quaternion.setFromRotationMatrix(_m1$1);\n\n\t\t\tif (parent) {\n\t\t\t\t_m1$1.extractRotation(parent.matrixWorld);\n\n\t\t\t\t_q1.setFromRotationMatrix(_m1$1);\n\n\t\t\t\tthis.quaternion.premultiply(_q1.invert());\n\t\t\t}\n\t\t}\n\n\t\tadd(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.add(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object === this) {\n\t\t\t\tconsole.error('THREE.Object3D.add: object can\\'t be added as a child of itself.', object);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tif (object && object.isObject3D) {\n\t\t\t\tif (object.parent !== null) {\n\t\t\t\t\tobject.parent.remove(object);\n\t\t\t\t}\n\n\t\t\t\tobject.parent = this;\n\t\t\t\tthis.children.push(object);\n\t\t\t\tobject.dispatchEvent(_addedEvent);\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Object3D.add: object not an instance of THREE.Object3D.', object);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremove(object) {\n\t\t\tif (arguments.length > 1) {\n\t\t\t\tfor (let i = 0; i < arguments.length; i++) {\n\t\t\t\t\tthis.remove(arguments[i]);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst index = this.children.indexOf(object);\n\n\t\t\tif (index !== -1) {\n\t\t\t\tobject.parent = null;\n\t\t\t\tthis.children.splice(index, 1);\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tremoveFromParent() {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tparent.remove(this);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclear() {\n\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\tconst object = this.children[i];\n\t\t\t\tobject.parent = null;\n\t\t\t\tobject.dispatchEvent(_removedEvent);\n\t\t\t}\n\n\t\t\tthis.children.length = 0;\n\t\t\treturn this;\n\t\t}\n\n\t\tattach(object) {\n\t\t\t// adds object as a child of this, while maintaining the object's world transform\n\t\t\tthis.updateWorldMatrix(true, false);\n\n\t\t\t_m1$1.copy(this.matrixWorld).invert();\n\n\t\t\tif (object.parent !== null) {\n\t\t\t\tobject.parent.updateWorldMatrix(true, false);\n\n\t\t\t\t_m1$1.multiply(object.parent.matrixWorld);\n\t\t\t}\n\n\t\t\tobject.applyMatrix4(_m1$1);\n\t\t\tthis.add(object);\n\t\t\tobject.updateWorldMatrix(false, true);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetObjectById(id) {\n\t\t\treturn this.getObjectByProperty('id', id);\n\t\t}\n\n\t\tgetObjectByName(name) {\n\t\t\treturn this.getObjectByProperty('name', name);\n\t\t}\n\n\t\tgetObjectByProperty(name, value) {\n\t\t\tif (this[name] === value) return this;\n\n\t\t\tfor (let i = 0, l = this.children.length; i < l; i++) {\n\t\t\t\tconst child = this.children[i];\n\t\t\t\tconst object = child.getObjectByProperty(name, value);\n\n\t\t\t\tif (object !== undefined) {\n\t\t\t\t\treturn object;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tgetWorldPosition(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldPosition() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\treturn target.setFromMatrixPosition(this.matrixWorld);\n\t\t}\n\n\t\tgetWorldQuaternion(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldQuaternion() target is now required');\n\t\t\t\ttarget = new Quaternion();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, target, _scale$2);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldScale(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldScale() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tthis.matrixWorld.decompose(_position$3, _quaternion$2, target);\n\t\t\treturn target;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Object3D: .getWorldDirection() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(e[8], e[9], e[10]).normalize();\n\t\t}\n\n\t\traycast() {}\n\n\t\ttraverse(callback) {\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverse(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseVisible(callback) {\n\t\t\tif (this.visible === false) return;\n\t\t\tcallback(this);\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].traverseVisible(callback);\n\t\t\t}\n\t\t}\n\n\t\ttraverseAncestors(callback) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (parent !== null) {\n\t\t\t\tcallback(parent);\n\t\t\t\tparent.traverseAncestors(callback);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrix() {\n\t\t\tthis.matrix.compose(this.position, this.quaternion, this.scale);\n\t\t\tthis.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.matrixWorldNeedsUpdate || force) {\n\t\t\t\tif (this.parent === null) {\n\t\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t\t}\n\n\t\t\t\tthis.matrixWorldNeedsUpdate = false;\n\t\t\t\tforce = true;\n\t\t\t} // update children\n\n\n\t\t\tconst children = this.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tchildren[i].updateMatrixWorld(force);\n\t\t\t}\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tconst parent = this.parent;\n\n\t\t\tif (updateParents === true && parent !== null) {\n\t\t\t\tparent.updateWorldMatrix(true, false);\n\t\t\t}\n\n\t\t\tif (this.matrixAutoUpdate) this.updateMatrix();\n\n\t\t\tif (this.parent === null) {\n\t\t\t\tthis.matrixWorld.copy(this.matrix);\n\t\t\t} else {\n\t\t\t\tthis.matrixWorld.multiplyMatrices(this.parent.matrixWorld, this.matrix);\n\t\t\t} // update children\n\n\n\t\t\tif (updateChildren === true) {\n\t\t\t\tconst children = this.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateWorldMatrix(false, true);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\t// meta is a string when called from JSON.stringify\n\t\t\tconst isRootObject = meta === undefined || typeof meta === 'string';\n\t\t\tconst output = {}; // meta is a hash used to collect geometries, materials.\n\t\t\t// not providing it implies that this is the root object\n\t\t\t// being serialized.\n\n\t\t\tif (isRootObject) {\n\t\t\t\t// initialize meta obj\n\t\t\t\tmeta = {\n\t\t\t\t\tgeometries: {},\n\t\t\t\t\tmaterials: {},\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {},\n\t\t\t\t\tshapes: {},\n\t\t\t\t\tskeletons: {},\n\t\t\t\t\tanimations: {}\n\t\t\t\t};\n\t\t\t\toutput.metadata = {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Object',\n\t\t\t\t\tgenerator: 'Object3D.toJSON'\n\t\t\t\t};\n\t\t\t} // standard Object3D serialization\n\n\n\t\t\tconst object = {};\n\t\t\tobject.uuid = this.uuid;\n\t\t\tobject.type = this.type;\n\t\t\tif (this.name !== '') object.name = this.name;\n\t\t\tif (this.castShadow === true) object.castShadow = true;\n\t\t\tif (this.receiveShadow === true) object.receiveShadow = true;\n\t\t\tif (this.visible === false) object.visible = false;\n\t\t\tif (this.frustumCulled === false) object.frustumCulled = false;\n\t\t\tif (this.renderOrder !== 0) object.renderOrder = this.renderOrder;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') object.userData = this.userData;\n\t\t\tobject.layers = this.layers.mask;\n\t\t\tobject.matrix = this.matrix.toArray();\n\t\t\tif (this.matrixAutoUpdate === false) object.matrixAutoUpdate = false; // object specific properties\n\n\t\t\tif (this.isInstancedMesh) {\n\t\t\t\tobject.type = 'InstancedMesh';\n\t\t\t\tobject.count = this.count;\n\t\t\t\tobject.instanceMatrix = this.instanceMatrix.toJSON();\n\t\t\t\tif (this.instanceColor !== null) object.instanceColor = this.instanceColor.toJSON();\n\t\t\t} //\n\n\n\t\t\tfunction serialize(library, element) {\n\t\t\t\tif (library[element.uuid] === undefined) {\n\t\t\t\t\tlibrary[element.uuid] = element.toJSON(meta);\n\t\t\t\t}\n\n\t\t\t\treturn element.uuid;\n\t\t\t}\n\n\t\t\tif (this.isMesh || this.isLine || this.isPoints) {\n\t\t\t\tobject.geometry = serialize(meta.geometries, this.geometry);\n\t\t\t\tconst parameters = this.geometry.parameters;\n\n\t\t\t\tif (parameters !== undefined && parameters.shapes !== undefined) {\n\t\t\t\t\tconst shapes = parameters.shapes;\n\n\t\t\t\t\tif (Array.isArray(shapes)) {\n\t\t\t\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\t\t\t\tconst shape = shapes[i];\n\t\t\t\t\t\t\tserialize(meta.shapes, shape);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tserialize(meta.shapes, shapes);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.isSkinnedMesh) {\n\t\t\t\tobject.bindMode = this.bindMode;\n\t\t\t\tobject.bindMatrix = this.bindMatrix.toArray();\n\n\t\t\t\tif (this.skeleton !== undefined) {\n\t\t\t\t\tserialize(meta.skeletons, this.skeleton);\n\t\t\t\t\tobject.skeleton = this.skeleton.uuid;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.material !== undefined) {\n\t\t\t\tif (Array.isArray(this.material)) {\n\t\t\t\t\tconst uuids = [];\n\n\t\t\t\t\tfor (let i = 0, l = this.material.length; i < l; i++) {\n\t\t\t\t\t\tuuids.push(serialize(meta.materials, this.material[i]));\n\t\t\t\t\t}\n\n\t\t\t\t\tobject.material = uuids;\n\t\t\t\t} else {\n\t\t\t\t\tobject.material = serialize(meta.materials, this.material);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.children.length > 0) {\n\t\t\t\tobject.children = [];\n\n\t\t\t\tfor (let i = 0; i < this.children.length; i++) {\n\t\t\t\t\tobject.children.push(this.children[i].toJSON(meta).object);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tif (this.animations.length > 0) {\n\t\t\t\tobject.animations = [];\n\n\t\t\t\tfor (let i = 0; i < this.animations.length; i++) {\n\t\t\t\t\tconst animation = this.animations[i];\n\t\t\t\t\tobject.animations.push(serialize(meta.animations, animation));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (isRootObject) {\n\t\t\t\tconst geometries = extractFromCache(meta.geometries);\n\t\t\t\tconst materials = extractFromCache(meta.materials);\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tconst shapes = extractFromCache(meta.shapes);\n\t\t\t\tconst skeletons = extractFromCache(meta.skeletons);\n\t\t\t\tconst animations = extractFromCache(meta.animations);\n\t\t\t\tif (geometries.length > 0) output.geometries = geometries;\n\t\t\t\tif (materials.length > 0) output.materials = materials;\n\t\t\t\tif (textures.length > 0) output.textures = textures;\n\t\t\t\tif (images.length > 0) output.images = images;\n\t\t\t\tif (shapes.length > 0) output.shapes = shapes;\n\t\t\t\tif (skeletons.length > 0) output.skeletons = skeletons;\n\t\t\t\tif (animations.length > 0) output.animations = animations;\n\t\t\t}\n\n\t\t\toutput.object = object;\n\t\t\treturn output; // extract data from the cache hash\n\t\t\t// remove metadata on each item\n\t\t\t// and return as array\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\t\t}\n\n\t\tclone(recursive) {\n\t\t\treturn new this.constructor().copy(this, recursive);\n\t\t}\n\n\t\tcopy(source, recursive = true) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.up.copy(source.up);\n\t\t\tthis.position.copy(source.position);\n\t\t\tthis.rotation.order = source.rotation.order;\n\t\t\tthis.quaternion.copy(source.quaternion);\n\t\t\tthis.scale.copy(source.scale);\n\t\t\tthis.matrix.copy(source.matrix);\n\t\t\tthis.matrixWorld.copy(source.matrixWorld);\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\tthis.matrixWorldNeedsUpdate = source.matrixWorldNeedsUpdate;\n\t\t\tthis.layers.mask = source.layers.mask;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.castShadow = source.castShadow;\n\t\t\tthis.receiveShadow = source.receiveShadow;\n\t\t\tthis.frustumCulled = source.frustumCulled;\n\t\t\tthis.renderOrder = source.renderOrder;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\n\t\t\tif (recursive === true) {\n\t\t\t\tfor (let i = 0; i < source.children.length; i++) {\n\t\t\t\t\tconst child = source.children[i];\n\t\t\t\t\tthis.add(child.clone());\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tObject3D.DefaultUp = new Vector3(0, 1, 0);\n\tObject3D.DefaultMatrixAutoUpdate = true;\n\tObject3D.prototype.isObject3D = true;\n\n\tconst _vector1 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2$1 = /*@__PURE__*/new Vector3();\n\n\tconst _normalMatrix = /*@__PURE__*/new Matrix3();\n\n\tclass Plane {\n\t\tconstructor(normal = new Vector3(1, 0, 0), constant = 0) {\n\t\t\t// normal is assumed to be normalized\n\t\t\tthis.normal = normal;\n\t\t\tthis.constant = constant;\n\t\t}\n\n\t\tset(normal, constant) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetComponents(x, y, z, w) {\n\t\t\tthis.normal.set(x, y, z);\n\t\t\tthis.constant = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromNormalAndCoplanarPoint(normal, point) {\n\t\t\tthis.normal.copy(normal);\n\t\t\tthis.constant = -point.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCoplanarPoints(a, b, c) {\n\t\t\tconst normal = _vector1.subVectors(c, b).cross(_vector2$1.subVectors(a, b)).normalize(); // Q: should an error be thrown if normal is zero (e.g. degenerate plane)?\n\n\n\t\t\tthis.setFromNormalAndCoplanarPoint(normal, a);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(plane) {\n\t\t\tthis.normal.copy(plane.normal);\n\t\t\tthis.constant = plane.constant;\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalize() {\n\t\t\t// Note: will lead to a divide by zero if the plane is invalid.\n\t\t\tconst inverseNormalLength = 1.0 / this.normal.length();\n\t\t\tthis.normal.multiplyScalar(inverseNormalLength);\n\t\t\tthis.constant *= inverseNormalLength;\n\t\t\treturn this;\n\t\t}\n\n\t\tnegate() {\n\t\t\tthis.constant *= -1;\n\t\t\tthis.normal.negate();\n\t\t\treturn this;\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\treturn this.normal.dot(point) + this.constant;\n\t\t}\n\n\t\tdistanceToSphere(sphere) {\n\t\t\treturn this.distanceToPoint(sphere.center) - sphere.radius;\n\t\t}\n\n\t\tprojectPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .projectPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.distanceToPoint(point)).add(point);\n\t\t}\n\n\t\tintersectLine(line, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .intersectLine() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tconst direction = line.delta(_vector1);\n\t\t\tconst denominator = this.normal.dot(direction);\n\n\t\t\tif (denominator === 0) {\n\t\t\t\t// line is coplanar, return origin\n\t\t\t\tif (this.distanceToPoint(line.start) === 0) {\n\t\t\t\t\treturn target.copy(line.start);\n\t\t\t\t} // Unsure if this is the correct method to handle this case.\n\n\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst t = -(line.start.dot(this.normal) + this.constant) / denominator;\n\n\t\t\tif (t < 0 || t > 1) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\treturn target.copy(direction).multiplyScalar(t).add(line.start);\n\t\t}\n\n\t\tintersectsLine(line) {\n\t\t\t// Note: this tests if a line intersects the plane, not whether it (or its end-points) are coplanar with it.\n\t\t\tconst startSign = this.distanceToPoint(line.start);\n\t\t\tconst endSign = this.distanceToPoint(line.end);\n\t\t\treturn startSign < 0 && endSign > 0 || endSign < 0 && startSign > 0;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsPlane(this);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\treturn sphere.intersectsPlane(this);\n\t\t}\n\n\t\tcoplanarPoint(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Plane: .coplanarPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.copy(this.normal).multiplyScalar(-this.constant);\n\t\t}\n\n\t\tapplyMatrix4(matrix, optionalNormalMatrix) {\n\t\t\tconst normalMatrix = optionalNormalMatrix || _normalMatrix.getNormalMatrix(matrix);\n\n\t\t\tconst referencePoint = this.coplanarPoint(_vector1).applyMatrix4(matrix);\n\t\t\tconst normal = this.normal.applyMatrix3(normalMatrix).normalize();\n\t\t\tthis.constant = -referencePoint.dot(normal);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.constant -= offset.dot(this.normal);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(plane) {\n\t\t\treturn plane.normal.equals(this.normal) && plane.constant === this.constant;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tPlane.prototype.isPlane = true;\n\n\tconst _v0$1 = /*@__PURE__*/new Vector3();\n\n\tconst _v1$3 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vab = /*@__PURE__*/new Vector3();\n\n\tconst _vac = /*@__PURE__*/new Vector3();\n\n\tconst _vbc = /*@__PURE__*/new Vector3();\n\n\tconst _vap = /*@__PURE__*/new Vector3();\n\n\tconst _vbp = /*@__PURE__*/new Vector3();\n\n\tconst _vcp = /*@__PURE__*/new Vector3();\n\n\tclass Triangle {\n\t\tconstructor(a = new Vector3(), b = new Vector3(), c = new Vector3()) {\n\t\t\tthis.a = a;\n\t\t\tthis.b = b;\n\t\t\tthis.c = c;\n\t\t}\n\n\t\tstatic getNormal(a, b, c, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getNormal() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\ttarget.subVectors(c, b);\n\n\t\t\t_v0$1.subVectors(a, b);\n\n\t\t\ttarget.cross(_v0$1);\n\t\t\tconst targetLengthSq = target.lengthSq();\n\n\t\t\tif (targetLengthSq > 0) {\n\t\t\t\treturn target.multiplyScalar(1 / Math.sqrt(targetLengthSq));\n\t\t\t}\n\n\t\t\treturn target.set(0, 0, 0);\n\t\t} // static/instance method to calculate barycentric coordinates\n\t\t// based on: http://www.blackpawn.com/texts/pointinpoly/default.html\n\n\n\t\tstatic getBarycoord(point, a, b, c, target) {\n\t\t\t_v0$1.subVectors(c, a);\n\n\t\t\t_v1$3.subVectors(b, a);\n\n\t\t\t_v2$2.subVectors(point, a);\n\n\t\t\tconst dot00 = _v0$1.dot(_v0$1);\n\n\t\t\tconst dot01 = _v0$1.dot(_v1$3);\n\n\t\t\tconst dot02 = _v0$1.dot(_v2$2);\n\n\t\t\tconst dot11 = _v1$3.dot(_v1$3);\n\n\t\t\tconst dot12 = _v1$3.dot(_v2$2);\n\n\t\t\tconst denom = dot00 * dot11 - dot01 * dot01;\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getBarycoord() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t} // collinear or singular triangle\n\n\n\t\t\tif (denom === 0) {\n\t\t\t\t// arbitrary location outside of triangle?\n\t\t\t\t// not sure if this is the best idea, maybe should be returning undefined\n\t\t\t\treturn target.set(-2, -1, -1);\n\t\t\t}\n\n\t\t\tconst invDenom = 1 / denom;\n\t\t\tconst u = (dot11 * dot02 - dot01 * dot12) * invDenom;\n\t\t\tconst v = (dot00 * dot12 - dot01 * dot02) * invDenom; // barycentric coordinates must always sum to 1\n\n\t\t\treturn target.set(1 - u - v, v, u);\n\t\t}\n\n\t\tstatic containsPoint(point, a, b, c) {\n\t\t\tthis.getBarycoord(point, a, b, c, _v3$1);\n\t\t\treturn _v3$1.x >= 0 && _v3$1.y >= 0 && _v3$1.x + _v3$1.y <= 1;\n\t\t}\n\n\t\tstatic getUV(point, p1, p2, p3, uv1, uv2, uv3, target) {\n\t\t\tthis.getBarycoord(point, p1, p2, p3, _v3$1);\n\t\t\ttarget.set(0, 0);\n\t\t\ttarget.addScaledVector(uv1, _v3$1.x);\n\t\t\ttarget.addScaledVector(uv2, _v3$1.y);\n\t\t\ttarget.addScaledVector(uv3, _v3$1.z);\n\t\t\treturn target;\n\t\t}\n\n\t\tstatic isFrontFacing(a, b, c, direction) {\n\t\t\t_v0$1.subVectors(c, b);\n\n\t\t\t_v1$3.subVectors(a, b); // strictly front facing\n\n\n\t\t\treturn _v0$1.cross(_v1$3).dot(direction) < 0 ? true : false;\n\t\t}\n\n\t\tset(a, b, c) {\n\t\t\tthis.a.copy(a);\n\t\t\tthis.b.copy(b);\n\t\t\tthis.c.copy(c);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPointsAndIndices(points, i0, i1, i2) {\n\t\t\tthis.a.copy(points[i0]);\n\t\t\tthis.b.copy(points[i1]);\n\t\t\tthis.c.copy(points[i2]);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(triangle) {\n\t\t\tthis.a.copy(triangle.a);\n\t\t\tthis.b.copy(triangle.b);\n\t\t\tthis.c.copy(triangle.c);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetArea() {\n\t\t\t_v0$1.subVectors(this.c, this.b);\n\n\t\t\t_v1$3.subVectors(this.a, this.b);\n\n\t\t\treturn _v0$1.cross(_v1$3).length() * 0.5;\n\t\t}\n\n\t\tgetMidpoint(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getMidpoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.addVectors(this.a, this.b).add(this.c).multiplyScalar(1 / 3);\n\t\t}\n\n\t\tgetNormal(target) {\n\t\t\treturn Triangle.getNormal(this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetPlane(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .getPlane() target is now required');\n\t\t\t\ttarget = new Plane();\n\t\t\t}\n\n\t\t\treturn target.setFromCoplanarPoints(this.a, this.b, this.c);\n\t\t}\n\n\t\tgetBarycoord(point, target) {\n\t\t\treturn Triangle.getBarycoord(point, this.a, this.b, this.c, target);\n\t\t}\n\n\t\tgetUV(point, uv1, uv2, uv3, target) {\n\t\t\treturn Triangle.getUV(point, this.a, this.b, this.c, uv1, uv2, uv3, target);\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn Triangle.containsPoint(point, this.a, this.b, this.c);\n\t\t}\n\n\t\tisFrontFacing(direction) {\n\t\t\treturn Triangle.isFrontFacing(this.a, this.b, this.c, direction);\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\treturn box.intersectsTriangle(this);\n\t\t}\n\n\t\tclosestPointToPoint(p, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Triangle: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tconst a = this.a,\n\t\t\t\t\t\tb = this.b,\n\t\t\t\t\t\tc = this.c;\n\t\t\tlet v, w; // algorithm thanks to Real-Time Collision Detection by Christer Ericson,\n\t\t\t// published by Morgan Kaufmann Publishers, (c) 2005 Elsevier Inc.,\n\t\t\t// under the accompanying license; see chapter 5.1.5 for detailed explanation.\n\t\t\t// basically, we're distinguishing which of the voronoi regions of the triangle\n\t\t\t// the point lies in with the minimum amount of redundant computation.\n\n\t\t\t_vab.subVectors(b, a);\n\n\t\t\t_vac.subVectors(c, a);\n\n\t\t\t_vap.subVectors(p, a);\n\n\t\t\tconst d1 = _vab.dot(_vap);\n\n\t\t\tconst d2 = _vac.dot(_vap);\n\n\t\t\tif (d1 <= 0 && d2 <= 0) {\n\t\t\t\t// vertex region of A; barycentric coords (1, 0, 0)\n\t\t\t\treturn target.copy(a);\n\t\t\t}\n\n\t\t\t_vbp.subVectors(p, b);\n\n\t\t\tconst d3 = _vab.dot(_vbp);\n\n\t\t\tconst d4 = _vac.dot(_vbp);\n\n\t\t\tif (d3 >= 0 && d4 <= d3) {\n\t\t\t\t// vertex region of B; barycentric coords (0, 1, 0)\n\t\t\t\treturn target.copy(b);\n\t\t\t}\n\n\t\t\tconst vc = d1 * d4 - d3 * d2;\n\n\t\t\tif (vc <= 0 && d1 >= 0 && d3 <= 0) {\n\t\t\t\tv = d1 / (d1 - d3); // edge region of AB; barycentric coords (1-v, v, 0)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vab, v);\n\t\t\t}\n\n\t\t\t_vcp.subVectors(p, c);\n\n\t\t\tconst d5 = _vab.dot(_vcp);\n\n\t\t\tconst d6 = _vac.dot(_vcp);\n\n\t\t\tif (d6 >= 0 && d5 <= d6) {\n\t\t\t\t// vertex region of C; barycentric coords (0, 0, 1)\n\t\t\t\treturn target.copy(c);\n\t\t\t}\n\n\t\t\tconst vb = d5 * d2 - d1 * d6;\n\n\t\t\tif (vb <= 0 && d2 >= 0 && d6 <= 0) {\n\t\t\t\tw = d2 / (d2 - d6); // edge region of AC; barycentric coords (1-w, 0, w)\n\n\t\t\t\treturn target.copy(a).addScaledVector(_vac, w);\n\t\t\t}\n\n\t\t\tconst va = d3 * d6 - d5 * d4;\n\n\t\t\tif (va <= 0 && d4 - d3 >= 0 && d5 - d6 >= 0) {\n\t\t\t\t_vbc.subVectors(c, b);\n\n\t\t\t\tw = (d4 - d3) / (d4 - d3 + (d5 - d6)); // edge region of BC; barycentric coords (0, 1-w, w)\n\n\t\t\t\treturn target.copy(b).addScaledVector(_vbc, w); // edge region of BC\n\t\t\t} // face region\n\n\n\t\t\tconst denom = 1 / (va + vb + vc); // u = va * denom\n\n\t\t\tv = vb * denom;\n\t\t\tw = vc * denom;\n\t\t\treturn target.copy(a).addScaledVector(_vab, v).addScaledVector(_vac, w);\n\t\t}\n\n\t\tequals(triangle) {\n\t\t\treturn triangle.a.equals(this.a) && triangle.b.equals(this.b) && triangle.c.equals(this.c);\n\t\t}\n\n\t}\n\n\tlet materialId = 0;\n\n\tclass Material extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: materialId++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'Material';\n\t\t\tthis.fog = true;\n\t\t\tthis.blending = NormalBlending;\n\t\t\tthis.side = FrontSide;\n\t\t\tthis.vertexColors = false;\n\t\t\tthis.opacity = 1;\n\t\t\tthis.transparent = false;\n\t\t\tthis.blendSrc = SrcAlphaFactor;\n\t\t\tthis.blendDst = OneMinusSrcAlphaFactor;\n\t\t\tthis.blendEquation = AddEquation;\n\t\t\tthis.blendSrcAlpha = null;\n\t\t\tthis.blendDstAlpha = null;\n\t\t\tthis.blendEquationAlpha = null;\n\t\t\tthis.depthFunc = LessEqualDepth;\n\t\t\tthis.depthTest = true;\n\t\t\tthis.depthWrite = true;\n\t\t\tthis.stencilWriteMask = 0xff;\n\t\t\tthis.stencilFunc = AlwaysStencilFunc;\n\t\t\tthis.stencilRef = 0;\n\t\t\tthis.stencilFuncMask = 0xff;\n\t\t\tthis.stencilFail = KeepStencilOp;\n\t\t\tthis.stencilZFail = KeepStencilOp;\n\t\t\tthis.stencilZPass = KeepStencilOp;\n\t\t\tthis.stencilWrite = false;\n\t\t\tthis.clippingPlanes = null;\n\t\t\tthis.clipIntersection = false;\n\t\t\tthis.clipShadows = false;\n\t\t\tthis.shadowSide = null;\n\t\t\tthis.colorWrite = true;\n\t\t\tthis.precision = null; // override the renderer's default precision for this material\n\n\t\t\tthis.polygonOffset = false;\n\t\t\tthis.polygonOffsetFactor = 0;\n\t\t\tthis.polygonOffsetUnits = 0;\n\t\t\tthis.dithering = false;\n\t\t\tthis.alphaTest = 0;\n\t\t\tthis.alphaToCoverage = false;\n\t\t\tthis.premultipliedAlpha = false;\n\t\t\tthis.visible = true;\n\t\t\tthis.toneMapped = true;\n\t\t\tthis.userData = {};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonBuild()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tonBeforeCompile()\n\t\t/* shaderobject, renderer */\n\t\t{}\n\n\t\tcustomProgramCacheKey() {\n\t\t\treturn this.onBeforeCompile.toString();\n\t\t}\n\n\t\tsetValues(values) {\n\t\t\tif (values === undefined) return;\n\n\t\t\tfor (const key in values) {\n\t\t\t\tconst newValue = values[key];\n\n\t\t\t\tif (newValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Material: \\'' + key + '\\' parameter is undefined.');\n\t\t\t\t\tcontinue;\n\t\t\t\t} // for backward compatability if shading is set in the constructor\n\n\n\t\t\t\tif (key === 'shading') {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\t\tthis.flatShading = newValue === FlatShading ? true : false;\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tconst currentValue = this[key];\n\n\t\t\t\tif (currentValue === undefined) {\n\t\t\t\t\tconsole.warn('THREE.' + this.type + ': \\'' + key + '\\' is not a property of this material.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (currentValue && currentValue.isColor) {\n\t\t\t\t\tcurrentValue.set(newValue);\n\t\t\t\t} else if (currentValue && currentValue.isVector3 && newValue && newValue.isVector3) {\n\t\t\t\t\tcurrentValue.copy(newValue);\n\t\t\t\t} else {\n\t\t\t\t\tthis[key] = newValue;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst isRoot = meta === undefined || typeof meta === 'string';\n\n\t\t\tif (isRoot) {\n\t\t\t\tmeta = {\n\t\t\t\t\ttextures: {},\n\t\t\t\t\timages: {}\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Material',\n\t\t\t\t\tgenerator: 'Material.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard Material serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.color && this.color.isColor) data.color = this.color.getHex();\n\t\t\tif (this.roughness !== undefined) data.roughness = this.roughness;\n\t\t\tif (this.metalness !== undefined) data.metalness = this.metalness;\n\t\t\tif (this.sheen && this.sheen.isColor) data.sheen = this.sheen.getHex();\n\t\t\tif (this.emissive && this.emissive.isColor) data.emissive = this.emissive.getHex();\n\t\t\tif (this.emissiveIntensity && this.emissiveIntensity !== 1) data.emissiveIntensity = this.emissiveIntensity;\n\t\t\tif (this.specular && this.specular.isColor) data.specular = this.specular.getHex();\n\t\t\tif (this.shininess !== undefined) data.shininess = this.shininess;\n\t\t\tif (this.clearcoat !== undefined) data.clearcoat = this.clearcoat;\n\t\t\tif (this.clearcoatRoughness !== undefined) data.clearcoatRoughness = this.clearcoatRoughness;\n\n\t\t\tif (this.clearcoatMap && this.clearcoatMap.isTexture) {\n\t\t\t\tdata.clearcoatMap = this.clearcoatMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatRoughnessMap && this.clearcoatRoughnessMap.isTexture) {\n\t\t\t\tdata.clearcoatRoughnessMap = this.clearcoatRoughnessMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.clearcoatNormalMap && this.clearcoatNormalMap.isTexture) {\n\t\t\t\tdata.clearcoatNormalMap = this.clearcoatNormalMap.toJSON(meta).uuid;\n\t\t\t\tdata.clearcoatNormalScale = this.clearcoatNormalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.map && this.map.isTexture) data.map = this.map.toJSON(meta).uuid;\n\t\t\tif (this.matcap && this.matcap.isTexture) data.matcap = this.matcap.toJSON(meta).uuid;\n\t\t\tif (this.alphaMap && this.alphaMap.isTexture) data.alphaMap = this.alphaMap.toJSON(meta).uuid;\n\n\t\t\tif (this.lightMap && this.lightMap.isTexture) {\n\t\t\t\tdata.lightMap = this.lightMap.toJSON(meta).uuid;\n\t\t\t\tdata.lightMapIntensity = this.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.aoMap && this.aoMap.isTexture) {\n\t\t\t\tdata.aoMap = this.aoMap.toJSON(meta).uuid;\n\t\t\t\tdata.aoMapIntensity = this.aoMapIntensity;\n\t\t\t}\n\n\t\t\tif (this.bumpMap && this.bumpMap.isTexture) {\n\t\t\t\tdata.bumpMap = this.bumpMap.toJSON(meta).uuid;\n\t\t\t\tdata.bumpScale = this.bumpScale;\n\t\t\t}\n\n\t\t\tif (this.normalMap && this.normalMap.isTexture) {\n\t\t\t\tdata.normalMap = this.normalMap.toJSON(meta).uuid;\n\t\t\t\tdata.normalMapType = this.normalMapType;\n\t\t\t\tdata.normalScale = this.normalScale.toArray();\n\t\t\t}\n\n\t\t\tif (this.displacementMap && this.displacementMap.isTexture) {\n\t\t\t\tdata.displacementMap = this.displacementMap.toJSON(meta).uuid;\n\t\t\t\tdata.displacementScale = this.displacementScale;\n\t\t\t\tdata.displacementBias = this.displacementBias;\n\t\t\t}\n\n\t\t\tif (this.roughnessMap && this.roughnessMap.isTexture) data.roughnessMap = this.roughnessMap.toJSON(meta).uuid;\n\t\t\tif (this.metalnessMap && this.metalnessMap.isTexture) data.metalnessMap = this.metalnessMap.toJSON(meta).uuid;\n\t\t\tif (this.emissiveMap && this.emissiveMap.isTexture) data.emissiveMap = this.emissiveMap.toJSON(meta).uuid;\n\t\t\tif (this.specularMap && this.specularMap.isTexture) data.specularMap = this.specularMap.toJSON(meta).uuid;\n\n\t\t\tif (this.envMap && this.envMap.isTexture) {\n\t\t\t\tdata.envMap = this.envMap.toJSON(meta).uuid;\n\t\t\t\tif (this.combine !== undefined) data.combine = this.combine;\n\t\t\t}\n\n\t\t\tif (this.envMapIntensity !== undefined) data.envMapIntensity = this.envMapIntensity;\n\t\t\tif (this.reflectivity !== undefined) data.reflectivity = this.reflectivity;\n\t\t\tif (this.refractionRatio !== undefined) data.refractionRatio = this.refractionRatio;\n\n\t\t\tif (this.gradientMap && this.gradientMap.isTexture) {\n\t\t\t\tdata.gradientMap = this.gradientMap.toJSON(meta).uuid;\n\t\t\t}\n\n\t\t\tif (this.transmission !== undefined) data.transmission = this.transmission;\n\t\t\tif (this.transmissionMap && this.transmissionMap.isTexture) data.transmissionMap = this.transmissionMap.toJSON(meta).uuid;\n\t\t\tif (this.thickness !== undefined) data.thickness = this.thickness;\n\t\t\tif (this.thicknessMap && this.thicknessMap.isTexture) data.thicknessMap = this.thicknessMap.toJSON(meta).uuid;\n\t\t\tif (this.attenuationDistance !== undefined) data.attenuationDistance = this.attenuationDistance;\n\t\t\tif (this.attenuationColor !== undefined) data.attenuationColor = this.attenuationColor.getHex();\n\t\t\tif (this.size !== undefined) data.size = this.size;\n\t\t\tif (this.shadowSide !== null) data.shadowSide = this.shadowSide;\n\t\t\tif (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n\t\t\tif (this.blending !== NormalBlending) data.blending = this.blending;\n\t\t\tif (this.side !== FrontSide) data.side = this.side;\n\t\t\tif (this.vertexColors) data.vertexColors = true;\n\t\t\tif (this.opacity < 1) data.opacity = this.opacity;\n\t\t\tif (this.transparent === true) data.transparent = this.transparent;\n\t\t\tdata.depthFunc = this.depthFunc;\n\t\t\tdata.depthTest = this.depthTest;\n\t\t\tdata.depthWrite = this.depthWrite;\n\t\t\tdata.colorWrite = this.colorWrite;\n\t\t\tdata.stencilWrite = this.stencilWrite;\n\t\t\tdata.stencilWriteMask = this.stencilWriteMask;\n\t\t\tdata.stencilFunc = this.stencilFunc;\n\t\t\tdata.stencilRef = this.stencilRef;\n\t\t\tdata.stencilFuncMask = this.stencilFuncMask;\n\t\t\tdata.stencilFail = this.stencilFail;\n\t\t\tdata.stencilZFail = this.stencilZFail;\n\t\t\tdata.stencilZPass = this.stencilZPass; // rotation (SpriteMaterial)\n\n\t\t\tif (this.rotation && this.rotation !== 0) data.rotation = this.rotation;\n\t\t\tif (this.polygonOffset === true) data.polygonOffset = true;\n\t\t\tif (this.polygonOffsetFactor !== 0) data.polygonOffsetFactor = this.polygonOffsetFactor;\n\t\t\tif (this.polygonOffsetUnits !== 0) data.polygonOffsetUnits = this.polygonOffsetUnits;\n\t\t\tif (this.linewidth && this.linewidth !== 1) data.linewidth = this.linewidth;\n\t\t\tif (this.dashSize !== undefined) data.dashSize = this.dashSize;\n\t\t\tif (this.gapSize !== undefined) data.gapSize = this.gapSize;\n\t\t\tif (this.scale !== undefined) data.scale = this.scale;\n\t\t\tif (this.dithering === true) data.dithering = true;\n\t\t\tif (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n\t\t\tif (this.alphaToCoverage === true) data.alphaToCoverage = this.alphaToCoverage;\n\t\t\tif (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n\t\t\tif (this.wireframe === true) data.wireframe = this.wireframe;\n\t\t\tif (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n\t\t\tif (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n\t\t\tif (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n\t\t\tif (this.morphTargets === true) data.morphTargets = true;\n\t\t\tif (this.morphNormals === true) data.morphNormals = true;\n\t\t\tif (this.flatShading === true) data.flatShading = this.flatShading;\n\t\t\tif (this.visible === false) data.visible = false;\n\t\t\tif (this.toneMapped === false) data.toneMapped = false;\n\t\t\tif (JSON.stringify(this.userData) !== '{}') data.userData = this.userData; // TODO: Copied from Object3D.toJSON\n\n\t\t\tfunction extractFromCache(cache) {\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (const key in cache) {\n\t\t\t\t\tconst data = cache[key];\n\t\t\t\t\tdelete data.metadata;\n\t\t\t\t\tvalues.push(data);\n\t\t\t\t}\n\n\t\t\t\treturn values;\n\t\t\t}\n\n\t\t\tif (isRoot) {\n\t\t\t\tconst textures = extractFromCache(meta.textures);\n\t\t\t\tconst images = extractFromCache(meta.images);\n\t\t\t\tif (textures.length > 0) data.textures = textures;\n\t\t\t\tif (images.length > 0) data.images = images;\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.fog = source.fog;\n\t\t\tthis.blending = source.blending;\n\t\t\tthis.side = source.side;\n\t\t\tthis.vertexColors = source.vertexColors;\n\t\t\tthis.opacity = source.opacity;\n\t\t\tthis.transparent = source.transparent;\n\t\t\tthis.blendSrc = source.blendSrc;\n\t\t\tthis.blendDst = source.blendDst;\n\t\t\tthis.blendEquation = source.blendEquation;\n\t\t\tthis.blendSrcAlpha = source.blendSrcAlpha;\n\t\t\tthis.blendDstAlpha = source.blendDstAlpha;\n\t\t\tthis.blendEquationAlpha = source.blendEquationAlpha;\n\t\t\tthis.depthFunc = source.depthFunc;\n\t\t\tthis.depthTest = source.depthTest;\n\t\t\tthis.depthWrite = source.depthWrite;\n\t\t\tthis.stencilWriteMask = source.stencilWriteMask;\n\t\t\tthis.stencilFunc = source.stencilFunc;\n\t\t\tthis.stencilRef = source.stencilRef;\n\t\t\tthis.stencilFuncMask = source.stencilFuncMask;\n\t\t\tthis.stencilFail = source.stencilFail;\n\t\t\tthis.stencilZFail = source.stencilZFail;\n\t\t\tthis.stencilZPass = source.stencilZPass;\n\t\t\tthis.stencilWrite = source.stencilWrite;\n\t\t\tconst srcPlanes = source.clippingPlanes;\n\t\t\tlet dstPlanes = null;\n\n\t\t\tif (srcPlanes !== null) {\n\t\t\t\tconst n = srcPlanes.length;\n\t\t\t\tdstPlanes = new Array(n);\n\n\t\t\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\t\t\tdstPlanes[i] = srcPlanes[i].clone();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.clippingPlanes = dstPlanes;\n\t\t\tthis.clipIntersection = source.clipIntersection;\n\t\t\tthis.clipShadows = source.clipShadows;\n\t\t\tthis.shadowSide = source.shadowSide;\n\t\t\tthis.colorWrite = source.colorWrite;\n\t\t\tthis.precision = source.precision;\n\t\t\tthis.polygonOffset = source.polygonOffset;\n\t\t\tthis.polygonOffsetFactor = source.polygonOffsetFactor;\n\t\t\tthis.polygonOffsetUnits = source.polygonOffsetUnits;\n\t\t\tthis.dithering = source.dithering;\n\t\t\tthis.alphaTest = source.alphaTest;\n\t\t\tthis.alphaToCoverage = source.alphaToCoverage;\n\t\t\tthis.premultipliedAlpha = source.premultipliedAlpha;\n\t\t\tthis.visible = source.visible;\n\t\t\tthis.toneMapped = source.toneMapped;\n\t\t\tthis.userData = JSON.parse(JSON.stringify(source.userData));\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t}\n\n\tMaterial.prototype.isMaterial = true;\n\n\tconst _colorKeywords = {\n\t\t'aliceblue': 0xF0F8FF,\n\t\t'antiquewhite': 0xFAEBD7,\n\t\t'aqua': 0x00FFFF,\n\t\t'aquamarine': 0x7FFFD4,\n\t\t'azure': 0xF0FFFF,\n\t\t'beige': 0xF5F5DC,\n\t\t'bisque': 0xFFE4C4,\n\t\t'black': 0x000000,\n\t\t'blanchedalmond': 0xFFEBCD,\n\t\t'blue': 0x0000FF,\n\t\t'blueviolet': 0x8A2BE2,\n\t\t'brown': 0xA52A2A,\n\t\t'burlywood': 0xDEB887,\n\t\t'cadetblue': 0x5F9EA0,\n\t\t'chartreuse': 0x7FFF00,\n\t\t'chocolate': 0xD2691E,\n\t\t'coral': 0xFF7F50,\n\t\t'cornflowerblue': 0x6495ED,\n\t\t'cornsilk': 0xFFF8DC,\n\t\t'crimson': 0xDC143C,\n\t\t'cyan': 0x00FFFF,\n\t\t'darkblue': 0x00008B,\n\t\t'darkcyan': 0x008B8B,\n\t\t'darkgoldenrod': 0xB8860B,\n\t\t'darkgray': 0xA9A9A9,\n\t\t'darkgreen': 0x006400,\n\t\t'darkgrey': 0xA9A9A9,\n\t\t'darkkhaki': 0xBDB76B,\n\t\t'darkmagenta': 0x8B008B,\n\t\t'darkolivegreen': 0x556B2F,\n\t\t'darkorange': 0xFF8C00,\n\t\t'darkorchid': 0x9932CC,\n\t\t'darkred': 0x8B0000,\n\t\t'darksalmon': 0xE9967A,\n\t\t'darkseagreen': 0x8FBC8F,\n\t\t'darkslateblue': 0x483D8B,\n\t\t'darkslategray': 0x2F4F4F,\n\t\t'darkslategrey': 0x2F4F4F,\n\t\t'darkturquoise': 0x00CED1,\n\t\t'darkviolet': 0x9400D3,\n\t\t'deeppink': 0xFF1493,\n\t\t'deepskyblue': 0x00BFFF,\n\t\t'dimgray': 0x696969,\n\t\t'dimgrey': 0x696969,\n\t\t'dodgerblue': 0x1E90FF,\n\t\t'firebrick': 0xB22222,\n\t\t'floralwhite': 0xFFFAF0,\n\t\t'forestgreen': 0x228B22,\n\t\t'fuchsia': 0xFF00FF,\n\t\t'gainsboro': 0xDCDCDC,\n\t\t'ghostwhite': 0xF8F8FF,\n\t\t'gold': 0xFFD700,\n\t\t'goldenrod': 0xDAA520,\n\t\t'gray': 0x808080,\n\t\t'green': 0x008000,\n\t\t'greenyellow': 0xADFF2F,\n\t\t'grey': 0x808080,\n\t\t'honeydew': 0xF0FFF0,\n\t\t'hotpink': 0xFF69B4,\n\t\t'indianred': 0xCD5C5C,\n\t\t'indigo': 0x4B0082,\n\t\t'ivory': 0xFFFFF0,\n\t\t'khaki': 0xF0E68C,\n\t\t'lavender': 0xE6E6FA,\n\t\t'lavenderblush': 0xFFF0F5,\n\t\t'lawngreen': 0x7CFC00,\n\t\t'lemonchiffon': 0xFFFACD,\n\t\t'lightblue': 0xADD8E6,\n\t\t'lightcoral': 0xF08080,\n\t\t'lightcyan': 0xE0FFFF,\n\t\t'lightgoldenrodyellow': 0xFAFAD2,\n\t\t'lightgray': 0xD3D3D3,\n\t\t'lightgreen': 0x90EE90,\n\t\t'lightgrey': 0xD3D3D3,\n\t\t'lightpink': 0xFFB6C1,\n\t\t'lightsalmon': 0xFFA07A,\n\t\t'lightseagreen': 0x20B2AA,\n\t\t'lightskyblue': 0x87CEFA,\n\t\t'lightslategray': 0x778899,\n\t\t'lightslategrey': 0x778899,\n\t\t'lightsteelblue': 0xB0C4DE,\n\t\t'lightyellow': 0xFFFFE0,\n\t\t'lime': 0x00FF00,\n\t\t'limegreen': 0x32CD32,\n\t\t'linen': 0xFAF0E6,\n\t\t'magenta': 0xFF00FF,\n\t\t'maroon': 0x800000,\n\t\t'mediumaquamarine': 0x66CDAA,\n\t\t'mediumblue': 0x0000CD,\n\t\t'mediumorchid': 0xBA55D3,\n\t\t'mediumpurple': 0x9370DB,\n\t\t'mediumseagreen': 0x3CB371,\n\t\t'mediumslateblue': 0x7B68EE,\n\t\t'mediumspringgreen': 0x00FA9A,\n\t\t'mediumturquoise': 0x48D1CC,\n\t\t'mediumvioletred': 0xC71585,\n\t\t'midnightblue': 0x191970,\n\t\t'mintcream': 0xF5FFFA,\n\t\t'mistyrose': 0xFFE4E1,\n\t\t'moccasin': 0xFFE4B5,\n\t\t'navajowhite': 0xFFDEAD,\n\t\t'navy': 0x000080,\n\t\t'oldlace': 0xFDF5E6,\n\t\t'olive': 0x808000,\n\t\t'olivedrab': 0x6B8E23,\n\t\t'orange': 0xFFA500,\n\t\t'orangered': 0xFF4500,\n\t\t'orchid': 0xDA70D6,\n\t\t'palegoldenrod': 0xEEE8AA,\n\t\t'palegreen': 0x98FB98,\n\t\t'paleturquoise': 0xAFEEEE,\n\t\t'palevioletred': 0xDB7093,\n\t\t'papayawhip': 0xFFEFD5,\n\t\t'peachpuff': 0xFFDAB9,\n\t\t'peru': 0xCD853F,\n\t\t'pink': 0xFFC0CB,\n\t\t'plum': 0xDDA0DD,\n\t\t'powderblue': 0xB0E0E6,\n\t\t'purple': 0x800080,\n\t\t'rebeccapurple': 0x663399,\n\t\t'red': 0xFF0000,\n\t\t'rosybrown': 0xBC8F8F,\n\t\t'royalblue': 0x4169E1,\n\t\t'saddlebrown': 0x8B4513,\n\t\t'salmon': 0xFA8072,\n\t\t'sandybrown': 0xF4A460,\n\t\t'seagreen': 0x2E8B57,\n\t\t'seashell': 0xFFF5EE,\n\t\t'sienna': 0xA0522D,\n\t\t'silver': 0xC0C0C0,\n\t\t'skyblue': 0x87CEEB,\n\t\t'slateblue': 0x6A5ACD,\n\t\t'slategray': 0x708090,\n\t\t'slategrey': 0x708090,\n\t\t'snow': 0xFFFAFA,\n\t\t'springgreen': 0x00FF7F,\n\t\t'steelblue': 0x4682B4,\n\t\t'tan': 0xD2B48C,\n\t\t'teal': 0x008080,\n\t\t'thistle': 0xD8BFD8,\n\t\t'tomato': 0xFF6347,\n\t\t'turquoise': 0x40E0D0,\n\t\t'violet': 0xEE82EE,\n\t\t'wheat': 0xF5DEB3,\n\t\t'white': 0xFFFFFF,\n\t\t'whitesmoke': 0xF5F5F5,\n\t\t'yellow': 0xFFFF00,\n\t\t'yellowgreen': 0x9ACD32\n\t};\n\tconst _hslA = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\tconst _hslB = {\n\t\th: 0,\n\t\ts: 0,\n\t\tl: 0\n\t};\n\n\tfunction hue2rgb(p, q, t) {\n\t\tif (t < 0) t += 1;\n\t\tif (t > 1) t -= 1;\n\t\tif (t < 1 / 6) return p + (q - p) * 6 * t;\n\t\tif (t < 1 / 2) return q;\n\t\tif (t < 2 / 3) return p + (q - p) * 6 * (2 / 3 - t);\n\t\treturn p;\n\t}\n\n\tfunction SRGBToLinear(c) {\n\t\treturn c < 0.04045 ? c * 0.0773993808 : Math.pow(c * 0.9478672986 + 0.0521327014, 2.4);\n\t}\n\n\tfunction LinearToSRGB(c) {\n\t\treturn c < 0.0031308 ? c * 12.92 : 1.055 * Math.pow(c, 0.41666) - 0.055;\n\t}\n\n\tclass Color {\n\t\tconstructor(r, g, b) {\n\t\t\tif (g === undefined && b === undefined) {\n\t\t\t\t// r is THREE.Color, hex or string\n\t\t\t\treturn this.set(r);\n\t\t\t}\n\n\t\t\treturn this.setRGB(r, g, b);\n\t\t}\n\n\t\tset(value) {\n\t\t\tif (value && value.isColor) {\n\t\t\t\tthis.copy(value);\n\t\t\t} else if (typeof value === 'number') {\n\t\t\t\tthis.setHex(value);\n\t\t\t} else if (typeof value === 'string') {\n\t\t\t\tthis.setStyle(value);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetScalar(scalar) {\n\t\t\tthis.r = scalar;\n\t\t\tthis.g = scalar;\n\t\t\tthis.b = scalar;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHex(hex) {\n\t\t\thex = Math.floor(hex);\n\t\t\tthis.r = (hex >> 16 & 255) / 255;\n\t\t\tthis.g = (hex >> 8 & 255) / 255;\n\t\t\tthis.b = (hex & 255) / 255;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRGB(r, g, b) {\n\t\t\tthis.r = r;\n\t\t\tthis.g = g;\n\t\t\tthis.b = b;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetHSL(h, s, l) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\th = euclideanModulo(h, 1);\n\t\t\ts = clamp(s, 0, 1);\n\t\t\tl = clamp(l, 0, 1);\n\n\t\t\tif (s === 0) {\n\t\t\t\tthis.r = this.g = this.b = l;\n\t\t\t} else {\n\t\t\t\tconst p = l <= 0.5 ? l * (1 + s) : l + s - l * s;\n\t\t\t\tconst q = 2 * l - p;\n\t\t\t\tthis.r = hue2rgb(q, p, h + 1 / 3);\n\t\t\t\tthis.g = hue2rgb(q, p, h);\n\t\t\t\tthis.b = hue2rgb(q, p, h - 1 / 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetStyle(style) {\n\t\t\tfunction handleAlpha(string) {\n\t\t\t\tif (string === undefined) return;\n\n\t\t\t\tif (parseFloat(string) < 1) {\n\t\t\t\t\tconsole.warn('THREE.Color: Alpha component of ' + style + ' will be ignored.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet m;\n\n\t\t\tif (m = /^((?:rgb|hsl)a?)\\(([^\\)]*)\\)/.exec(style)) {\n\t\t\t\t// rgb / hsl\n\t\t\t\tlet color;\n\t\t\t\tconst name = m[1];\n\t\t\t\tconst components = m[2];\n\n\t\t\t\tswitch (name) {\n\t\t\t\t\tcase 'rgb':\n\t\t\t\t\tcase 'rgba':\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\s*,\\s*(\\d+)\\s*,\\s*(\\d+)\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(255,0,0) rgba(255,0,0,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(255, parseInt(color[1], 10)) / 255;\n\t\t\t\t\t\t\tthis.g = Math.min(255, parseInt(color[2], 10)) / 255;\n\t\t\t\t\t\t\tthis.b = Math.min(255, parseInt(color[3], 10)) / 255;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (color = /^\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// rgb(100%,0%,0%) rgba(100%,0%,0%,0.5)\n\t\t\t\t\t\t\tthis.r = Math.min(100, parseInt(color[1], 10)) / 100;\n\t\t\t\t\t\t\tthis.g = Math.min(100, parseInt(color[2], 10)) / 100;\n\t\t\t\t\t\t\tthis.b = Math.min(100, parseInt(color[3], 10)) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'hsl':\n\t\t\t\t\tcase 'hsla':\n\t\t\t\t\t\tif (color = /^\\s*(\\d*\\.?\\d+)\\s*,\\s*(\\d+)\\%\\s*,\\s*(\\d+)\\%\\s*(?:,\\s*(\\d*\\.?\\d+)\\s*)?$/.exec(components)) {\n\t\t\t\t\t\t\t// hsl(120,50%,50%) hsla(120,50%,50%,0.5)\n\t\t\t\t\t\t\tconst h = parseFloat(color[1]) / 360;\n\t\t\t\t\t\t\tconst s = parseInt(color[2], 10) / 100;\n\t\t\t\t\t\t\tconst l = parseInt(color[3], 10) / 100;\n\t\t\t\t\t\t\thandleAlpha(color[4]);\n\t\t\t\t\t\t\treturn this.setHSL(h, s, l);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t} else if (m = /^\\#([A-Fa-f\\d]+)$/.exec(style)) {\n\t\t\t\t// hex color\n\t\t\t\tconst hex = m[1];\n\t\t\t\tconst size = hex.length;\n\n\t\t\t\tif (size === 3) {\n\t\t\t\t\t// #ff0\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(0), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(1) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(2) + hex.charAt(2), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t} else if (size === 6) {\n\t\t\t\t\t// #ff0000\n\t\t\t\t\tthis.r = parseInt(hex.charAt(0) + hex.charAt(1), 16) / 255;\n\t\t\t\t\tthis.g = parseInt(hex.charAt(2) + hex.charAt(3), 16) / 255;\n\t\t\t\t\tthis.b = parseInt(hex.charAt(4) + hex.charAt(5), 16) / 255;\n\t\t\t\t\treturn this;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (style && style.length > 0) {\n\t\t\t\treturn this.setColorName(style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetColorName(style) {\n\t\t\t// color keywords\n\t\t\tconst hex = _colorKeywords[style.toLowerCase()];\n\n\t\t\tif (hex !== undefined) {\n\t\t\t\t// red\n\t\t\t\tthis.setHex(hex);\n\t\t\t} else {\n\t\t\t\t// unknown color\n\t\t\t\tconsole.warn('THREE.Color: Unknown color ' + style);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.r, this.g, this.b);\n\t\t}\n\n\t\tcopy(color) {\n\t\t\tthis.r = color.r;\n\t\t\tthis.g = color.g;\n\t\t\tthis.b = color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyGammaToLinear(color, gammaFactor = 2.0) {\n\t\t\tthis.r = Math.pow(color.r, gammaFactor);\n\t\t\tthis.g = Math.pow(color.g, gammaFactor);\n\t\t\tthis.b = Math.pow(color.b, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToGamma(color, gammaFactor = 2.0) {\n\t\t\tconst safeInverse = gammaFactor > 0 ? 1.0 / gammaFactor : 1.0;\n\t\t\tthis.r = Math.pow(color.r, safeInverse);\n\t\t\tthis.g = Math.pow(color.g, safeInverse);\n\t\t\tthis.b = Math.pow(color.b, safeInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertGammaToLinear(gammaFactor) {\n\t\t\tthis.copyGammaToLinear(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToGamma(gammaFactor) {\n\t\t\tthis.copyLinearToGamma(this, gammaFactor);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopySRGBToLinear(color) {\n\t\t\tthis.r = SRGBToLinear(color.r);\n\t\t\tthis.g = SRGBToLinear(color.g);\n\t\t\tthis.b = SRGBToLinear(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyLinearToSRGB(color) {\n\t\t\tthis.r = LinearToSRGB(color.r);\n\t\t\tthis.g = LinearToSRGB(color.g);\n\t\t\tthis.b = LinearToSRGB(color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertSRGBToLinear() {\n\t\t\tthis.copySRGBToLinear(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tconvertLinearToSRGB() {\n\t\t\tthis.copyLinearToSRGB(this);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetHex() {\n\t\t\treturn this.r * 255 << 16 ^ this.g * 255 << 8 ^ this.b * 255 << 0;\n\t\t}\n\n\t\tgetHexString() {\n\t\t\treturn ('000000' + this.getHex().toString(16)).slice(-6);\n\t\t}\n\n\t\tgetHSL(target) {\n\t\t\t// h,s,l ranges are in 0.0 - 1.0\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Color: .getHSL() target is now required');\n\t\t\t\ttarget = {\n\t\t\t\t\th: 0,\n\t\t\t\t\ts: 0,\n\t\t\t\t\tl: 0\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst r = this.r,\n\t\t\t\t\t\tg = this.g,\n\t\t\t\t\t\tb = this.b;\n\t\t\tconst max = Math.max(r, g, b);\n\t\t\tconst min = Math.min(r, g, b);\n\t\t\tlet hue, saturation;\n\t\t\tconst lightness = (min + max) / 2.0;\n\n\t\t\tif (min === max) {\n\t\t\t\thue = 0;\n\t\t\t\tsaturation = 0;\n\t\t\t} else {\n\t\t\t\tconst delta = max - min;\n\t\t\t\tsaturation = lightness <= 0.5 ? delta / (max + min) : delta / (2 - max - min);\n\n\t\t\t\tswitch (max) {\n\t\t\t\t\tcase r:\n\t\t\t\t\t\thue = (g - b) / delta + (g < b ? 6 : 0);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase g:\n\t\t\t\t\t\thue = (b - r) / delta + 2;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase b:\n\t\t\t\t\t\thue = (r - g) / delta + 4;\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\thue /= 6;\n\t\t\t}\n\n\t\t\ttarget.h = hue;\n\t\t\ttarget.s = saturation;\n\t\t\ttarget.l = lightness;\n\t\t\treturn target;\n\t\t}\n\n\t\tgetStyle() {\n\t\t\treturn 'rgb(' + (this.r * 255 | 0) + ',' + (this.g * 255 | 0) + ',' + (this.b * 255 | 0) + ')';\n\t\t}\n\n\t\toffsetHSL(h, s, l) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\t_hslA.h += h;\n\t\t\t_hslA.s += s;\n\t\t\t_hslA.l += l;\n\t\t\tthis.setHSL(_hslA.h, _hslA.s, _hslA.l);\n\t\t\treturn this;\n\t\t}\n\n\t\tadd(color) {\n\t\t\tthis.r += color.r;\n\t\t\tthis.g += color.g;\n\t\t\tthis.b += color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddColors(color1, color2) {\n\t\t\tthis.r = color1.r + color2.r;\n\t\t\tthis.g = color1.g + color2.g;\n\t\t\tthis.b = color1.b + color2.b;\n\t\t\treturn this;\n\t\t}\n\n\t\taddScalar(s) {\n\t\t\tthis.r += s;\n\t\t\tthis.g += s;\n\t\t\tthis.b += s;\n\t\t\treturn this;\n\t\t}\n\n\t\tsub(color) {\n\t\t\tthis.r = Math.max(0, this.r - color.r);\n\t\t\tthis.g = Math.max(0, this.g - color.g);\n\t\t\tthis.b = Math.max(0, this.b - color.b);\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiply(color) {\n\t\t\tthis.r *= color.r;\n\t\t\tthis.g *= color.g;\n\t\t\tthis.b *= color.b;\n\t\t\treturn this;\n\t\t}\n\n\t\tmultiplyScalar(s) {\n\t\t\tthis.r *= s;\n\t\t\tthis.g *= s;\n\t\t\tthis.b *= s;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(color, alpha) {\n\t\t\tthis.r += (color.r - this.r) * alpha;\n\t\t\tthis.g += (color.g - this.g) * alpha;\n\t\t\tthis.b += (color.b - this.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpColors(color1, color2, alpha) {\n\t\t\tthis.r = color1.r + (color2.r - color1.r) * alpha;\n\t\t\tthis.g = color1.g + (color2.g - color1.g) * alpha;\n\t\t\tthis.b = color1.b + (color2.b - color1.b) * alpha;\n\t\t\treturn this;\n\t\t}\n\n\t\tlerpHSL(color, alpha) {\n\t\t\tthis.getHSL(_hslA);\n\t\t\tcolor.getHSL(_hslB);\n\t\t\tconst h = lerp(_hslA.h, _hslB.h, alpha);\n\t\t\tconst s = lerp(_hslA.s, _hslB.s, alpha);\n\t\t\tconst l = lerp(_hslA.l, _hslB.l, alpha);\n\t\t\tthis.setHSL(h, s, l);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(c) {\n\t\t\treturn c.r === this.r && c.g === this.g && c.b === this.b;\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tthis.r = array[offset];\n\t\t\tthis.g = array[offset + 1];\n\t\t\tthis.b = array[offset + 2];\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tarray[offset] = this.r;\n\t\t\tarray[offset + 1] = this.g;\n\t\t\tarray[offset + 2] = this.b;\n\t\t\treturn array;\n\t\t}\n\n\t\tfromBufferAttribute(attribute, index) {\n\t\t\tthis.r = attribute.getX(index);\n\t\t\tthis.g = attribute.getY(index);\n\t\t\tthis.b = attribute.getZ(index);\n\n\t\t\tif (attribute.normalized === true) {\n\t\t\t\t// assuming Uint8Array\n\t\t\t\tthis.r /= 255;\n\t\t\t\tthis.g /= 255;\n\t\t\t\tthis.b /= 255;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.getHex();\n\t\t}\n\n\t}\n\n\tColor.NAMES = _colorKeywords;\n\tColor.prototype.isColor = true;\n\tColor.prototype.r = 1;\n\tColor.prototype.g = 1;\n\tColor.prototype.b = 1;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\tdepthTest: <bool>,\n\t *\tdepthWrite: <bool>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass MeshBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff); // emissive\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshBasicMaterial.prototype.isMeshBasicMaterial = true;\n\n\tconst _vector$9 = /*@__PURE__*/new Vector3();\n\n\tconst _vector2 = /*@__PURE__*/new Vector2();\n\n\tclass BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tif (Array.isArray(array)) {\n\t\t\t\tthrow new TypeError('THREE.BufferAttribute: array should be a Typed Array.');\n\t\t\t}\n\n\t\t\tthis.name = '';\n\t\t\tthis.array = array;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.count = array !== undefined ? array.length / itemSize : 0;\n\t\t\tthis.normalized = normalized === true;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.name = source.name;\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.itemSize = source.itemSize;\n\t\t\tthis.count = source.count;\n\t\t\tthis.normalized = source.normalized;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.itemSize;\n\t\t\tindex2 *= attribute.itemSize;\n\n\t\t\tfor (let i = 0, l = this.itemSize; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyArray(array) {\n\t\t\tthis.array.set(array);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyColorsArray(colors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = colors.length; i < l; i++) {\n\t\t\t\tlet color = colors[i];\n\n\t\t\t\tif (color === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyColorsArray(): color is undefined', i);\n\t\t\t\t\tcolor = new Color();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = color.r;\n\t\t\t\tarray[offset++] = color.g;\n\t\t\t\tarray[offset++] = color.b;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector2sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector2sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector2();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector3sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector3sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector3();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyVector4sArray(vectors) {\n\t\t\tconst array = this.array;\n\t\t\tlet offset = 0;\n\n\t\t\tfor (let i = 0, l = vectors.length; i < l; i++) {\n\t\t\t\tlet vector = vectors[i];\n\n\t\t\t\tif (vector === undefined) {\n\t\t\t\t\tconsole.warn('THREE.BufferAttribute.copyVector4sArray(): vector is undefined', i);\n\t\t\t\t\tvector = new Vector4();\n\t\t\t\t}\n\n\t\t\t\tarray[offset++] = vector.x;\n\t\t\t\tarray[offset++] = vector.y;\n\t\t\t\tarray[offset++] = vector.z;\n\t\t\t\tarray[offset++] = vector.w;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix3(m) {\n\t\t\tif (this.itemSize === 2) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector2.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector2.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXY(i, _vector2.x, _vector2.y);\n\t\t\t\t}\n\t\t\t} else if (this.itemSize === 3) {\n\t\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t\t_vector$9.fromBufferAttribute(this, i);\n\n\t\t\t\t\t_vector$9.applyMatrix3(m);\n\n\t\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$9.x = this.getX(i);\n\t\t\t\t_vector$9.y = this.getY(i);\n\t\t\t\t_vector$9.z = this.getZ(i);\n\n\t\t\t\t_vector$9.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$9.x, _vector$9.y, _vector$9.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.array[index * this.itemSize];\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.array[index * this.itemSize] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.array[index * this.itemSize + 1];\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.array[index * this.itemSize + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.array[index * this.itemSize + 2];\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.array[index * this.itemSize + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.array[index * this.itemSize + 3];\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.array[index * this.itemSize + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex *= this.itemSize;\n\t\t\tthis.array[index + 0] = x;\n\t\t\tthis.array[index + 1] = y;\n\t\t\tthis.array[index + 2] = z;\n\t\t\tthis.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.array, this.itemSize).copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\titemSize: this.itemSize,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tarray: Array.prototype.slice.call(this.array),\n\t\t\t\tnormalized: this.normalized\n\t\t\t};\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (this.usage !== StaticDrawUsage) data.usage = this.usage;\n\t\t\tif (this.updateRange.offset !== 0 || this.updateRange.count !== -1) data.updateRange = this.updateRange;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tBufferAttribute.prototype.isBufferAttribute = true; //\n\n\tclass Int8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint8ClampedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint8ClampedArray(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Int32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Int32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Uint32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float16BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Uint16Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tFloat16BufferAttribute.prototype.isFloat16BufferAttribute = true;\n\n\tclass Float32BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float32Array(array), itemSize, normalized);\n\t\t}\n\n\t}\n\n\tclass Float64BufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized) {\n\t\t\tsuper(new Float64Array(array), itemSize, normalized);\n\t\t}\n\n\t} //\n\n\tfunction arrayMax(array) {\n\t\tif (array.length === 0) return -Infinity;\n\t\tlet max = array[0];\n\n\t\tfor (let i = 1, l = array.length; i < l; ++i) {\n\t\t\tif (array[i] > max) max = array[i];\n\t\t}\n\n\t\treturn max;\n\t}\n\n\tconst TYPED_ARRAYS = {\n\t\tInt8Array: Int8Array,\n\t\tUint8Array: Uint8Array,\n\t\tUint8ClampedArray: Uint8ClampedArray,\n\t\tInt16Array: Int16Array,\n\t\tUint16Array: Uint16Array,\n\t\tInt32Array: Int32Array,\n\t\tUint32Array: Uint32Array,\n\t\tFloat32Array: Float32Array,\n\t\tFloat64Array: Float64Array\n\t};\n\n\tfunction getTypedArray(type, buffer) {\n\t\treturn new TYPED_ARRAYS[type](buffer);\n\t}\n\n\tlet _id = 0;\n\n\tconst _m1 = /*@__PURE__*/new Matrix4();\n\n\tconst _obj = /*@__PURE__*/new Object3D();\n\n\tconst _offset = /*@__PURE__*/new Vector3();\n\n\tconst _box$1 = /*@__PURE__*/new Box3();\n\n\tconst _boxMorphTargets = /*@__PURE__*/new Box3();\n\n\tconst _vector$8 = /*@__PURE__*/new Vector3();\n\n\tclass BufferGeometry extends EventDispatcher {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tObject.defineProperty(this, 'id', {\n\t\t\t\tvalue: _id++\n\t\t\t});\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.name = '';\n\t\t\tthis.type = 'BufferGeometry';\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.morphTargetsRelative = false;\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null;\n\t\t\tthis.drawRange = {\n\t\t\t\tstart: 0,\n\t\t\t\tcount: Infinity\n\t\t\t};\n\t\t\tthis.userData = {};\n\t\t}\n\n\t\tgetIndex() {\n\t\t\treturn this.index;\n\t\t}\n\n\t\tsetIndex(index) {\n\t\t\tif (Array.isArray(index)) {\n\t\t\t\tthis.index = new (arrayMax(index) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(index, 1);\n\t\t\t} else {\n\t\t\t\tthis.index = index;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetAttribute(name) {\n\t\t\treturn this.attributes[name];\n\t\t}\n\n\t\tsetAttribute(name, attribute) {\n\t\t\tthis.attributes[name] = attribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tdeleteAttribute(name) {\n\t\t\tdelete this.attributes[name];\n\t\t\treturn this;\n\t\t}\n\n\t\thasAttribute(name) {\n\t\t\treturn this.attributes[name] !== undefined;\n\t\t}\n\n\t\taddGroup(start, count, materialIndex = 0) {\n\t\t\tthis.groups.push({\n\t\t\t\tstart: start,\n\t\t\t\tcount: count,\n\t\t\t\tmaterialIndex: materialIndex\n\t\t\t});\n\t\t}\n\n\t\tclearGroups() {\n\t\t\tthis.groups = [];\n\t\t}\n\n\t\tsetDrawRange(start, count) {\n\t\t\tthis.drawRange.start = start;\n\t\t\tthis.drawRange.count = count;\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tconst position = this.attributes.position;\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tposition.applyMatrix4(matrix);\n\t\t\t\tposition.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst normal = this.attributes.normal;\n\n\t\t\tif (normal !== undefined) {\n\t\t\t\tconst normalMatrix = new Matrix3().getNormalMatrix(matrix);\n\t\t\t\tnormal.applyNormalMatrix(normalMatrix);\n\t\t\t\tnormal.needsUpdate = true;\n\t\t\t}\n\n\t\t\tconst tangent = this.attributes.tangent;\n\n\t\t\tif (tangent !== undefined) {\n\t\t\t\ttangent.transformDirection(matrix);\n\t\t\t\ttangent.needsUpdate = true;\n\t\t\t}\n\n\t\t\tif (this.boundingBox !== null) {\n\t\t\t\tthis.computeBoundingBox();\n\t\t\t}\n\n\t\t\tif (this.boundingSphere !== null) {\n\t\t\t\tthis.computeBoundingSphere();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyQuaternion(q) {\n\t\t\t_m1.makeRotationFromQuaternion(q);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateX(angle) {\n\t\t\t// rotate geometry around world x-axis\n\t\t\t_m1.makeRotationX(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateY(angle) {\n\t\t\t// rotate geometry around world y-axis\n\t\t\t_m1.makeRotationY(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\trotateZ(angle) {\n\t\t\t// rotate geometry around world z-axis\n\t\t\t_m1.makeRotationZ(angle);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(x, y, z) {\n\t\t\t// translate geometry\n\t\t\t_m1.makeTranslation(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(x, y, z) {\n\t\t\t// scale geometry\n\t\t\t_m1.makeScale(x, y, z);\n\n\t\t\tthis.applyMatrix4(_m1);\n\t\t\treturn this;\n\t\t}\n\n\t\tlookAt(vector) {\n\t\t\t_obj.lookAt(vector);\n\n\t\t\t_obj.updateMatrix();\n\n\t\t\tthis.applyMatrix4(_obj.matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tcenter() {\n\t\t\tthis.computeBoundingBox();\n\t\t\tthis.boundingBox.getCenter(_offset).negate();\n\t\t\tthis.translate(_offset.x, _offset.y, _offset.z);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tconst position = [];\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tconst point = points[i];\n\t\t\t\tposition.push(point.x, point.y, point.z || 0);\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(position, 3));\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeBoundingBox() {\n\t\t\tif (this.boundingBox === null) {\n\t\t\t\tthis.boundingBox = new Box3();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): GLBufferAttribute requires a manual bounding box. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingBox.set(new Vector3(-Infinity, -Infinity, -Infinity), new Vector3(+Infinity, +Infinity, +Infinity));\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position !== undefined) {\n\t\t\t\tthis.boundingBox.setFromBufferAttribute(position); // process morph attributes if present\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_box$1.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.min, _box$1.min);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(this.boundingBox.max, _box$1.max);\n\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.min);\n\t\t\t\t\t\t\tthis.boundingBox.expandByPoint(_box$1.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tthis.boundingBox.makeEmpty();\n\t\t\t}\n\n\t\t\tif (isNaN(this.boundingBox.min.x) || isNaN(this.boundingBox.min.y) || isNaN(this.boundingBox.min.z)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingBox(): Computed min/max have NaN values. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t}\n\t\t}\n\n\t\tcomputeBoundingSphere() {\n\t\t\tif (this.boundingSphere === null) {\n\t\t\t\tthis.boundingSphere = new Sphere();\n\t\t\t}\n\n\t\t\tconst position = this.attributes.position;\n\t\t\tconst morphAttributesPosition = this.morphAttributes.position;\n\n\t\t\tif (position && position.isGLBufferAttribute) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): GLBufferAttribute requires a manual bounding sphere. Alternatively set \"mesh.frustumCulled\" to \"false\".', this);\n\t\t\t\tthis.boundingSphere.set(new Vector3(), Infinity);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (position) {\n\t\t\t\t// first, find the center of the bounding sphere\n\t\t\t\tconst center = this.boundingSphere.center;\n\n\t\t\t\t_box$1.setFromBufferAttribute(position); // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\n\t\t\t\t\t\t_boxMorphTargets.setFromBufferAttribute(morphAttribute);\n\n\t\t\t\t\t\tif (this.morphTargetsRelative) {\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.min, _boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\n\t\t\t\t\t\t\t_vector$8.addVectors(_box$1.max, _boxMorphTargets.max);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_vector$8);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.min);\n\n\t\t\t\t\t\t\t_box$1.expandByPoint(_boxMorphTargets.max);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\t_box$1.getCenter(center); // second, try to find a boundingSphere with a radius smaller than the\n\t\t\t\t// boundingSphere of the boundingBox: sqrt(3) smaller in the best case\n\n\n\t\t\t\tlet maxRadiusSq = 0;\n\n\t\t\t\tfor (let i = 0, il = position.count; i < il; i++) {\n\t\t\t\t\t_vector$8.fromBufferAttribute(position, i);\n\n\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t} // process morph attributes if present\n\n\n\t\t\t\tif (morphAttributesPosition) {\n\t\t\t\t\tfor (let i = 0, il = morphAttributesPosition.length; i < il; i++) {\n\t\t\t\t\t\tconst morphAttribute = morphAttributesPosition[i];\n\t\t\t\t\t\tconst morphTargetsRelative = this.morphTargetsRelative;\n\n\t\t\t\t\t\tfor (let j = 0, jl = morphAttribute.count; j < jl; j++) {\n\t\t\t\t\t\t\t_vector$8.fromBufferAttribute(morphAttribute, j);\n\n\t\t\t\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t\t\t\t_offset.fromBufferAttribute(position, j);\n\n\t\t\t\t\t\t\t\t_vector$8.add(_offset);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tmaxRadiusSq = Math.max(maxRadiusSq, center.distanceToSquared(_vector$8));\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.boundingSphere.radius = Math.sqrt(maxRadiusSq);\n\n\t\t\t\tif (isNaN(this.boundingSphere.radius)) {\n\t\t\t\t\tconsole.error('THREE.BufferGeometry.computeBoundingSphere(): Computed radius is NaN. The \"position\" attribute is likely to have NaN values.', this);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeFaceNormals() {// backwards compatibility\n\t\t}\n\n\t\tcomputeTangents() {\n\t\t\tconst index = this.index;\n\t\t\tconst attributes = this.attributes; // based on http://www.terathon.com/code/tangent.html\n\t\t\t// (per vertex tangents)\n\n\t\t\tif (index === null || attributes.position === undefined || attributes.normal === undefined || attributes.uv === undefined) {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .computeTangents() failed. Missing required attributes (index, position, normal or uv)');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst indices = index.array;\n\t\t\tconst positions = attributes.position.array;\n\t\t\tconst normals = attributes.normal.array;\n\t\t\tconst uvs = attributes.uv.array;\n\t\t\tconst nVertices = positions.length / 3;\n\n\t\t\tif (attributes.tangent === undefined) {\n\t\t\t\tthis.setAttribute('tangent', new BufferAttribute(new Float32Array(4 * nVertices), 4));\n\t\t\t}\n\n\t\t\tconst tangents = attributes.tangent.array;\n\t\t\tconst tan1 = [],\n\t\t\t\t\t\ttan2 = [];\n\n\t\t\tfor (let i = 0; i < nVertices; i++) {\n\t\t\t\ttan1[i] = new Vector3();\n\t\t\t\ttan2[i] = new Vector3();\n\t\t\t}\n\n\t\t\tconst vA = new Vector3(),\n\t\t\t\t\t\tvB = new Vector3(),\n\t\t\t\t\t\tvC = new Vector3(),\n\t\t\t\t\t\tuvA = new Vector2(),\n\t\t\t\t\t\tuvB = new Vector2(),\n\t\t\t\t\t\tuvC = new Vector2(),\n\t\t\t\t\t\tsdir = new Vector3(),\n\t\t\t\t\t\ttdir = new Vector3();\n\n\t\t\tfunction handleTriangle(a, b, c) {\n\t\t\t\tvA.fromArray(positions, a * 3);\n\t\t\t\tvB.fromArray(positions, b * 3);\n\t\t\t\tvC.fromArray(positions, c * 3);\n\t\t\t\tuvA.fromArray(uvs, a * 2);\n\t\t\t\tuvB.fromArray(uvs, b * 2);\n\t\t\t\tuvC.fromArray(uvs, c * 2);\n\t\t\t\tvB.sub(vA);\n\t\t\t\tvC.sub(vA);\n\t\t\t\tuvB.sub(uvA);\n\t\t\t\tuvC.sub(uvA);\n\t\t\t\tconst r = 1.0 / (uvB.x * uvC.y - uvC.x * uvB.y); // silently ignore degenerate uv triangles having coincident or colinear vertices\n\n\t\t\t\tif (!isFinite(r)) return;\n\t\t\t\tsdir.copy(vB).multiplyScalar(uvC.y).addScaledVector(vC, -uvB.y).multiplyScalar(r);\n\t\t\t\ttdir.copy(vC).multiplyScalar(uvB.x).addScaledVector(vB, -uvC.x).multiplyScalar(r);\n\t\t\t\ttan1[a].add(sdir);\n\t\t\t\ttan1[b].add(sdir);\n\t\t\t\ttan1[c].add(sdir);\n\t\t\t\ttan2[a].add(tdir);\n\t\t\t\ttan2[b].add(tdir);\n\t\t\t\ttan2[c].add(tdir);\n\t\t\t}\n\n\t\t\tlet groups = this.groups;\n\n\t\t\tif (groups.length === 0) {\n\t\t\t\tgroups = [{\n\t\t\t\t\tstart: 0,\n\t\t\t\t\tcount: indices.length\n\t\t\t\t}];\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleTriangle(indices[j + 0], indices[j + 1], indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst tmp = new Vector3(),\n\t\t\t\t\t\ttmp2 = new Vector3();\n\t\t\tconst n = new Vector3(),\n\t\t\t\t\t\tn2 = new Vector3();\n\n\t\t\tfunction handleVertex(v) {\n\t\t\t\tn.fromArray(normals, v * 3);\n\t\t\t\tn2.copy(n);\n\t\t\t\tconst t = tan1[v]; // Gram-Schmidt orthogonalize\n\n\t\t\t\ttmp.copy(t);\n\t\t\t\ttmp.sub(n.multiplyScalar(n.dot(t))).normalize(); // Calculate handedness\n\n\t\t\t\ttmp2.crossVectors(n2, t);\n\t\t\t\tconst test = tmp2.dot(tan2[v]);\n\t\t\t\tconst w = test < 0.0 ? -1.0 : 1.0;\n\t\t\t\ttangents[v * 4] = tmp.x;\n\t\t\t\ttangents[v * 4 + 1] = tmp.y;\n\t\t\t\ttangents[v * 4 + 2] = tmp.z;\n\t\t\t\ttangents[v * 4 + 3] = w;\n\t\t\t}\n\n\t\t\tfor (let i = 0, il = groups.length; i < il; ++i) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tconst start = group.start;\n\t\t\t\tconst count = group.count;\n\n\t\t\t\tfor (let j = start, jl = start + count; j < jl; j += 3) {\n\t\t\t\t\thandleVertex(indices[j + 0]);\n\t\t\t\t\thandleVertex(indices[j + 1]);\n\t\t\t\t\thandleVertex(indices[j + 2]);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcomputeVertexNormals() {\n\t\t\tconst index = this.index;\n\t\t\tconst positionAttribute = this.getAttribute('position');\n\n\t\t\tif (positionAttribute !== undefined) {\n\t\t\t\tlet normalAttribute = this.getAttribute('normal');\n\n\t\t\t\tif (normalAttribute === undefined) {\n\t\t\t\t\tnormalAttribute = new BufferAttribute(new Float32Array(positionAttribute.count * 3), 3);\n\t\t\t\t\tthis.setAttribute('normal', normalAttribute);\n\t\t\t\t} else {\n\t\t\t\t\t// reset existing normals to zero\n\t\t\t\t\tfor (let i = 0, il = normalAttribute.count; i < il; i++) {\n\t\t\t\t\t\tnormalAttribute.setXYZ(i, 0, 0, 0);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst pA = new Vector3(),\n\t\t\t\t\t\t\tpB = new Vector3(),\n\t\t\t\t\t\t\tpC = new Vector3();\n\t\t\t\tconst nA = new Vector3(),\n\t\t\t\t\t\t\tnB = new Vector3(),\n\t\t\t\t\t\t\tnC = new Vector3();\n\t\t\t\tconst cb = new Vector3(),\n\t\t\t\t\t\t\tab = new Vector3(); // indexed elements\n\n\t\t\t\tif (index) {\n\t\t\t\t\tfor (let i = 0, il = index.count; i < il; i += 3) {\n\t\t\t\t\t\tconst vA = index.getX(i + 0);\n\t\t\t\t\t\tconst vB = index.getX(i + 1);\n\t\t\t\t\t\tconst vC = index.getX(i + 2);\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, vA);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, vB);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, vC);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnA.fromBufferAttribute(normalAttribute, vA);\n\t\t\t\t\t\tnB.fromBufferAttribute(normalAttribute, vB);\n\t\t\t\t\t\tnC.fromBufferAttribute(normalAttribute, vC);\n\t\t\t\t\t\tnA.add(cb);\n\t\t\t\t\t\tnB.add(cb);\n\t\t\t\t\t\tnC.add(cb);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vA, nA.x, nA.y, nA.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vB, nB.x, nB.y, nB.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(vC, nC.x, nC.y, nC.z);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\t// non-indexed elements (unconnected triangle soup)\n\t\t\t\t\tfor (let i = 0, il = positionAttribute.count; i < il; i += 3) {\n\t\t\t\t\t\tpA.fromBufferAttribute(positionAttribute, i + 0);\n\t\t\t\t\t\tpB.fromBufferAttribute(positionAttribute, i + 1);\n\t\t\t\t\t\tpC.fromBufferAttribute(positionAttribute, i + 2);\n\t\t\t\t\t\tcb.subVectors(pC, pB);\n\t\t\t\t\t\tab.subVectors(pA, pB);\n\t\t\t\t\t\tcb.cross(ab);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 0, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 1, cb.x, cb.y, cb.z);\n\t\t\t\t\t\tnormalAttribute.setXYZ(i + 2, cb.x, cb.y, cb.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis.normalizeNormals();\n\t\t\t\tnormalAttribute.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tmerge(geometry, offset) {\n\t\t\tif (!(geometry && geometry.isBufferGeometry)) {\n\t\t\t\tconsole.error('THREE.BufferGeometry.merge(): geometry not an instance of THREE.BufferGeometry.', geometry);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (offset === undefined) {\n\t\t\t\toffset = 0;\n\t\t\t\tconsole.warn('THREE.BufferGeometry.merge(): Overwriting original geometry, starting at offset=0. ' + 'Use BufferGeometryUtils.mergeBufferGeometries() for lossless merge.');\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tif (geometry.attributes[key] === undefined) continue;\n\t\t\t\tconst attribute1 = attributes[key];\n\t\t\t\tconst attributeArray1 = attribute1.array;\n\t\t\t\tconst attribute2 = geometry.attributes[key];\n\t\t\t\tconst attributeArray2 = attribute2.array;\n\t\t\t\tconst attributeOffset = attribute2.itemSize * offset;\n\t\t\t\tconst length = Math.min(attributeArray2.length, attributeArray1.length - attributeOffset);\n\n\t\t\t\tfor (let i = 0, j = attributeOffset; i < length; i++, j++) {\n\t\t\t\t\tattributeArray1[j] = attributeArray2[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tnormalizeNormals() {\n\t\t\tconst normals = this.attributes.normal;\n\n\t\t\tfor (let i = 0, il = normals.count; i < il; i++) {\n\t\t\t\t_vector$8.fromBufferAttribute(normals, i);\n\n\t\t\t\t_vector$8.normalize();\n\n\t\t\t\tnormals.setXYZ(i, _vector$8.x, _vector$8.y, _vector$8.z);\n\t\t\t}\n\t\t}\n\n\t\ttoNonIndexed() {\n\t\t\tfunction convertBufferAttribute(attribute, indices) {\n\t\t\t\tconst array = attribute.array;\n\t\t\t\tconst itemSize = attribute.itemSize;\n\t\t\t\tconst normalized = attribute.normalized;\n\t\t\t\tconst array2 = new array.constructor(indices.length * itemSize);\n\t\t\t\tlet index = 0,\n\t\t\t\t\t\tindex2 = 0;\n\n\t\t\t\tfor (let i = 0, l = indices.length; i < l; i++) {\n\t\t\t\t\tindex = indices[i] * itemSize;\n\n\t\t\t\t\tfor (let j = 0; j < itemSize; j++) {\n\t\t\t\t\t\tarray2[index2++] = array[index++];\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(array2, itemSize, normalized);\n\t\t\t} //\n\n\n\t\t\tif (this.index === null) {\n\t\t\t\tconsole.warn('THREE.BufferGeometry.toNonIndexed(): BufferGeometry is already non-indexed.');\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tconst indices = this.index.array;\n\t\t\tconst attributes = this.attributes; // attributes\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\tgeometry2.setAttribute(name, newAttribute);\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = this.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst morphArray = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, il = morphAttribute.length; i < il; i++) {\n\t\t\t\t\tconst attribute = morphAttribute[i];\n\t\t\t\t\tconst newAttribute = convertBufferAttribute(attribute, indices);\n\t\t\t\t\tmorphArray.push(newAttribute);\n\t\t\t\t}\n\n\t\t\t\tgeometry2.morphAttributes[name] = morphArray;\n\t\t\t}\n\n\t\t\tgeometry2.morphTargetsRelative = this.morphTargetsRelative; // groups\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tgeometry2.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t}\n\n\t\t\treturn geometry2;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'BufferGeometry',\n\t\t\t\t\tgenerator: 'BufferGeometry.toJSON'\n\t\t\t\t}\n\t\t\t}; // standard BufferGeometry serialization\n\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.type = this.type;\n\t\t\tif (this.name !== '') data.name = this.name;\n\t\t\tif (Object.keys(this.userData).length > 0) data.userData = this.userData;\n\n\t\t\tif (this.parameters !== undefined) {\n\t\t\t\tconst parameters = this.parameters;\n\n\t\t\t\tfor (const key in parameters) {\n\t\t\t\t\tif (parameters[key] !== undefined) data[key] = parameters[key];\n\t\t\t\t}\n\n\t\t\t\treturn data;\n\t\t\t} // for simplicity the code assumes attributes are not shared across geometries, see #15811\n\n\n\t\t\tdata.data = {\n\t\t\t\tattributes: {}\n\t\t\t};\n\t\t\tconst index = this.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tdata.data.index = {\n\t\t\t\t\ttype: index.array.constructor.name,\n\t\t\t\t\tarray: Array.prototype.slice.call(index.array)\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tconst attributes = this.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tdata.data.attributes[key] = attribute.toJSON(data.data);\n\t\t\t}\n\n\t\t\tconst morphAttributes = {};\n\t\t\tlet hasMorphAttributes = false;\n\n\t\t\tfor (const key in this.morphAttributes) {\n\t\t\t\tconst attributeArray = this.morphAttributes[key];\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\tarray.push(attribute.toJSON(data.data));\n\t\t\t\t}\n\n\t\t\t\tif (array.length > 0) {\n\t\t\t\t\tmorphAttributes[key] = array;\n\t\t\t\t\thasMorphAttributes = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (hasMorphAttributes) {\n\t\t\t\tdata.data.morphAttributes = morphAttributes;\n\t\t\t\tdata.data.morphTargetsRelative = this.morphTargetsRelative;\n\t\t\t}\n\n\t\t\tconst groups = this.groups;\n\n\t\t\tif (groups.length > 0) {\n\t\t\t\tdata.data.groups = JSON.parse(JSON.stringify(groups));\n\t\t\t}\n\n\t\t\tconst boundingSphere = this.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tdata.data.boundingSphere = {\n\t\t\t\t\tcenter: boundingSphere.center.toArray(),\n\t\t\t\t\tradius: boundingSphere.radius\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tclone() {\n\t\t\t/*\n\t\t\t // Handle primitives\n\t\t\t\t const parameters = this.parameters;\n\t\t\t\t if ( parameters !== undefined ) {\n\t\t\t\t const values = [];\n\t\t\t\t for ( const key in parameters ) {\n\t\t\t\t values.push( parameters[ key ] );\n\t\t\t\t }\n\t\t\t\t const geometry = Object.create( this.constructor.prototype );\n\t\t\t this.constructor.apply( geometry, values );\n\t\t\t return geometry;\n\t\t\t\t }\n\t\t\t\t return new this.constructor().copy( this );\n\t\t\t */\n\t\t\treturn new BufferGeometry().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\t// reset\n\t\t\tthis.index = null;\n\t\t\tthis.attributes = {};\n\t\t\tthis.morphAttributes = {};\n\t\t\tthis.groups = [];\n\t\t\tthis.boundingBox = null;\n\t\t\tthis.boundingSphere = null; // used for storing cloned, shared data\n\n\t\t\tconst data = {}; // name\n\n\t\t\tthis.name = source.name; // index\n\n\t\t\tconst index = source.index;\n\n\t\t\tif (index !== null) {\n\t\t\t\tthis.setIndex(index.clone(data));\n\t\t\t} // attributes\n\n\n\t\t\tconst attributes = source.attributes;\n\n\t\t\tfor (const name in attributes) {\n\t\t\t\tconst attribute = attributes[name];\n\t\t\t\tthis.setAttribute(name, attribute.clone(data));\n\t\t\t} // morph attributes\n\n\n\t\t\tconst morphAttributes = source.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = [];\n\t\t\t\tconst morphAttribute = morphAttributes[name]; // morphAttribute: array of Float32BufferAttributes\n\n\t\t\t\tfor (let i = 0, l = morphAttribute.length; i < l; i++) {\n\t\t\t\t\tarray.push(morphAttribute[i].clone(data));\n\t\t\t\t}\n\n\t\t\t\tthis.morphAttributes[name] = array;\n\t\t\t}\n\n\t\t\tthis.morphTargetsRelative = source.morphTargetsRelative; // groups\n\n\t\t\tconst groups = source.groups;\n\n\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\tconst group = groups[i];\n\t\t\t\tthis.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t} // bounding box\n\n\n\t\t\tconst boundingBox = source.boundingBox;\n\n\t\t\tif (boundingBox !== null) {\n\t\t\t\tthis.boundingBox = boundingBox.clone();\n\t\t\t} // bounding sphere\n\n\n\t\t\tconst boundingSphere = source.boundingSphere;\n\n\t\t\tif (boundingSphere !== null) {\n\t\t\t\tthis.boundingSphere = boundingSphere.clone();\n\t\t\t} // draw range\n\n\n\t\t\tthis.drawRange.start = source.drawRange.start;\n\t\t\tthis.drawRange.count = source.drawRange.count; // user data\n\n\t\t\tthis.userData = source.userData;\n\t\t\treturn this;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tBufferGeometry.prototype.isBufferGeometry = true;\n\n\tconst _inverseMatrix$2 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$2 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$3 = /*@__PURE__*/new Sphere();\n\n\tconst _vA$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vB$1 = /*@__PURE__*/new Vector3();\n\n\tconst _vC$1 = /*@__PURE__*/new Vector3();\n\n\tconst _tempA = /*@__PURE__*/new Vector3();\n\n\tconst _tempB = /*@__PURE__*/new Vector3();\n\n\tconst _tempC = /*@__PURE__*/new Vector3();\n\n\tconst _morphA = /*@__PURE__*/new Vector3();\n\n\tconst _morphB = /*@__PURE__*/new Vector3();\n\n\tconst _morphC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvB$1 = /*@__PURE__*/new Vector2();\n\n\tconst _uvC$1 = /*@__PURE__*/new Vector2();\n\n\tconst _intersectionPoint = /*@__PURE__*/new Vector3();\n\n\tconst _intersectionPointWorld = /*@__PURE__*/new Vector3();\n\n\tclass Mesh extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new MeshBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Mesh';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\n\t\t\tif (source.morphTargetInfluences !== undefined) {\n\t\t\t\tthis.morphTargetInfluences = source.morphTargetInfluences.slice();\n\t\t\t}\n\n\t\t\tif (source.morphTargetDictionary !== undefined) {\n\t\t\t\tthis.morphTargetDictionary = Object.assign({}, source.morphTargetDictionary);\n\t\t\t}\n\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Mesh.updateMorphTargets() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst material = this.material;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tif (material === undefined) return; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$3.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$3.applyMatrix4(matrixWorld);\n\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$3) === false) return; //\n\n\t\t\t_inverseMatrix$2.copy(matrixWorld).invert();\n\n\t\t\t_ray$2.copy(raycaster.ray).applyMatrix4(_inverseMatrix$2); // Check boundingBox before continuing\n\n\n\t\t\tif (geometry.boundingBox !== null) {\n\t\t\t\tif (_ray$2.intersectsBox(geometry.boundingBox) === false) return;\n\t\t\t}\n\n\t\t\tlet intersection;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst morphPosition = geometry.morphAttributes.position;\n\t\t\t\tconst morphTargetsRelative = geometry.morphTargetsRelative;\n\t\t\t\tconst uv = geometry.attributes.uv;\n\t\t\t\tconst uv2 = geometry.attributes.uv2;\n\t\t\t\tconst groups = geometry.groups;\n\t\t\t\tconst drawRange = geometry.drawRange;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\t// indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = index.getX(j);\n\t\t\t\t\t\t\t\tconst b = index.getX(j + 1);\n\t\t\t\t\t\t\t\tconst c = index.getX(j + 2);\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\t\tconst c = index.getX(i + 2);\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (position !== undefined) {\n\t\t\t\t\t// non-indexed buffer geometry\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0, il = groups.length; i < il; i++) {\n\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\t\t\t\t\t\t\tconst start = Math.max(group.start, drawRange.start);\n\t\t\t\t\t\t\tconst end = Math.min(group.start + group.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\t\tfor (let j = start, jl = end; j < jl; j += 3) {\n\t\t\t\t\t\t\t\tconst a = j;\n\t\t\t\t\t\t\t\tconst b = j + 1;\n\t\t\t\t\t\t\t\tconst c = j + 2;\n\t\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, groupMaterial, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(j / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\t\tintersection.face.materialIndex = group.materialIndex;\n\t\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\t\tconst end = Math.min(position.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\t\tfor (let i = start, il = end; i < il; i += 3) {\n\t\t\t\t\t\t\tconst a = i;\n\t\t\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\t\t\tintersection = checkBufferGeometryIntersection(this, material, raycaster, _ray$2, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c);\n\n\t\t\t\t\t\t\tif (intersection) {\n\t\t\t\t\t\t\t\tintersection.faceIndex = Math.floor(i / 3); // triangle number in non-indexed buffer semantics\n\n\t\t\t\t\t\t\t\tintersects.push(intersection);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Mesh.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t}\n\n\tMesh.prototype.isMesh = true;\n\n\tfunction checkIntersection(object, material, raycaster, ray, pA, pB, pC, point) {\n\t\tlet intersect;\n\n\t\tif (material.side === BackSide) {\n\t\t\tintersect = ray.intersectTriangle(pC, pB, pA, true, point);\n\t\t} else {\n\t\t\tintersect = ray.intersectTriangle(pA, pB, pC, material.side !== DoubleSide, point);\n\t\t}\n\n\t\tif (intersect === null) return null;\n\n\t\t_intersectionPointWorld.copy(point);\n\n\t\t_intersectionPointWorld.applyMatrix4(object.matrixWorld);\n\n\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectionPointWorld);\n\t\tif (distance < raycaster.near || distance > raycaster.far) return null;\n\t\treturn {\n\t\t\tdistance: distance,\n\t\t\tpoint: _intersectionPointWorld.clone(),\n\t\t\tobject: object\n\t\t};\n\t}\n\n\tfunction checkBufferGeometryIntersection(object, material, raycaster, ray, position, morphPosition, morphTargetsRelative, uv, uv2, a, b, c) {\n\t\t_vA$1.fromBufferAttribute(position, a);\n\n\t\t_vB$1.fromBufferAttribute(position, b);\n\n\t\t_vC$1.fromBufferAttribute(position, c);\n\n\t\tconst morphInfluences = object.morphTargetInfluences;\n\n\t\tif (material.morphTargets && morphPosition && morphInfluences) {\n\t\t\t_morphA.set(0, 0, 0);\n\n\t\t\t_morphB.set(0, 0, 0);\n\n\t\t\t_morphC.set(0, 0, 0);\n\n\t\t\tfor (let i = 0, il = morphPosition.length; i < il; i++) {\n\t\t\t\tconst influence = morphInfluences[i];\n\t\t\t\tconst morphAttribute = morphPosition[i];\n\t\t\t\tif (influence === 0) continue;\n\n\t\t\t\t_tempA.fromBufferAttribute(morphAttribute, a);\n\n\t\t\t\t_tempB.fromBufferAttribute(morphAttribute, b);\n\n\t\t\t\t_tempC.fromBufferAttribute(morphAttribute, c);\n\n\t\t\t\tif (morphTargetsRelative) {\n\t\t\t\t\t_morphA.addScaledVector(_tempA, influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB, influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC, influence);\n\t\t\t\t} else {\n\t\t\t\t\t_morphA.addScaledVector(_tempA.sub(_vA$1), influence);\n\n\t\t\t\t\t_morphB.addScaledVector(_tempB.sub(_vB$1), influence);\n\n\t\t\t\t\t_morphC.addScaledVector(_tempC.sub(_vC$1), influence);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_vA$1.add(_morphA);\n\n\t\t\t_vB$1.add(_morphB);\n\n\t\t\t_vC$1.add(_morphC);\n\t\t}\n\n\t\tif (object.isSkinnedMesh) {\n\t\t\tobject.boneTransform(a, _vA$1);\n\t\t\tobject.boneTransform(b, _vB$1);\n\t\t\tobject.boneTransform(c, _vC$1);\n\t\t}\n\n\t\tconst intersection = checkIntersection(object, material, raycaster, ray, _vA$1, _vB$1, _vC$1, _intersectionPoint);\n\n\t\tif (intersection) {\n\t\t\tif (uv) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv, c);\n\n\t\t\t\tintersection.uv = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tif (uv2) {\n\t\t\t\t_uvA$1.fromBufferAttribute(uv2, a);\n\n\t\t\t\t_uvB$1.fromBufferAttribute(uv2, b);\n\n\t\t\t\t_uvC$1.fromBufferAttribute(uv2, c);\n\n\t\t\t\tintersection.uv2 = Triangle.getUV(_intersectionPoint, _vA$1, _vB$1, _vC$1, _uvA$1, _uvB$1, _uvC$1, new Vector2());\n\t\t\t}\n\n\t\t\tconst face = {\n\t\t\t\ta: a,\n\t\t\t\tb: b,\n\t\t\t\tc: c,\n\t\t\t\tnormal: new Vector3(),\n\t\t\t\tmaterialIndex: 0\n\t\t\t};\n\t\t\tTriangle.getNormal(_vA$1, _vB$1, _vC$1, face.normal);\n\t\t\tintersection.face = face;\n\t\t}\n\n\t\treturn intersection;\n\t}\n\n\tclass BoxGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, depth = 1, widthSegments = 1, heightSegments = 1, depthSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'BoxGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\tdepth: depth,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tdepthSegments: depthSegments\n\t\t\t};\n\t\t\tconst scope = this; // segments\n\n\t\t\twidthSegments = Math.floor(widthSegments);\n\t\t\theightSegments = Math.floor(heightSegments);\n\t\t\tdepthSegments = Math.floor(depthSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet numberOfVertices = 0;\n\t\t\tlet groupStart = 0; // build each side of the box geometry\n\n\t\t\tbuildPlane('z', 'y', 'x', -1, -1, depth, height, width, depthSegments, heightSegments, 0); // px\n\n\t\t\tbuildPlane('z', 'y', 'x', 1, -1, depth, height, -width, depthSegments, heightSegments, 1); // nx\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, 1, width, depth, height, widthSegments, depthSegments, 2); // py\n\n\t\t\tbuildPlane('x', 'z', 'y', 1, -1, width, depth, -height, widthSegments, depthSegments, 3); // ny\n\n\t\t\tbuildPlane('x', 'y', 'z', 1, -1, width, height, depth, widthSegments, heightSegments, 4); // pz\n\n\t\t\tbuildPlane('x', 'y', 'z', -1, -1, width, height, -depth, widthSegments, heightSegments, 5); // nz\n\t\t\t// build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction buildPlane(u, v, w, udir, vdir, width, height, depth, gridX, gridY, materialIndex) {\n\t\t\t\tconst segmentWidth = width / gridX;\n\t\t\t\tconst segmentHeight = height / gridY;\n\t\t\t\tconst widthHalf = width / 2;\n\t\t\t\tconst heightHalf = height / 2;\n\t\t\t\tconst depthHalf = depth / 2;\n\t\t\t\tconst gridX1 = gridX + 1;\n\t\t\t\tconst gridY1 = gridY + 1;\n\t\t\t\tlet vertexCounter = 0;\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst vector = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\t\tconst y = iy * segmentHeight - heightHalf;\n\n\t\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\t\tconst x = ix * segmentWidth - widthHalf; // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = x * udir;\n\t\t\t\t\t\tvector[v] = y * vdir;\n\t\t\t\t\t\tvector[w] = depthHalf; // now apply vector to vertex buffer\n\n\t\t\t\t\t\tvertices.push(vector.x, vector.y, vector.z); // set values to correct vector component\n\n\t\t\t\t\t\tvector[u] = 0;\n\t\t\t\t\t\tvector[v] = 0;\n\t\t\t\t\t\tvector[w] = depth > 0 ? 1 : -1; // now apply vector to normal buffer\n\n\t\t\t\t\t\tnormals.push(vector.x, vector.y, vector.z); // uvs\n\n\t\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\t\tuvs.push(1 - iy / gridY); // counters\n\n\t\t\t\t\t\tvertexCounter += 1;\n\t\t\t\t\t}\n\t\t\t\t} // indices\n\t\t\t\t// 1. you need three indices to draw a single face\n\t\t\t\t// 2. a single segment consists of two faces\n\t\t\t\t// 3. so we need to generate six (2*3) indices per segment\n\n\n\t\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\t\tconst a = numberOfVertices + ix + gridX1 * iy;\n\t\t\t\t\t\tconst b = numberOfVertices + ix + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst c = numberOfVertices + (ix + 1) + gridX1 * (iy + 1);\n\t\t\t\t\t\tconst d = numberOfVertices + (ix + 1) + gridX1 * iy; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // increase counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, materialIndex); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount; // update total number of vertices\n\n\t\t\t\tnumberOfVertices += vertexCounter;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t/**\n\t * Uniform Utilities\n\t */\n\tfunction cloneUniforms(src) {\n\t\tconst dst = {};\n\n\t\tfor (const u in src) {\n\t\t\tdst[u] = {};\n\n\t\t\tfor (const p in src[u]) {\n\t\t\t\tconst property = src[u][p];\n\n\t\t\t\tif (property && (property.isColor || property.isMatrix3 || property.isMatrix4 || property.isVector2 || property.isVector3 || property.isVector4 || property.isTexture || property.isQuaternion)) {\n\t\t\t\t\tdst[u][p] = property.clone();\n\t\t\t\t} else if (Array.isArray(property)) {\n\t\t\t\t\tdst[u][p] = property.slice();\n\t\t\t\t} else {\n\t\t\t\t\tdst[u][p] = property;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn dst;\n\t}\n\tfunction mergeUniforms(uniforms) {\n\t\tconst merged = {};\n\n\t\tfor (let u = 0; u < uniforms.length; u++) {\n\t\t\tconst tmp = cloneUniforms(uniforms[u]);\n\n\t\t\tfor (const p in tmp) {\n\t\t\t\tmerged[p] = tmp[p];\n\t\t\t}\n\t\t}\n\n\t\treturn merged;\n\t} // Legacy\n\n\tconst UniformsUtils = {\n\t\tclone: cloneUniforms,\n\t\tmerge: mergeUniforms\n\t};\n\n\tvar default_vertex = \"void main() {\\n\\tgl_Position = projectionMatrix * modelViewMatrix * vec4( position, 1.0 );\\n}\";\n\n\tvar default_fragment = \"void main() {\\n\\tgl_FragColor = vec4( 1.0, 0.0, 0.0, 1.0 );\\n}\";\n\n\t/**\n\t * parameters = {\n\t *\tdefines: { \"label\" : \"value\" },\n\t *\tuniforms: { \"parameter1\": { value: 1.0 }, \"parameter2\": { value2: 2 } },\n\t *\n\t *\tfragmentShader: <string>,\n\t *\tvertexShader: <string>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tlights: <bool>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass ShaderMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShaderMaterial';\n\t\t\tthis.defines = {};\n\t\t\tthis.uniforms = {};\n\t\t\tthis.vertexShader = default_vertex;\n\t\t\tthis.fragmentShader = default_fragment;\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false; // set to use scene fog\n\n\t\t\tthis.lights = false; // set to use scene lights\n\n\t\t\tthis.clipping = false; // set to use user-defined clipping planes\n\n\t\t\tthis.morphTargets = false; // set to use morph targets\n\n\t\t\tthis.morphNormals = false; // set to use morph normals\n\n\t\t\tthis.extensions = {\n\t\t\t\tderivatives: false,\n\t\t\t\t// set to use derivatives\n\t\t\t\tfragDepth: false,\n\t\t\t\t// set to use fragment depth values\n\t\t\t\tdrawBuffers: false,\n\t\t\t\t// set to use draw buffers\n\t\t\t\tshaderTextureLOD: false // set to use shader texture LOD\n\n\t\t\t}; // When rendered geometry doesn't include these attributes but the material does,\n\t\t\t// use these default values in WebGL. This avoids errors when buffer data is missing.\n\n\t\t\tthis.defaultAttributeValues = {\n\t\t\t\t'color': [1, 1, 1],\n\t\t\t\t'uv': [0, 0],\n\t\t\t\t'uv2': [0, 0]\n\t\t\t};\n\t\t\tthis.index0AttributeName = undefined;\n\t\t\tthis.uniformsNeedUpdate = false;\n\t\t\tthis.glslVersion = null;\n\n\t\t\tif (parameters !== undefined) {\n\t\t\t\tif (parameters.attributes !== undefined) {\n\t\t\t\t\tconsole.error('THREE.ShaderMaterial: attributes should now be defined in THREE.BufferGeometry instead.');\n\t\t\t\t}\n\n\t\t\t\tthis.setValues(parameters);\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.fragmentShader = source.fragmentShader;\n\t\t\tthis.vertexShader = source.vertexShader;\n\t\t\tthis.uniforms = cloneUniforms(source.uniforms);\n\t\t\tthis.defines = Object.assign({}, source.defines);\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.lights = source.lights;\n\t\t\tthis.clipping = source.clipping;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.extensions = Object.assign({}, source.extensions);\n\t\t\tthis.glslVersion = source.glslVersion;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.glslVersion = this.glslVersion;\n\t\t\tdata.uniforms = {};\n\n\t\t\tfor (const name in this.uniforms) {\n\t\t\t\tconst uniform = this.uniforms[name];\n\t\t\t\tconst value = uniform.value;\n\n\t\t\t\tif (value && value.isTexture) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 't',\n\t\t\t\t\t\tvalue: value.toJSON(meta).uuid\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isColor) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'c',\n\t\t\t\t\t\tvalue: value.getHex()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector2) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v2',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isVector4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'v4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix3) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm3',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else if (value && value.isMatrix4) {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\ttype: 'm4',\n\t\t\t\t\t\tvalue: value.toArray()\n\t\t\t\t\t};\n\t\t\t\t} else {\n\t\t\t\t\tdata.uniforms[name] = {\n\t\t\t\t\t\tvalue: value\n\t\t\t\t\t}; // note: the array variants v2v, v3v, v4v, m4v and tv are not supported so far\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (Object.keys(this.defines).length > 0) data.defines = this.defines;\n\t\t\tdata.vertexShader = this.vertexShader;\n\t\t\tdata.fragmentShader = this.fragmentShader;\n\t\t\tconst extensions = {};\n\n\t\t\tfor (const key in this.extensions) {\n\t\t\t\tif (this.extensions[key] === true) extensions[key] = true;\n\t\t\t}\n\n\t\t\tif (Object.keys(extensions).length > 0) data.extensions = extensions;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tShaderMaterial.prototype.isShaderMaterial = true;\n\n\tclass Camera extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Camera';\n\t\t\tthis.matrixWorldInverse = new Matrix4();\n\t\t\tthis.projectionMatrix = new Matrix4();\n\t\t\tthis.projectionMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.matrixWorldInverse.copy(source.matrixWorldInverse);\n\t\t\tthis.projectionMatrix.copy(source.projectionMatrix);\n\t\t\tthis.projectionMatrixInverse.copy(source.projectionMatrixInverse);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetWorldDirection(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Camera: .getWorldDirection() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\tthis.updateWorldMatrix(true, false);\n\t\t\tconst e = this.matrixWorld.elements;\n\t\t\treturn target.set(-e[8], -e[9], -e[10]).normalize();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tupdateWorldMatrix(updateParents, updateChildren) {\n\t\t\tsuper.updateWorldMatrix(updateParents, updateChildren);\n\t\t\tthis.matrixWorldInverse.copy(this.matrixWorld).invert();\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tCamera.prototype.isCamera = true;\n\n\tclass PerspectiveCamera extends Camera {\n\t\tconstructor(fov = 50, aspect = 1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PerspectiveCamera';\n\t\t\tthis.fov = fov;\n\t\t\tthis.zoom = 1;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.focus = 10;\n\t\t\tthis.aspect = aspect;\n\t\t\tthis.view = null;\n\t\t\tthis.filmGauge = 35; // width of the film (default in millimeters)\n\n\t\t\tthis.filmOffset = 0; // horizontal film offset (same unit as gauge)\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.fov = source.fov;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.focus = source.focus;\n\t\t\tthis.aspect = source.aspect;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\tthis.filmGauge = source.filmGauge;\n\t\t\tthis.filmOffset = source.filmOffset;\n\t\t\treturn this;\n\t\t}\n\t\t/**\n\t\t * Sets the FOV by focal length in respect to the current .filmGauge.\n\t\t *\n\t\t * The default film gauge is 35, so that the focal length can be specified for\n\t\t * a 35mm (full frame) camera.\n\t\t *\n\t\t * Values for focal length and film gauge must have the same unit.\n\t\t */\n\n\n\t\tsetFocalLength(focalLength) {\n\t\t\t/** see {@link http://www.bobatkins.com/photography/technical/field_of_view.html} */\n\t\t\tconst vExtentSlope = 0.5 * this.getFilmHeight() / focalLength;\n\t\t\tthis.fov = RAD2DEG * 2 * Math.atan(vExtentSlope);\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\t\t/**\n\t\t * Calculates the focal length from the current .fov and .filmGauge.\n\t\t */\n\n\n\t\tgetFocalLength() {\n\t\t\tconst vExtentSlope = Math.tan(DEG2RAD * 0.5 * this.fov);\n\t\t\treturn 0.5 * this.getFilmHeight() / vExtentSlope;\n\t\t}\n\n\t\tgetEffectiveFOV() {\n\t\t\treturn RAD2DEG * 2 * Math.atan(Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom);\n\t\t}\n\n\t\tgetFilmWidth() {\n\t\t\t// film not completely covered in portrait format (aspect < 1)\n\t\t\treturn this.filmGauge * Math.min(this.aspect, 1);\n\t\t}\n\n\t\tgetFilmHeight() {\n\t\t\t// film not completely covered in landscape format (aspect > 1)\n\t\t\treturn this.filmGauge / Math.max(this.aspect, 1);\n\t\t}\n\t\t/**\n\t\t * Sets an offset in a larger frustum. This is useful for multi-window or\n\t\t * multi-monitor/multi-machine setups.\n\t\t *\n\t\t * For example, if you have 3x2 monitors and each monitor is 1920x1080 and\n\t\t * the monitors are in grid like this\n\t\t *\n\t\t *\t +---+---+---+\n\t\t *\t | A | B | C |\n\t\t *\t +---+---+---+\n\t\t *\t | D | E | F |\n\t\t *\t +---+---+---+\n\t\t *\n\t\t * then for each monitor you would call it like this\n\t\t *\n\t\t *\t const w = 1920;\n\t\t *\t const h = 1080;\n\t\t *\t const fullWidth = w * 3;\n\t\t *\t const fullHeight = h * 2;\n\t\t *\n\t\t *\t --A--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 0, w, h );\n\t\t *\t --B--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 0, w, h );\n\t\t *\t --C--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 0, w, h );\n\t\t *\t --D--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 0, h * 1, w, h );\n\t\t *\t --E--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 1, h * 1, w, h );\n\t\t *\t --F--\n\t\t *\t camera.setViewOffset( fullWidth, fullHeight, w * 2, h * 1, w, h );\n\t\t *\n\t\t *\t Note there is no reason monitors have to be the same size or in a grid.\n\t\t */\n\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tthis.aspect = fullWidth / fullHeight;\n\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst near = this.near;\n\t\t\tlet top = near * Math.tan(DEG2RAD * 0.5 * this.fov) / this.zoom;\n\t\t\tlet height = 2 * top;\n\t\t\tlet width = this.aspect * height;\n\t\t\tlet left = -0.5 * width;\n\t\t\tconst view = this.view;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst fullWidth = view.fullWidth,\n\t\t\t\t\t\t\tfullHeight = view.fullHeight;\n\t\t\t\tleft += view.offsetX * width / fullWidth;\n\t\t\t\ttop -= view.offsetY * height / fullHeight;\n\t\t\t\twidth *= view.width / fullWidth;\n\t\t\t\theight *= view.height / fullHeight;\n\t\t\t}\n\n\t\t\tconst skew = this.filmOffset;\n\t\t\tif (skew !== 0) left += near * skew / this.getFilmWidth();\n\t\t\tthis.projectionMatrix.makePerspective(left, left + width, top, top - height, near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.fov = this.fov;\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tdata.object.focus = this.focus;\n\t\t\tdata.object.aspect = this.aspect;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\tdata.object.filmGauge = this.filmGauge;\n\t\t\tdata.object.filmOffset = this.filmOffset;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tPerspectiveCamera.prototype.isPerspectiveCamera = true;\n\n\tconst fov = 90,\n\t\t\t\taspect = 1;\n\n\tclass CubeCamera extends Object3D {\n\t\tconstructor(near, far, renderTarget) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubeCamera';\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget !== true) {\n\t\t\t\tconsole.error('THREE.CubeCamera: The constructor now expects an instance of WebGLCubeRenderTarget as third parameter.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.renderTarget = renderTarget;\n\t\t\tconst cameraPX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPX.layers = this.layers;\n\t\t\tcameraPX.up.set(0, -1, 0);\n\t\t\tcameraPX.lookAt(new Vector3(1, 0, 0));\n\t\t\tthis.add(cameraPX);\n\t\t\tconst cameraNX = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNX.layers = this.layers;\n\t\t\tcameraNX.up.set(0, -1, 0);\n\t\t\tcameraNX.lookAt(new Vector3(-1, 0, 0));\n\t\t\tthis.add(cameraNX);\n\t\t\tconst cameraPY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPY.layers = this.layers;\n\t\t\tcameraPY.up.set(0, 0, 1);\n\t\t\tcameraPY.lookAt(new Vector3(0, 1, 0));\n\t\t\tthis.add(cameraPY);\n\t\t\tconst cameraNY = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNY.layers = this.layers;\n\t\t\tcameraNY.up.set(0, 0, -1);\n\t\t\tcameraNY.lookAt(new Vector3(0, -1, 0));\n\t\t\tthis.add(cameraNY);\n\t\t\tconst cameraPZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraPZ.layers = this.layers;\n\t\t\tcameraPZ.up.set(0, -1, 0);\n\t\t\tcameraPZ.lookAt(new Vector3(0, 0, 1));\n\t\t\tthis.add(cameraPZ);\n\t\t\tconst cameraNZ = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tcameraNZ.layers = this.layers;\n\t\t\tcameraNZ.up.set(0, -1, 0);\n\t\t\tcameraNZ.lookAt(new Vector3(0, 0, -1));\n\t\t\tthis.add(cameraNZ);\n\t\t}\n\n\t\tupdate(renderer, scene) {\n\t\t\tif (this.parent === null) this.updateMatrixWorld();\n\t\t\tconst renderTarget = this.renderTarget;\n\t\t\tconst [cameraPX, cameraNX, cameraPY, cameraNY, cameraPZ, cameraNZ] = this.children;\n\t\t\tconst currentXrEnabled = renderer.xr.enabled;\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\trenderer.xr.enabled = false;\n\t\t\tconst generateMipmaps = renderTarget.texture.generateMipmaps;\n\t\t\trenderTarget.texture.generateMipmaps = false;\n\t\t\trenderer.setRenderTarget(renderTarget, 0);\n\t\t\trenderer.render(scene, cameraPX);\n\t\t\trenderer.setRenderTarget(renderTarget, 1);\n\t\t\trenderer.render(scene, cameraNX);\n\t\t\trenderer.setRenderTarget(renderTarget, 2);\n\t\t\trenderer.render(scene, cameraPY);\n\t\t\trenderer.setRenderTarget(renderTarget, 3);\n\t\t\trenderer.render(scene, cameraNY);\n\t\t\trenderer.setRenderTarget(renderTarget, 4);\n\t\t\trenderer.render(scene, cameraPZ);\n\t\t\trenderTarget.texture.generateMipmaps = generateMipmaps;\n\t\t\trenderer.setRenderTarget(renderTarget, 5);\n\t\t\trenderer.render(scene, cameraNZ);\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\trenderer.xr.enabled = currentXrEnabled;\n\t\t}\n\n\t}\n\n\tclass CubeTexture extends Texture {\n\t\tconstructor(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding) {\n\t\t\timages = images !== undefined ? images : [];\n\t\t\tmapping = mapping !== undefined ? mapping : CubeReflectionMapping;\n\t\t\tformat = format !== undefined ? format : RGBFormat;\n\t\t\tsuper(images, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding); // Why CubeTexture._needsFlipEnvMap is necessary:\n\t\t\t//\n\t\t\t// By convention -- likely based on the RenderMan spec from the 1990's -- cube maps are specified by WebGL (and three.js)\n\t\t\t// in a coordinate system in which positive-x is to the right when looking up the positive-z axis -- in other words,\n\t\t\t// in a left-handed coordinate system. By continuing this convention, preexisting cube maps continued to render correctly.\n\t\t\t// three.js uses a right-handed coordinate system. So environment maps used in three.js appear to have px and nx swapped\n\t\t\t// and the flag _needsFlipEnvMap controls this conversion. The flip is not required (and thus _needsFlipEnvMap is set to false)\n\t\t\t// when using WebGLCubeRenderTarget.texture as a cube texture.\n\n\t\t\tthis._needsFlipEnvMap = true;\n\t\t\tthis.flipY = false;\n\t\t}\n\n\t\tget images() {\n\t\t\treturn this.image;\n\t\t}\n\n\t\tset images(value) {\n\t\t\tthis.image = value;\n\t\t}\n\n\t}\n\n\tCubeTexture.prototype.isCubeTexture = true;\n\n\tclass WebGLCubeRenderTarget extends WebGLRenderTarget {\n\t\tconstructor(size, options, dummy) {\n\t\t\tif (Number.isInteger(options)) {\n\t\t\t\tconsole.warn('THREE.WebGLCubeRenderTarget: constructor signature is now WebGLCubeRenderTarget( size, options )');\n\t\t\t\toptions = dummy;\n\t\t\t}\n\n\t\t\tsuper(size, size, options);\n\t\t\toptions = options || {};\n\t\t\tthis.texture = new CubeTexture(undefined, options.mapping, options.wrapS, options.wrapT, options.magFilter, options.minFilter, options.format, options.type, options.anisotropy, options.encoding);\n\t\t\tthis.texture.generateMipmaps = options.generateMipmaps !== undefined ? options.generateMipmaps : false;\n\t\t\tthis.texture.minFilter = options.minFilter !== undefined ? options.minFilter : LinearFilter;\n\t\t\tthis.texture._needsFlipEnvMap = false;\n\t\t}\n\n\t\tfromEquirectangularTexture(renderer, texture) {\n\t\t\tthis.texture.type = texture.type;\n\t\t\tthis.texture.format = RGBAFormat; // see #18859\n\n\t\t\tthis.texture.encoding = texture.encoding;\n\t\t\tthis.texture.generateMipmaps = texture.generateMipmaps;\n\t\t\tthis.texture.minFilter = texture.minFilter;\n\t\t\tthis.texture.magFilter = texture.magFilter;\n\t\t\tconst shader = {\n\t\t\t\tuniforms: {\n\t\t\t\t\ttEquirect: {\n\t\t\t\t\t\tvalue: null\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tvertexShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\tvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\n\n\t\t\t\t\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\n\n\t\t\t\t}\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvWorldDirection = transformDirection( position, modelMatrix );\n\n\t\t\t\t\t#include <begin_vertex>\n\t\t\t\t\t#include <project_vertex>\n\n\t\t\t\t}\n\t\t\t`,\n\t\t\t\tfragmentShader:\n\t\t\t\t/* glsl */\n\t\t\t\t`\n\n\t\t\t\tuniform sampler2D tEquirect;\n\n\t\t\t\tvarying vec3 vWorldDirection;\n\n\t\t\t\t#include <common>\n\n\t\t\t\tvoid main() {\n\n\t\t\t\t\tvec3 direction = normalize( vWorldDirection );\n\n\t\t\t\t\tvec2 sampleUV = equirectUv( direction );\n\n\t\t\t\t\tgl_FragColor = texture2D( tEquirect, sampleUV );\n\n\t\t\t\t}\n\t\t\t`\n\t\t\t};\n\t\t\tconst geometry = new BoxGeometry(5, 5, 5);\n\t\t\tconst material = new ShaderMaterial({\n\t\t\t\tname: 'CubemapFromEquirect',\n\t\t\t\tuniforms: cloneUniforms(shader.uniforms),\n\t\t\t\tvertexShader: shader.vertexShader,\n\t\t\t\tfragmentShader: shader.fragmentShader,\n\t\t\t\tside: BackSide,\n\t\t\t\tblending: NoBlending\n\t\t\t});\n\t\t\tmaterial.uniforms.tEquirect.value = texture;\n\t\t\tconst mesh = new Mesh(geometry, material);\n\t\t\tconst currentMinFilter = texture.minFilter; // Avoid blurred poles\n\n\t\t\tif (texture.minFilter === LinearMipmapLinearFilter) texture.minFilter = LinearFilter;\n\t\t\tconst camera = new CubeCamera(1, 10, this);\n\t\t\tcamera.update(renderer, mesh);\n\t\t\ttexture.minFilter = currentMinFilter;\n\t\t\tmesh.geometry.dispose();\n\t\t\tmesh.material.dispose();\n\t\t\treturn this;\n\t\t}\n\n\t\tclear(renderer, color, depth, stencil) {\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\trenderer.setRenderTarget(this, i);\n\t\t\t\trenderer.clear(color, depth, stencil);\n\t\t\t}\n\n\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t}\n\n\t}\n\n\tWebGLCubeRenderTarget.prototype.isWebGLCubeRenderTarget = true;\n\n\tconst _sphere$2 = /*@__PURE__*/new Sphere();\n\n\tconst _vector$7 = /*@__PURE__*/new Vector3();\n\n\tclass Frustum {\n\t\tconstructor(p0 = new Plane(), p1 = new Plane(), p2 = new Plane(), p3 = new Plane(), p4 = new Plane(), p5 = new Plane()) {\n\t\t\tthis.planes = [p0, p1, p2, p3, p4, p5];\n\t\t}\n\n\t\tset(p0, p1, p2, p3, p4, p5) {\n\t\t\tconst planes = this.planes;\n\t\t\tplanes[0].copy(p0);\n\t\t\tplanes[1].copy(p1);\n\t\t\tplanes[2].copy(p2);\n\t\t\tplanes[3].copy(p3);\n\t\t\tplanes[4].copy(p4);\n\t\t\tplanes[5].copy(p5);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(frustum) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tplanes[i].copy(frustum.planes[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromProjectionMatrix(m) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst me = m.elements;\n\t\t\tconst me0 = me[0],\n\t\t\t\t\t\tme1 = me[1],\n\t\t\t\t\t\tme2 = me[2],\n\t\t\t\t\t\tme3 = me[3];\n\t\t\tconst me4 = me[4],\n\t\t\t\t\t\tme5 = me[5],\n\t\t\t\t\t\tme6 = me[6],\n\t\t\t\t\t\tme7 = me[7];\n\t\t\tconst me8 = me[8],\n\t\t\t\t\t\tme9 = me[9],\n\t\t\t\t\t\tme10 = me[10],\n\t\t\t\t\t\tme11 = me[11];\n\t\t\tconst me12 = me[12],\n\t\t\t\t\t\tme13 = me[13],\n\t\t\t\t\t\tme14 = me[14],\n\t\t\t\t\t\tme15 = me[15];\n\t\t\tplanes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12).normalize();\n\t\t\tplanes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12).normalize();\n\t\t\tplanes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13).normalize();\n\t\t\tplanes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13).normalize();\n\t\t\tplanes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14).normalize();\n\t\t\tplanes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14).normalize();\n\t\t\treturn this;\n\t\t}\n\n\t\tintersectsObject(object) {\n\t\t\tconst geometry = object.geometry;\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$2.copy(geometry.boundingSphere).applyMatrix4(object.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSprite(sprite) {\n\t\t\t_sphere$2.center.set(0, 0, 0);\n\n\t\t\t_sphere$2.radius = 0.7071067811865476;\n\n\t\t\t_sphere$2.applyMatrix4(sprite.matrixWorld);\n\n\t\t\treturn this.intersectsSphere(_sphere$2);\n\t\t}\n\n\t\tintersectsSphere(sphere) {\n\t\t\tconst planes = this.planes;\n\t\t\tconst center = sphere.center;\n\t\t\tconst negRadius = -sphere.radius;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst distance = planes[i].distanceToPoint(center);\n\n\t\t\t\tif (distance < negRadius) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst plane = planes[i]; // corner at max distance\n\n\t\t\t\t_vector$7.x = plane.normal.x > 0 ? box.max.x : box.min.x;\n\t\t\t\t_vector$7.y = plane.normal.y > 0 ? box.max.y : box.min.y;\n\t\t\t\t_vector$7.z = plane.normal.z > 0 ? box.max.z : box.min.z;\n\n\t\t\t\tif (plane.distanceToPoint(_vector$7) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\tconst planes = this.planes;\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (planes[i].distanceToPoint(point) < 0) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tfunction WebGLAnimation() {\n\t\tlet context = null;\n\t\tlet isAnimating = false;\n\t\tlet animationLoop = null;\n\t\tlet requestId = null;\n\n\t\tfunction onAnimationFrame(time, frame) {\n\t\t\tanimationLoop(time, frame);\n\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t}\n\n\t\treturn {\n\t\t\tstart: function () {\n\t\t\t\tif (isAnimating === true) return;\n\t\t\t\tif (animationLoop === null) return;\n\t\t\t\trequestId = context.requestAnimationFrame(onAnimationFrame);\n\t\t\t\tisAnimating = true;\n\t\t\t},\n\t\t\tstop: function () {\n\t\t\t\tcontext.cancelAnimationFrame(requestId);\n\t\t\t\tisAnimating = false;\n\t\t\t},\n\t\t\tsetAnimationLoop: function (callback) {\n\t\t\t\tanimationLoop = callback;\n\t\t\t},\n\t\t\tsetContext: function (value) {\n\t\t\t\tcontext = value;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLAttributes(gl, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst buffers = new WeakMap();\n\n\t\tfunction createBuffer(attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst usage = attribute.usage;\n\t\t\tconst buffer = gl.createBuffer();\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\t\t\tgl.bufferData(bufferType, array, usage);\n\t\t\tattribute.onUploadCallback();\n\t\t\tlet type = gl.FLOAT;\n\n\t\t\tif (array instanceof Float32Array) {\n\t\t\t\ttype = gl.FLOAT;\n\t\t\t} else if (array instanceof Float64Array) {\n\t\t\t\tconsole.warn('THREE.WebGLAttributes: Unsupported data buffer format: Float64Array.');\n\t\t\t} else if (array instanceof Uint16Array) {\n\t\t\t\tif (attribute.isFloat16BufferAttribute) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\ttype = gl.HALF_FLOAT;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLAttributes: Usage of Float16BufferAttribute requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\ttype = gl.UNSIGNED_SHORT;\n\t\t\t\t}\n\t\t\t} else if (array instanceof Int16Array) {\n\t\t\t\ttype = gl.SHORT;\n\t\t\t} else if (array instanceof Uint32Array) {\n\t\t\t\ttype = gl.UNSIGNED_INT;\n\t\t\t} else if (array instanceof Int32Array) {\n\t\t\t\ttype = gl.INT;\n\t\t\t} else if (array instanceof Int8Array) {\n\t\t\t\ttype = gl.BYTE;\n\t\t\t} else if (array instanceof Uint8Array) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t} else if (array instanceof Uint8ClampedArray) {\n\t\t\t\ttype = gl.UNSIGNED_BYTE;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\tbuffer: buffer,\n\t\t\t\ttype: type,\n\t\t\t\tbytesPerElement: array.BYTES_PER_ELEMENT,\n\t\t\t\tversion: attribute.version\n\t\t\t};\n\t\t}\n\n\t\tfunction updateBuffer(buffer, attribute, bufferType) {\n\t\t\tconst array = attribute.array;\n\t\t\tconst updateRange = attribute.updateRange;\n\t\t\tgl.bindBuffer(bufferType, buffer);\n\n\t\t\tif (updateRange.count === -1) {\n\t\t\t\t// Not using update ranges\n\t\t\t\tgl.bufferSubData(bufferType, 0, array);\n\t\t\t} else {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array, updateRange.offset, updateRange.count);\n\t\t\t\t} else {\n\t\t\t\t\tgl.bufferSubData(bufferType, updateRange.offset * array.BYTES_PER_ELEMENT, array.subarray(updateRange.offset, updateRange.offset + updateRange.count));\n\t\t\t\t}\n\n\t\t\t\tupdateRange.count = -1; // reset range\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction get(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\treturn buffers.get(attribute);\n\t\t}\n\n\t\tfunction remove(attribute) {\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data) {\n\t\t\t\tgl.deleteBuffer(data.buffer);\n\t\t\t\tbuffers.delete(attribute);\n\t\t\t}\n\t\t}\n\n\t\tfunction update(attribute, bufferType) {\n\t\t\tif (attribute.isGLBufferAttribute) {\n\t\t\t\tconst cached = buffers.get(attribute);\n\n\t\t\t\tif (!cached || cached.version < attribute.version) {\n\t\t\t\t\tbuffers.set(attribute, {\n\t\t\t\t\t\tbuffer: attribute.buffer,\n\t\t\t\t\t\ttype: attribute.type,\n\t\t\t\t\t\tbytesPerElement: attribute.elementSize,\n\t\t\t\t\t\tversion: attribute.version\n\t\t\t\t\t});\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (attribute.isInterleavedBufferAttribute) attribute = attribute.data;\n\t\t\tconst data = buffers.get(attribute);\n\n\t\t\tif (data === undefined) {\n\t\t\t\tbuffers.set(attribute, createBuffer(attribute, bufferType));\n\t\t\t} else if (data.version < attribute.version) {\n\t\t\t\tupdateBuffer(data.buffer, attribute, bufferType);\n\t\t\t\tdata.version = attribute.version;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tclass PlaneGeometry extends BufferGeometry {\n\t\tconstructor(width = 1, height = 1, widthSegments = 1, heightSegments = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PlaneGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments\n\t\t\t};\n\t\t\tconst width_half = width / 2;\n\t\t\tconst height_half = height / 2;\n\t\t\tconst gridX = Math.floor(widthSegments);\n\t\t\tconst gridY = Math.floor(heightSegments);\n\t\t\tconst gridX1 = gridX + 1;\n\t\t\tconst gridY1 = gridY + 1;\n\t\t\tconst segment_width = width / gridX;\n\t\t\tconst segment_height = height / gridY; //\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\n\t\t\tfor (let iy = 0; iy < gridY1; iy++) {\n\t\t\t\tconst y = iy * segment_height - height_half;\n\n\t\t\t\tfor (let ix = 0; ix < gridX1; ix++) {\n\t\t\t\t\tconst x = ix * segment_width - width_half;\n\t\t\t\t\tvertices.push(x, -y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(ix / gridX);\n\t\t\t\t\tuvs.push(1 - iy / gridY);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let iy = 0; iy < gridY; iy++) {\n\t\t\t\tfor (let ix = 0; ix < gridX; ix++) {\n\t\t\t\t\tconst a = ix + gridX1 * iy;\n\t\t\t\t\tconst b = ix + gridX1 * (iy + 1);\n\t\t\t\t\tconst c = ix + 1 + gridX1 * (iy + 1);\n\t\t\t\t\tconst d = ix + 1 + gridX1 * iy;\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tvar alphamap_fragment = \"#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, vUv ).g;\\n#endif\";\n\n\tvar alphamap_pars_fragment = \"#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar alphatest_fragment = \"#ifdef ALPHATEST\\n\\tif ( diffuseColor.a < ALPHATEST ) discard;\\n#endif\";\n\n\tvar aomap_fragment = \"#ifdef USE_AOMAP\\n\\tfloat ambientOcclusion = ( texture2D( aoMap, vUv2 ).r - 1.0 ) * aoMapIntensity + 1.0;\\n\\treflectedLight.indirectDiffuse *= ambientOcclusion;\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD )\\n\\t\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular *= computeSpecularOcclusion( dotNV, ambientOcclusion, material.specularRoughness );\\n\\t#endif\\n#endif\";\n\n\tvar aomap_pars_fragment = \"#ifdef USE_AOMAP\\n\\tuniform sampler2D aoMap;\\n\\tuniform float aoMapIntensity;\\n#endif\";\n\n\tvar begin_vertex = \"vec3 transformed = vec3( position );\";\n\n\tvar beginnormal_vertex = \"vec3 objectNormal = vec3( normal );\\n#ifdef USE_TANGENT\\n\\tvec3 objectTangent = vec3( tangent.xyz );\\n#endif\";\n\n\tvar bsdfs = \"vec2 integrateSpecularBRDF( const in float dotNV, const in float roughness ) {\\n\\tconst vec4 c0 = vec4( - 1, - 0.0275, - 0.572, 0.022 );\\n\\tconst vec4 c1 = vec4( 1, 0.0425, 1.04, - 0.04 );\\n\\tvec4 r = roughness * c0 + c1;\\n\\tfloat a004 = min( r.x * r.x, exp2( - 9.28 * dotNV ) ) * r.x + r.y;\\n\\treturn vec2( -1.04, 1.04 ) * a004 + r.zw;\\n}\\nfloat punctualLightIntensityToIrradianceFactor( const in float lightDistance, const in float cutoffDistance, const in float decayExponent ) {\\n#if defined ( PHYSICALLY_CORRECT_LIGHTS )\\n\\tfloat distanceFalloff = 1.0 / max( pow( lightDistance, decayExponent ), 0.01 );\\n\\tif( cutoffDistance > 0.0 ) {\\n\\t\\tdistanceFalloff *= pow2( saturate( 1.0 - pow4( lightDistance / cutoffDistance ) ) );\\n\\t}\\n\\treturn distanceFalloff;\\n#else\\n\\tif( cutoffDistance > 0.0 && decayExponent > 0.0 ) {\\n\\t\\treturn pow( saturate( -lightDistance / cutoffDistance + 1.0 ), decayExponent );\\n\\t}\\n\\treturn 1.0;\\n#endif\\n}\\nvec3 BRDF_Diffuse_Lambert( const in vec3 diffuseColor ) {\\n\\treturn RECIPROCAL_PI * diffuseColor;\\n}\\nvec3 F_Schlick( const in vec3 specularColor, const in float dotLH ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotLH - 6.98316 ) * dotLH );\\n\\treturn ( 1.0 - specularColor ) * fresnel + specularColor;\\n}\\nvec3 F_Schlick_RoughnessDependent( const in vec3 F0, const in float dotNV, const in float roughness ) {\\n\\tfloat fresnel = exp2( ( -5.55473 * dotNV - 6.98316 ) * dotNV );\\n\\tvec3 Fr = max( vec3( 1.0 - roughness ), F0 ) - F0;\\n\\treturn Fr * fresnel + F0;\\n}\\nfloat G_GGX_Smith( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gl = dotNL + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\tfloat gv = dotNV + sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\treturn 1.0 / ( gl * gv );\\n}\\nfloat G_GGX_SmithCorrelated( const in float alpha, const in float dotNL, const in float dotNV ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat gv = dotNL * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNV ) );\\n\\tfloat gl = dotNV * sqrt( a2 + ( 1.0 - a2 ) * pow2( dotNL ) );\\n\\treturn 0.5 / max( gv + gl, EPSILON );\\n}\\nfloat D_GGX( const in float alpha, const in float dotNH ) {\\n\\tfloat a2 = pow2( alpha );\\n\\tfloat denom = pow2( dotNH ) * ( a2 - 1.0 ) + 1.0;\\n\\treturn RECIPROCAL_PI * a2 / pow2( denom );\\n}\\nvec3 BRDF_Specular_GGX( const in IncidentLight incidentLight, const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat alpha = pow2( roughness );\\n\\tvec3 halfDir = normalize( incidentLight.direction + viewDir );\\n\\tfloat dotNL = saturate( dot( normal, incidentLight.direction ) );\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tfloat dotNH = saturate( dot( normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_GGX_SmithCorrelated( alpha, dotNL, dotNV );\\n\\tfloat D = D_GGX( alpha, dotNH );\\n\\treturn F * ( G * D );\\n}\\nvec2 LTC_Uv( const in vec3 N, const in vec3 V, const in float roughness ) {\\n\\tconst float LUT_SIZE = 64.0;\\n\\tconst float LUT_SCALE = ( LUT_SIZE - 1.0 ) / LUT_SIZE;\\n\\tconst float LUT_BIAS = 0.5 / LUT_SIZE;\\n\\tfloat dotNV = saturate( dot( N, V ) );\\n\\tvec2 uv = vec2( roughness, sqrt( 1.0 - dotNV ) );\\n\\tuv = uv * LUT_SCALE + LUT_BIAS;\\n\\treturn uv;\\n}\\nfloat LTC_ClippedSphereFormFactor( const in vec3 f ) {\\n\\tfloat l = length( f );\\n\\treturn max( ( l * l + f.z ) / ( l + 1.0 ), 0.0 );\\n}\\nvec3 LTC_EdgeVectorFormFactor( const in vec3 v1, const in vec3 v2 ) {\\n\\tfloat x = dot( v1, v2 );\\n\\tfloat y = abs( x );\\n\\tfloat a = 0.8543985 + ( 0.4965155 + 0.0145206 * y ) * y;\\n\\tfloat b = 3.4175940 + ( 4.1616724 + y ) * y;\\n\\tfloat v = a / b;\\n\\tfloat theta_sintheta = ( x > 0.0 ) ? v : 0.5 * inversesqrt( max( 1.0 - x * x, 1e-7 ) ) - v;\\n\\treturn cross( v1, v2 ) * theta_sintheta;\\n}\\nvec3 LTC_Evaluate( const in vec3 N, const in vec3 V, const in vec3 P, const in mat3 mInv, const in vec3 rectCoords[ 4 ] ) {\\n\\tvec3 v1 = rectCoords[ 1 ] - rectCoords[ 0 ];\\n\\tvec3 v2 = rectCoords[ 3 ] - rectCoords[ 0 ];\\n\\tvec3 lightNormal = cross( v1, v2 );\\n\\tif( dot( lightNormal, P - rectCoords[ 0 ] ) < 0.0 ) return vec3( 0.0 );\\n\\tvec3 T1, T2;\\n\\tT1 = normalize( V - N * dot( V, N ) );\\n\\tT2 = - cross( N, T1 );\\n\\tmat3 mat = mInv * transposeMat3( mat3( T1, T2, N ) );\\n\\tvec3 coords[ 4 ];\\n\\tcoords[ 0 ] = mat * ( rectCoords[ 0 ] - P );\\n\\tcoords[ 1 ] = mat * ( rectCoords[ 1 ] - P );\\n\\tcoords[ 2 ] = mat * ( rectCoords[ 2 ] - P );\\n\\tcoords[ 3 ] = mat * ( rectCoords[ 3 ] - P );\\n\\tcoords[ 0 ] = normalize( coords[ 0 ] );\\n\\tcoords[ 1 ] = normalize( coords[ 1 ] );\\n\\tcoords[ 2 ] = normalize( coords[ 2 ] );\\n\\tcoords[ 3 ] = normalize( coords[ 3 ] );\\n\\tvec3 vectorFormFactor = vec3( 0.0 );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 0 ], coords[ 1 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 1 ], coords[ 2 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 2 ], coords[ 3 ] );\\n\\tvectorFormFactor += LTC_EdgeVectorFormFactor( coords[ 3 ], coords[ 0 ] );\\n\\tfloat result = LTC_ClippedSphereFormFactor( vectorFormFactor );\\n\\treturn vec3( result );\\n}\\nvec3 BRDF_Specular_GGX_Environment( const in vec3 viewDir, const in vec3 normal, const in vec3 specularColor, const in float roughness ) {\\n\\tfloat dotNV = saturate( dot( normal, viewDir ) );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\treturn specularColor * brdf.x + brdf.y;\\n}\\nvoid BRDF_Specular_Multiscattering_Environment( const in GeometricContext geometry, const in vec3 specularColor, const in float roughness, inout vec3 singleScatter, inout vec3 multiScatter ) {\\n\\tfloat dotNV = saturate( dot( geometry.normal, geometry.viewDir ) );\\n\\tvec3 F = F_Schlick_RoughnessDependent( specularColor, dotNV, roughness );\\n\\tvec2 brdf = integrateSpecularBRDF( dotNV, roughness );\\n\\tvec3 FssEss = F * brdf.x + brdf.y;\\n\\tfloat Ess = brdf.x + brdf.y;\\n\\tfloat Ems = 1.0 - Ess;\\n\\tvec3 Favg = specularColor + ( 1.0 - specularColor ) * 0.047619;\\tvec3 Fms = FssEss * Favg / ( 1.0 - Ems * Favg );\\n\\tsingleScatter += FssEss;\\n\\tmultiScatter += Fms * Ems;\\n}\\nfloat G_BlinnPhong_Implicit( ) {\\n\\treturn 0.25;\\n}\\nfloat D_BlinnPhong( const in float shininess, const in float dotNH ) {\\n\\treturn RECIPROCAL_PI * ( shininess * 0.5 + 1.0 ) * pow( dotNH, shininess );\\n}\\nvec3 BRDF_Specular_BlinnPhong( const in IncidentLight incidentLight, const in GeometricContext geometry, const in vec3 specularColor, const in float shininess ) {\\n\\tvec3 halfDir = normalize( incidentLight.direction + geometry.viewDir );\\n\\tfloat dotNH = saturate( dot( geometry.normal, halfDir ) );\\n\\tfloat dotLH = saturate( dot( incidentLight.direction, halfDir ) );\\n\\tvec3 F = F_Schlick( specularColor, dotLH );\\n\\tfloat G = G_BlinnPhong_Implicit( );\\n\\tfloat D = D_BlinnPhong( shininess, dotNH );\\n\\treturn F * ( G * D );\\n}\\nfloat GGXRoughnessToBlinnExponent( const in float ggxRoughness ) {\\n\\treturn ( 2.0 / pow2( ggxRoughness + 0.0001 ) - 2.0 );\\n}\\nfloat BlinnExponentToGGXRoughness( const in float blinnExponent ) {\\n\\treturn sqrt( 2.0 / ( blinnExponent + 2.0 ) );\\n}\\n#if defined( USE_SHEEN )\\nfloat D_Charlie(float roughness, float NoH) {\\n\\tfloat invAlpha = 1.0 / roughness;\\n\\tfloat cos2h = NoH * NoH;\\n\\tfloat sin2h = max(1.0 - cos2h, 0.0078125);\\treturn (2.0 + invAlpha) * pow(sin2h, invAlpha * 0.5) / (2.0 * PI);\\n}\\nfloat V_Neubelt(float NoV, float NoL) {\\n\\treturn saturate(1.0 / (4.0 * (NoL + NoV - NoL * NoV)));\\n}\\nvec3 BRDF_Specular_Sheen( const in float roughness, const in vec3 L, const in GeometricContext geometry, vec3 specularColor ) {\\n\\tvec3 N = geometry.normal;\\n\\tvec3 V = geometry.viewDir;\\n\\tvec3 H = normalize( V + L );\\n\\tfloat dotNH = saturate( dot( N, H ) );\\n\\treturn specularColor * D_Charlie( roughness, dotNH ) * V_Neubelt( dot(N, V), dot(N, L) );\\n}\\n#endif\";\n\n\tvar bumpmap_pars_fragment = \"#ifdef USE_BUMPMAP\\n\\tuniform sampler2D bumpMap;\\n\\tuniform float bumpScale;\\n\\tvec2 dHdxy_fwd() {\\n\\t\\tvec2 dSTdx = dFdx( vUv );\\n\\t\\tvec2 dSTdy = dFdy( vUv );\\n\\t\\tfloat Hll = bumpScale * texture2D( bumpMap, vUv ).x;\\n\\t\\tfloat dBx = bumpScale * texture2D( bumpMap, vUv + dSTdx ).x - Hll;\\n\\t\\tfloat dBy = bumpScale * texture2D( bumpMap, vUv + dSTdy ).x - Hll;\\n\\t\\treturn vec2( dBx, dBy );\\n\\t}\\n\\tvec3 perturbNormalArb( vec3 surf_pos, vec3 surf_norm, vec2 dHdxy, float faceDirection ) {\\n\\t\\tvec3 vSigmaX = vec3( dFdx( surf_pos.x ), dFdx( surf_pos.y ), dFdx( surf_pos.z ) );\\n\\t\\tvec3 vSigmaY = vec3( dFdy( surf_pos.x ), dFdy( surf_pos.y ), dFdy( surf_pos.z ) );\\n\\t\\tvec3 vN = surf_norm;\\n\\t\\tvec3 R1 = cross( vSigmaY, vN );\\n\\t\\tvec3 R2 = cross( vN, vSigmaX );\\n\\t\\tfloat fDet = dot( vSigmaX, R1 ) * faceDirection;\\n\\t\\tvec3 vGrad = sign( fDet ) * ( dHdxy.x * R1 + dHdxy.y * R2 );\\n\\t\\treturn normalize( abs( fDet ) * surf_norm - vGrad );\\n\\t}\\n#endif\";\n\n\tvar clipping_planes_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvec4 plane;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < UNION_CLIPPING_PLANES; i ++ ) {\\n\\t\\tplane = clippingPlanes[ i ];\\n\\t\\tif ( dot( vClipPosition, plane.xyz ) > plane.w ) discard;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#if UNION_CLIPPING_PLANES < NUM_CLIPPING_PLANES\\n\\t\\tbool clipped = true;\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = UNION_CLIPPING_PLANES; i < NUM_CLIPPING_PLANES; i ++ ) {\\n\\t\\t\\tplane = clippingPlanes[ i ];\\n\\t\\t\\tclipped = ( dot( vClipPosition, plane.xyz ) > plane.w ) && clipped;\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t\\tif ( clipped ) discard;\\n\\t#endif\\n#endif\";\n\n\tvar clipping_planes_pars_fragment = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n\\tuniform vec4 clippingPlanes[ NUM_CLIPPING_PLANES ];\\n#endif\";\n\n\tvar clipping_planes_pars_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvarying vec3 vClipPosition;\\n#endif\";\n\n\tvar clipping_planes_vertex = \"#if NUM_CLIPPING_PLANES > 0\\n\\tvClipPosition = - mvPosition.xyz;\\n#endif\";\n\n\tvar color_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tdiffuseColor *= vColor;\\n#elif defined( USE_COLOR )\\n\\tdiffuseColor.rgb *= vColor;\\n#endif\";\n\n\tvar color_pars_fragment = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_pars_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvarying vec4 vColor;\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvarying vec3 vColor;\\n#endif\";\n\n\tvar color_vertex = \"#if defined( USE_COLOR_ALPHA )\\n\\tvColor = vec4( 1.0 );\\n#elif defined( USE_COLOR ) || defined( USE_INSTANCING_COLOR )\\n\\tvColor = vec3( 1.0 );\\n#endif\\n#ifdef USE_COLOR\\n\\tvColor *= color;\\n#endif\\n#ifdef USE_INSTANCING_COLOR\\n\\tvColor.xyz *= instanceColor.xyz;\\n#endif\";\n\n\tvar common = \"#define PI 3.141592653589793\\n#define PI2 6.283185307179586\\n#define PI_HALF 1.5707963267948966\\n#define RECIPROCAL_PI 0.3183098861837907\\n#define RECIPROCAL_PI2 0.15915494309189535\\n#define EPSILON 1e-6\\n#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\n#define whiteComplement(a) ( 1.0 - saturate( a ) )\\nfloat pow2( const in float x ) { return x*x; }\\nfloat pow3( const in float x ) { return x*x*x; }\\nfloat pow4( const in float x ) { float x2 = x*x; return x2*x2; }\\nfloat average( const in vec3 color ) { return dot( color, vec3( 0.3333 ) ); }\\nhighp float rand( const in vec2 uv ) {\\n\\tconst highp float a = 12.9898, b = 78.233, c = 43758.5453;\\n\\thighp float dt = dot( uv.xy, vec2( a,b ) ), sn = mod( dt, PI );\\n\\treturn fract(sin(sn) * c);\\n}\\n#ifdef HIGH_PRECISION\\n\\tfloat precisionSafeLength( vec3 v ) { return length( v ); }\\n#else\\n\\tfloat max3( vec3 v ) { return max( max( v.x, v.y ), v.z ); }\\n\\tfloat precisionSafeLength( vec3 v ) {\\n\\t\\tfloat maxComponent = max3( abs( v ) );\\n\\t\\treturn length( v / maxComponent ) * maxComponent;\\n\\t}\\n#endif\\nstruct IncidentLight {\\n\\tvec3 color;\\n\\tvec3 direction;\\n\\tbool visible;\\n};\\nstruct ReflectedLight {\\n\\tvec3 directDiffuse;\\n\\tvec3 directSpecular;\\n\\tvec3 indirectDiffuse;\\n\\tvec3 indirectSpecular;\\n};\\nstruct GeometricContext {\\n\\tvec3 position;\\n\\tvec3 normal;\\n\\tvec3 viewDir;\\n#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal;\\n#endif\\n};\\nvec3 transformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( matrix * vec4( dir, 0.0 ) ).xyz );\\n}\\nvec3 inverseTransformDirection( in vec3 dir, in mat4 matrix ) {\\n\\treturn normalize( ( vec4( dir, 0.0 ) * matrix ).xyz );\\n}\\nvec3 projectOnPlane(in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\tfloat distance = dot( planeNormal, point - pointOnPlane );\\n\\treturn - distance * planeNormal + point;\\n}\\nfloat sideOfPlane( in vec3 point, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn sign( dot( point - pointOnPlane, planeNormal ) );\\n}\\nvec3 linePlaneIntersect( in vec3 pointOnLine, in vec3 lineDirection, in vec3 pointOnPlane, in vec3 planeNormal ) {\\n\\treturn lineDirection * ( dot( planeNormal, pointOnPlane - pointOnLine ) / dot( planeNormal, lineDirection ) ) + pointOnLine;\\n}\\nmat3 transposeMat3( const in mat3 m ) {\\n\\tmat3 tmp;\\n\\ttmp[ 0 ] = vec3( m[ 0 ].x, m[ 1 ].x, m[ 2 ].x );\\n\\ttmp[ 1 ] = vec3( m[ 0 ].y, m[ 1 ].y, m[ 2 ].y );\\n\\ttmp[ 2 ] = vec3( m[ 0 ].z, m[ 1 ].z, m[ 2 ].z );\\n\\treturn tmp;\\n}\\nfloat linearToRelativeLuminance( const in vec3 color ) {\\n\\tvec3 weights = vec3( 0.2126, 0.7152, 0.0722 );\\n\\treturn dot( weights, color.rgb );\\n}\\nbool isPerspectiveMatrix( mat4 m ) {\\n\\treturn m[ 2 ][ 3 ] == - 1.0;\\n}\\nvec2 equirectUv( in vec3 dir ) {\\n\\tfloat u = atan( dir.z, dir.x ) * RECIPROCAL_PI2 + 0.5;\\n\\tfloat v = asin( clamp( dir.y, - 1.0, 1.0 ) ) * RECIPROCAL_PI + 0.5;\\n\\treturn vec2( u, v );\\n}\";\n\n\tvar cube_uv_reflection_fragment = \"#ifdef ENVMAP_TYPE_CUBE_UV\\n\\t#define cubeUV_maxMipLevel 8.0\\n\\t#define cubeUV_minMipLevel 4.0\\n\\t#define cubeUV_maxTileSize 256.0\\n\\t#define cubeUV_minTileSize 16.0\\n\\tfloat getFace( vec3 direction ) {\\n\\t\\tvec3 absDirection = abs( direction );\\n\\t\\tfloat face = - 1.0;\\n\\t\\tif ( absDirection.x > absDirection.z ) {\\n\\t\\t\\tif ( absDirection.x > absDirection.y )\\n\\t\\t\\t\\tface = direction.x > 0.0 ? 0.0 : 3.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t} else {\\n\\t\\t\\tif ( absDirection.z > absDirection.y )\\n\\t\\t\\t\\tface = direction.z > 0.0 ? 2.0 : 5.0;\\n\\t\\t\\telse\\n\\t\\t\\t\\tface = direction.y > 0.0 ? 1.0 : 4.0;\\n\\t\\t}\\n\\t\\treturn face;\\n\\t}\\n\\tvec2 getUV( vec3 direction, float face ) {\\n\\t\\tvec2 uv;\\n\\t\\tif ( face == 0.0 ) {\\n\\t\\t\\tuv = vec2( direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 1.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, - direction.z ) / abs( direction.y );\\n\\t\\t} else if ( face == 2.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.y ) / abs( direction.z );\\n\\t\\t} else if ( face == 3.0 ) {\\n\\t\\t\\tuv = vec2( - direction.z, direction.y ) / abs( direction.x );\\n\\t\\t} else if ( face == 4.0 ) {\\n\\t\\t\\tuv = vec2( - direction.x, direction.z ) / abs( direction.y );\\n\\t\\t} else {\\n\\t\\t\\tuv = vec2( direction.x, direction.y ) / abs( direction.z );\\n\\t\\t}\\n\\t\\treturn 0.5 * ( uv + 1.0 );\\n\\t}\\n\\tvec3 bilinearCubeUV( sampler2D envMap, vec3 direction, float mipInt ) {\\n\\t\\tfloat face = getFace( direction );\\n\\t\\tfloat filterInt = max( cubeUV_minMipLevel - mipInt, 0.0 );\\n\\t\\tmipInt = max( mipInt, cubeUV_minMipLevel );\\n\\t\\tfloat faceSize = exp2( mipInt );\\n\\t\\tfloat texelSize = 1.0 / ( 3.0 * cubeUV_maxTileSize );\\n\\t\\tvec2 uv = getUV( direction, face ) * ( faceSize - 1.0 );\\n\\t\\tvec2 f = fract( uv );\\n\\t\\tuv += 0.5 - f;\\n\\t\\tif ( face > 2.0 ) {\\n\\t\\t\\tuv.y += faceSize;\\n\\t\\t\\tface -= 3.0;\\n\\t\\t}\\n\\t\\tuv.x += face * faceSize;\\n\\t\\tif ( mipInt < cubeUV_maxMipLevel ) {\\n\\t\\t\\tuv.y += 2.0 * cubeUV_maxTileSize;\\n\\t\\t}\\n\\t\\tuv.y += filterInt * 2.0 * cubeUV_minTileSize;\\n\\t\\tuv.x += 3.0 * max( 0.0, cubeUV_maxTileSize - 2.0 * faceSize );\\n\\t\\tuv *= texelSize;\\n\\t\\tvec3 tl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x += texelSize;\\n\\t\\tvec3 tr = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.y += texelSize;\\n\\t\\tvec3 br = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tuv.x -= texelSize;\\n\\t\\tvec3 bl = envMapTexelToLinear( texture2D( envMap, uv ) ).rgb;\\n\\t\\tvec3 tm = mix( tl, tr, f.x );\\n\\t\\tvec3 bm = mix( bl, br, f.x );\\n\\t\\treturn mix( tm, bm, f.y );\\n\\t}\\n\\t#define r0 1.0\\n\\t#define v0 0.339\\n\\t#define m0 - 2.0\\n\\t#define r1 0.8\\n\\t#define v1 0.276\\n\\t#define m1 - 1.0\\n\\t#define r4 0.4\\n\\t#define v4 0.046\\n\\t#define m4 2.0\\n\\t#define r5 0.305\\n\\t#define v5 0.016\\n\\t#define m5 3.0\\n\\t#define r6 0.21\\n\\t#define v6 0.0038\\n\\t#define m6 4.0\\n\\tfloat roughnessToMip( float roughness ) {\\n\\t\\tfloat mip = 0.0;\\n\\t\\tif ( roughness >= r1 ) {\\n\\t\\t\\tmip = ( r0 - roughness ) * ( m1 - m0 ) / ( r0 - r1 ) + m0;\\n\\t\\t} else if ( roughness >= r4 ) {\\n\\t\\t\\tmip = ( r1 - roughness ) * ( m4 - m1 ) / ( r1 - r4 ) + m1;\\n\\t\\t} else if ( roughness >= r5 ) {\\n\\t\\t\\tmip = ( r4 - roughness ) * ( m5 - m4 ) / ( r4 - r5 ) + m4;\\n\\t\\t} else if ( roughness >= r6 ) {\\n\\t\\t\\tmip = ( r5 - roughness ) * ( m6 - m5 ) / ( r5 - r6 ) + m5;\\n\\t\\t} else {\\n\\t\\t\\tmip = - 2.0 * log2( 1.16 * roughness );\\t\\t}\\n\\t\\treturn mip;\\n\\t}\\n\\tvec4 textureCubeUV( sampler2D envMap, vec3 sampleDir, float roughness ) {\\n\\t\\tfloat mip = clamp( roughnessToMip( roughness ), m0, cubeUV_maxMipLevel );\\n\\t\\tfloat mipF = fract( mip );\\n\\t\\tfloat mipInt = floor( mip );\\n\\t\\tvec3 color0 = bilinearCubeUV( envMap, sampleDir, mipInt );\\n\\t\\tif ( mipF == 0.0 ) {\\n\\t\\t\\treturn vec4( color0, 1.0 );\\n\\t\\t} else {\\n\\t\\t\\tvec3 color1 = bilinearCubeUV( envMap, sampleDir, mipInt + 1.0 );\\n\\t\\t\\treturn vec4( mix( color0, color1, mipF ), 1.0 );\\n\\t\\t}\\n\\t}\\n#endif\";\n\n\tvar defaultnormal_vertex = \"vec3 transformedNormal = objectNormal;\\n#ifdef USE_INSTANCING\\n\\tmat3 m = mat3( instanceMatrix );\\n\\ttransformedNormal /= vec3( dot( m[ 0 ], m[ 0 ] ), dot( m[ 1 ], m[ 1 ] ), dot( m[ 2 ], m[ 2 ] ) );\\n\\ttransformedNormal = m * transformedNormal;\\n#endif\\ntransformedNormal = normalMatrix * transformedNormal;\\n#ifdef FLIP_SIDED\\n\\ttransformedNormal = - transformedNormal;\\n#endif\\n#ifdef USE_TANGENT\\n\\tvec3 transformedTangent = ( modelViewMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#ifdef FLIP_SIDED\\n\\t\\ttransformedTangent = - transformedTangent;\\n\\t#endif\\n#endif\";\n\n\tvar displacementmap_pars_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\tuniform sampler2D displacementMap;\\n\\tuniform float displacementScale;\\n\\tuniform float displacementBias;\\n#endif\";\n\n\tvar displacementmap_vertex = \"#ifdef USE_DISPLACEMENTMAP\\n\\ttransformed += normalize( objectNormal ) * ( texture2D( displacementMap, vUv ).x * displacementScale + displacementBias );\\n#endif\";\n\n\tvar emissivemap_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tvec4 emissiveColor = texture2D( emissiveMap, vUv );\\n\\temissiveColor.rgb = emissiveMapTexelToLinear( emissiveColor ).rgb;\\n\\ttotalEmissiveRadiance *= emissiveColor.rgb;\\n#endif\";\n\n\tvar emissivemap_pars_fragment = \"#ifdef USE_EMISSIVEMAP\\n\\tuniform sampler2D emissiveMap;\\n#endif\";\n\n\tvar encodings_fragment = \"gl_FragColor = linearToOutputTexel( gl_FragColor );\";\n\n\tvar encodings_pars_fragment = \"\\nvec4 LinearToLinear( in vec4 value ) {\\n\\treturn value;\\n}\\nvec4 GammaToLinear( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( gammaFactor ) ), value.a );\\n}\\nvec4 LinearToGamma( in vec4 value, in float gammaFactor ) {\\n\\treturn vec4( pow( value.rgb, vec3( 1.0 / gammaFactor ) ), value.a );\\n}\\nvec4 sRGBToLinear( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb * 0.9478672986 + vec3( 0.0521327014 ), vec3( 2.4 ) ), value.rgb * 0.0773993808, vec3( lessThanEqual( value.rgb, vec3( 0.04045 ) ) ) ), value.a );\\n}\\nvec4 LinearTosRGB( in vec4 value ) {\\n\\treturn vec4( mix( pow( value.rgb, vec3( 0.41666 ) ) * 1.055 - vec3( 0.055 ), value.rgb * 12.92, vec3( lessThanEqual( value.rgb, vec3( 0.0031308 ) ) ) ), value.a );\\n}\\nvec4 RGBEToLinear( in vec4 value ) {\\n\\treturn vec4( value.rgb * exp2( value.a * 255.0 - 128.0 ), 1.0 );\\n}\\nvec4 LinearToRGBE( in vec4 value ) {\\n\\tfloat maxComponent = max( max( value.r, value.g ), value.b );\\n\\tfloat fExp = clamp( ceil( log2( maxComponent ) ), -128.0, 127.0 );\\n\\treturn vec4( value.rgb / exp2( fExp ), ( fExp + 128.0 ) / 255.0 );\\n}\\nvec4 RGBMToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * value.a * maxRange, 1.0 );\\n}\\nvec4 LinearToRGBM( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat M = clamp( maxRGB / maxRange, 0.0, 1.0 );\\n\\tM = ceil( M * 255.0 ) / 255.0;\\n\\treturn vec4( value.rgb / ( M * maxRange ), M );\\n}\\nvec4 RGBDToLinear( in vec4 value, in float maxRange ) {\\n\\treturn vec4( value.rgb * ( ( maxRange / 255.0 ) / value.a ), 1.0 );\\n}\\nvec4 LinearToRGBD( in vec4 value, in float maxRange ) {\\n\\tfloat maxRGB = max( value.r, max( value.g, value.b ) );\\n\\tfloat D = max( maxRange / maxRGB, 1.0 );\\n\\tD = clamp( floor( D ) / 255.0, 0.0, 1.0 );\\n\\treturn vec4( value.rgb * ( D * ( 255.0 / maxRange ) ), D );\\n}\\nconst mat3 cLogLuvM = mat3( 0.2209, 0.3390, 0.4184, 0.1138, 0.6780, 0.7319, 0.0102, 0.1130, 0.2969 );\\nvec4 LinearToLogLuv( in vec4 value ) {\\n\\tvec3 Xp_Y_XYZp = cLogLuvM * value.rgb;\\n\\tXp_Y_XYZp = max( Xp_Y_XYZp, vec3( 1e-6, 1e-6, 1e-6 ) );\\n\\tvec4 vResult;\\n\\tvResult.xy = Xp_Y_XYZp.xy / Xp_Y_XYZp.z;\\n\\tfloat Le = 2.0 * log2(Xp_Y_XYZp.y) + 127.0;\\n\\tvResult.w = fract( Le );\\n\\tvResult.z = ( Le - ( floor( vResult.w * 255.0 ) ) / 255.0 ) / 255.0;\\n\\treturn vResult;\\n}\\nconst mat3 cLogLuvInverseM = mat3( 6.0014, -2.7008, -1.7996, -1.3320, 3.1029, -5.7721, 0.3008, -1.0882, 5.6268 );\\nvec4 LogLuvToLinear( in vec4 value ) {\\n\\tfloat Le = value.z * 255.0 + value.w;\\n\\tvec3 Xp_Y_XYZp;\\n\\tXp_Y_XYZp.y = exp2( ( Le - 127.0 ) / 2.0 );\\n\\tXp_Y_XYZp.z = Xp_Y_XYZp.y / value.y;\\n\\tXp_Y_XYZp.x = value.x * Xp_Y_XYZp.z;\\n\\tvec3 vRGB = cLogLuvInverseM * Xp_Y_XYZp.rgb;\\n\\treturn vec4( max( vRGB, 0.0 ), 1.0 );\\n}\";\n\n\tvar envmap_fragment = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvec3 cameraToFrag;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToFrag = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToFrag = normalize( vWorldPosition - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( cameraToFrag, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( cameraToFrag, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#else\\n\\t\\tvec3 reflectVec = vReflect;\\n\\t#endif\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tvec4 envColor = textureCube( envMap, vec3( flipEnvMap * reflectVec.x, reflectVec.yz ) );\\n\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tvec4 envColor = textureCubeUV( envMap, reflectVec, 0.0 );\\n\\t#else\\n\\t\\tvec4 envColor = vec4( 0.0 );\\n\\t#endif\\n\\t#ifndef ENVMAP_TYPE_CUBE_UV\\n\\t\\tenvColor = envMapTexelToLinear( envColor );\\n\\t#endif\\n\\t#ifdef ENVMAP_BLENDING_MULTIPLY\\n\\t\\toutgoingLight = mix( outgoingLight, outgoingLight * envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_MIX )\\n\\t\\toutgoingLight = mix( outgoingLight, envColor.xyz, specularStrength * reflectivity );\\n\\t#elif defined( ENVMAP_BLENDING_ADD )\\n\\t\\toutgoingLight += envColor.xyz * specularStrength * reflectivity;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_common_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float envMapIntensity;\\n\\tuniform float flipEnvMap;\\n\\tuniform int maxMipLevel;\\n\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\tuniform samplerCube envMap;\\n\\t#else\\n\\t\\tuniform sampler2D envMap;\\n\\t#endif\\n\\t\\n#endif\";\n\n\tvar envmap_pars_fragment = \"#ifdef USE_ENVMAP\\n\\tuniform float reflectivity;\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) || defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t\\tuniform float refractionRatio;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_pars_vertex = \"#ifdef USE_ENVMAP\\n\\t#if defined( USE_BUMPMAP ) || defined( USE_NORMALMAP ) ||defined( PHONG )\\n\\t\\t#define ENV_WORLDPOS\\n\\t#endif\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\t\\n\\t\\tvarying vec3 vWorldPosition;\\n\\t#else\\n\\t\\tvarying vec3 vReflect;\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n#endif\";\n\n\tvar envmap_vertex = \"#ifdef USE_ENVMAP\\n\\t#ifdef ENV_WORLDPOS\\n\\t\\tvWorldPosition = worldPosition.xyz;\\n\\t#else\\n\\t\\tvec3 cameraToVertex;\\n\\t\\tif ( isOrthographic ) {\\n\\t\\t\\tcameraToVertex = normalize( vec3( - viewMatrix[ 0 ][ 2 ], - viewMatrix[ 1 ][ 2 ], - viewMatrix[ 2 ][ 2 ] ) );\\n\\t\\t} else {\\n\\t\\t\\tcameraToVertex = normalize( worldPosition.xyz - cameraPosition );\\n\\t\\t}\\n\\t\\tvec3 worldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvReflect = reflect( cameraToVertex, worldNormal );\\n\\t\\t#else\\n\\t\\t\\tvReflect = refract( cameraToVertex, worldNormal, refractionRatio );\\n\\t\\t#endif\\n\\t#endif\\n#endif\";\n\n\tvar fog_vertex = \"#ifdef USE_FOG\\n\\tfogDepth = - mvPosition.z;\\n#endif\";\n\n\tvar fog_pars_vertex = \"#ifdef USE_FOG\\n\\tvarying float fogDepth;\\n#endif\";\n\n\tvar fog_fragment = \"#ifdef USE_FOG\\n\\t#ifdef FOG_EXP2\\n\\t\\tfloat fogFactor = 1.0 - exp( - fogDensity * fogDensity * fogDepth * fogDepth );\\n\\t#else\\n\\t\\tfloat fogFactor = smoothstep( fogNear, fogFar, fogDepth );\\n\\t#endif\\n\\tgl_FragColor.rgb = mix( gl_FragColor.rgb, fogColor, fogFactor );\\n#endif\";\n\n\tvar fog_pars_fragment = \"#ifdef USE_FOG\\n\\tuniform vec3 fogColor;\\n\\tvarying float fogDepth;\\n\\t#ifdef FOG_EXP2\\n\\t\\tuniform float fogDensity;\\n\\t#else\\n\\t\\tuniform float fogNear;\\n\\t\\tuniform float fogFar;\\n\\t#endif\\n#endif\";\n\n\tvar gradientmap_pars_fragment = \"#ifdef USE_GRADIENTMAP\\n\\tuniform sampler2D gradientMap;\\n#endif\\nvec3 getGradientIrradiance( vec3 normal, vec3 lightDirection ) {\\n\\tfloat dotNL = dot( normal, lightDirection );\\n\\tvec2 coord = vec2( dotNL * 0.5 + 0.5, 0.0 );\\n\\t#ifdef USE_GRADIENTMAP\\n\\t\\treturn texture2D( gradientMap, coord ).rgb;\\n\\t#else\\n\\t\\treturn ( coord.x < 0.7 ) ? vec3( 0.7 ) : vec3( 1.0 );\\n\\t#endif\\n}\";\n\n\tvar lightmap_fragment = \"#ifdef USE_LIGHTMAP\\n\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\treflectedLight.indirectDiffuse += PI * lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n#endif\";\n\n\tvar lightmap_pars_fragment = \"#ifdef USE_LIGHTMAP\\n\\tuniform sampler2D lightMap;\\n\\tuniform float lightMapIntensity;\\n#endif\";\n\n\tvar lights_lambert_vertex = \"vec3 diffuse = vec3( 1.0 );\\nGeometricContext geometry;\\ngeometry.position = mvPosition.xyz;\\ngeometry.normal = normalize( transformedNormal );\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( -mvPosition.xyz );\\nGeometricContext backGeometry;\\nbackGeometry.position = geometry.position;\\nbackGeometry.normal = -geometry.normal;\\nbackGeometry.viewDir = geometry.viewDir;\\nvLightFront = vec3( 0.0 );\\nvIndirectFront = vec3( 0.0 );\\n#ifdef DOUBLE_SIDED\\n\\tvLightBack = vec3( 0.0 );\\n\\tvIndirectBack = vec3( 0.0 );\\n#endif\\nIncidentLight directLight;\\nfloat dotNL;\\nvec3 directLightColor_Diffuse;\\nvIndirectFront += getAmbientLightIrradiance( ambientLightColor );\\nvIndirectFront += getLightProbeIrradiance( lightProbe, geometry );\\n#ifdef DOUBLE_SIDED\\n\\tvIndirectBack += getAmbientLightIrradiance( ambientLightColor );\\n\\tvIndirectBack += getLightProbeIrradiance( lightProbe, backGeometry );\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tgetPointDirectLightIrradiance( pointLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tgetSpotDirectLightIrradiance( spotLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_DIR_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLights[ i ], geometry, directLight );\\n\\t\\tdotNL = dot( geometry.normal, directLight.direction );\\n\\t\\tdirectLightColor_Diffuse = PI * directLight.color;\\n\\t\\tvLightFront += saturate( dotNL ) * directLightColor_Diffuse;\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvLightBack += saturate( -dotNL ) * directLightColor_Diffuse;\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\tvIndirectFront += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\tvIndirectBack += getHemisphereLightIrradiance( hemisphereLights[ i ], backGeometry );\\n\\t\\t#endif\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\";\n\n\tvar lights_pars_begin = \"uniform bool receiveShadow;\\nuniform vec3 ambientLightColor;\\nuniform vec3 lightProbe[ 9 ];\\nvec3 shGetIrradianceAt( in vec3 normal, in vec3 shCoefficients[ 9 ] ) {\\n\\tfloat x = normal.x, y = normal.y, z = normal.z;\\n\\tvec3 result = shCoefficients[ 0 ] * 0.886227;\\n\\tresult += shCoefficients[ 1 ] * 2.0 * 0.511664 * y;\\n\\tresult += shCoefficients[ 2 ] * 2.0 * 0.511664 * z;\\n\\tresult += shCoefficients[ 3 ] * 2.0 * 0.511664 * x;\\n\\tresult += shCoefficients[ 4 ] * 2.0 * 0.429043 * x * y;\\n\\tresult += shCoefficients[ 5 ] * 2.0 * 0.429043 * y * z;\\n\\tresult += shCoefficients[ 6 ] * ( 0.743125 * z * z - 0.247708 );\\n\\tresult += shCoefficients[ 7 ] * 2.0 * 0.429043 * x * z;\\n\\tresult += shCoefficients[ 8 ] * 0.429043 * ( x * x - y * y );\\n\\treturn result;\\n}\\nvec3 getLightProbeIrradiance( const in vec3 lightProbe[ 9 ], const in GeometricContext geometry ) {\\n\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\tvec3 irradiance = shGetIrradianceAt( worldNormal, lightProbe );\\n\\treturn irradiance;\\n}\\nvec3 getAmbientLightIrradiance( const in vec3 ambientLightColor ) {\\n\\tvec3 irradiance = ambientLightColor;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treturn irradiance;\\n}\\n#if NUM_DIR_LIGHTS > 0\\n\\tstruct DirectionalLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t};\\n\\tuniform DirectionalLight directionalLights[ NUM_DIR_LIGHTS ];\\n\\tvoid getDirectionalDirectLightIrradiance( const in DirectionalLight directionalLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tdirectLight.color = directionalLight.color;\\n\\t\\tdirectLight.direction = directionalLight.direction;\\n\\t\\tdirectLight.visible = true;\\n\\t}\\n#endif\\n#if NUM_POINT_LIGHTS > 0\\n\\tstruct PointLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t};\\n\\tuniform PointLight pointLights[ NUM_POINT_LIGHTS ];\\n\\tvoid getPointDirectLightIrradiance( const in PointLight pointLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = pointLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tdirectLight.color = pointLight.color;\\n\\t\\tdirectLight.color *= punctualLightIntensityToIrradianceFactor( lightDistance, pointLight.distance, pointLight.decay );\\n\\t\\tdirectLight.visible = ( directLight.color != vec3( 0.0 ) );\\n\\t}\\n#endif\\n#if NUM_SPOT_LIGHTS > 0\\n\\tstruct SpotLight {\\n\\t\\tvec3 position;\\n\\t\\tvec3 direction;\\n\\t\\tvec3 color;\\n\\t\\tfloat distance;\\n\\t\\tfloat decay;\\n\\t\\tfloat coneCos;\\n\\t\\tfloat penumbraCos;\\n\\t};\\n\\tuniform SpotLight spotLights[ NUM_SPOT_LIGHTS ];\\n\\tvoid getSpotDirectLightIrradiance( const in SpotLight spotLight, const in GeometricContext geometry, out IncidentLight directLight ) {\\n\\t\\tvec3 lVector = spotLight.position - geometry.position;\\n\\t\\tdirectLight.direction = normalize( lVector );\\n\\t\\tfloat lightDistance = length( lVector );\\n\\t\\tfloat angleCos = dot( directLight.direction, spotLight.direction );\\n\\t\\tif ( angleCos > spotLight.coneCos ) {\\n\\t\\t\\tfloat spotEffect = smoothstep( spotLight.coneCos, spotLight.penumbraCos, angleCos );\\n\\t\\t\\tdirectLight.color = spotLight.color;\\n\\t\\t\\tdirectLight.color *= spotEffect * punctualLightIntensityToIrradianceFactor( lightDistance, spotLight.distance, spotLight.decay );\\n\\t\\t\\tdirectLight.visible = true;\\n\\t\\t} else {\\n\\t\\t\\tdirectLight.color = vec3( 0.0 );\\n\\t\\t\\tdirectLight.visible = false;\\n\\t\\t}\\n\\t}\\n#endif\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tstruct RectAreaLight {\\n\\t\\tvec3 color;\\n\\t\\tvec3 position;\\n\\t\\tvec3 halfWidth;\\n\\t\\tvec3 halfHeight;\\n\\t};\\n\\tuniform sampler2D ltc_1;\\tuniform sampler2D ltc_2;\\n\\tuniform RectAreaLight rectAreaLights[ NUM_RECT_AREA_LIGHTS ];\\n#endif\\n#if NUM_HEMI_LIGHTS > 0\\n\\tstruct HemisphereLight {\\n\\t\\tvec3 direction;\\n\\t\\tvec3 skyColor;\\n\\t\\tvec3 groundColor;\\n\\t};\\n\\tuniform HemisphereLight hemisphereLights[ NUM_HEMI_LIGHTS ];\\n\\tvec3 getHemisphereLightIrradiance( const in HemisphereLight hemiLight, const in GeometricContext geometry ) {\\n\\t\\tfloat dotNL = dot( geometry.normal, hemiLight.direction );\\n\\t\\tfloat hemiDiffuseWeight = 0.5 * dotNL + 0.5;\\n\\t\\tvec3 irradiance = mix( hemiLight.groundColor, hemiLight.skyColor, hemiDiffuseWeight );\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tirradiance *= PI;\\n\\t\\t#endif\\n\\t\\treturn irradiance;\\n\\t}\\n#endif\";\n\n\tvar envmap_physical_pars_fragment = \"#if defined( USE_ENVMAP )\\n\\t#ifdef ENVMAP_MODE_REFRACTION\\n\\t\\tuniform float refractionRatio;\\n\\t#endif\\n\\tvec3 getLightProbeIndirectIrradiance( const in GeometricContext geometry, const in int maxMIPLevel ) {\\n\\t\\tvec3 worldNormal = inverseTransformDirection( geometry.normal, viewMatrix );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryVec = vec3( flipEnvMap * worldNormal.x, worldNormal.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryVec, float( maxMIPLevel ) );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, worldNormal, 1.0 );\\n\\t\\t#else\\n\\t\\t\\tvec4 envMapColor = vec4( 0.0 );\\n\\t\\t#endif\\n\\t\\treturn PI * envMapColor.rgb * envMapIntensity;\\n\\t}\\n\\tfloat getSpecularMIPLevel( const in float roughness, const in int maxMIPLevel ) {\\n\\t\\tfloat maxMIPLevelScalar = float( maxMIPLevel );\\n\\t\\tfloat sigma = PI * roughness * roughness / ( 1.0 + roughness );\\n\\t\\tfloat desiredMIPLevel = maxMIPLevelScalar + log2( sigma );\\n\\t\\treturn clamp( desiredMIPLevel, 0.0, maxMIPLevelScalar );\\n\\t}\\n\\tvec3 getLightProbeIndirectRadiance( const in vec3 viewDir, const in vec3 normal, const in float roughness, const in int maxMIPLevel ) {\\n\\t\\t#ifdef ENVMAP_MODE_REFLECTION\\n\\t\\t\\tvec3 reflectVec = reflect( -viewDir, normal );\\n\\t\\t\\treflectVec = normalize( mix( reflectVec, normal, roughness * roughness) );\\n\\t\\t#else\\n\\t\\t\\tvec3 reflectVec = refract( -viewDir, normal, refractionRatio );\\n\\t\\t#endif\\n\\t\\treflectVec = inverseTransformDirection( reflectVec, viewMatrix );\\n\\t\\tfloat specularMIPLevel = getSpecularMIPLevel( roughness, maxMIPLevel );\\n\\t\\t#ifdef ENVMAP_TYPE_CUBE\\n\\t\\t\\tvec3 queryReflectVec = vec3( flipEnvMap * reflectVec.x, reflectVec.yz );\\n\\t\\t\\t#ifdef TEXTURE_LOD_EXT\\n\\t\\t\\t\\tvec4 envMapColor = textureCubeLodEXT( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#else\\n\\t\\t\\t\\tvec4 envMapColor = textureCube( envMap, queryReflectVec, specularMIPLevel );\\n\\t\\t\\t#endif\\n\\t\\t\\tenvMapColor.rgb = envMapTexelToLinear( envMapColor ).rgb;\\n\\t\\t#elif defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\t\\tvec4 envMapColor = textureCubeUV( envMap, reflectVec, roughness );\\n\\t\\t#endif\\n\\t\\treturn envMapColor.rgb * envMapIntensity;\\n\\t}\\n#endif\";\n\n\tvar lights_toon_fragment = \"ToonMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\";\n\n\tvar lights_toon_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct ToonMaterial {\\n\\tvec3 diffuseColor;\\n};\\nvoid RE_Direct_Toon( const in IncidentLight directLight, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tvec3 irradiance = getGradientIrradiance( geometry.normal, directLight.direction ) * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Toon( const in vec3 irradiance, const in GeometricContext geometry, const in ToonMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Toon\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Toon\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_phong_fragment = \"BlinnPhongMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb;\\nmaterial.specularColor = specular;\\nmaterial.specularShininess = shininess;\\nmaterial.specularStrength = specularStrength;\";\n\n\tvar lights_phong_pars_fragment = \"varying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\nstruct BlinnPhongMaterial {\\n\\tvec3 diffuseColor;\\n\\tvec3 specularColor;\\n\\tfloat specularShininess;\\n\\tfloat specularStrength;\\n};\\nvoid RE_Direct_BlinnPhong( const in IncidentLight directLight, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\treflectedLight.directDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n\\treflectedLight.directSpecular += irradiance * BRDF_Specular_BlinnPhong( directLight, geometry, material.specularColor, material.specularShininess ) * material.specularStrength;\\n}\\nvoid RE_IndirectDiffuse_BlinnPhong( const in vec3 irradiance, const in GeometricContext geometry, const in BlinnPhongMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_BlinnPhong\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_BlinnPhong\\n#define Material_LightProbeLOD( material )\\t(0)\";\n\n\tvar lights_physical_fragment = \"PhysicalMaterial material;\\nmaterial.diffuseColor = diffuseColor.rgb * ( 1.0 - metalnessFactor );\\nvec3 dxy = max( abs( dFdx( geometryNormal ) ), abs( dFdy( geometryNormal ) ) );\\nfloat geometryRoughness = max( max( dxy.x, dxy.y ), dxy.z );\\nmaterial.specularRoughness = max( roughnessFactor, 0.0525 );material.specularRoughness += geometryRoughness;\\nmaterial.specularRoughness = min( material.specularRoughness, 1.0 );\\n#ifdef REFLECTIVITY\\n\\tmaterial.specularColor = mix( vec3( MAXIMUM_SPECULAR_COEFFICIENT * pow2( reflectivity ) ), rawDiffuseColor, metalnessFactor );\\n#else\\n\\tmaterial.specularColor = mix( vec3( DEFAULT_SPECULAR_COEFFICIENT ), rawDiffuseColor, metalnessFactor );\\n#endif\\n#ifdef CLEARCOAT\\n\\tmaterial.clearcoat = clearcoat;\\n\\tmaterial.clearcoatRoughness = clearcoatRoughness;\\n\\t#ifdef USE_CLEARCOATMAP\\n\\t\\tmaterial.clearcoat *= texture2D( clearcoatMap, vUv ).x;\\n\\t#endif\\n\\t#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\t\\tmaterial.clearcoatRoughness *= texture2D( clearcoatRoughnessMap, vUv ).y;\\n\\t#endif\\n\\tmaterial.clearcoat = saturate( material.clearcoat );\\tmaterial.clearcoatRoughness = max( material.clearcoatRoughness, 0.0525 );\\n\\tmaterial.clearcoatRoughness += geometryRoughness;\\n\\tmaterial.clearcoatRoughness = min( material.clearcoatRoughness, 1.0 );\\n#endif\\n#ifdef USE_SHEEN\\n\\tmaterial.sheenColor = sheen;\\n#endif\";\n\n\tvar lights_physical_pars_fragment = \"struct PhysicalMaterial {\\n\\tvec3 diffuseColor;\\n\\tfloat specularRoughness;\\n\\tvec3 specularColor;\\n#ifdef CLEARCOAT\\n\\tfloat clearcoat;\\n\\tfloat clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tvec3 sheenColor;\\n#endif\\n};\\n#define MAXIMUM_SPECULAR_COEFFICIENT 0.16\\n#define DEFAULT_SPECULAR_COEFFICIENT 0.04\\nfloat clearcoatDHRApprox( const in float roughness, const in float dotNL ) {\\n\\treturn DEFAULT_SPECULAR_COEFFICIENT + ( 1.0 - DEFAULT_SPECULAR_COEFFICIENT ) * ( pow( 1.0 - dotNL, 5.0 ) * pow( 1.0 - roughness, 2.0 ) );\\n}\\n#if NUM_RECT_AREA_LIGHTS > 0\\n\\tvoid RE_Direct_RectArea_Physical( const in RectAreaLight rectAreaLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\t\\tvec3 normal = geometry.normal;\\n\\t\\tvec3 viewDir = geometry.viewDir;\\n\\t\\tvec3 position = geometry.position;\\n\\t\\tvec3 lightPos = rectAreaLight.position;\\n\\t\\tvec3 halfWidth = rectAreaLight.halfWidth;\\n\\t\\tvec3 halfHeight = rectAreaLight.halfHeight;\\n\\t\\tvec3 lightColor = rectAreaLight.color;\\n\\t\\tfloat roughness = material.specularRoughness;\\n\\t\\tvec3 rectCoords[ 4 ];\\n\\t\\trectCoords[ 0 ] = lightPos + halfWidth - halfHeight;\\t\\trectCoords[ 1 ] = lightPos - halfWidth - halfHeight;\\n\\t\\trectCoords[ 2 ] = lightPos - halfWidth + halfHeight;\\n\\t\\trectCoords[ 3 ] = lightPos + halfWidth + halfHeight;\\n\\t\\tvec2 uv = LTC_Uv( normal, viewDir, roughness );\\n\\t\\tvec4 t1 = texture2D( ltc_1, uv );\\n\\t\\tvec4 t2 = texture2D( ltc_2, uv );\\n\\t\\tmat3 mInv = mat3(\\n\\t\\t\\tvec3( t1.x, 0, t1.y ),\\n\\t\\t\\tvec3(\t\t0, 1,\t\t0 ),\\n\\t\\t\\tvec3( t1.z, 0, t1.w )\\n\\t\\t);\\n\\t\\tvec3 fresnel = ( material.specularColor * t2.x + ( vec3( 1.0 ) - material.specularColor ) * t2.y );\\n\\t\\treflectedLight.directSpecular += lightColor * fresnel * LTC_Evaluate( normal, viewDir, position, mInv, rectCoords );\\n\\t\\treflectedLight.directDiffuse += lightColor * material.diffuseColor * LTC_Evaluate( normal, viewDir, position, mat3( 1.0 ), rectCoords );\\n\\t}\\n#endif\\nvoid RE_Direct_Physical( const in IncidentLight directLight, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\tfloat dotNL = saturate( dot( geometry.normal, directLight.direction ) );\\n\\tvec3 irradiance = dotNL * directLight.color;\\n\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\tirradiance *= PI;\\n\\t#endif\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNL = saturate( dot( geometry.clearcoatNormal, directLight.direction ) );\\n\\t\\tvec3 ccIrradiance = ccDotNL * directLight.color;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tccIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t\\treflectedLight.directSpecular += ccIrradiance * material.clearcoat * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\t#ifdef USE_SHEEN\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_Sheen(\\n\\t\\t\\tmaterial.specularRoughness,\\n\\t\\t\\tdirectLight.direction,\\n\\t\\t\\tgeometry,\\n\\t\\t\\tmaterial.sheenColor\\n\\t\\t);\\n\\t#else\\n\\t\\treflectedLight.directSpecular += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Specular_GGX( directLight, geometry.viewDir, geometry.normal, material.specularColor, material.specularRoughness);\\n\\t#endif\\n\\treflectedLight.directDiffuse += ( 1.0 - clearcoatDHR ) * irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectDiffuse_Physical( const in vec3 irradiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight ) {\\n\\treflectedLight.indirectDiffuse += irradiance * BRDF_Diffuse_Lambert( material.diffuseColor );\\n}\\nvoid RE_IndirectSpecular_Physical( const in vec3 radiance, const in vec3 irradiance, const in vec3 clearcoatRadiance, const in GeometricContext geometry, const in PhysicalMaterial material, inout ReflectedLight reflectedLight) {\\n\\t#ifdef CLEARCOAT\\n\\t\\tfloat ccDotNV = saturate( dot( geometry.clearcoatNormal, geometry.viewDir ) );\\n\\t\\treflectedLight.indirectSpecular += clearcoatRadiance * material.clearcoat * BRDF_Specular_GGX_Environment( geometry.viewDir, geometry.clearcoatNormal, vec3( DEFAULT_SPECULAR_COEFFICIENT ), material.clearcoatRoughness );\\n\\t\\tfloat ccDotNL = ccDotNV;\\n\\t\\tfloat clearcoatDHR = material.clearcoat * clearcoatDHRApprox( material.clearcoatRoughness, ccDotNL );\\n\\t#else\\n\\t\\tfloat clearcoatDHR = 0.0;\\n\\t#endif\\n\\tfloat clearcoatInv = 1.0 - clearcoatDHR;\\n\\tvec3 singleScattering = vec3( 0.0 );\\n\\tvec3 multiScattering = vec3( 0.0 );\\n\\tvec3 cosineWeightedIrradiance = irradiance * RECIPROCAL_PI;\\n\\tBRDF_Specular_Multiscattering_Environment( geometry, material.specularColor, material.specularRoughness, singleScattering, multiScattering );\\n\\tvec3 diffuse = material.diffuseColor * ( 1.0 - ( singleScattering + multiScattering ) );\\n\\treflectedLight.indirectSpecular += clearcoatInv * radiance * singleScattering;\\n\\treflectedLight.indirectSpecular += multiScattering * cosineWeightedIrradiance;\\n\\treflectedLight.indirectDiffuse += diffuse * cosineWeightedIrradiance;\\n}\\n#define RE_Direct\\t\\t\\t\\tRE_Direct_Physical\\n#define RE_Direct_RectArea\\t\\tRE_Direct_RectArea_Physical\\n#define RE_IndirectDiffuse\\t\\tRE_IndirectDiffuse_Physical\\n#define RE_IndirectSpecular\\t\\tRE_IndirectSpecular_Physical\\nfloat computeSpecularOcclusion( const in float dotNV, const in float ambientOcclusion, const in float roughness ) {\\n\\treturn saturate( pow( dotNV + ambientOcclusion, exp2( - 16.0 * roughness - 1.0 ) ) - 1.0 + ambientOcclusion );\\n}\";\n\n\tvar lights_fragment_begin = \"\\nGeometricContext geometry;\\ngeometry.position = - vViewPosition;\\ngeometry.normal = normal;\\ngeometry.viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n#ifdef CLEARCOAT\\n\\tgeometry.clearcoatNormal = clearcoatNormal;\\n#endif\\nIncidentLight directLight;\\n#if ( NUM_POINT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tPointLight pointLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHTS; i ++ ) {\\n\\t\\tpointLight = pointLights[ i ];\\n\\t\\tgetPointDirectLightIrradiance( pointLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_POINT_LIGHT_SHADOWS )\\n\\t\\tpointLightShadow = pointLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getPointShadow( pointShadowMap[ i ], pointLightShadow.shadowMapSize, pointLightShadow.shadowBias, pointLightShadow.shadowRadius, vPointShadowCoord[ i ], pointLightShadow.shadowCameraNear, pointLightShadow.shadowCameraFar ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_SPOT_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tSpotLight spotLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHTS; i ++ ) {\\n\\t\\tspotLight = spotLights[ i ];\\n\\t\\tgetSpotDirectLightIrradiance( spotLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_SPOT_LIGHT_SHADOWS )\\n\\t\\tspotLightShadow = spotLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( spotShadowMap[ i ], spotLightShadow.shadowMapSize, spotLightShadow.shadowBias, spotLightShadow.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_DIR_LIGHTS > 0 ) && defined( RE_Direct )\\n\\tDirectionalLight directionalLight;\\n\\t#if defined( USE_SHADOWMAP ) && NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLightShadow;\\n\\t#endif\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHTS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLights[ i ];\\n\\t\\tgetDirectionalDirectLightIrradiance( directionalLight, geometry, directLight );\\n\\t\\t#if defined( USE_SHADOWMAP ) && ( UNROLLED_LOOP_INDEX < NUM_DIR_LIGHT_SHADOWS )\\n\\t\\tdirectionalLightShadow = directionalLightShadows[ i ];\\n\\t\\tdirectLight.color *= all( bvec2( directLight.visible, receiveShadow ) ) ? getShadow( directionalShadowMap[ i ], directionalLightShadow.shadowMapSize, directionalLightShadow.shadowBias, directionalLightShadow.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t\\t#endif\\n\\t\\tRE_Direct( directLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if ( NUM_RECT_AREA_LIGHTS > 0 ) && defined( RE_Direct_RectArea )\\n\\tRectAreaLight rectAreaLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_RECT_AREA_LIGHTS; i ++ ) {\\n\\t\\trectAreaLight = rectAreaLights[ i ];\\n\\t\\tRE_Direct_RectArea( rectAreaLight, geometry, material, reflectedLight );\\n\\t}\\n\\t#pragma unroll_loop_end\\n#endif\\n#if defined( RE_IndirectDiffuse )\\n\\tvec3 iblIrradiance = vec3( 0.0 );\\n\\tvec3 irradiance = getAmbientLightIrradiance( ambientLightColor );\\n\\tirradiance += getLightProbeIrradiance( lightProbe, geometry );\\n\\t#if ( NUM_HEMI_LIGHTS > 0 )\\n\\t\\t#pragma unroll_loop_start\\n\\t\\tfor ( int i = 0; i < NUM_HEMI_LIGHTS; i ++ ) {\\n\\t\\t\\tirradiance += getHemisphereLightIrradiance( hemisphereLights[ i ], geometry );\\n\\t\\t}\\n\\t\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tvec3 radiance = vec3( 0.0 );\\n\\tvec3 clearcoatRadiance = vec3( 0.0 );\\n#endif\";\n\n\tvar lights_fragment_maps = \"#if defined( RE_IndirectDiffuse )\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\tvec3 lightMapIrradiance = lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t\\t#ifndef PHYSICALLY_CORRECT_LIGHTS\\n\\t\\t\\tlightMapIrradiance *= PI;\\n\\t\\t#endif\\n\\t\\tirradiance += lightMapIrradiance;\\n\\t#endif\\n\\t#if defined( USE_ENVMAP ) && defined( STANDARD ) && defined( ENVMAP_TYPE_CUBE_UV )\\n\\t\\tiblIrradiance += getLightProbeIndirectIrradiance( geometry, maxMipLevel );\\n\\t#endif\\n#endif\\n#if defined( USE_ENVMAP ) && defined( RE_IndirectSpecular )\\n\\tradiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.normal, material.specularRoughness, maxMipLevel );\\n\\t#ifdef CLEARCOAT\\n\\t\\tclearcoatRadiance += getLightProbeIndirectRadiance( geometry.viewDir, geometry.clearcoatNormal, material.clearcoatRoughness, maxMipLevel );\\n\\t#endif\\n#endif\";\n\n\tvar lights_fragment_end = \"#if defined( RE_IndirectDiffuse )\\n\\tRE_IndirectDiffuse( irradiance, geometry, material, reflectedLight );\\n#endif\\n#if defined( RE_IndirectSpecular )\\n\\tRE_IndirectSpecular( radiance, iblIrradiance, clearcoatRadiance, geometry, material, reflectedLight );\\n#endif\";\n\n\tvar logdepthbuf_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tgl_FragDepthEXT = vIsPerspective == 0.0 ? gl_FragCoord.z : log2( vFragDepth ) * logDepthBufFC * 0.5;\\n#endif\";\n\n\tvar logdepthbuf_pars_fragment = \"#if defined( USE_LOGDEPTHBUF ) && defined( USE_LOGDEPTHBUF_EXT )\\n\\tuniform float logDepthBufFC;\\n\\tvarying float vFragDepth;\\n\\tvarying float vIsPerspective;\\n#endif\";\n\n\tvar logdepthbuf_pars_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvarying float vFragDepth;\\n\\t\\tvarying float vIsPerspective;\\n\\t#else\\n\\t\\tuniform float logDepthBufFC;\\n\\t#endif\\n#endif\";\n\n\tvar logdepthbuf_vertex = \"#ifdef USE_LOGDEPTHBUF\\n\\t#ifdef USE_LOGDEPTHBUF_EXT\\n\\t\\tvFragDepth = 1.0 + gl_Position.w;\\n\\t\\tvIsPerspective = float( isPerspectiveMatrix( projectionMatrix ) );\\n\\t#else\\n\\t\\tif ( isPerspectiveMatrix( projectionMatrix ) ) {\\n\\t\\t\\tgl_Position.z = log2( max( EPSILON, gl_Position.w + 1.0 ) ) * logDepthBufFC - 1.0;\\n\\t\\t\\tgl_Position.z *= gl_Position.w;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar map_fragment = \"#ifdef USE_MAP\\n\\tvec4 texelColor = texture2D( map, vUv );\\n\\ttexelColor = mapTexelToLinear( texelColor );\\n\\tdiffuseColor *= texelColor;\\n#endif\";\n\n\tvar map_pars_fragment = \"#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\";\n\n\tvar map_particle_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tvec2 uv = ( uvTransform * vec3( gl_PointCoord.x, 1.0 - gl_PointCoord.y, 1 ) ).xy;\\n#endif\\n#ifdef USE_MAP\\n\\tvec4 mapTexel = texture2D( map, uv );\\n\\tdiffuseColor *= mapTexelToLinear( mapTexel );\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tdiffuseColor.a *= texture2D( alphaMap, uv ).g;\\n#endif\";\n\n\tvar map_particle_pars_fragment = \"#if defined( USE_MAP ) || defined( USE_ALPHAMAP )\\n\\tuniform mat3 uvTransform;\\n#endif\\n#ifdef USE_MAP\\n\\tuniform sampler2D map;\\n#endif\\n#ifdef USE_ALPHAMAP\\n\\tuniform sampler2D alphaMap;\\n#endif\";\n\n\tvar metalnessmap_fragment = \"float metalnessFactor = metalness;\\n#ifdef USE_METALNESSMAP\\n\\tvec4 texelMetalness = texture2D( metalnessMap, vUv );\\n\\tmetalnessFactor *= texelMetalness.b;\\n#endif\";\n\n\tvar metalnessmap_pars_fragment = \"#ifdef USE_METALNESSMAP\\n\\tuniform sampler2D metalnessMap;\\n#endif\";\n\n\tvar morphnormal_vertex = \"#ifdef USE_MORPHNORMALS\\n\\tobjectNormal *= morphTargetBaseInfluence;\\n\\tobjectNormal += morphNormal0 * morphTargetInfluences[ 0 ];\\n\\tobjectNormal += morphNormal1 * morphTargetInfluences[ 1 ];\\n\\tobjectNormal += morphNormal2 * morphTargetInfluences[ 2 ];\\n\\tobjectNormal += morphNormal3 * morphTargetInfluences[ 3 ];\\n#endif\";\n\n\tvar morphtarget_pars_vertex = \"#ifdef USE_MORPHTARGETS\\n\\tuniform float morphTargetBaseInfluence;\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\tuniform float morphTargetInfluences[ 8 ];\\n\\t#else\\n\\t\\tuniform float morphTargetInfluences[ 4 ];\\n\\t#endif\\n#endif\";\n\n\tvar morphtarget_vertex = \"#ifdef USE_MORPHTARGETS\\n\\ttransformed *= morphTargetBaseInfluence;\\n\\ttransformed += morphTarget0 * morphTargetInfluences[ 0 ];\\n\\ttransformed += morphTarget1 * morphTargetInfluences[ 1 ];\\n\\ttransformed += morphTarget2 * morphTargetInfluences[ 2 ];\\n\\ttransformed += morphTarget3 * morphTargetInfluences[ 3 ];\\n\\t#ifndef USE_MORPHNORMALS\\n\\t\\ttransformed += morphTarget4 * morphTargetInfluences[ 4 ];\\n\\t\\ttransformed += morphTarget5 * morphTargetInfluences[ 5 ];\\n\\t\\ttransformed += morphTarget6 * morphTargetInfluences[ 6 ];\\n\\t\\ttransformed += morphTarget7 * morphTargetInfluences[ 7 ];\\n\\t#endif\\n#endif\";\n\n\tvar normal_fragment_begin = \"float faceDirection = gl_FrontFacing ? 1.0 : - 1.0;\\n#ifdef FLAT_SHADED\\n\\tvec3 fdx = vec3( dFdx( vViewPosition.x ), dFdx( vViewPosition.y ), dFdx( vViewPosition.z ) );\\n\\tvec3 fdy = vec3( dFdy( vViewPosition.x ), dFdy( vViewPosition.y ), dFdy( vViewPosition.z ) );\\n\\tvec3 normal = normalize( cross( fdx, fdy ) );\\n#else\\n\\tvec3 normal = normalize( vNormal );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\t#ifdef USE_TANGENT\\n\\t\\tvec3 tangent = normalize( vTangent );\\n\\t\\tvec3 bitangent = normalize( vBitangent );\\n\\t\\t#ifdef DOUBLE_SIDED\\n\\t\\t\\ttangent = tangent * faceDirection;\\n\\t\\t\\tbitangent = bitangent * faceDirection;\\n\\t\\t#endif\\n\\t\\t#if defined( TANGENTSPACE_NORMALMAP ) || defined( USE_CLEARCOAT_NORMALMAP )\\n\\t\\t\\tmat3 vTBN = mat3( tangent, bitangent, normal );\\n\\t\\t#endif\\n\\t#endif\\n#endif\\nvec3 geometryNormal = normal;\";\n\n\tvar normal_fragment_maps = \"#ifdef OBJECTSPACE_NORMALMAP\\n\\tnormal = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\t#ifdef FLIP_SIDED\\n\\t\\tnormal = - normal;\\n\\t#endif\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\tnormal = normal * faceDirection;\\n\\t#endif\\n\\tnormal = normalize( normalMatrix * normal );\\n#elif defined( TANGENTSPACE_NORMALMAP )\\n\\tvec3 mapN = texture2D( normalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tmapN.xy *= normalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tnormal = normalize( vTBN * mapN );\\n\\t#else\\n\\t\\tnormal = perturbNormal2Arb( -vViewPosition, normal, mapN, faceDirection );\\n\\t#endif\\n#elif defined( USE_BUMPMAP )\\n\\tnormal = perturbNormalArb( -vViewPosition, normal, dHdxy_fwd(), faceDirection );\\n#endif\";\n\n\tvar normalmap_pars_fragment = \"#ifdef USE_NORMALMAP\\n\\tuniform sampler2D normalMap;\\n\\tuniform vec2 normalScale;\\n#endif\\n#ifdef OBJECTSPACE_NORMALMAP\\n\\tuniform mat3 normalMatrix;\\n#endif\\n#if ! defined ( USE_TANGENT ) && ( defined ( TANGENTSPACE_NORMALMAP ) || defined ( USE_CLEARCOAT_NORMALMAP ) )\\n\\tvec3 perturbNormal2Arb( vec3 eye_pos, vec3 surf_norm, vec3 mapN, float faceDirection ) {\\n\\t\\tvec3 q0 = vec3( dFdx( eye_pos.x ), dFdx( eye_pos.y ), dFdx( eye_pos.z ) );\\n\\t\\tvec3 q1 = vec3( dFdy( eye_pos.x ), dFdy( eye_pos.y ), dFdy( eye_pos.z ) );\\n\\t\\tvec2 st0 = dFdx( vUv.st );\\n\\t\\tvec2 st1 = dFdy( vUv.st );\\n\\t\\tvec3 N = surf_norm;\\n\\t\\tvec3 q1perp = cross( q1, N );\\n\\t\\tvec3 q0perp = cross( N, q0 );\\n\\t\\tvec3 T = q1perp * st0.x + q0perp * st1.x;\\n\\t\\tvec3 B = q1perp * st0.y + q0perp * st1.y;\\n\\t\\tfloat det = max( dot( T, T ), dot( B, B ) );\\n\\t\\tfloat scale = ( det == 0.0 ) ? 0.0 : faceDirection * inversesqrt( det );\\n\\t\\treturn normalize( T * ( mapN.x * scale ) + B * ( mapN.y * scale ) + N * mapN.z );\\n\\t}\\n#endif\";\n\n\tvar clearcoat_normal_fragment_begin = \"#ifdef CLEARCOAT\\n\\tvec3 clearcoatNormal = geometryNormal;\\n#endif\";\n\n\tvar clearcoat_normal_fragment_maps = \"#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tvec3 clearcoatMapN = texture2D( clearcoatNormalMap, vUv ).xyz * 2.0 - 1.0;\\n\\tclearcoatMapN.xy *= clearcoatNormalScale;\\n\\t#ifdef USE_TANGENT\\n\\t\\tclearcoatNormal = normalize( vTBN * clearcoatMapN );\\n\\t#else\\n\\t\\tclearcoatNormal = perturbNormal2Arb( - vViewPosition, clearcoatNormal, clearcoatMapN, faceDirection );\\n\\t#endif\\n#endif\";\n\n\tvar clearcoat_pars_fragment = \"#ifdef USE_CLEARCOATMAP\\n\\tuniform sampler2D clearcoatMap;\\n#endif\\n#ifdef USE_CLEARCOAT_ROUGHNESSMAP\\n\\tuniform sampler2D clearcoatRoughnessMap;\\n#endif\\n#ifdef USE_CLEARCOAT_NORMALMAP\\n\\tuniform sampler2D clearcoatNormalMap;\\n\\tuniform vec2 clearcoatNormalScale;\\n#endif\";\n\n\tvar packing = \"vec3 packNormalToRGB( const in vec3 normal ) {\\n\\treturn normalize( normal ) * 0.5 + 0.5;\\n}\\nvec3 unpackRGBToNormal( const in vec3 rgb ) {\\n\\treturn 2.0 * rgb.xyz - 1.0;\\n}\\nconst float PackUpscale = 256. / 255.;const float UnpackDownscale = 255. / 256.;\\nconst vec3 PackFactors = vec3( 256. * 256. * 256., 256. * 256., 256. );\\nconst vec4 UnpackFactors = UnpackDownscale / vec4( PackFactors, 1. );\\nconst float ShiftRight8 = 1. / 256.;\\nvec4 packDepthToRGBA( const in float v ) {\\n\\tvec4 r = vec4( fract( v * PackFactors ), v );\\n\\tr.yzw -= r.xyz * ShiftRight8;\\treturn r * PackUpscale;\\n}\\nfloat unpackRGBAToDepth( const in vec4 v ) {\\n\\treturn dot( v, UnpackFactors );\\n}\\nvec4 pack2HalfToRGBA( vec2 v ) {\\n\\tvec4 r = vec4( v.x, fract( v.x * 255.0 ), v.y, fract( v.y * 255.0 ));\\n\\treturn vec4( r.x - r.y / 255.0, r.y, r.z - r.w / 255.0, r.w);\\n}\\nvec2 unpackRGBATo2Half( vec4 v ) {\\n\\treturn vec2( v.x + ( v.y / 255.0 ), v.z + ( v.w / 255.0 ) );\\n}\\nfloat viewZToOrthographicDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn ( viewZ + near ) / ( near - far );\\n}\\nfloat orthographicDepthToViewZ( const in float linearClipZ, const in float near, const in float far ) {\\n\\treturn linearClipZ * ( near - far ) - near;\\n}\\nfloat viewZToPerspectiveDepth( const in float viewZ, const in float near, const in float far ) {\\n\\treturn (( near + viewZ ) * far ) / (( far - near ) * viewZ );\\n}\\nfloat perspectiveDepthToViewZ( const in float invClipZ, const in float near, const in float far ) {\\n\\treturn ( near * far ) / ( ( far - near ) * invClipZ - far );\\n}\";\n\n\tvar premultiplied_alpha_fragment = \"#ifdef PREMULTIPLIED_ALPHA\\n\\tgl_FragColor.rgb *= gl_FragColor.a;\\n#endif\";\n\n\tvar project_vertex = \"vec4 mvPosition = vec4( transformed, 1.0 );\\n#ifdef USE_INSTANCING\\n\\tmvPosition = instanceMatrix * mvPosition;\\n#endif\\nmvPosition = modelViewMatrix * mvPosition;\\ngl_Position = projectionMatrix * mvPosition;\";\n\n\tvar dithering_fragment = \"#ifdef DITHERING\\n\\tgl_FragColor.rgb = dithering( gl_FragColor.rgb );\\n#endif\";\n\n\tvar dithering_pars_fragment = \"#ifdef DITHERING\\n\\tvec3 dithering( vec3 color ) {\\n\\t\\tfloat grid_position = rand( gl_FragCoord.xy );\\n\\t\\tvec3 dither_shift_RGB = vec3( 0.25 / 255.0, -0.25 / 255.0, 0.25 / 255.0 );\\n\\t\\tdither_shift_RGB = mix( 2.0 * dither_shift_RGB, -2.0 * dither_shift_RGB, grid_position );\\n\\t\\treturn color + dither_shift_RGB;\\n\\t}\\n#endif\";\n\n\tvar roughnessmap_fragment = \"float roughnessFactor = roughness;\\n#ifdef USE_ROUGHNESSMAP\\n\\tvec4 texelRoughness = texture2D( roughnessMap, vUv );\\n\\troughnessFactor *= texelRoughness.g;\\n#endif\";\n\n\tvar roughnessmap_pars_fragment = \"#ifdef USE_ROUGHNESSMAP\\n\\tuniform sampler2D roughnessMap;\\n#endif\";\n\n\tvar shadowmap_pars_fragment = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D directionalShadowMap[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D spotShadowMap[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform sampler2D pointShadowMap[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\tfloat texture2DCompare( sampler2D depths, vec2 uv, float compare ) {\\n\\t\\treturn step( compare, unpackRGBAToDepth( texture2D( depths, uv ) ) );\\n\\t}\\n\\tvec2 texture2DDistribution( sampler2D shadow, vec2 uv ) {\\n\\t\\treturn unpackRGBATo2Half( texture2D( shadow, uv ) );\\n\\t}\\n\\tfloat VSMShadow (sampler2D shadow, vec2 uv, float compare ){\\n\\t\\tfloat occlusion = 1.0;\\n\\t\\tvec2 distribution = texture2DDistribution( shadow, uv );\\n\\t\\tfloat hard_shadow = step( compare , distribution.x );\\n\\t\\tif (hard_shadow != 1.0 ) {\\n\\t\\t\\tfloat distance = compare - distribution.x ;\\n\\t\\t\\tfloat variance = max( 0.00000, distribution.y * distribution.y );\\n\\t\\t\\tfloat softness_probability = variance / (variance + distance * distance );\\t\\t\\tsoftness_probability = clamp( ( softness_probability - 0.3 ) / ( 0.95 - 0.3 ), 0.0, 1.0 );\\t\\t\\tocclusion = clamp( max( hard_shadow, softness_probability ), 0.0, 1.0 );\\n\\t\\t}\\n\\t\\treturn occlusion;\\n\\t}\\n\\tfloat getShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord ) {\\n\\t\\tfloat shadow = 1.0;\\n\\t\\tshadowCoord.xyz /= shadowCoord.w;\\n\\t\\tshadowCoord.z += shadowBias;\\n\\t\\tbvec4 inFrustumVec = bvec4 ( shadowCoord.x >= 0.0, shadowCoord.x <= 1.0, shadowCoord.y >= 0.0, shadowCoord.y <= 1.0 );\\n\\t\\tbool inFrustum = all( inFrustumVec );\\n\\t\\tbvec2 frustumTestVec = bvec2( inFrustum, shadowCoord.z <= 1.0 );\\n\\t\\tbool frustumTest = all( frustumTestVec );\\n\\t\\tif ( frustumTest ) {\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx0 = - texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy0 = - texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx1 = + texelSize.x * shadowRadius;\\n\\t\\t\\tfloat dy1 = + texelSize.y * shadowRadius;\\n\\t\\t\\tfloat dx2 = dx0 / 2.0;\\n\\t\\t\\tfloat dy2 = dy0 / 2.0;\\n\\t\\t\\tfloat dx3 = dx1 / 2.0;\\n\\t\\t\\tfloat dy3 = dy1 / 2.0;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy2 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx2, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx3, dy3 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( 0.0, dy1 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, shadowCoord.xy + vec2( dx1, dy1 ), shadowCoord.z )\\n\\t\\t\\t) * ( 1.0 / 17.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_PCF_SOFT )\\n\\t\\t\\tvec2 texelSize = vec2( 1.0 ) / shadowMapSize;\\n\\t\\t\\tfloat dx = texelSize.x;\\n\\t\\t\\tfloat dy = texelSize.y;\\n\\t\\t\\tvec2 uv = shadowCoord.xy;\\n\\t\\t\\tvec2 f = fract( uv * shadowMapSize + 0.5 );\\n\\t\\t\\tuv -= f * texelSize;\\n\\t\\t\\tshadow = (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv, shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( dx, 0.0 ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + vec2( 0.0, dy ), shadowCoord.z ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, uv + texelSize, shadowCoord.z ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, 0.0 ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 0.0 ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( -dx, dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 2.0 * dx, dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.x ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( 0.0, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( 0.0, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( texture2DCompare( shadowMap, uv + vec2( dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t texture2DCompare( shadowMap, uv + vec2( dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t f.y ) +\\n\\t\\t\\t\\tmix( mix( texture2DCompare( shadowMap, uv + vec2( -dx, -dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, -dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t mix( texture2DCompare( shadowMap, uv + vec2( -dx, 2.0 * dy ), shadowCoord.z ), \\n\\t\\t\\t\\t\\t\\t\ttexture2DCompare( shadowMap, uv + vec2( 2.0 * dx, 2.0 * dy ), shadowCoord.z ),\\n\\t\\t\\t\\t\\t\\t\tf.x ),\\n\\t\\t\\t\\t\\t f.y )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#elif defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tshadow = VSMShadow( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#else\\n\\t\\t\\tshadow = texture2DCompare( shadowMap, shadowCoord.xy, shadowCoord.z );\\n\\t\\t#endif\\n\\t\\t}\\n\\t\\treturn shadow;\\n\\t}\\n\\tvec2 cubeToUV( vec3 v, float texelSizeY ) {\\n\\t\\tvec3 absV = abs( v );\\n\\t\\tfloat scaleToCube = 1.0 / max( absV.x, max( absV.y, absV.z ) );\\n\\t\\tabsV *= scaleToCube;\\n\\t\\tv *= scaleToCube * ( 1.0 - 2.0 * texelSizeY );\\n\\t\\tvec2 planar = v.xy;\\n\\t\\tfloat almostATexel = 1.5 * texelSizeY;\\n\\t\\tfloat almostOne = 1.0 - almostATexel;\\n\\t\\tif ( absV.z >= almostOne ) {\\n\\t\\t\\tif ( v.z > 0.0 )\\n\\t\\t\\t\\tplanar.x = 4.0 - v.x;\\n\\t\\t} else if ( absV.x >= almostOne ) {\\n\\t\\t\\tfloat signX = sign( v.x );\\n\\t\\t\\tplanar.x = v.z * signX + 2.0 * signX;\\n\\t\\t} else if ( absV.y >= almostOne ) {\\n\\t\\t\\tfloat signY = sign( v.y );\\n\\t\\t\\tplanar.x = v.x + 2.0 * signY + 2.0;\\n\\t\\t\\tplanar.y = v.z * signY - 2.0;\\n\\t\\t}\\n\\t\\treturn vec2( 0.125, 0.25 ) * planar + vec2( 0.375, 0.75 );\\n\\t}\\n\\tfloat getPointShadow( sampler2D shadowMap, vec2 shadowMapSize, float shadowBias, float shadowRadius, vec4 shadowCoord, float shadowCameraNear, float shadowCameraFar ) {\\n\\t\\tvec2 texelSize = vec2( 1.0 ) / ( shadowMapSize * vec2( 4.0, 2.0 ) );\\n\\t\\tvec3 lightToPosition = shadowCoord.xyz;\\n\\t\\tfloat dp = ( length( lightToPosition ) - shadowCameraNear ) / ( shadowCameraFar - shadowCameraNear );\\t\\tdp += shadowBias;\\n\\t\\tvec3 bd3D = normalize( lightToPosition );\\n\\t\\t#if defined( SHADOWMAP_TYPE_PCF ) || defined( SHADOWMAP_TYPE_PCF_SOFT ) || defined( SHADOWMAP_TYPE_VSM )\\n\\t\\t\\tvec2 offset = vec2( - 1, 1 ) * shadowRadius * texelSize.y;\\n\\t\\t\\treturn (\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yyx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxy, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.xxx, texelSize.y ), dp ) +\\n\\t\\t\\t\\ttexture2DCompare( shadowMap, cubeToUV( bd3D + offset.yxx, texelSize.y ), dp )\\n\\t\\t\\t) * ( 1.0 / 9.0 );\\n\\t\\t#else\\n\\t\\t\\treturn texture2DCompare( shadowMap, cubeToUV( bd3D, texelSize.y ), dp );\\n\\t\\t#endif\\n\\t}\\n#endif\";\n\n\tvar shadowmap_pars_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 directionalShadowMatrix[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vDirectionalShadowCoord[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t\\tstruct DirectionalLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform DirectionalLightShadow directionalLightShadows[ NUM_DIR_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 spotShadowMatrix[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vSpotShadowCoord[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t\\tstruct SpotLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t};\\n\\t\\tuniform SpotLightShadow spotLightShadows[ NUM_SPOT_LIGHT_SHADOWS ];\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tuniform mat4 pointShadowMatrix[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tvarying vec4 vPointShadowCoord[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t\\tstruct PointLightShadow {\\n\\t\\t\\tfloat shadowBias;\\n\\t\\t\\tfloat shadowNormalBias;\\n\\t\\t\\tfloat shadowRadius;\\n\\t\\t\\tvec2 shadowMapSize;\\n\\t\\t\\tfloat shadowCameraNear;\\n\\t\\t\\tfloat shadowCameraFar;\\n\\t\\t};\\n\\t\\tuniform PointLightShadow pointLightShadows[ NUM_POINT_LIGHT_SHADOWS ];\\n\\t#endif\\n#endif\";\n\n\tvar shadowmap_vertex = \"#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0 || NUM_SPOT_LIGHT_SHADOWS > 0 || NUM_POINT_LIGHT_SHADOWS > 0\\n\\t\\tvec3 shadowWorldNormal = inverseTransformDirection( transformedNormal, viewMatrix );\\n\\t\\tvec4 shadowWorldPosition;\\n\\t#endif\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * directionalLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvDirectionalShadowCoord[ i ] = directionalShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * spotLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvSpotShadowCoord[ i ] = spotShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tshadowWorldPosition = worldPosition + vec4( shadowWorldNormal * pointLightShadows[ i ].shadowNormalBias, 0 );\\n\\t\\tvPointShadowCoord[ i ] = pointShadowMatrix[ i ] * shadowWorldPosition;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n#endif\";\n\n\tvar shadowmask_pars_fragment = \"float getShadowMask() {\\n\\tfloat shadow = 1.0;\\n\\t#ifdef USE_SHADOWMAP\\n\\t#if NUM_DIR_LIGHT_SHADOWS > 0\\n\\tDirectionalLightShadow directionalLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_DIR_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tdirectionalLight = directionalLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( directionalShadowMap[ i ], directionalLight.shadowMapSize, directionalLight.shadowBias, directionalLight.shadowRadius, vDirectionalShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_SPOT_LIGHT_SHADOWS > 0\\n\\tSpotLightShadow spotLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_SPOT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tspotLight = spotLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getShadow( spotShadowMap[ i ], spotLight.shadowMapSize, spotLight.shadowBias, spotLight.shadowRadius, vSpotShadowCoord[ i ] ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#if NUM_POINT_LIGHT_SHADOWS > 0\\n\\tPointLightShadow pointLight;\\n\\t#pragma unroll_loop_start\\n\\tfor ( int i = 0; i < NUM_POINT_LIGHT_SHADOWS; i ++ ) {\\n\\t\\tpointLight = pointLightShadows[ i ];\\n\\t\\tshadow *= receiveShadow ? getPointShadow( pointShadowMap[ i ], pointLight.shadowMapSize, pointLight.shadowBias, pointLight.shadowRadius, vPointShadowCoord[ i ], pointLight.shadowCameraNear, pointLight.shadowCameraFar ) : 1.0;\\n\\t}\\n\\t#pragma unroll_loop_end\\n\\t#endif\\n\\t#endif\\n\\treturn shadow;\\n}\";\n\n\tvar skinbase_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 boneMatX = getBoneMatrix( skinIndex.x );\\n\\tmat4 boneMatY = getBoneMatrix( skinIndex.y );\\n\\tmat4 boneMatZ = getBoneMatrix( skinIndex.z );\\n\\tmat4 boneMatW = getBoneMatrix( skinIndex.w );\\n#endif\";\n\n\tvar skinning_pars_vertex = \"#ifdef USE_SKINNING\\n\\tuniform mat4 bindMatrix;\\n\\tuniform mat4 bindMatrixInverse;\\n\\t#ifdef BONE_TEXTURE\\n\\t\\tuniform highp sampler2D boneTexture;\\n\\t\\tuniform int boneTextureSize;\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tfloat j = i * 4.0;\\n\\t\\t\\tfloat x = mod( j, float( boneTextureSize ) );\\n\\t\\t\\tfloat y = floor( j / float( boneTextureSize ) );\\n\\t\\t\\tfloat dx = 1.0 / float( boneTextureSize );\\n\\t\\t\\tfloat dy = 1.0 / float( boneTextureSize );\\n\\t\\t\\ty = dy * ( y + 0.5 );\\n\\t\\t\\tvec4 v1 = texture2D( boneTexture, vec2( dx * ( x + 0.5 ), y ) );\\n\\t\\t\\tvec4 v2 = texture2D( boneTexture, vec2( dx * ( x + 1.5 ), y ) );\\n\\t\\t\\tvec4 v3 = texture2D( boneTexture, vec2( dx * ( x + 2.5 ), y ) );\\n\\t\\t\\tvec4 v4 = texture2D( boneTexture, vec2( dx * ( x + 3.5 ), y ) );\\n\\t\\t\\tmat4 bone = mat4( v1, v2, v3, v4 );\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#else\\n\\t\\tuniform mat4 boneMatrices[ MAX_BONES ];\\n\\t\\tmat4 getBoneMatrix( const in float i ) {\\n\\t\\t\\tmat4 bone = boneMatrices[ int(i) ];\\n\\t\\t\\treturn bone;\\n\\t\\t}\\n\\t#endif\\n#endif\";\n\n\tvar skinning_vertex = \"#ifdef USE_SKINNING\\n\\tvec4 skinVertex = bindMatrix * vec4( transformed, 1.0 );\\n\\tvec4 skinned = vec4( 0.0 );\\n\\tskinned += boneMatX * skinVertex * skinWeight.x;\\n\\tskinned += boneMatY * skinVertex * skinWeight.y;\\n\\tskinned += boneMatZ * skinVertex * skinWeight.z;\\n\\tskinned += boneMatW * skinVertex * skinWeight.w;\\n\\ttransformed = ( bindMatrixInverse * skinned ).xyz;\\n#endif\";\n\n\tvar skinnormal_vertex = \"#ifdef USE_SKINNING\\n\\tmat4 skinMatrix = mat4( 0.0 );\\n\\tskinMatrix += skinWeight.x * boneMatX;\\n\\tskinMatrix += skinWeight.y * boneMatY;\\n\\tskinMatrix += skinWeight.z * boneMatZ;\\n\\tskinMatrix += skinWeight.w * boneMatW;\\n\\tskinMatrix = bindMatrixInverse * skinMatrix * bindMatrix;\\n\\tobjectNormal = vec4( skinMatrix * vec4( objectNormal, 0.0 ) ).xyz;\\n\\t#ifdef USE_TANGENT\\n\\t\\tobjectTangent = vec4( skinMatrix * vec4( objectTangent, 0.0 ) ).xyz;\\n\\t#endif\\n#endif\";\n\n\tvar specularmap_fragment = \"float specularStrength;\\n#ifdef USE_SPECULARMAP\\n\\tvec4 texelSpecular = texture2D( specularMap, vUv );\\n\\tspecularStrength = texelSpecular.r;\\n#else\\n\\tspecularStrength = 1.0;\\n#endif\";\n\n\tvar specularmap_pars_fragment = \"#ifdef USE_SPECULARMAP\\n\\tuniform sampler2D specularMap;\\n#endif\";\n\n\tvar tonemapping_fragment = \"#if defined( TONE_MAPPING )\\n\\tgl_FragColor.rgb = toneMapping( gl_FragColor.rgb );\\n#endif\";\n\n\tvar tonemapping_pars_fragment = \"#ifndef saturate\\n#define saturate(a) clamp( a, 0.0, 1.0 )\\n#endif\\nuniform float toneMappingExposure;\\nvec3 LinearToneMapping( vec3 color ) {\\n\\treturn toneMappingExposure * color;\\n}\\nvec3 ReinhardToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\treturn saturate( color / ( vec3( 1.0 ) + color ) );\\n}\\nvec3 OptimizedCineonToneMapping( vec3 color ) {\\n\\tcolor *= toneMappingExposure;\\n\\tcolor = max( vec3( 0.0 ), color - 0.004 );\\n\\treturn pow( ( color * ( 6.2 * color + 0.5 ) ) / ( color * ( 6.2 * color + 1.7 ) + 0.06 ), vec3( 2.2 ) );\\n}\\nvec3 RRTAndODTFit( vec3 v ) {\\n\\tvec3 a = v * ( v + 0.0245786 ) - 0.000090537;\\n\\tvec3 b = v * ( 0.983729 * v + 0.4329510 ) + 0.238081;\\n\\treturn a / b;\\n}\\nvec3 ACESFilmicToneMapping( vec3 color ) {\\n\\tconst mat3 ACESInputMat = mat3(\\n\\t\\tvec3( 0.59719, 0.07600, 0.02840 ),\\t\\tvec3( 0.35458, 0.90834, 0.13383 ),\\n\\t\\tvec3( 0.04823, 0.01566, 0.83777 )\\n\\t);\\n\\tconst mat3 ACESOutputMat = mat3(\\n\\t\\tvec3(\t1.60475, -0.10208, -0.00327 ),\\t\\tvec3( -0.53108,\t1.10813, -0.07276 ),\\n\\t\\tvec3( -0.07367, -0.00605,\t1.07602 )\\n\\t);\\n\\tcolor *= toneMappingExposure / 0.6;\\n\\tcolor = ACESInputMat * color;\\n\\tcolor = RRTAndODTFit( color );\\n\\tcolor = ACESOutputMat * color;\\n\\treturn saturate( color );\\n}\\nvec3 CustomToneMapping( vec3 color ) { return color; }\";\n\n\tvar transmission_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\ttotalTransmission *= texture2D( transmissionMap, vUv ).r;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSNMAP\\n\\t\\tthicknessFactor *= texture2D( thicknessMap, vUv ).g;\\n\\t#endif\\n\\tvec3 pos = vWorldPosition.xyz / vWorldPosition.w;\\n\\tvec3 v = normalize( cameraPosition - pos );\\n\\tvec3 viewDir = ( isOrthographic ) ? vec3( 0, 0, 1 ) : normalize( vViewPosition );\\n\\tfloat ior = ( 1.0 + 0.4 * reflectivity ) / ( 1.0 - 0.4 * reflectivity );\\n\\tvec3 f0 = vec3( pow( ior - 1.0, 2.0 ) / pow( ior + 1.0, 2.0 ) );\\n\\tvec3 f90 = vec3( 1.0 );\\n\\tvec3 f_transmission = totalTransmission * getIBLVolumeRefraction(\\n\\t\\tnormal, v, viewDir, roughnessFactor, diffuseColor.rgb, f0, f90,\\n\\t\\tpos, modelMatrix, viewMatrix, projectionMatrix, ior, thicknessFactor,\\n\\t\\tattenuationColor, attenuationDistance);\\n\\tdiffuseColor.rgb = mix( diffuseColor.rgb, f_transmission, totalTransmission );\\n#endif\";\n\n\tvar transmission_pars_fragment = \"#ifdef USE_TRANSMISSION\\n\\t#ifdef USE_TRANSMISSIONMAP\\n\\t\\tuniform sampler2D transmissionMap;\\n\\t#endif\\n\\t#ifdef USE_THICKNESSMAP\\n\\t\\tuniform sampler2D thicknessMap;\\n\\t#endif\\n\\tuniform vec2 transmissionSamplerSize;\\n\\tuniform sampler2D transmissionSamplerMap;\\n\\tuniform mat4 modelMatrix;\\n\\tuniform mat4 projectionMatrix;\\n\\tvarying vec4 vWorldPosition;\\n\\tvec3 getVolumeTransmissionRay(vec3 n, vec3 v, float thickness, float ior, mat4 modelMatrix) {\\n\\t\\tvec3 refractionVector = refract(-v, normalize(n), 1.0 / ior);\\n\\t\\tvec3 modelScale;\\n\\t\\tmodelScale.x = length(vec3(modelMatrix[0].xyz));\\n\\t\\tmodelScale.y = length(vec3(modelMatrix[1].xyz));\\n\\t\\tmodelScale.z = length(vec3(modelMatrix[2].xyz));\\n\\t\\treturn normalize(refractionVector) * thickness * modelScale;\\n\\t}\\n\\tfloat applyIorToRoughness(float roughness, float ior) {\\n\\t\\treturn roughness * clamp(ior * 2.0 - 2.0, 0.0, 1.0);\\n\\t}\\n\\tvec3 getTransmissionSample(vec2 fragCoord, float roughness, float ior) {\\n\\t\\tfloat framebufferLod = log2(transmissionSamplerSize.x) * applyIorToRoughness(roughness, ior);\\n\\t\\treturn texture2DLodEXT(transmissionSamplerMap, fragCoord.xy, framebufferLod).rgb;\\n\\t}\\n\\tvec3 applyVolumeAttenuation(vec3 radiance, float transmissionDistance, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tif (attenuationDistance == 0.0) {\\n\\t\\t\\treturn radiance;\\n\\t\\t} else {\\n\\t\\t\\tvec3 attenuationCoefficient = -log(attenuationColor) / attenuationDistance;\\n\\t\\t\\tvec3 transmittance = exp(-attenuationCoefficient * transmissionDistance);\\t\\t\\treturn transmittance * radiance;\\n\\t\\t}\\n\\t}\\n\\tvec3 getIBLVolumeRefraction(vec3 n, vec3 v, vec3 viewDir, float perceptualRoughness, vec3 baseColor, vec3 f0, vec3 f90,\\n\\t\\tvec3 position, mat4 modelMatrix, mat4 viewMatrix, mat4 projMatrix, float ior, float thickness, vec3 attenuationColor, float attenuationDistance) {\\n\\t\\tvec3 transmissionRay = getVolumeTransmissionRay(n, v, thickness, ior, modelMatrix);\\n\\t\\tvec3 refractedRayExit = position + transmissionRay;\\n\\t\\tvec4 ndcPos = projMatrix * viewMatrix * vec4(refractedRayExit, 1.0);\\n\\t\\tvec2 refractionCoords = ndcPos.xy / ndcPos.w;\\n\\t\\trefractionCoords += 1.0;\\n\\t\\trefractionCoords /= 2.0;\\n\\t\\tvec3 transmittedLight = getTransmissionSample(refractionCoords, perceptualRoughness, ior);\\n\\t\\tvec3 attenuatedColor = applyVolumeAttenuation(transmittedLight, length(transmissionRay), attenuationColor, attenuationDistance);\\n\\t\\tfloat NdotV = saturate(dot(n, viewDir));\\n\\t\\tvec2 brdf = integrateSpecularBRDF(NdotV, perceptualRoughness);\\n\\t\\tvec3 specularColor = f0 * brdf.x + f90 * brdf.y;\\n\\t\\treturn (1.0 - specularColor) * attenuatedColor * baseColor;\\n\\t}\\n#endif\";\n\n\tvar uv_pars_fragment = \"#if ( defined( USE_UV ) && ! defined( UVS_VERTEX_ONLY ) )\\n\\tvarying vec2 vUv;\\n#endif\";\n\n\tvar uv_pars_vertex = \"#ifdef USE_UV\\n\\t#ifdef UVS_VERTEX_ONLY\\n\\t\\tvec2 vUv;\\n\\t#else\\n\\t\\tvarying vec2 vUv;\\n\\t#endif\\n\\tuniform mat3 uvTransform;\\n#endif\";\n\n\tvar uv_vertex = \"#ifdef USE_UV\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n#endif\";\n\n\tvar uv2_pars_fragment = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvarying vec2 vUv2;\\n#endif\";\n\n\tvar uv2_pars_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tattribute vec2 uv2;\\n\\tvarying vec2 vUv2;\\n\\tuniform mat3 uv2Transform;\\n#endif\";\n\n\tvar uv2_vertex = \"#if defined( USE_LIGHTMAP ) || defined( USE_AOMAP )\\n\\tvUv2 = ( uv2Transform * vec3( uv2, 1 ) ).xy;\\n#endif\";\n\n\tvar worldpos_vertex = \"#if defined( USE_ENVMAP ) || defined( DISTANCE ) || defined ( USE_SHADOWMAP ) || defined ( USE_TRANSMISSION )\\n\\tvec4 worldPosition = vec4( transformed, 1.0 );\\n\\t#ifdef USE_INSTANCING\\n\\t\\tworldPosition = instanceMatrix * worldPosition;\\n\\t#endif\\n\\tworldPosition = modelMatrix * worldPosition;\\n#endif\";\n\n\tvar background_frag = \"uniform sampler2D t2D;\\nvarying vec2 vUv;\\nvoid main() {\\n\\tvec4 texColor = texture2D( t2D, vUv );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar background_vert = \"varying vec2 vUv;\\nuniform mat3 uvTransform;\\nvoid main() {\\n\\tvUv = ( uvTransform * vec3( uv, 1 ) ).xy;\\n\\tgl_Position = vec4( position.xy, 1.0, 1.0 );\\n}\";\n\n\tvar cube_frag = \"#include <envmap_common_pars_fragment>\\nuniform float opacity;\\nvarying vec3 vWorldDirection;\\n#include <cube_uv_reflection_fragment>\\nvoid main() {\\n\\tvec3 vReflect = vWorldDirection;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = envColor;\\n\\tgl_FragColor.a *= opacity;\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar cube_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\tgl_Position.z = gl_Position.w;\\n}\";\n\n\tvar depth_frag = \"#if DEPTH_PACKING == 3200\\n\\tuniform float opacity;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tdiffuseColor.a = opacity;\\n\\t#endif\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\tfloat fragCoordZ = 0.5 * vHighPrecisionZW[0] / vHighPrecisionZW[1] + 0.5;\\n\\t#if DEPTH_PACKING == 3200\\n\\t\\tgl_FragColor = vec4( vec3( 1.0 - fragCoordZ ), opacity );\\n\\t#elif DEPTH_PACKING == 3201\\n\\t\\tgl_FragColor = packDepthToRGBA( fragCoordZ );\\n\\t#endif\\n}\";\n\n\tvar depth_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvarying vec2 vHighPrecisionZW;\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvHighPrecisionZW = gl_Position.zw;\\n}\";\n\n\tvar distanceRGBA_frag = \"#define DISTANCE\\nuniform vec3 referencePosition;\\nuniform float nearDistance;\\nuniform float farDistance;\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main () {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( 1.0 );\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\tfloat dist = length( vWorldPosition - referencePosition );\\n\\tdist = ( dist - nearDistance ) / ( farDistance - nearDistance );\\n\\tdist = saturate( dist );\\n\\tgl_FragColor = packDepthToRGBA( dist );\\n}\";\n\n\tvar distanceRGBA_vert = \"#define DISTANCE\\nvarying vec3 vWorldPosition;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_DISPLACEMENTMAP\\n\\t\\t#include <beginnormal_vertex>\\n\\t\\t#include <morphnormal_vertex>\\n\\t\\t#include <skinnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvWorldPosition = worldPosition.xyz;\\n}\";\n\n\tvar equirect_frag = \"uniform sampler2D tEquirect;\\nvarying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvec3 direction = normalize( vWorldDirection );\\n\\tvec2 sampleUV = equirectUv( direction );\\n\\tvec4 texColor = texture2D( tEquirect, sampleUV );\\n\\tgl_FragColor = mapTexelToLinear( texColor );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n}\";\n\n\tvar equirect_vert = \"varying vec3 vWorldDirection;\\n#include <common>\\nvoid main() {\\n\\tvWorldDirection = transformDirection( position, modelMatrix );\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n}\";\n\n\tvar linedashed_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\nuniform float dashSize;\\nuniform float totalSize;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tif ( mod( vLineDistance, totalSize ) > dashSize ) {\\n\\t\\tdiscard;\\n\\t}\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <color_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar linedashed_vert = \"uniform float scale;\\nattribute float lineDistance;\\nvarying float vLineDistance;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\tvLineDistance = scale * lineDistance;\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshbasic_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\t#ifdef USE_LIGHTMAP\\n\\t\\n\\t\\tvec4 lightMapTexel= texture2D( lightMap, vUv2 );\\n\\t\\treflectedLight.indirectDiffuse += lightMapTexelToLinear( lightMapTexel ).rgb * lightMapIntensity;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vec3( 1.0 );\\n\\t#endif\\n\\t#include <aomap_fragment>\\n\\treflectedLight.indirectDiffuse *= diffuseColor.rgb;\\n\\tvec3 outgoingLight = reflectedLight.indirectDiffuse;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshbasic_vert = \"#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#ifdef USE_ENVMAP\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshlambert_frag = \"uniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <fog_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <emissivemap_fragment>\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.indirectDiffuse += ( gl_FrontFacing ) ? vIndirectFront : vIndirectBack;\\n\\t#else\\n\\t\\treflectedLight.indirectDiffuse += vIndirectFront;\\n\\t#endif\\n\\t#include <lightmap_fragment>\\n\\treflectedLight.indirectDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb );\\n\\t#ifdef DOUBLE_SIDED\\n\\t\\treflectedLight.directDiffuse = ( gl_FrontFacing ) ? vLightFront : vLightBack;\\n\\t#else\\n\\t\\treflectedLight.directDiffuse = vLightFront;\\n\\t#endif\\n\\treflectedLight.directDiffuse *= BRDF_Diffuse_Lambert( diffuseColor.rgb ) * getShadowMask();\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshlambert_vert = \"#define LAMBERT\\nvarying vec3 vLightFront;\\nvarying vec3 vIndirectFront;\\n#ifdef DOUBLE_SIDED\\n\\tvarying vec3 vLightBack;\\n\\tvarying vec3 vIndirectBack;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <lights_lambert_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshmatcap_frag = \"#define MATCAP\\nuniform vec3 diffuse;\\nuniform float opacity;\\nuniform sampler2D matcap;\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tvec3 viewDir = normalize( vViewPosition );\\n\\tvec3 x = normalize( vec3( viewDir.z, 0.0, - viewDir.x ) );\\n\\tvec3 y = cross( viewDir, x );\\n\\tvec2 uv = vec2( dot( x, normal ), dot( y, normal ) ) * 0.495 + 0.5;\\n\\t#ifdef USE_MATCAP\\n\\t\\tvec4 matcapColor = texture2D( matcap, uv );\\n\\t\\tmatcapColor = matcapTexelToLinear( matcapColor );\\n\\t#else\\n\\t\\tvec4 matcapColor = vec4( 1.0 );\\n\\t#endif\\n\\tvec3 outgoingLight = diffuseColor.rgb * matcapColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshmatcap_vert = \"#define MATCAP\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <color_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#ifndef FLAT_SHADED\\n\\t\\tvNormal = normalize( transformedNormal );\\n\\t#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n}\";\n\n\tvar meshtoon_frag = \"#define TOON\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <gradientmap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_toon_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_toon_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshtoon_vert = \"#define TOON\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphong_frag = \"#define PHONG\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform vec3 specular;\\nuniform float shininess;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <lights_phong_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <specularmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <specularmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\t#include <lights_phong_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\t#include <envmap_fragment>\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphong_vert = \"#define PHONG\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <envmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <envmap_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar meshphysical_frag = \"#define STANDARD\\n#ifdef PHYSICAL\\n\\t#define REFLECTIVITY\\n\\t#define CLEARCOAT\\n#endif\\nuniform vec3 diffuse;\\nuniform vec3 emissive;\\nuniform float roughness;\\nuniform float metalness;\\nuniform float opacity;\\n#ifdef USE_TRANSMISSION\\n\\tuniform float transmission;\\n\\tuniform float thickness;\\n\\tuniform vec3 attenuationColor;\\n\\tuniform float attenuationDistance;\\n#endif\\n#ifdef REFLECTIVITY\\n\\tuniform float reflectivity;\\n#endif\\n#ifdef CLEARCOAT\\n\\tuniform float clearcoat;\\n\\tuniform float clearcoatRoughness;\\n#endif\\n#ifdef USE_SHEEN\\n\\tuniform vec3 sheen;\\n#endif\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <packing>\\n#include <dithering_pars_fragment>\\n#include <color_pars_fragment>\\n#include <uv_pars_fragment>\\n#include <uv2_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <aomap_pars_fragment>\\n#include <lightmap_pars_fragment>\\n#include <emissivemap_pars_fragment>\\n#include <bsdfs>\\n#include <transmission_pars_fragment>\\n#include <cube_uv_reflection_fragment>\\n#include <envmap_common_pars_fragment>\\n#include <envmap_physical_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <lights_pars_begin>\\n#include <lights_physical_pars_fragment>\\n#include <shadowmap_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <clearcoat_pars_fragment>\\n#include <roughnessmap_pars_fragment>\\n#include <metalnessmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\tReflectedLight reflectedLight = ReflectedLight( vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ), vec3( 0.0 ) );\\n\\tvec3 totalEmissiveRadiance = emissive;\\n\\t#ifdef USE_TRANSMISSION\\n\\t\\tfloat totalTransmission = transmission;\\n\\t\\tfloat thicknessFactor = thickness;\\n\\t#endif\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\t#include <roughnessmap_fragment>\\n\\t#include <metalnessmap_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\t#include <clearcoat_normal_fragment_begin>\\n\\t#include <clearcoat_normal_fragment_maps>\\n\\t#include <emissivemap_fragment>\\n\\tvec3 rawDiffuseColor = diffuseColor.rgb;\\n\\t#include <transmission_fragment>\\n\\t#include <lights_physical_fragment>\\n\\t#include <lights_fragment_begin>\\n\\t#include <lights_fragment_maps>\\n\\t#include <lights_fragment_end>\\n\\t#include <aomap_fragment>\\n\\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n\\t#include <dithering_fragment>\\n}\";\n\n\tvar meshphysical_vert = \"#define STANDARD\\nvarying vec3 vViewPosition;\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#ifdef USE_TRANSMISSION\\n\\tvarying vec4 vWorldPosition;\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <uv2_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <shadowmap_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <uv2_vertex>\\n\\t#include <color_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\tvViewPosition = - mvPosition.xyz;\\n\\t#include <worldpos_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n#ifdef USE_TRANSMISSION\\n\\tvWorldPosition = worldPosition;\\n#endif\\n}\";\n\n\tvar normal_frag = \"#define NORMAL\\nuniform float opacity;\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <packing>\\n#include <uv_pars_fragment>\\n#include <bumpmap_pars_fragment>\\n#include <normalmap_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <normal_fragment_begin>\\n\\t#include <normal_fragment_maps>\\n\\tgl_FragColor = vec4( packNormalToRGB( normal ), opacity );\\n}\";\n\n\tvar normal_vert = \"#define NORMAL\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvarying vec3 vViewPosition;\\n#endif\\n#ifndef FLAT_SHADED\\n\\tvarying vec3 vNormal;\\n\\t#ifdef USE_TANGENT\\n\\t\\tvarying vec3 vTangent;\\n\\t\\tvarying vec3 vBitangent;\\n\\t#endif\\n#endif\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <displacementmap_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <skinning_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n#ifndef FLAT_SHADED\\n\\tvNormal = normalize( transformedNormal );\\n\\t#ifdef USE_TANGENT\\n\\t\\tvTangent = normalize( transformedTangent );\\n\\t\\tvBitangent = normalize( cross( vNormal, vTangent ) * tangent.w );\\n\\t#endif\\n#endif\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <skinning_vertex>\\n\\t#include <displacementmap_vertex>\\n\\t#include <project_vertex>\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n#if defined( FLAT_SHADED ) || defined( USE_BUMPMAP ) || defined( TANGENTSPACE_NORMALMAP )\\n\\tvViewPosition = - mvPosition.xyz;\\n#endif\\n}\";\n\n\tvar points_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <color_pars_fragment>\\n#include <map_particle_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_particle_fragment>\\n\\t#include <color_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n\\t#include <premultiplied_alpha_fragment>\\n}\";\n\n\tvar points_vert = \"uniform float size;\\nuniform float scale;\\n#include <common>\\n#include <color_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <morphtarget_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <color_vertex>\\n\\t#include <begin_vertex>\\n\\t#include <morphtarget_vertex>\\n\\t#include <project_vertex>\\n\\tgl_PointSize = size;\\n\\t#ifdef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) gl_PointSize *= ( scale / - mvPosition.z );\\n\\t#endif\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar shadow_frag = \"uniform vec3 color;\\nuniform float opacity;\\n#include <common>\\n#include <packing>\\n#include <fog_pars_fragment>\\n#include <bsdfs>\\n#include <lights_pars_begin>\\n#include <shadowmap_pars_fragment>\\n#include <shadowmask_pars_fragment>\\nvoid main() {\\n\\tgl_FragColor = vec4( color, opacity * ( 1.0 - getShadowMask() ) );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar shadow_vert = \"#include <common>\\n#include <fog_pars_vertex>\\n#include <shadowmap_pars_vertex>\\nvoid main() {\\n\\t#include <begin_vertex>\\n\\t#include <project_vertex>\\n\\t#include <worldpos_vertex>\\n\\t#include <beginnormal_vertex>\\n\\t#include <morphnormal_vertex>\\n\\t#include <skinbase_vertex>\\n\\t#include <skinnormal_vertex>\\n\\t#include <defaultnormal_vertex>\\n\\t#include <shadowmap_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tvar sprite_frag = \"uniform vec3 diffuse;\\nuniform float opacity;\\n#include <common>\\n#include <uv_pars_fragment>\\n#include <map_pars_fragment>\\n#include <alphamap_pars_fragment>\\n#include <fog_pars_fragment>\\n#include <logdepthbuf_pars_fragment>\\n#include <clipping_planes_pars_fragment>\\nvoid main() {\\n\\t#include <clipping_planes_fragment>\\n\\tvec3 outgoingLight = vec3( 0.0 );\\n\\tvec4 diffuseColor = vec4( diffuse, opacity );\\n\\t#include <logdepthbuf_fragment>\\n\\t#include <map_fragment>\\n\\t#include <alphamap_fragment>\\n\\t#include <alphatest_fragment>\\n\\toutgoingLight = diffuseColor.rgb;\\n\\tgl_FragColor = vec4( outgoingLight, diffuseColor.a );\\n\\t#include <tonemapping_fragment>\\n\\t#include <encodings_fragment>\\n\\t#include <fog_fragment>\\n}\";\n\n\tvar sprite_vert = \"uniform float rotation;\\nuniform vec2 center;\\n#include <common>\\n#include <uv_pars_vertex>\\n#include <fog_pars_vertex>\\n#include <logdepthbuf_pars_vertex>\\n#include <clipping_planes_pars_vertex>\\nvoid main() {\\n\\t#include <uv_vertex>\\n\\tvec4 mvPosition = modelViewMatrix * vec4( 0.0, 0.0, 0.0, 1.0 );\\n\\tvec2 scale;\\n\\tscale.x = length( vec3( modelMatrix[ 0 ].x, modelMatrix[ 0 ].y, modelMatrix[ 0 ].z ) );\\n\\tscale.y = length( vec3( modelMatrix[ 1 ].x, modelMatrix[ 1 ].y, modelMatrix[ 1 ].z ) );\\n\\t#ifndef USE_SIZEATTENUATION\\n\\t\\tbool isPerspective = isPerspectiveMatrix( projectionMatrix );\\n\\t\\tif ( isPerspective ) scale *= - mvPosition.z;\\n\\t#endif\\n\\tvec2 alignedPosition = ( position.xy - ( center - vec2( 0.5 ) ) ) * scale;\\n\\tvec2 rotatedPosition;\\n\\trotatedPosition.x = cos( rotation ) * alignedPosition.x - sin( rotation ) * alignedPosition.y;\\n\\trotatedPosition.y = sin( rotation ) * alignedPosition.x + cos( rotation ) * alignedPosition.y;\\n\\tmvPosition.xy += rotatedPosition;\\n\\tgl_Position = projectionMatrix * mvPosition;\\n\\t#include <logdepthbuf_vertex>\\n\\t#include <clipping_planes_vertex>\\n\\t#include <fog_vertex>\\n}\";\n\n\tconst ShaderChunk = {\n\t\talphamap_fragment: alphamap_fragment,\n\t\talphamap_pars_fragment: alphamap_pars_fragment,\n\t\talphatest_fragment: alphatest_fragment,\n\t\taomap_fragment: aomap_fragment,\n\t\taomap_pars_fragment: aomap_pars_fragment,\n\t\tbegin_vertex: begin_vertex,\n\t\tbeginnormal_vertex: beginnormal_vertex,\n\t\tbsdfs: bsdfs,\n\t\tbumpmap_pars_fragment: bumpmap_pars_fragment,\n\t\tclipping_planes_fragment: clipping_planes_fragment,\n\t\tclipping_planes_pars_fragment: clipping_planes_pars_fragment,\n\t\tclipping_planes_pars_vertex: clipping_planes_pars_vertex,\n\t\tclipping_planes_vertex: clipping_planes_vertex,\n\t\tcolor_fragment: color_fragment,\n\t\tcolor_pars_fragment: color_pars_fragment,\n\t\tcolor_pars_vertex: color_pars_vertex,\n\t\tcolor_vertex: color_vertex,\n\t\tcommon: common,\n\t\tcube_uv_reflection_fragment: cube_uv_reflection_fragment,\n\t\tdefaultnormal_vertex: defaultnormal_vertex,\n\t\tdisplacementmap_pars_vertex: displacementmap_pars_vertex,\n\t\tdisplacementmap_vertex: displacementmap_vertex,\n\t\temissivemap_fragment: emissivemap_fragment,\n\t\temissivemap_pars_fragment: emissivemap_pars_fragment,\n\t\tencodings_fragment: encodings_fragment,\n\t\tencodings_pars_fragment: encodings_pars_fragment,\n\t\tenvmap_fragment: envmap_fragment,\n\t\tenvmap_common_pars_fragment: envmap_common_pars_fragment,\n\t\tenvmap_pars_fragment: envmap_pars_fragment,\n\t\tenvmap_pars_vertex: envmap_pars_vertex,\n\t\tenvmap_physical_pars_fragment: envmap_physical_pars_fragment,\n\t\tenvmap_vertex: envmap_vertex,\n\t\tfog_vertex: fog_vertex,\n\t\tfog_pars_vertex: fog_pars_vertex,\n\t\tfog_fragment: fog_fragment,\n\t\tfog_pars_fragment: fog_pars_fragment,\n\t\tgradientmap_pars_fragment: gradientmap_pars_fragment,\n\t\tlightmap_fragment: lightmap_fragment,\n\t\tlightmap_pars_fragment: lightmap_pars_fragment,\n\t\tlights_lambert_vertex: lights_lambert_vertex,\n\t\tlights_pars_begin: lights_pars_begin,\n\t\tlights_toon_fragment: lights_toon_fragment,\n\t\tlights_toon_pars_fragment: lights_toon_pars_fragment,\n\t\tlights_phong_fragment: lights_phong_fragment,\n\t\tlights_phong_pars_fragment: lights_phong_pars_fragment,\n\t\tlights_physical_fragment: lights_physical_fragment,\n\t\tlights_physical_pars_fragment: lights_physical_pars_fragment,\n\t\tlights_fragment_begin: lights_fragment_begin,\n\t\tlights_fragment_maps: lights_fragment_maps,\n\t\tlights_fragment_end: lights_fragment_end,\n\t\tlogdepthbuf_fragment: logdepthbuf_fragment,\n\t\tlogdepthbuf_pars_fragment: logdepthbuf_pars_fragment,\n\t\tlogdepthbuf_pars_vertex: logdepthbuf_pars_vertex,\n\t\tlogdepthbuf_vertex: logdepthbuf_vertex,\n\t\tmap_fragment: map_fragment,\n\t\tmap_pars_fragment: map_pars_fragment,\n\t\tmap_particle_fragment: map_particle_fragment,\n\t\tmap_particle_pars_fragment: map_particle_pars_fragment,\n\t\tmetalnessmap_fragment: metalnessmap_fragment,\n\t\tmetalnessmap_pars_fragment: metalnessmap_pars_fragment,\n\t\tmorphnormal_vertex: morphnormal_vertex,\n\t\tmorphtarget_pars_vertex: morphtarget_pars_vertex,\n\t\tmorphtarget_vertex: morphtarget_vertex,\n\t\tnormal_fragment_begin: normal_fragment_begin,\n\t\tnormal_fragment_maps: normal_fragment_maps,\n\t\tnormalmap_pars_fragment: normalmap_pars_fragment,\n\t\tclearcoat_normal_fragment_begin: clearcoat_normal_fragment_begin,\n\t\tclearcoat_normal_fragment_maps: clearcoat_normal_fragment_maps,\n\t\tclearcoat_pars_fragment: clearcoat_pars_fragment,\n\t\tpacking: packing,\n\t\tpremultiplied_alpha_fragment: premultiplied_alpha_fragment,\n\t\tproject_vertex: project_vertex,\n\t\tdithering_fragment: dithering_fragment,\n\t\tdithering_pars_fragment: dithering_pars_fragment,\n\t\troughnessmap_fragment: roughnessmap_fragment,\n\t\troughnessmap_pars_fragment: roughnessmap_pars_fragment,\n\t\tshadowmap_pars_fragment: shadowmap_pars_fragment,\n\t\tshadowmap_pars_vertex: shadowmap_pars_vertex,\n\t\tshadowmap_vertex: shadowmap_vertex,\n\t\tshadowmask_pars_fragment: shadowmask_pars_fragment,\n\t\tskinbase_vertex: skinbase_vertex,\n\t\tskinning_pars_vertex: skinning_pars_vertex,\n\t\tskinning_vertex: skinning_vertex,\n\t\tskinnormal_vertex: skinnormal_vertex,\n\t\tspecularmap_fragment: specularmap_fragment,\n\t\tspecularmap_pars_fragment: specularmap_pars_fragment,\n\t\ttonemapping_fragment: tonemapping_fragment,\n\t\ttonemapping_pars_fragment: tonemapping_pars_fragment,\n\t\ttransmission_fragment: transmission_fragment,\n\t\ttransmission_pars_fragment: transmission_pars_fragment,\n\t\tuv_pars_fragment: uv_pars_fragment,\n\t\tuv_pars_vertex: uv_pars_vertex,\n\t\tuv_vertex: uv_vertex,\n\t\tuv2_pars_fragment: uv2_pars_fragment,\n\t\tuv2_pars_vertex: uv2_pars_vertex,\n\t\tuv2_vertex: uv2_vertex,\n\t\tworldpos_vertex: worldpos_vertex,\n\t\tbackground_frag: background_frag,\n\t\tbackground_vert: background_vert,\n\t\tcube_frag: cube_frag,\n\t\tcube_vert: cube_vert,\n\t\tdepth_frag: depth_frag,\n\t\tdepth_vert: depth_vert,\n\t\tdistanceRGBA_frag: distanceRGBA_frag,\n\t\tdistanceRGBA_vert: distanceRGBA_vert,\n\t\tequirect_frag: equirect_frag,\n\t\tequirect_vert: equirect_vert,\n\t\tlinedashed_frag: linedashed_frag,\n\t\tlinedashed_vert: linedashed_vert,\n\t\tmeshbasic_frag: meshbasic_frag,\n\t\tmeshbasic_vert: meshbasic_vert,\n\t\tmeshlambert_frag: meshlambert_frag,\n\t\tmeshlambert_vert: meshlambert_vert,\n\t\tmeshmatcap_frag: meshmatcap_frag,\n\t\tmeshmatcap_vert: meshmatcap_vert,\n\t\tmeshtoon_frag: meshtoon_frag,\n\t\tmeshtoon_vert: meshtoon_vert,\n\t\tmeshphong_frag: meshphong_frag,\n\t\tmeshphong_vert: meshphong_vert,\n\t\tmeshphysical_frag: meshphysical_frag,\n\t\tmeshphysical_vert: meshphysical_vert,\n\t\tnormal_frag: normal_frag,\n\t\tnormal_vert: normal_vert,\n\t\tpoints_frag: points_frag,\n\t\tpoints_vert: points_vert,\n\t\tshadow_frag: shadow_frag,\n\t\tshadow_vert: shadow_vert,\n\t\tsprite_frag: sprite_frag,\n\t\tsprite_vert: sprite_vert\n\t};\n\n\t/**\n\t * Uniforms library for shared webgl shaders\n\t */\n\n\tconst UniformsLib = {\n\t\tcommon: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\tuv2Transform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tspecularmap: {\n\t\t\tspecularMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tenvmap: {\n\t\t\tenvMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tflipEnvMap: {\n\t\t\t\tvalue: -1\n\t\t\t},\n\t\t\treflectivity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\trefractionRatio: {\n\t\t\t\tvalue: 0.98\n\t\t\t},\n\t\t\tmaxMipLevel: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\taomap: {\n\t\t\taoMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\taoMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tlightmap: {\n\t\t\tlightMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tlightMapIntensity: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\temissivemap: {\n\t\t\temissiveMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tbumpmap: {\n\t\t\tbumpMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tbumpScale: {\n\t\t\t\tvalue: 1\n\t\t\t}\n\t\t},\n\t\tnormalmap: {\n\t\t\tnormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tnormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t}\n\t\t},\n\t\tdisplacementmap: {\n\t\t\tdisplacementMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tdisplacementScale: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tdisplacementBias: {\n\t\t\t\tvalue: 0\n\t\t\t}\n\t\t},\n\t\troughnessmap: {\n\t\t\troughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tmetalnessmap: {\n\t\t\tmetalnessMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tgradientmap: {\n\t\t\tgradientMap: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tfog: {\n\t\t\tfogDensity: {\n\t\t\t\tvalue: 0.00025\n\t\t\t},\n\t\t\tfogNear: {\n\t\t\t\tvalue: 1\n\t\t\t},\n\t\t\tfogFar: {\n\t\t\t\tvalue: 2000\n\t\t\t},\n\t\t\tfogColor: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t}\n\t\t},\n\t\tlights: {\n\t\t\tambientLightColor: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tlightProbe: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tcolor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tdirectionalShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tdirectionalShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tdistance: {},\n\t\t\t\t\tconeCos: {},\n\t\t\t\t\tpenumbraCos: {},\n\t\t\t\t\tdecay: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tspotShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tspotShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\tdecay: {},\n\t\t\t\t\tdistance: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointLightShadows: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tshadowBias: {},\n\t\t\t\t\tshadowNormalBias: {},\n\t\t\t\t\tshadowRadius: {},\n\t\t\t\t\tshadowMapSize: {},\n\t\t\t\t\tshadowCameraNear: {},\n\t\t\t\t\tshadowCameraFar: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tpointShadowMap: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\tpointShadowMatrix: {\n\t\t\t\tvalue: []\n\t\t\t},\n\t\t\themisphereLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tdirection: {},\n\t\t\t\t\tskyColor: {},\n\t\t\t\t\tgroundColor: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\t// TODO (abelnation): RectAreaLight BRDF data needs to be moved from example to main src\n\t\t\trectAreaLights: {\n\t\t\t\tvalue: [],\n\t\t\t\tproperties: {\n\t\t\t\t\tcolor: {},\n\t\t\t\t\tposition: {},\n\t\t\t\t\twidth: {},\n\t\t\t\t\theight: {}\n\t\t\t\t}\n\t\t\t},\n\t\t\tltc_1: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tltc_2: {\n\t\t\t\tvalue: null\n\t\t\t}\n\t\t},\n\t\tpoints: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tsize: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tscale: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t},\n\t\tsprite: {\n\t\t\tdiffuse: {\n\t\t\t\tvalue: new Color(0xffffff)\n\t\t\t},\n\t\t\topacity: {\n\t\t\t\tvalue: 1.0\n\t\t\t},\n\t\t\tcenter: {\n\t\t\t\tvalue: new Vector2(0.5, 0.5)\n\t\t\t},\n\t\t\trotation: {\n\t\t\t\tvalue: 0.0\n\t\t\t},\n\t\t\tmap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\talphaMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tuvTransform: {\n\t\t\t\tvalue: new Matrix3()\n\t\t\t}\n\t\t}\n\t};\n\n\tconst ShaderLib = {\n\t\tbasic: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.meshbasic_vert,\n\t\t\tfragmentShader: ShaderChunk.meshbasic_frag\n\t\t},\n\t\tlambert: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshlambert_vert,\n\t\t\tfragmentShader: ShaderChunk.meshlambert_frag\n\t\t},\n\t\tphong: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.specularmap, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\tspecular: {\n\t\t\t\t\tvalue: new Color(0x111111)\n\t\t\t\t},\n\t\t\t\tshininess: {\n\t\t\t\t\tvalue: 30\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphong_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphong_frag\n\t\t},\n\t\tstandard: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.envmap, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.roughnessmap, UniformsLib.metalnessmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t},\n\t\t\t\troughness: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t},\n\t\t\t\tmetalness: {\n\t\t\t\t\tvalue: 0.0\n\t\t\t\t},\n\t\t\t\tenvMapIntensity: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t} // temporary\n\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t\t},\n\t\ttoon: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.aomap, UniformsLib.lightmap, UniformsLib.emissivemap, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.gradientmap, UniformsLib.fog, UniformsLib.lights, {\n\t\t\t\temissive: {\n\t\t\t\t\tvalue: new Color(0x000000)\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshtoon_vert,\n\t\t\tfragmentShader: ShaderChunk.meshtoon_frag\n\t\t},\n\t\tmatcap: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, UniformsLib.fog, {\n\t\t\t\tmatcap: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.meshmatcap_vert,\n\t\t\tfragmentShader: ShaderChunk.meshmatcap_frag\n\t\t},\n\t\tpoints: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.points, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.points_vert,\n\t\t\tfragmentShader: ShaderChunk.points_frag\n\t\t},\n\t\tdashed: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.fog, {\n\t\t\t\tscale: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tdashSize: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\ttotalSize: {\n\t\t\t\t\tvalue: 2\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.linedashed_vert,\n\t\t\tfragmentShader: ShaderChunk.linedashed_frag\n\t\t},\n\t\tdepth: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap]),\n\t\t\tvertexShader: ShaderChunk.depth_vert,\n\t\t\tfragmentShader: ShaderChunk.depth_frag\n\t\t},\n\t\tnormal: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.bumpmap, UniformsLib.normalmap, UniformsLib.displacementmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.normal_vert,\n\t\t\tfragmentShader: ShaderChunk.normal_frag\n\t\t},\n\t\tsprite: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.sprite, UniformsLib.fog]),\n\t\t\tvertexShader: ShaderChunk.sprite_vert,\n\t\t\tfragmentShader: ShaderChunk.sprite_frag\n\t\t},\n\t\tbackground: {\n\t\t\tuniforms: {\n\t\t\t\tuvTransform: {\n\t\t\t\t\tvalue: new Matrix3()\n\t\t\t\t},\n\t\t\t\tt2D: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.background_vert,\n\t\t\tfragmentShader: ShaderChunk.background_frag\n\t\t},\n\n\t\t/* -------------------------------------------------------------------------\n\t\t//\tCube map shader\n\t\t ------------------------------------------------------------------------- */\n\t\tcube: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.envmap, {\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.cube_vert,\n\t\t\tfragmentShader: ShaderChunk.cube_frag\n\t\t},\n\t\tequirect: {\n\t\t\tuniforms: {\n\t\t\t\ttEquirect: {\n\t\t\t\t\tvalue: null\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: ShaderChunk.equirect_vert,\n\t\t\tfragmentShader: ShaderChunk.equirect_frag\n\t\t},\n\t\tdistanceRGBA: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.common, UniformsLib.displacementmap, {\n\t\t\t\treferencePosition: {\n\t\t\t\t\tvalue: new Vector3()\n\t\t\t\t},\n\t\t\t\tnearDistance: {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\tfarDistance: {\n\t\t\t\t\tvalue: 1000\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.distanceRGBA_vert,\n\t\t\tfragmentShader: ShaderChunk.distanceRGBA_frag\n\t\t},\n\t\tshadow: {\n\t\t\tuniforms: mergeUniforms([UniformsLib.lights, UniformsLib.fog, {\n\t\t\t\tcolor: {\n\t\t\t\t\tvalue: new Color(0x00000)\n\t\t\t\t},\n\t\t\t\topacity: {\n\t\t\t\t\tvalue: 1.0\n\t\t\t\t}\n\t\t\t}]),\n\t\t\tvertexShader: ShaderChunk.shadow_vert,\n\t\t\tfragmentShader: ShaderChunk.shadow_frag\n\t\t}\n\t};\n\tShaderLib.physical = {\n\t\tuniforms: mergeUniforms([ShaderLib.standard.uniforms, {\n\t\t\tclearcoat: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatRoughness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tclearcoatRoughnessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tclearcoatNormalScale: {\n\t\t\t\tvalue: new Vector2(1, 1)\n\t\t\t},\n\t\t\tclearcoatNormalMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tsheen: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t},\n\t\t\ttransmission: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\ttransmissionMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\ttransmissionSamplerSize: {\n\t\t\t\tvalue: new Vector2()\n\t\t\t},\n\t\t\ttransmissionSamplerMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tthickness: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tthicknessMap: {\n\t\t\t\tvalue: null\n\t\t\t},\n\t\t\tattenuationDistance: {\n\t\t\t\tvalue: 0\n\t\t\t},\n\t\t\tattenuationColor: {\n\t\t\t\tvalue: new Color(0x000000)\n\t\t\t}\n\t\t}]),\n\t\tvertexShader: ShaderChunk.meshphysical_vert,\n\t\tfragmentShader: ShaderChunk.meshphysical_frag\n\t};\n\n\tfunction WebGLBackground(renderer, cubemaps, state, objects, premultipliedAlpha) {\n\t\tconst clearColor = new Color(0x000000);\n\t\tlet clearAlpha = 0;\n\t\tlet planeMesh;\n\t\tlet boxMesh;\n\t\tlet currentBackground = null;\n\t\tlet currentBackgroundVersion = 0;\n\t\tlet currentTonemapping = null;\n\n\t\tfunction render(renderList, scene) {\n\t\t\tlet forceClear = false;\n\t\t\tlet background = scene.isScene === true ? scene.background : null;\n\n\t\t\tif (background && background.isTexture) {\n\t\t\t\tbackground = cubemaps.get(background);\n\t\t\t} // Ignore background in AR\n\t\t\t// TODO: Reconsider this.\n\n\n\t\t\tconst xr = renderer.xr;\n\t\t\tconst session = xr.getSession && xr.getSession();\n\n\t\t\tif (session && session.environmentBlendMode === 'additive') {\n\t\t\t\tbackground = null;\n\t\t\t}\n\n\t\t\tif (background === null) {\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t} else if (background && background.isColor) {\n\t\t\t\tsetClear(background, 1);\n\t\t\t\tforceClear = true;\n\t\t\t}\n\n\t\t\tif (renderer.autoClear || forceClear) {\n\t\t\t\trenderer.clear(renderer.autoClearColor, renderer.autoClearDepth, renderer.autoClearStencil);\n\t\t\t}\n\n\t\t\tif (background && (background.isCubeTexture || background.mapping === CubeUVReflectionMapping)) {\n\t\t\t\tif (boxMesh === undefined) {\n\t\t\t\t\tboxMesh = new Mesh(new BoxGeometry(1, 1, 1), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundCubeMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.cube.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.cube.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.cube.fragmentShader,\n\t\t\t\t\t\tside: BackSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('normal');\n\t\t\t\t\tboxMesh.geometry.deleteAttribute('uv');\n\n\t\t\t\t\tboxMesh.onBeforeRender = function (renderer, scene, camera) {\n\t\t\t\t\t\tthis.matrixWorld.copyPosition(camera.matrixWorld);\n\t\t\t\t\t}; // enable code injection for non-built-in material\n\n\n\t\t\t\t\tObject.defineProperty(boxMesh.material, 'envMap', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.envMap.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(boxMesh);\n\t\t\t\t}\n\n\t\t\t\tboxMesh.material.uniforms.envMap.value = background;\n\t\t\t\tboxMesh.material.uniforms.flipEnvMap.value = background.isCubeTexture && background._needsFlipEnvMap ? -1 : 1;\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tboxMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(boxMesh, boxMesh.geometry, boxMesh.material, 0, 0, null);\n\t\t\t} else if (background && background.isTexture) {\n\t\t\t\tif (planeMesh === undefined) {\n\t\t\t\t\tplaneMesh = new Mesh(new PlaneGeometry(2, 2), new ShaderMaterial({\n\t\t\t\t\t\tname: 'BackgroundMaterial',\n\t\t\t\t\t\tuniforms: cloneUniforms(ShaderLib.background.uniforms),\n\t\t\t\t\t\tvertexShader: ShaderLib.background.vertexShader,\n\t\t\t\t\t\tfragmentShader: ShaderLib.background.fragmentShader,\n\t\t\t\t\t\tside: FrontSide,\n\t\t\t\t\t\tdepthTest: false,\n\t\t\t\t\t\tdepthWrite: false,\n\t\t\t\t\t\tfog: false\n\t\t\t\t\t}));\n\t\t\t\t\tplaneMesh.geometry.deleteAttribute('normal'); // enable code injection for non-built-in material\n\n\t\t\t\t\tObject.defineProperty(planeMesh.material, 'map', {\n\t\t\t\t\t\tget: function () {\n\t\t\t\t\t\t\treturn this.uniforms.t2D.value;\n\t\t\t\t\t\t}\n\t\t\t\t\t});\n\t\t\t\t\tobjects.update(planeMesh);\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.t2D.value = background;\n\n\t\t\t\tif (background.matrixAutoUpdate === true) {\n\t\t\t\t\tbackground.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tplaneMesh.material.uniforms.uvTransform.value.copy(background.matrix);\n\n\t\t\t\tif (currentBackground !== background || currentBackgroundVersion !== background.version || currentTonemapping !== renderer.toneMapping) {\n\t\t\t\t\tplaneMesh.material.needsUpdate = true;\n\t\t\t\t\tcurrentBackground = background;\n\t\t\t\t\tcurrentBackgroundVersion = background.version;\n\t\t\t\t\tcurrentTonemapping = renderer.toneMapping;\n\t\t\t\t} // push to the pre-sorted opaque render list\n\n\n\t\t\t\trenderList.unshift(planeMesh, planeMesh.geometry, planeMesh.material, 0, 0, null);\n\t\t\t}\n\t\t}\n\n\t\tfunction setClear(color, alpha) {\n\t\t\tstate.buffers.color.setClear(color.r, color.g, color.b, alpha, premultipliedAlpha);\n\t\t}\n\n\t\treturn {\n\t\t\tgetClearColor: function () {\n\t\t\t\treturn clearColor;\n\t\t\t},\n\t\t\tsetClearColor: function (color, alpha = 1) {\n\t\t\t\tclearColor.set(color);\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\tgetClearAlpha: function () {\n\t\t\t\treturn clearAlpha;\n\t\t\t},\n\t\t\tsetClearAlpha: function (alpha) {\n\t\t\t\tclearAlpha = alpha;\n\t\t\t\tsetClear(clearColor, clearAlpha);\n\t\t\t},\n\t\t\trender: render\n\t\t};\n\t}\n\n\tfunction WebGLBindingStates(gl, extensions, attributes, capabilities) {\n\t\tconst maxVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst extension = capabilities.isWebGL2 ? null : extensions.get('OES_vertex_array_object');\n\t\tconst vaoAvailable = capabilities.isWebGL2 || extension !== null;\n\t\tconst bindingStates = {};\n\t\tconst defaultState = createBindingState(null);\n\t\tlet currentState = defaultState;\n\n\t\tfunction setup(object, material, program, geometry, index) {\n\t\t\tlet updateBuffers = false;\n\n\t\t\tif (vaoAvailable) {\n\t\t\t\tconst state = getBindingState(geometry, program, material);\n\n\t\t\t\tif (currentState !== state) {\n\t\t\t\t\tcurrentState = state;\n\t\t\t\t\tbindVertexArrayObject(currentState.object);\n\t\t\t\t}\n\n\t\t\t\tupdateBuffers = needsUpdate(geometry, index);\n\t\t\t\tif (updateBuffers) saveCache(geometry, index);\n\t\t\t} else {\n\t\t\t\tconst wireframe = material.wireframe === true;\n\n\t\t\t\tif (currentState.geometry !== geometry.id || currentState.program !== program.id || currentState.wireframe !== wireframe) {\n\t\t\t\t\tcurrentState.geometry = geometry.id;\n\t\t\t\t\tcurrentState.program = program.id;\n\t\t\t\t\tcurrentState.wireframe = wireframe;\n\t\t\t\t\tupdateBuffers = true;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh === true) {\n\t\t\t\tupdateBuffers = true;\n\t\t\t}\n\n\t\t\tif (index !== null) {\n\t\t\t\tattributes.update(index, gl.ELEMENT_ARRAY_BUFFER);\n\t\t\t}\n\n\t\t\tif (updateBuffers) {\n\t\t\t\tsetupVertexAttributes(object, material, program, geometry);\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tgl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, attributes.get(index).buffer);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction createVertexArrayObject() {\n\t\t\tif (capabilities.isWebGL2) return gl.createVertexArray();\n\t\t\treturn extension.createVertexArrayOES();\n\t\t}\n\n\t\tfunction bindVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.bindVertexArray(vao);\n\t\t\treturn extension.bindVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction deleteVertexArrayObject(vao) {\n\t\t\tif (capabilities.isWebGL2) return gl.deleteVertexArray(vao);\n\t\t\treturn extension.deleteVertexArrayOES(vao);\n\t\t}\n\n\t\tfunction getBindingState(geometry, program, material) {\n\t\t\tconst wireframe = material.wireframe === true;\n\t\t\tlet programMap = bindingStates[geometry.id];\n\n\t\t\tif (programMap === undefined) {\n\t\t\t\tprogramMap = {};\n\t\t\t\tbindingStates[geometry.id] = programMap;\n\t\t\t}\n\n\t\t\tlet stateMap = programMap[program.id];\n\n\t\t\tif (stateMap === undefined) {\n\t\t\t\tstateMap = {};\n\t\t\t\tprogramMap[program.id] = stateMap;\n\t\t\t}\n\n\t\t\tlet state = stateMap[wireframe];\n\n\t\t\tif (state === undefined) {\n\t\t\t\tstate = createBindingState(createVertexArrayObject());\n\t\t\t\tstateMap[wireframe] = state;\n\t\t\t}\n\n\t\t\treturn state;\n\t\t}\n\n\t\tfunction createBindingState(vao) {\n\t\t\tconst newAttributes = [];\n\t\t\tconst enabledAttributes = [];\n\t\t\tconst attributeDivisors = [];\n\n\t\t\tfor (let i = 0; i < maxVertexAttributes; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\tattributeDivisors[i] = 0;\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\t// for backward compatibility on non-VAO support browser\n\t\t\t\tgeometry: null,\n\t\t\t\tprogram: null,\n\t\t\t\twireframe: false,\n\t\t\t\tnewAttributes: newAttributes,\n\t\t\t\tenabledAttributes: enabledAttributes,\n\t\t\t\tattributeDivisors: attributeDivisors,\n\t\t\t\tobject: vao,\n\t\t\t\tattributes: {},\n\t\t\t\tindex: null\n\t\t\t};\n\t\t}\n\n\t\tfunction needsUpdate(geometry, index) {\n\t\t\tconst cachedAttributes = currentState.attributes;\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in geometryAttributes) {\n\t\t\t\tconst cachedAttribute = cachedAttributes[key];\n\t\t\t\tconst geometryAttribute = geometryAttributes[key];\n\t\t\t\tif (cachedAttribute === undefined) return true;\n\t\t\t\tif (cachedAttribute.attribute !== geometryAttribute) return true;\n\t\t\t\tif (cachedAttribute.data !== geometryAttribute.data) return true;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tif (currentState.attributesNum !== attributesNum) return true;\n\t\t\tif (currentState.index !== index) return true;\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction saveCache(geometry, index) {\n\t\t\tconst cache = {};\n\t\t\tconst attributes = geometry.attributes;\n\t\t\tlet attributesNum = 0;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tconst data = {};\n\t\t\t\tdata.attribute = attribute;\n\n\t\t\t\tif (attribute.data) {\n\t\t\t\t\tdata.data = attribute.data;\n\t\t\t\t}\n\n\t\t\t\tcache[key] = data;\n\t\t\t\tattributesNum++;\n\t\t\t}\n\n\t\t\tcurrentState.attributes = cache;\n\t\t\tcurrentState.attributesNum = attributesNum;\n\t\t\tcurrentState.index = index;\n\t\t}\n\n\t\tfunction initAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\n\t\t\tfor (let i = 0, il = newAttributes.length; i < il; i++) {\n\t\t\t\tnewAttributes[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\tfunction enableAttribute(attribute) {\n\t\t\tenableAttributeAndDivisor(attribute, 0);\n\t\t}\n\n\t\tfunction enableAttributeAndDivisor(attribute, meshPerAttribute) {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\t\t\tconst attributeDivisors = currentState.attributeDivisors;\n\t\t\tnewAttributes[attribute] = 1;\n\n\t\t\tif (enabledAttributes[attribute] === 0) {\n\t\t\t\tgl.enableVertexAttribArray(attribute);\n\t\t\t\tenabledAttributes[attribute] = 1;\n\t\t\t}\n\n\t\t\tif (attributeDivisors[attribute] !== meshPerAttribute) {\n\t\t\t\tconst extension = capabilities.isWebGL2 ? gl : extensions.get('ANGLE_instanced_arrays');\n\t\t\t\textension[capabilities.isWebGL2 ? 'vertexAttribDivisor' : 'vertexAttribDivisorANGLE'](attribute, meshPerAttribute);\n\t\t\t\tattributeDivisors[attribute] = meshPerAttribute;\n\t\t\t}\n\t\t}\n\n\t\tfunction disableUnusedAttributes() {\n\t\t\tconst newAttributes = currentState.newAttributes;\n\t\t\tconst enabledAttributes = currentState.enabledAttributes;\n\n\t\t\tfor (let i = 0, il = enabledAttributes.length; i < il; i++) {\n\t\t\t\tif (enabledAttributes[i] !== newAttributes[i]) {\n\t\t\t\t\tgl.disableVertexAttribArray(i);\n\t\t\t\t\tenabledAttributes[i] = 0;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction vertexAttribPointer(index, size, type, normalized, stride, offset) {\n\t\t\tif (capabilities.isWebGL2 === true && (type === gl.INT || type === gl.UNSIGNED_INT)) {\n\t\t\t\tgl.vertexAttribIPointer(index, size, type, stride, offset);\n\t\t\t} else {\n\t\t\t\tgl.vertexAttribPointer(index, size, type, normalized, stride, offset);\n\t\t\t}\n\t\t}\n\n\t\tfunction setupVertexAttributes(object, material, program, geometry) {\n\t\t\tif (capabilities.isWebGL2 === false && (object.isInstancedMesh || geometry.isInstancedBufferGeometry)) {\n\t\t\t\tif (extensions.get('ANGLE_instanced_arrays') === null) return;\n\t\t\t}\n\n\t\t\tinitAttributes();\n\t\t\tconst geometryAttributes = geometry.attributes;\n\t\t\tconst programAttributes = program.getAttributes();\n\t\t\tconst materialDefaultAttributeValues = material.defaultAttributeValues;\n\n\t\t\tfor (const name in programAttributes) {\n\t\t\t\tconst programAttribute = programAttributes[name];\n\n\t\t\t\tif (programAttribute >= 0) {\n\t\t\t\t\tconst geometryAttribute = geometryAttributes[name];\n\n\t\t\t\t\tif (geometryAttribute !== undefined) {\n\t\t\t\t\t\tconst normalized = geometryAttribute.normalized;\n\t\t\t\t\t\tconst size = geometryAttribute.itemSize;\n\t\t\t\t\t\tconst attribute = attributes.get(geometryAttribute); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tconst bytesPerElement = attribute.bytesPerElement;\n\n\t\t\t\t\t\tif (geometryAttribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst data = geometryAttribute.data;\n\t\t\t\t\t\t\tconst stride = data.stride;\n\t\t\t\t\t\t\tconst offset = geometryAttribute.offset;\n\n\t\t\t\t\t\t\tif (data && data.isInstancedInterleavedBuffer) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, data.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = data.meshPerAttribute * data.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, stride * bytesPerElement, offset * bytesPerElement);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (geometryAttribute.isInstancedBufferAttribute) {\n\t\t\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, geometryAttribute.meshPerAttribute);\n\n\t\t\t\t\t\t\t\tif (geometry._maxInstanceCount === undefined) {\n\t\t\t\t\t\t\t\t\tgeometry._maxInstanceCount = geometryAttribute.meshPerAttribute * geometryAttribute.count;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tenableAttribute(programAttribute);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\t\tvertexAttribPointer(programAttribute, size, type, normalized, 0, 0);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (name === 'instanceMatrix') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceMatrix); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 0, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 1, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 2, 1);\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute + 3, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 0, 4, type, false, 64, 0);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 1, 4, type, false, 64, 16);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 2, 4, type, false, 64, 32);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute + 3, 4, type, false, 64, 48);\n\t\t\t\t\t} else if (name === 'instanceColor') {\n\t\t\t\t\t\tconst attribute = attributes.get(object.instanceColor); // TODO Attribute may not be available on context restore\n\n\t\t\t\t\t\tif (attribute === undefined) continue;\n\t\t\t\t\t\tconst buffer = attribute.buffer;\n\t\t\t\t\t\tconst type = attribute.type;\n\t\t\t\t\t\tenableAttributeAndDivisor(programAttribute, 1);\n\t\t\t\t\t\tgl.bindBuffer(gl.ARRAY_BUFFER, buffer);\n\t\t\t\t\t\tgl.vertexAttribPointer(programAttribute, 3, type, false, 12, 0);\n\t\t\t\t\t} else if (materialDefaultAttributeValues !== undefined) {\n\t\t\t\t\t\tconst value = materialDefaultAttributeValues[name];\n\n\t\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\t\tswitch (value.length) {\n\t\t\t\t\t\t\t\tcase 2:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib2fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 3:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib3fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase 4:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib4fv(programAttribute, value);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.vertexAttrib1fv(programAttribute, value);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tdisableUnusedAttributes();\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\treset();\n\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\n\t\t\t\tfor (const programId in programMap) {\n\t\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t\t}\n\n\t\t\t\t\tdelete programMap[programId];\n\t\t\t\t}\n\n\t\t\t\tdelete bindingStates[geometryId];\n\t\t\t}\n\t\t}\n\n\t\tfunction releaseStatesOfGeometry(geometry) {\n\t\t\tif (bindingStates[geometry.id] === undefined) return;\n\t\t\tconst programMap = bindingStates[geometry.id];\n\n\t\t\tfor (const programId in programMap) {\n\t\t\t\tconst stateMap = programMap[programId];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[programId];\n\t\t\t}\n\n\t\t\tdelete bindingStates[geometry.id];\n\t\t}\n\n\t\tfunction releaseStatesOfProgram(program) {\n\t\t\tfor (const geometryId in bindingStates) {\n\t\t\t\tconst programMap = bindingStates[geometryId];\n\t\t\t\tif (programMap[program.id] === undefined) continue;\n\t\t\t\tconst stateMap = programMap[program.id];\n\n\t\t\t\tfor (const wireframe in stateMap) {\n\t\t\t\t\tdeleteVertexArrayObject(stateMap[wireframe].object);\n\t\t\t\t\tdelete stateMap[wireframe];\n\t\t\t\t}\n\n\t\t\t\tdelete programMap[program.id];\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\tresetDefaultState();\n\t\t\tif (currentState === defaultState) return;\n\t\t\tcurrentState = defaultState;\n\t\t\tbindVertexArrayObject(currentState.object);\n\t\t} // for backward-compatilibity\n\n\n\t\tfunction resetDefaultState() {\n\t\t\tdefaultState.geometry = null;\n\t\t\tdefaultState.program = null;\n\t\t\tdefaultState.wireframe = false;\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\treset: reset,\n\t\t\tresetDefaultState: resetDefaultState,\n\t\t\tdispose: dispose,\n\t\t\treleaseStatesOfGeometry: releaseStatesOfGeometry,\n\t\t\treleaseStatesOfProgram: releaseStatesOfProgram,\n\t\t\tinitAttributes: initAttributes,\n\t\t\tenableAttribute: enableAttribute,\n\t\t\tdisableUnusedAttributes: disableUnusedAttributes\n\t\t};\n\t}\n\n\tfunction WebGLBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawArrays(mode, start, count);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawArraysInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawArraysInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, start, count, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLCapabilities(gl, extensions, parameters) {\n\t\tlet maxAnisotropy;\n\n\t\tfunction getMaxAnisotropy() {\n\t\t\tif (maxAnisotropy !== undefined) return maxAnisotropy;\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tmaxAnisotropy = gl.getParameter(extension.MAX_TEXTURE_MAX_ANISOTROPY_EXT);\n\t\t\t} else {\n\t\t\t\tmaxAnisotropy = 0;\n\t\t\t}\n\n\t\t\treturn maxAnisotropy;\n\t\t}\n\n\t\tfunction getMaxPrecision(precision) {\n\t\t\tif (precision === 'highp') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.HIGH_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'highp';\n\t\t\t\t}\n\n\t\t\t\tprecision = 'mediump';\n\t\t\t}\n\n\t\t\tif (precision === 'mediump') {\n\t\t\t\tif (gl.getShaderPrecisionFormat(gl.VERTEX_SHADER, gl.MEDIUM_FLOAT).precision > 0 && gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.MEDIUM_FLOAT).precision > 0) {\n\t\t\t\t\treturn 'mediump';\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn 'lowp';\n\t\t}\n\t\t/* eslint-disable no-undef */\n\n\n\t\tconst isWebGL2 = typeof WebGL2RenderingContext !== 'undefined' && gl instanceof WebGL2RenderingContext || typeof WebGL2ComputeRenderingContext !== 'undefined' && gl instanceof WebGL2ComputeRenderingContext;\n\t\t/* eslint-enable no-undef */\n\n\t\tlet precision = parameters.precision !== undefined ? parameters.precision : 'highp';\n\t\tconst maxPrecision = getMaxPrecision(precision);\n\n\t\tif (maxPrecision !== precision) {\n\t\t\tconsole.warn('THREE.WebGLRenderer:', precision, 'not supported, using', maxPrecision, 'instead.');\n\t\t\tprecision = maxPrecision;\n\t\t}\n\n\t\tconst drawBuffers = isWebGL2 || extensions.has('WEBGL_draw_buffers');\n\t\tconst logarithmicDepthBuffer = parameters.logarithmicDepthBuffer === true;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxVertexTextures = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS);\n\t\tconst maxTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE);\n\t\tconst maxCubemapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE);\n\t\tconst maxAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS);\n\t\tconst maxVertexUniforms = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS);\n\t\tconst maxVaryings = gl.getParameter(gl.MAX_VARYING_VECTORS);\n\t\tconst maxFragmentUniforms = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS);\n\t\tconst vertexTextures = maxVertexTextures > 0;\n\t\tconst floatFragmentTextures = isWebGL2 || extensions.has('OES_texture_float');\n\t\tconst floatVertexTextures = vertexTextures && floatFragmentTextures;\n\t\tconst maxSamples = isWebGL2 ? gl.getParameter(gl.MAX_SAMPLES) : 0;\n\t\treturn {\n\t\t\tisWebGL2: isWebGL2,\n\t\t\tdrawBuffers: drawBuffers,\n\t\t\tgetMaxAnisotropy: getMaxAnisotropy,\n\t\t\tgetMaxPrecision: getMaxPrecision,\n\t\t\tprecision: precision,\n\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\tmaxTextures: maxTextures,\n\t\t\tmaxVertexTextures: maxVertexTextures,\n\t\t\tmaxTextureSize: maxTextureSize,\n\t\t\tmaxCubemapSize: maxCubemapSize,\n\t\t\tmaxAttributes: maxAttributes,\n\t\t\tmaxVertexUniforms: maxVertexUniforms,\n\t\t\tmaxVaryings: maxVaryings,\n\t\t\tmaxFragmentUniforms: maxFragmentUniforms,\n\t\t\tvertexTextures: vertexTextures,\n\t\t\tfloatFragmentTextures: floatFragmentTextures,\n\t\t\tfloatVertexTextures: floatVertexTextures,\n\t\t\tmaxSamples: maxSamples\n\t\t};\n\t}\n\n\tfunction WebGLClipping(properties) {\n\t\tconst scope = this;\n\t\tlet globalState = null,\n\t\t\t\tnumGlobalPlanes = 0,\n\t\t\t\tlocalClippingEnabled = false,\n\t\t\t\trenderingShadows = false;\n\t\tconst plane = new Plane(),\n\t\t\t\t\tviewNormalMatrix = new Matrix3(),\n\t\t\t\t\tuniform = {\n\t\t\tvalue: null,\n\t\t\tneedsUpdate: false\n\t\t};\n\t\tthis.uniform = uniform;\n\t\tthis.numPlanes = 0;\n\t\tthis.numIntersection = 0;\n\n\t\tthis.init = function (planes, enableLocalClipping, camera) {\n\t\t\tconst enabled = planes.length !== 0 || enableLocalClipping || // enable state of previous frame - the clipping code has to\n\t\t\t// run another frame in order to reset the state:\n\t\t\tnumGlobalPlanes !== 0 || localClippingEnabled;\n\t\t\tlocalClippingEnabled = enableLocalClipping;\n\t\t\tglobalState = projectPlanes(planes, camera, 0);\n\t\t\tnumGlobalPlanes = planes.length;\n\t\t\treturn enabled;\n\t\t};\n\n\t\tthis.beginShadows = function () {\n\t\t\trenderingShadows = true;\n\t\t\tprojectPlanes(null);\n\t\t};\n\n\t\tthis.endShadows = function () {\n\t\t\trenderingShadows = false;\n\t\t\tresetGlobalState();\n\t\t};\n\n\t\tthis.setState = function (material, camera, useCache) {\n\t\t\tconst planes = material.clippingPlanes,\n\t\t\t\t\t\tclipIntersection = material.clipIntersection,\n\t\t\t\t\t\tclipShadows = material.clipShadows;\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (!localClippingEnabled || planes === null || planes.length === 0 || renderingShadows && !clipShadows) {\n\t\t\t\t// there's no local clipping\n\t\t\t\tif (renderingShadows) {\n\t\t\t\t\t// there's no global clipping\n\t\t\t\t\tprojectPlanes(null);\n\t\t\t\t} else {\n\t\t\t\t\tresetGlobalState();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst nGlobal = renderingShadows ? 0 : numGlobalPlanes,\n\t\t\t\t\t\t\tlGlobal = nGlobal * 4;\n\t\t\t\tlet dstArray = materialProperties.clippingState || null;\n\t\t\t\tuniform.value = dstArray; // ensure unique state\n\n\t\t\t\tdstArray = projectPlanes(planes, camera, lGlobal, useCache);\n\n\t\t\t\tfor (let i = 0; i !== lGlobal; ++i) {\n\t\t\t\t\tdstArray[i] = globalState[i];\n\t\t\t\t}\n\n\t\t\t\tmaterialProperties.clippingState = dstArray;\n\t\t\t\tthis.numIntersection = clipIntersection ? this.numPlanes : 0;\n\t\t\t\tthis.numPlanes += nGlobal;\n\t\t\t}\n\t\t};\n\n\t\tfunction resetGlobalState() {\n\t\t\tif (uniform.value !== globalState) {\n\t\t\t\tuniform.value = globalState;\n\t\t\t\tuniform.needsUpdate = numGlobalPlanes > 0;\n\t\t\t}\n\n\t\t\tscope.numPlanes = numGlobalPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t}\n\n\t\tfunction projectPlanes(planes, camera, dstOffset, skipTransform) {\n\t\t\tconst nPlanes = planes !== null ? planes.length : 0;\n\t\t\tlet dstArray = null;\n\n\t\t\tif (nPlanes !== 0) {\n\t\t\t\tdstArray = uniform.value;\n\n\t\t\t\tif (skipTransform !== true || dstArray === null) {\n\t\t\t\t\tconst flatSize = dstOffset + nPlanes * 4,\n\t\t\t\t\t\t\t\tviewMatrix = camera.matrixWorldInverse;\n\t\t\t\t\tviewNormalMatrix.getNormalMatrix(viewMatrix);\n\n\t\t\t\t\tif (dstArray === null || dstArray.length < flatSize) {\n\t\t\t\t\t\tdstArray = new Float32Array(flatSize);\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0, i4 = dstOffset; i !== nPlanes; ++i, i4 += 4) {\n\t\t\t\t\t\tplane.copy(planes[i]).applyMatrix4(viewMatrix, viewNormalMatrix);\n\t\t\t\t\t\tplane.normal.toArray(dstArray, i4);\n\t\t\t\t\t\tdstArray[i4 + 3] = plane.constant;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tuniform.value = dstArray;\n\t\t\t\tuniform.needsUpdate = true;\n\t\t\t}\n\n\t\t\tscope.numPlanes = nPlanes;\n\t\t\tscope.numIntersection = 0;\n\t\t\treturn dstArray;\n\t\t}\n\t}\n\n\tfunction WebGLCubeMaps(renderer) {\n\t\tlet cubemaps = new WeakMap();\n\n\t\tfunction mapTextureMapping(texture, mapping) {\n\t\t\tif (mapping === EquirectangularReflectionMapping) {\n\t\t\t\ttexture.mapping = CubeReflectionMapping;\n\t\t\t} else if (mapping === EquirectangularRefractionMapping) {\n\t\t\t\ttexture.mapping = CubeRefractionMapping;\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction get(texture) {\n\t\t\tif (texture && texture.isTexture) {\n\t\t\t\tconst mapping = texture.mapping;\n\n\t\t\t\tif (mapping === EquirectangularReflectionMapping || mapping === EquirectangularRefractionMapping) {\n\t\t\t\t\tif (cubemaps.has(texture)) {\n\t\t\t\t\t\tconst cubemap = cubemaps.get(texture).texture;\n\t\t\t\t\t\treturn mapTextureMapping(cubemap, texture.mapping);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst image = texture.image;\n\n\t\t\t\t\t\tif (image && image.height > 0) {\n\t\t\t\t\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\t\t\t\t\tconst renderTarget = new WebGLCubeRenderTarget(image.height / 2);\n\t\t\t\t\t\t\trenderTarget.fromEquirectangularTexture(renderer, texture);\n\t\t\t\t\t\t\tcubemaps.set(texture, renderTarget);\n\t\t\t\t\t\t\trenderer.setRenderTarget(currentRenderTarget);\n\t\t\t\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\t\t\t\treturn mapTextureMapping(renderTarget.texture, texture.mapping);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// image not yet ready. try the conversion next frame\n\t\t\t\t\t\t\treturn null;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tconst cubemap = cubemaps.get(texture);\n\n\t\t\tif (cubemap !== undefined) {\n\t\t\t\tcubemaps.delete(texture);\n\t\t\t\tcubemap.dispose();\n\t\t\t}\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tcubemaps = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction WebGLExtensions(gl) {\n\t\tconst extensions = {};\n\n\t\tfunction getExtension(name) {\n\t\t\tif (extensions[name] !== undefined) {\n\t\t\t\treturn extensions[name];\n\t\t\t}\n\n\t\t\tlet extension;\n\n\t\t\tswitch (name) {\n\t\t\t\tcase 'WEBGL_depth_texture':\n\t\t\t\t\textension = gl.getExtension('WEBGL_depth_texture') || gl.getExtension('MOZ_WEBGL_depth_texture') || gl.getExtension('WEBKIT_WEBGL_depth_texture');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'EXT_texture_filter_anisotropic':\n\t\t\t\t\textension = gl.getExtension('EXT_texture_filter_anisotropic') || gl.getExtension('MOZ_EXT_texture_filter_anisotropic') || gl.getExtension('WEBKIT_EXT_texture_filter_anisotropic');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_s3tc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_s3tc') || gl.getExtension('MOZ_WEBGL_compressed_texture_s3tc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_s3tc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'WEBGL_compressed_texture_pvrtc':\n\t\t\t\t\textension = gl.getExtension('WEBGL_compressed_texture_pvrtc') || gl.getExtension('WEBKIT_WEBGL_compressed_texture_pvrtc');\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\textension = gl.getExtension(name);\n\t\t\t}\n\n\t\t\textensions[name] = extension;\n\t\t\treturn extension;\n\t\t}\n\n\t\treturn {\n\t\t\thas: function (name) {\n\t\t\t\treturn getExtension(name) !== null;\n\t\t\t},\n\t\t\tinit: function (capabilities) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\tgetExtension('EXT_color_buffer_float');\n\t\t\t\t} else {\n\t\t\t\t\tgetExtension('WEBGL_depth_texture');\n\t\t\t\t\tgetExtension('OES_texture_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float');\n\t\t\t\t\tgetExtension('OES_texture_half_float_linear');\n\t\t\t\t\tgetExtension('OES_standard_derivatives');\n\t\t\t\t\tgetExtension('OES_element_index_uint');\n\t\t\t\t\tgetExtension('OES_vertex_array_object');\n\t\t\t\t\tgetExtension('ANGLE_instanced_arrays');\n\t\t\t\t}\n\n\t\t\t\tgetExtension('OES_texture_float_linear');\n\t\t\t\tgetExtension('EXT_color_buffer_half_float');\n\t\t\t},\n\t\t\tget: function (name) {\n\t\t\t\tconst extension = getExtension(name);\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: ' + name + ' extension not supported.');\n\t\t\t\t}\n\n\t\t\t\treturn extension;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction WebGLGeometries(gl, attributes, info, bindingStates) {\n\t\tconst geometries = {};\n\t\tconst wireframeAttributes = new WeakMap();\n\n\t\tfunction onGeometryDispose(event) {\n\t\t\tconst geometry = event.target;\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\tattributes.remove(geometry.index);\n\t\t\t}\n\n\t\t\tfor (const name in geometry.attributes) {\n\t\t\t\tattributes.remove(geometry.attributes[name]);\n\t\t\t}\n\n\t\t\tgeometry.removeEventListener('dispose', onGeometryDispose);\n\t\t\tdelete geometries[geometry.id];\n\t\t\tconst attribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (attribute) {\n\t\t\t\tattributes.remove(attribute);\n\t\t\t\twireframeAttributes.delete(geometry);\n\t\t\t}\n\n\t\t\tbindingStates.releaseStatesOfGeometry(geometry);\n\n\t\t\tif (geometry.isInstancedBufferGeometry === true) {\n\t\t\t\tdelete geometry._maxInstanceCount;\n\t\t\t} //\n\n\n\t\t\tinfo.memory.geometries--;\n\t\t}\n\n\t\tfunction get(object, geometry) {\n\t\t\tif (geometries[geometry.id] === true) return geometry;\n\t\t\tgeometry.addEventListener('dispose', onGeometryDispose);\n\t\t\tgeometries[geometry.id] = true;\n\t\t\tinfo.memory.geometries++;\n\t\t\treturn geometry;\n\t\t}\n\n\t\tfunction update(geometry) {\n\t\t\tconst geometryAttributes = geometry.attributes; // Updating index buffer in VAO now. See WebGLBindingStates.\n\n\t\t\tfor (const name in geometryAttributes) {\n\t\t\t\tattributes.update(geometryAttributes[name], gl.ARRAY_BUFFER);\n\t\t\t} // morph targets\n\n\n\t\t\tconst morphAttributes = geometry.morphAttributes;\n\n\t\t\tfor (const name in morphAttributes) {\n\t\t\t\tconst array = morphAttributes[name];\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i++) {\n\t\t\t\t\tattributes.update(array[i], gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateWireframeAttribute(geometry) {\n\t\t\tconst indices = [];\n\t\t\tconst geometryIndex = geometry.index;\n\t\t\tconst geometryPosition = geometry.attributes.position;\n\t\t\tlet version = 0;\n\n\t\t\tif (geometryIndex !== null) {\n\t\t\t\tconst array = geometryIndex.array;\n\t\t\t\tversion = geometryIndex.version;\n\n\t\t\t\tfor (let i = 0, l = array.length; i < l; i += 3) {\n\t\t\t\t\tconst a = array[i + 0];\n\t\t\t\t\tconst b = array[i + 1];\n\t\t\t\t\tconst c = array[i + 2];\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst array = geometryPosition.array;\n\t\t\t\tversion = geometryPosition.version;\n\n\t\t\t\tfor (let i = 0, l = array.length / 3 - 1; i < l; i += 3) {\n\t\t\t\t\tconst a = i + 0;\n\t\t\t\t\tconst b = i + 1;\n\t\t\t\t\tconst c = i + 2;\n\t\t\t\t\tindices.push(a, b, b, c, c, a);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst attribute = new (arrayMax(indices) > 65535 ? Uint32BufferAttribute : Uint16BufferAttribute)(indices, 1);\n\t\t\tattribute.version = version; // Updating index buffer in VAO now. See WebGLBindingStates\n\t\t\t//\n\n\t\t\tconst previousAttribute = wireframeAttributes.get(geometry);\n\t\t\tif (previousAttribute) attributes.remove(previousAttribute); //\n\n\t\t\twireframeAttributes.set(geometry, attribute);\n\t\t}\n\n\t\tfunction getWireframeAttribute(geometry) {\n\t\t\tconst currentAttribute = wireframeAttributes.get(geometry);\n\n\t\t\tif (currentAttribute) {\n\t\t\t\tconst geometryIndex = geometry.index;\n\n\t\t\t\tif (geometryIndex !== null) {\n\t\t\t\t\t// if the attribute is obsolete, create a new one\n\t\t\t\t\tif (currentAttribute.version < geometryIndex.version) {\n\t\t\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tupdateWireframeAttribute(geometry);\n\t\t\t}\n\n\t\t\treturn wireframeAttributes.get(geometry);\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tupdate: update,\n\t\t\tgetWireframeAttribute: getWireframeAttribute\n\t\t};\n\t}\n\n\tfunction WebGLIndexedBufferRenderer(gl, extensions, info, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tlet mode;\n\n\t\tfunction setMode(value) {\n\t\t\tmode = value;\n\t\t}\n\n\t\tlet type, bytesPerElement;\n\n\t\tfunction setIndex(value) {\n\t\t\ttype = value.type;\n\t\t\tbytesPerElement = value.bytesPerElement;\n\t\t}\n\n\t\tfunction render(start, count) {\n\t\t\tgl.drawElements(mode, count, type, start * bytesPerElement);\n\t\t\tinfo.update(count, mode, 1);\n\t\t}\n\n\t\tfunction renderInstances(start, count, primcount) {\n\t\t\tif (primcount === 0) return;\n\t\t\tlet extension, methodName;\n\n\t\t\tif (isWebGL2) {\n\t\t\t\textension = gl;\n\t\t\t\tmethodName = 'drawElementsInstanced';\n\t\t\t} else {\n\t\t\t\textension = extensions.get('ANGLE_instanced_arrays');\n\t\t\t\tmethodName = 'drawElementsInstancedANGLE';\n\n\t\t\t\tif (extension === null) {\n\t\t\t\t\tconsole.error('THREE.WebGLIndexedBufferRenderer: using THREE.InstancedBufferGeometry but hardware does not support extension ANGLE_instanced_arrays.');\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\textension[methodName](mode, count, type, start * bytesPerElement, primcount);\n\t\t\tinfo.update(count, mode, primcount);\n\t\t} //\n\n\n\t\tthis.setMode = setMode;\n\t\tthis.setIndex = setIndex;\n\t\tthis.render = render;\n\t\tthis.renderInstances = renderInstances;\n\t}\n\n\tfunction WebGLInfo(gl) {\n\t\tconst memory = {\n\t\t\tgeometries: 0,\n\t\t\ttextures: 0\n\t\t};\n\t\tconst render = {\n\t\t\tframe: 0,\n\t\t\tcalls: 0,\n\t\t\ttriangles: 0,\n\t\t\tpoints: 0,\n\t\t\tlines: 0\n\t\t};\n\n\t\tfunction update(count, mode, instanceCount) {\n\t\t\trender.calls++;\n\n\t\t\tswitch (mode) {\n\t\t\t\tcase gl.TRIANGLES:\n\t\t\t\t\trender.triangles += instanceCount * (count / 3);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINES:\n\t\t\t\t\trender.lines += instanceCount * (count / 2);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_STRIP:\n\t\t\t\t\trender.lines += instanceCount * (count - 1);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.LINE_LOOP:\n\t\t\t\t\trender.lines += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase gl.POINTS:\n\t\t\t\t\trender.points += instanceCount * count;\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.error('THREE.WebGLInfo: Unknown draw mode:', mode);\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\tfunction reset() {\n\t\t\trender.frame++;\n\t\t\trender.calls = 0;\n\t\t\trender.triangles = 0;\n\t\t\trender.points = 0;\n\t\t\trender.lines = 0;\n\t\t}\n\n\t\treturn {\n\t\t\tmemory: memory,\n\t\t\trender: render,\n\t\t\tprograms: null,\n\t\t\tautoReset: true,\n\t\t\treset: reset,\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction numericalSort(a, b) {\n\t\treturn a[0] - b[0];\n\t}\n\n\tfunction absNumericalSort(a, b) {\n\t\treturn Math.abs(b[1]) - Math.abs(a[1]);\n\t}\n\n\tfunction WebGLMorphtargets(gl) {\n\t\tconst influencesList = {};\n\t\tconst morphInfluences = new Float32Array(8);\n\t\tconst workInfluences = [];\n\n\t\tfor (let i = 0; i < 8; i++) {\n\t\t\tworkInfluences[i] = [i, 0];\n\t\t}\n\n\t\tfunction update(object, geometry, material, program) {\n\t\t\tconst objectInfluences = object.morphTargetInfluences; // When object doesn't have morph target influences defined, we treat it as a 0-length array\n\t\t\t// This is important to make sure we set up morphTargetBaseInfluence / morphTargetInfluences\n\n\t\t\tconst length = objectInfluences === undefined ? 0 : objectInfluences.length;\n\t\t\tlet influences = influencesList[geometry.id];\n\n\t\t\tif (influences === undefined) {\n\t\t\t\t// initialise list\n\t\t\t\tinfluences = [];\n\n\t\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\t\tinfluences[i] = [i, 0];\n\t\t\t\t}\n\n\t\t\t\tinfluencesList[geometry.id] = influences;\n\t\t\t} // Collect influences\n\n\n\t\t\tfor (let i = 0; i < length; i++) {\n\t\t\t\tconst influence = influences[i];\n\t\t\t\tinfluence[0] = i;\n\t\t\t\tinfluence[1] = objectInfluences[i];\n\t\t\t}\n\n\t\t\tinfluences.sort(absNumericalSort);\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tif (i < length && influences[i][1]) {\n\t\t\t\t\tworkInfluences[i][0] = influences[i][0];\n\t\t\t\t\tworkInfluences[i][1] = influences[i][1];\n\t\t\t\t} else {\n\t\t\t\t\tworkInfluences[i][0] = Number.MAX_SAFE_INTEGER;\n\t\t\t\t\tworkInfluences[i][1] = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tworkInfluences.sort(numericalSort);\n\t\t\tconst morphTargets = material.morphTargets && geometry.morphAttributes.position;\n\t\t\tconst morphNormals = material.morphNormals && geometry.morphAttributes.normal;\n\t\t\tlet morphInfluencesSum = 0;\n\n\t\t\tfor (let i = 0; i < 8; i++) {\n\t\t\t\tconst influence = workInfluences[i];\n\t\t\t\tconst index = influence[0];\n\t\t\t\tconst value = influence[1];\n\n\t\t\t\tif (index !== Number.MAX_SAFE_INTEGER && value) {\n\t\t\t\t\tif (morphTargets && geometry.getAttribute('morphTarget' + i) !== morphTargets[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphTarget' + i, morphTargets[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.getAttribute('morphNormal' + i) !== morphNormals[index]) {\n\t\t\t\t\t\tgeometry.setAttribute('morphNormal' + i, morphNormals[index]);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = value;\n\t\t\t\t\tmorphInfluencesSum += value;\n\t\t\t\t} else {\n\t\t\t\t\tif (morphTargets && geometry.hasAttribute('morphTarget' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphTarget' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (morphNormals && geometry.hasAttribute('morphNormal' + i) === true) {\n\t\t\t\t\t\tgeometry.deleteAttribute('morphNormal' + i);\n\t\t\t\t\t}\n\n\t\t\t\t\tmorphInfluences[i] = 0;\n\t\t\t\t}\n\t\t\t} // GLSL shader uses formula baseinfluence * base + sum(target * influence)\n\t\t\t// This allows us to switch between absolute morphs and relative morphs without changing shader code\n\t\t\t// When baseinfluence = 1 - sum(influence), the above is equivalent to sum((target - base) * influence)\n\n\n\t\t\tconst morphBaseInfluence = geometry.morphTargetsRelative ? 1 : 1 - morphInfluencesSum;\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetBaseInfluence', morphBaseInfluence);\n\t\t\tprogram.getUniforms().setValue(gl, 'morphTargetInfluences', morphInfluences);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update\n\t\t};\n\t}\n\n\tfunction WebGLObjects(gl, geometries, attributes, info) {\n\t\tlet updateMap = new WeakMap();\n\n\t\tfunction update(object) {\n\t\t\tconst frame = info.render.frame;\n\t\t\tconst geometry = object.geometry;\n\t\t\tconst buffergeometry = geometries.get(object, geometry); // Update once per frame\n\n\t\t\tif (updateMap.get(buffergeometry) !== frame) {\n\t\t\t\tgeometries.update(buffergeometry);\n\t\t\t\tupdateMap.set(buffergeometry, frame);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\tif (object.hasEventListener('dispose', onInstancedMeshDispose) === false) {\n\t\t\t\t\tobject.addEventListener('dispose', onInstancedMeshDispose);\n\t\t\t\t}\n\n\t\t\t\tattributes.update(object.instanceMatrix, gl.ARRAY_BUFFER);\n\n\t\t\t\tif (object.instanceColor !== null) {\n\t\t\t\t\tattributes.update(object.instanceColor, gl.ARRAY_BUFFER);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn buffergeometry;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tupdateMap = new WeakMap();\n\t\t}\n\n\t\tfunction onInstancedMeshDispose(event) {\n\t\t\tconst instancedMesh = event.target;\n\t\t\tinstancedMesh.removeEventListener('dispose', onInstancedMeshDispose);\n\t\t\tattributes.remove(instancedMesh.instanceMatrix);\n\t\t\tif (instancedMesh.instanceColor !== null) attributes.remove(instancedMesh.instanceColor);\n\t\t}\n\n\t\treturn {\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tclass DataTexture2DArray extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture2DArray.prototype.isDataTexture2DArray = true;\n\n\tclass DataTexture3D extends Texture {\n\t\tconstructor(data = null, width = 1, height = 1, depth = 1) {\n\t\t\t// We're going to add .setXXX() methods for setting properties later.\n\t\t\t// Users can still set in DataTexture3D directly.\n\t\t\t//\n\t\t\t//\tconst texture = new THREE.DataTexture3D( data, width, height, depth );\n\t\t\t// \ttexture.anisotropy = 16;\n\t\t\t//\n\t\t\t// See #14839\n\t\t\tsuper(null);\n\t\t\tthis.image = {\n\t\t\t\tdata,\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdepth\n\t\t\t};\n\t\t\tthis.magFilter = NearestFilter;\n\t\t\tthis.minFilter = NearestFilter;\n\t\t\tthis.wrapR = ClampToEdgeWrapping;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture3D.prototype.isDataTexture3D = true;\n\n\t/**\n\t * Uniforms of a program.\n\t * Those form a tree structure with a special top-level container for the root,\n\t * which you get by calling 'new WebGLUniforms( gl, program )'.\n\t *\n\t *\n\t * Properties of inner nodes including the top-level container:\n\t *\n\t * .seq - array of nested uniforms\n\t * .map - nested uniforms by name\n\t *\n\t *\n\t * Methods of all nodes except the top-level container:\n\t *\n\t * .setValue( gl, value, [textures] )\n\t *\n\t * \t\tuploads a uniform value(s)\n\t *\t\tthe 'textures' parameter is needed for sampler uniforms\n\t *\n\t *\n\t * Static methods of the top-level container (textures factorizations):\n\t *\n\t * .upload( gl, seq, values, textures )\n\t *\n\t * \t\tsets uniforms in 'seq' to 'values[id].value'\n\t *\n\t * .seqWithValue( seq, values ) : filteredSeq\n\t *\n\t * \t\tfilters 'seq' entries with corresponding entry in values\n\t *\n\t *\n\t * Methods of the top-level container (textures factorizations):\n\t *\n\t * .setValue( gl, name, value, textures )\n\t *\n\t * \t\tsets uniform with\tname 'name' to 'value'\n\t *\n\t * .setOptional( gl, obj, prop )\n\t *\n\t * \t\tlike .set for an optional property of the object\n\t *\n\t */\n\tconst emptyTexture = new Texture();\n\tconst emptyTexture2dArray = new DataTexture2DArray();\n\tconst emptyTexture3d = new DataTexture3D();\n\tconst emptyCubeTexture = new CubeTexture(); // --- Utilities ---\n\t// Array Caches (provide typed arrays for temporary by size)\n\n\tconst arrayCacheF32 = [];\n\tconst arrayCacheI32 = []; // Float32Array caches used for uploading Matrix uniforms\n\n\tconst mat4array = new Float32Array(16);\n\tconst mat3array = new Float32Array(9);\n\tconst mat2array = new Float32Array(4); // Flattening for arrays of vectors and matrices\n\n\tfunction flatten(array, nBlocks, blockSize) {\n\t\tconst firstElem = array[0];\n\t\tif (firstElem <= 0 || firstElem > 0) return array; // unoptimized: ! isNaN( firstElem )\n\t\t// see http://jacksondunstan.com/articles/983\n\n\t\tconst n = nBlocks * blockSize;\n\t\tlet r = arrayCacheF32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Float32Array(n);\n\t\t\tarrayCacheF32[n] = r;\n\t\t}\n\n\t\tif (nBlocks !== 0) {\n\t\t\tfirstElem.toArray(r, 0);\n\n\t\t\tfor (let i = 1, offset = 0; i !== nBlocks; ++i) {\n\t\t\t\toffset += blockSize;\n\t\t\t\tarray[i].toArray(r, offset);\n\t\t\t}\n\t\t}\n\n\t\treturn r;\n\t}\n\n\tfunction arraysEqual(a, b) {\n\t\tif (a.length !== b.length) return false;\n\n\t\tfor (let i = 0, l = a.length; i < l; i++) {\n\t\t\tif (a[i] !== b[i]) return false;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction copyArray(a, b) {\n\t\tfor (let i = 0, l = b.length; i < l; i++) {\n\t\t\ta[i] = b[i];\n\t\t}\n\t} // Texture unit allocation\n\n\n\tfunction allocTexUnits(textures, n) {\n\t\tlet r = arrayCacheI32[n];\n\n\t\tif (r === undefined) {\n\t\t\tr = new Int32Array(n);\n\t\t\tarrayCacheI32[n] = r;\n\t\t}\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\tr[i] = textures.allocateTextureUnit();\n\t\t}\n\n\t\treturn r;\n\t} // --- Setters ---\n\t// Note: Defining these methods externally, because they come in a bunch\n\t// and this way their names minify.\n\t// Single scalar\n\n\n\tfunction setValueV1f(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1f(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single float vector (from flat array or THREE.VectorN)\n\n\n\tfunction setValueV2f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y) {\n\t\t\t\tgl.uniform2f(this.addr, v.x, v.y);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform2fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV3f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z) {\n\t\t\t\tgl.uniform3f(this.addr, v.x, v.y, v.z);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t}\n\t\t} else if (v.r !== undefined) {\n\t\t\tif (cache[0] !== v.r || cache[1] !== v.g || cache[2] !== v.b) {\n\t\t\t\tgl.uniform3f(this.addr, v.r, v.g, v.b);\n\t\t\t\tcache[0] = v.r;\n\t\t\t\tcache[1] = v.g;\n\t\t\t\tcache[2] = v.b;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform3fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t}\n\n\tfunction setValueV4f(gl, v) {\n\t\tconst cache = this.cache;\n\n\t\tif (v.x !== undefined) {\n\t\t\tif (cache[0] !== v.x || cache[1] !== v.y || cache[2] !== v.z || cache[3] !== v.w) {\n\t\t\t\tgl.uniform4f(this.addr, v.x, v.y, v.z, v.w);\n\t\t\t\tcache[0] = v.x;\n\t\t\t\tcache[1] = v.y;\n\t\t\t\tcache[2] = v.z;\n\t\t\t\tcache[3] = v.w;\n\t\t\t}\n\t\t} else {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniform4fv(this.addr, v);\n\t\t\tcopyArray(cache, v);\n\t\t}\n\t} // Single matrix (from flat array or THREE.MatrixN)\n\n\n\tfunction setValueM2(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix2fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat2array.set(elements);\n\t\t\tgl.uniformMatrix2fv(this.addr, false, mat2array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM3(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix3fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat3array.set(elements);\n\t\t\tgl.uniformMatrix3fv(this.addr, false, mat3array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t}\n\n\tfunction setValueM4(gl, v) {\n\t\tconst cache = this.cache;\n\t\tconst elements = v.elements;\n\n\t\tif (elements === undefined) {\n\t\t\tif (arraysEqual(cache, v)) return;\n\t\t\tgl.uniformMatrix4fv(this.addr, false, v);\n\t\t\tcopyArray(cache, v);\n\t\t} else {\n\t\t\tif (arraysEqual(cache, elements)) return;\n\t\t\tmat4array.set(elements);\n\t\t\tgl.uniformMatrix4fv(this.addr, false, mat4array);\n\t\t\tcopyArray(cache, elements);\n\t\t}\n\t} // Single integer / boolean\n\n\n\tfunction setValueV1i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1i(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single integer / boolean vector (from flat array)\n\n\n\tfunction setValueV2i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4i(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4iv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single unsigned integer\n\n\n\tfunction setValueV1ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (cache[0] === v) return;\n\t\tgl.uniform1ui(this.addr, v);\n\t\tcache[0] = v;\n\t} // Single unsigned integer vector (from flat array)\n\n\n\tfunction setValueV2ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform2uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV3ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform3uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t}\n\n\tfunction setValueV4ui(gl, v) {\n\t\tconst cache = this.cache;\n\t\tif (arraysEqual(cache, v)) return;\n\t\tgl.uniform4uiv(this.addr, v);\n\t\tcopyArray(cache, v);\n\t} // Single texture (2D / Cube)\n\n\n\tfunction setValueT1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTexture2D(v || emptyTexture, unit);\n\t}\n\n\tfunction setValueT3D1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture3D(v || emptyTexture3d, unit);\n\t}\n\n\tfunction setValueT6(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.safeSetTextureCube(v || emptyCubeTexture, unit);\n\t}\n\n\tfunction setValueT2DArray1(gl, v, textures) {\n\t\tconst cache = this.cache;\n\t\tconst unit = textures.allocateTextureUnit();\n\n\t\tif (cache[0] !== unit) {\n\t\t\tgl.uniform1i(this.addr, unit);\n\t\t\tcache[0] = unit;\n\t\t}\n\n\t\ttextures.setTexture2DArray(v || emptyTexture2dArray, unit);\n\t} // Helper to pick the right setter for the singular case\n\n\n\tfunction getSingularSetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1f;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2f;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3f;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4f;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1i;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2i;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3i;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4i;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1ui;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2ui;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3ui;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4ui;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1;\n\n\t\t\tcase 0x8b5f: // SAMPLER_3D\n\n\t\t\tcase 0x8dcb: // INT_SAMPLER_3D\n\n\t\t\tcase 0x8dd3:\n\t\t\t\t// UNSIGNED_INT_SAMPLER_3D\n\t\t\t\treturn setValueT3D1;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6;\n\n\t\t\tcase 0x8dc1: // SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dcf: // INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dd7: // UNSIGNED_INT_SAMPLER_2D_ARRAY\n\n\t\t\tcase 0x8dc4:\n\t\t\t\t// SAMPLER_2D_ARRAY_SHADOW\n\t\t\t\treturn setValueT2DArray1;\n\t\t}\n\t} // Array of scalars\n\n\n\tfunction setValueV1fArray(gl, v) {\n\t\tgl.uniform1fv(this.addr, v);\n\t} // Array of vectors (from flat array or array of THREE.VectorN)\n\n\n\tfunction setValueV2fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 2);\n\t\tgl.uniform2fv(this.addr, data);\n\t}\n\n\tfunction setValueV3fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 3);\n\t\tgl.uniform3fv(this.addr, data);\n\t}\n\n\tfunction setValueV4fArray(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniform4fv(this.addr, data);\n\t} // Array of matrices (from flat array or array of THREE.MatrixN)\n\n\n\tfunction setValueM2Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 4);\n\t\tgl.uniformMatrix2fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM3Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 9);\n\t\tgl.uniformMatrix3fv(this.addr, false, data);\n\t}\n\n\tfunction setValueM4Array(gl, v) {\n\t\tconst data = flatten(v, this.size, 16);\n\t\tgl.uniformMatrix4fv(this.addr, false, data);\n\t} // Array of integer / boolean\n\n\n\tfunction setValueV1iArray(gl, v) {\n\t\tgl.uniform1iv(this.addr, v);\n\t} // Array of integer / boolean vectors (from flat array)\n\n\n\tfunction setValueV2iArray(gl, v) {\n\t\tgl.uniform2iv(this.addr, v);\n\t}\n\n\tfunction setValueV3iArray(gl, v) {\n\t\tgl.uniform3iv(this.addr, v);\n\t}\n\n\tfunction setValueV4iArray(gl, v) {\n\t\tgl.uniform4iv(this.addr, v);\n\t} // Array of unsigned integer\n\n\n\tfunction setValueV1uiArray(gl, v) {\n\t\tgl.uniform1uiv(this.addr, v);\n\t} // Array of unsigned integer vectors (from flat array)\n\n\n\tfunction setValueV2uiArray(gl, v) {\n\t\tgl.uniform2uiv(this.addr, v);\n\t}\n\n\tfunction setValueV3uiArray(gl, v) {\n\t\tgl.uniform3uiv(this.addr, v);\n\t}\n\n\tfunction setValueV4uiArray(gl, v) {\n\t\tgl.uniform4uiv(this.addr, v);\n\t} // Array of textures (2D / Cube)\n\n\n\tfunction setValueT1Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTexture2D(v[i] || emptyTexture, units[i]);\n\t\t}\n\t}\n\n\tfunction setValueT6Array(gl, v, textures) {\n\t\tconst n = v.length;\n\t\tconst units = allocTexUnits(textures, n);\n\t\tgl.uniform1iv(this.addr, units);\n\n\t\tfor (let i = 0; i !== n; ++i) {\n\t\t\ttextures.safeSetTextureCube(v[i] || emptyCubeTexture, units[i]);\n\t\t}\n\t} // Helper to pick the right setter for a pure (bottom-level) array\n\n\n\tfunction getPureArraySetter(type) {\n\t\tswitch (type) {\n\t\t\tcase 0x1406:\n\t\t\t\treturn setValueV1fArray;\n\t\t\t// FLOAT\n\n\t\t\tcase 0x8b50:\n\t\t\t\treturn setValueV2fArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b51:\n\t\t\t\treturn setValueV3fArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b52:\n\t\t\t\treturn setValueV4fArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5a:\n\t\t\t\treturn setValueM2Array;\n\t\t\t// _MAT2\n\n\t\t\tcase 0x8b5b:\n\t\t\t\treturn setValueM3Array;\n\t\t\t// _MAT3\n\n\t\t\tcase 0x8b5c:\n\t\t\t\treturn setValueM4Array;\n\t\t\t// _MAT4\n\n\t\t\tcase 0x1404:\n\t\t\tcase 0x8b56:\n\t\t\t\treturn setValueV1iArray;\n\t\t\t// INT, BOOL\n\n\t\t\tcase 0x8b53:\n\t\t\tcase 0x8b57:\n\t\t\t\treturn setValueV2iArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8b54:\n\t\t\tcase 0x8b58:\n\t\t\t\treturn setValueV3iArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8b55:\n\t\t\tcase 0x8b59:\n\t\t\t\treturn setValueV4iArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x1405:\n\t\t\t\treturn setValueV1uiArray;\n\t\t\t// UINT\n\n\t\t\tcase 0x8dc6:\n\t\t\t\treturn setValueV2uiArray;\n\t\t\t// _VEC2\n\n\t\t\tcase 0x8dc7:\n\t\t\t\treturn setValueV3uiArray;\n\t\t\t// _VEC3\n\n\t\t\tcase 0x8dc8:\n\t\t\t\treturn setValueV4uiArray;\n\t\t\t// _VEC4\n\n\t\t\tcase 0x8b5e: // SAMPLER_2D\n\n\t\t\tcase 0x8d66: // SAMPLER_EXTERNAL_OES\n\n\t\t\tcase 0x8dca: // INT_SAMPLER_2D\n\n\t\t\tcase 0x8dd2: // UNSIGNED_INT_SAMPLER_2D\n\n\t\t\tcase 0x8b62:\n\t\t\t\t// SAMPLER_2D_SHADOW\n\t\t\t\treturn setValueT1Array;\n\n\t\t\tcase 0x8b60: // SAMPLER_CUBE\n\n\t\t\tcase 0x8dcc: // INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dd4: // UNSIGNED_INT_SAMPLER_CUBE\n\n\t\t\tcase 0x8dc5:\n\t\t\t\t// SAMPLER_CUBE_SHADOW\n\t\t\t\treturn setValueT6Array;\n\t\t}\n\t} // --- Uniform Classes ---\n\n\n\tfunction SingleUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.setValue = getSingularSetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tfunction PureArrayUniform(id, activeInfo, addr) {\n\t\tthis.id = id;\n\t\tthis.addr = addr;\n\t\tthis.cache = [];\n\t\tthis.size = activeInfo.size;\n\t\tthis.setValue = getPureArraySetter(activeInfo.type); // this.path = activeInfo.name; // DEBUG\n\t}\n\n\tPureArrayUniform.prototype.updateCache = function (data) {\n\t\tconst cache = this.cache;\n\n\t\tif (data instanceof Float32Array && cache.length !== data.length) {\n\t\t\tthis.cache = new Float32Array(data.length);\n\t\t}\n\n\t\tcopyArray(cache, data);\n\t};\n\n\tfunction StructuredUniform(id) {\n\t\tthis.id = id;\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t}\n\n\tStructuredUniform.prototype.setValue = function (gl, value, textures) {\n\t\tconst seq = this.seq;\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tu.setValue(gl, value[u.id], textures);\n\t\t}\n\t}; // --- Top-level ---\n\t// Parser - builds up the property tree from the path strings\n\n\n\tconst RePathPart = /(\\w+)(\\])?(\\[|\\.)?/g; // extracts\n\t// \t- the identifier (member name or array index)\n\t//\t- followed by an optional right bracket (found when array index)\n\t//\t- followed by an optional left bracket or dot (type of subscript)\n\t//\n\t// Note: These portions can be read in a non-overlapping fashion and\n\t// allow straightforward parsing of the hierarchy that WebGL encodes\n\t// in the uniform names.\n\n\tfunction addUniform(container, uniformObject) {\n\t\tcontainer.seq.push(uniformObject);\n\t\tcontainer.map[uniformObject.id] = uniformObject;\n\t}\n\n\tfunction parseUniform(activeInfo, addr, container) {\n\t\tconst path = activeInfo.name,\n\t\t\t\t\tpathLength = path.length; // reset RegExp object, because of the early exit of a previous run\n\n\t\tRePathPart.lastIndex = 0;\n\n\t\twhile (true) {\n\t\t\tconst match = RePathPart.exec(path),\n\t\t\t\t\t\tmatchEnd = RePathPart.lastIndex;\n\t\t\tlet id = match[1];\n\t\t\tconst idIsIndex = match[2] === ']',\n\t\t\t\t\t\tsubscript = match[3];\n\t\t\tif (idIsIndex) id = id | 0; // convert to integer\n\n\t\t\tif (subscript === undefined || subscript === '[' && matchEnd + 2 === pathLength) {\n\t\t\t\t// bare name or \"pure\" bottom-level array \"[0]\" suffix\n\t\t\t\taddUniform(container, subscript === undefined ? new SingleUniform(id, activeInfo, addr) : new PureArrayUniform(id, activeInfo, addr));\n\t\t\t\tbreak;\n\t\t\t} else {\n\t\t\t\t// step into inner node / create it in case it doesn't exist\n\t\t\t\tconst map = container.map;\n\t\t\t\tlet next = map[id];\n\n\t\t\t\tif (next === undefined) {\n\t\t\t\t\tnext = new StructuredUniform(id);\n\t\t\t\t\taddUniform(container, next);\n\t\t\t\t}\n\n\t\t\t\tcontainer = next;\n\t\t\t}\n\t\t}\n\t} // Root Container\n\n\n\tfunction WebGLUniforms(gl, program) {\n\t\tthis.seq = [];\n\t\tthis.map = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\n\n\t\tfor (let i = 0; i < n; ++i) {\n\t\t\tconst info = gl.getActiveUniform(program, i),\n\t\t\t\t\t\taddr = gl.getUniformLocation(program, info.name);\n\t\t\tparseUniform(info, addr, this);\n\t\t}\n\t}\n\n\tWebGLUniforms.prototype.setValue = function (gl, name, value, textures) {\n\t\tconst u = this.map[name];\n\t\tif (u !== undefined) u.setValue(gl, value, textures);\n\t};\n\n\tWebGLUniforms.prototype.setOptional = function (gl, object, name) {\n\t\tconst v = object[name];\n\t\tif (v !== undefined) this.setValue(gl, name, v);\n\t}; // Static interface\n\n\n\tWebGLUniforms.upload = function (gl, seq, values, textures) {\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i],\n\t\t\t\t\t\tv = values[u.id];\n\n\t\t\tif (v.needsUpdate !== false) {\n\t\t\t\t// note: always updating when .needsUpdate is undefined\n\t\t\t\tu.setValue(gl, v.value, textures);\n\t\t\t}\n\t\t}\n\t};\n\n\tWebGLUniforms.seqWithValue = function (seq, values) {\n\t\tconst r = [];\n\n\t\tfor (let i = 0, n = seq.length; i !== n; ++i) {\n\t\t\tconst u = seq[i];\n\t\t\tif (u.id in values) r.push(u);\n\t\t}\n\n\t\treturn r;\n\t};\n\n\tfunction WebGLShader(gl, type, string) {\n\t\tconst shader = gl.createShader(type);\n\t\tgl.shaderSource(shader, string);\n\t\tgl.compileShader(shader);\n\t\treturn shader;\n\t}\n\n\tlet programIdCount = 0;\n\n\tfunction addLineNumbers(string) {\n\t\tconst lines = string.split('\\n');\n\n\t\tfor (let i = 0; i < lines.length; i++) {\n\t\t\tlines[i] = i + 1 + ': ' + lines[i];\n\t\t}\n\n\t\treturn lines.join('\\n');\n\t}\n\n\tfunction getEncodingComponents(encoding) {\n\t\tswitch (encoding) {\n\t\t\tcase LinearEncoding:\n\t\t\t\treturn ['Linear', '( value )'];\n\n\t\t\tcase sRGBEncoding:\n\t\t\t\treturn ['sRGB', '( value )'];\n\n\t\t\tcase RGBEEncoding:\n\t\t\t\treturn ['RGBE', '( value )'];\n\n\t\t\tcase RGBM7Encoding:\n\t\t\t\treturn ['RGBM', '( value, 7.0 )'];\n\n\t\t\tcase RGBM16Encoding:\n\t\t\t\treturn ['RGBM', '( value, 16.0 )'];\n\n\t\t\tcase RGBDEncoding:\n\t\t\t\treturn ['RGBD', '( value, 256.0 )'];\n\n\t\t\tcase GammaEncoding:\n\t\t\t\treturn ['Gamma', '( value, float( GAMMA_FACTOR ) )'];\n\n\t\t\tcase LogLuvEncoding:\n\t\t\t\treturn ['LogLuv', '( value )'];\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported encoding:', encoding);\n\t\t\t\treturn ['Linear', '( value )'];\n\t\t}\n\t}\n\n\tfunction getShaderErrors(gl, shader, type) {\n\t\tconst status = gl.getShaderParameter(shader, gl.COMPILE_STATUS);\n\t\tconst log = gl.getShaderInfoLog(shader).trim();\n\t\tif (status && log === '') return ''; // --enable-privileged-webgl-extension\n\t\t// console.log( '**' + type + '**', gl.getExtension( 'WEBGL_debug_shaders' ).getTranslatedShaderSource( shader ) );\n\n\t\tconst source = gl.getShaderSource(shader);\n\t\treturn 'THREE.WebGLShader: gl.getShaderInfoLog() ' + type + '\\n' + log + addLineNumbers(source);\n\t}\n\n\tfunction getTexelDecodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return ' + components[0] + 'ToLinear' + components[1] + '; }';\n\t}\n\n\tfunction getTexelEncodingFunction(functionName, encoding) {\n\t\tconst components = getEncodingComponents(encoding);\n\t\treturn 'vec4 ' + functionName + '( vec4 value ) { return LinearTo' + components[0] + components[1] + '; }';\n\t}\n\n\tfunction getToneMappingFunction(functionName, toneMapping) {\n\t\tlet toneMappingName;\n\n\t\tswitch (toneMapping) {\n\t\t\tcase LinearToneMapping:\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t\t\tbreak;\n\n\t\t\tcase ReinhardToneMapping:\n\t\t\t\ttoneMappingName = 'Reinhard';\n\t\t\t\tbreak;\n\n\t\t\tcase CineonToneMapping:\n\t\t\t\ttoneMappingName = 'OptimizedCineon';\n\t\t\t\tbreak;\n\n\t\t\tcase ACESFilmicToneMapping:\n\t\t\t\ttoneMappingName = 'ACESFilmic';\n\t\t\t\tbreak;\n\n\t\t\tcase CustomToneMapping:\n\t\t\t\ttoneMappingName = 'Custom';\n\t\t\t\tbreak;\n\n\t\t\tdefault:\n\t\t\t\tconsole.warn('THREE.WebGLProgram: Unsupported toneMapping:', toneMapping);\n\t\t\t\ttoneMappingName = 'Linear';\n\t\t}\n\n\t\treturn 'vec3 ' + functionName + '( vec3 color ) { return ' + toneMappingName + 'ToneMapping( color ); }';\n\t}\n\n\tfunction generateExtensions(parameters) {\n\t\tconst chunks = [parameters.extensionDerivatives || parameters.envMapCubeUV || parameters.bumpMap || parameters.tangentSpaceNormalMap || parameters.clearcoatNormalMap || parameters.flatShading || parameters.shaderID === 'physical' ? '#extension GL_OES_standard_derivatives : enable' : '', (parameters.extensionFragDepth || parameters.logarithmicDepthBuffer) && parameters.rendererExtensionFragDepth ? '#extension GL_EXT_frag_depth : enable' : '', parameters.extensionDrawBuffers && parameters.rendererExtensionDrawBuffers ? '#extension GL_EXT_draw_buffers : require' : '', (parameters.extensionShaderTextureLOD || parameters.envMap || parameters.transmission > 0.0) && parameters.rendererExtensionShaderTextureLod ? '#extension GL_EXT_shader_texture_lod : enable' : ''];\n\t\treturn chunks.filter(filterEmptyLine).join('\\n');\n\t}\n\n\tfunction generateDefines(defines) {\n\t\tconst chunks = [];\n\n\t\tfor (const name in defines) {\n\t\t\tconst value = defines[name];\n\t\t\tif (value === false) continue;\n\t\t\tchunks.push('#define ' + name + ' ' + value);\n\t\t}\n\n\t\treturn chunks.join('\\n');\n\t}\n\n\tfunction fetchAttributeLocations(gl, program) {\n\t\tconst attributes = {};\n\t\tconst n = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\n\n\t\tfor (let i = 0; i < n; i++) {\n\t\t\tconst info = gl.getActiveAttrib(program, i);\n\t\t\tconst name = info.name; // console.log( 'THREE.WebGLProgram: ACTIVE VERTEX ATTRIBUTE:', name, i );\n\n\t\t\tattributes[name] = gl.getAttribLocation(program, name);\n\t\t}\n\n\t\treturn attributes;\n\t}\n\n\tfunction filterEmptyLine(string) {\n\t\treturn string !== '';\n\t}\n\n\tfunction replaceLightNums(string, parameters) {\n\t\treturn string.replace(/NUM_DIR_LIGHTS/g, parameters.numDirLights).replace(/NUM_SPOT_LIGHTS/g, parameters.numSpotLights).replace(/NUM_RECT_AREA_LIGHTS/g, parameters.numRectAreaLights).replace(/NUM_POINT_LIGHTS/g, parameters.numPointLights).replace(/NUM_HEMI_LIGHTS/g, parameters.numHemiLights).replace(/NUM_DIR_LIGHT_SHADOWS/g, parameters.numDirLightShadows).replace(/NUM_SPOT_LIGHT_SHADOWS/g, parameters.numSpotLightShadows).replace(/NUM_POINT_LIGHT_SHADOWS/g, parameters.numPointLightShadows);\n\t}\n\n\tfunction replaceClippingPlaneNums(string, parameters) {\n\t\treturn string.replace(/NUM_CLIPPING_PLANES/g, parameters.numClippingPlanes).replace(/UNION_CLIPPING_PLANES/g, parameters.numClippingPlanes - parameters.numClipIntersection);\n\t} // Resolve Includes\n\n\n\tconst includePattern = /^[ \\t]*#include +<([\\w\\d./]+)>/gm;\n\n\tfunction resolveIncludes(string) {\n\t\treturn string.replace(includePattern, includeReplacer);\n\t}\n\n\tfunction includeReplacer(match, include) {\n\t\tconst string = ShaderChunk[include];\n\n\t\tif (string === undefined) {\n\t\t\tthrow new Error('Can not resolve #include <' + include + '>');\n\t\t}\n\n\t\treturn resolveIncludes(string);\n\t} // Unroll Loops\n\n\n\tconst deprecatedUnrollLoopPattern = /#pragma unroll_loop[\\s]+?for \\( int i \\= (\\d+)\\; i < (\\d+)\\; i \\+\\+ \\) \\{([\\s\\S]+?)(?=\\})\\}/g;\n\tconst unrollLoopPattern = /#pragma unroll_loop_start\\s+for\\s*\\(\\s*int\\s+i\\s*=\\s*(\\d+)\\s*;\\s*i\\s*<\\s*(\\d+)\\s*;\\s*i\\s*\\+\\+\\s*\\)\\s*{([\\s\\S]+?)}\\s+#pragma unroll_loop_end/g;\n\n\tfunction unrollLoops(string) {\n\t\treturn string.replace(unrollLoopPattern, loopReplacer).replace(deprecatedUnrollLoopPattern, deprecatedLoopReplacer);\n\t}\n\n\tfunction deprecatedLoopReplacer(match, start, end, snippet) {\n\t\tconsole.warn('WebGLProgram: #pragma unroll_loop shader syntax is deprecated. Please use #pragma unroll_loop_start syntax instead.');\n\t\treturn loopReplacer(match, start, end, snippet);\n\t}\n\n\tfunction loopReplacer(match, start, end, snippet) {\n\t\tlet string = '';\n\n\t\tfor (let i = parseInt(start); i < parseInt(end); i++) {\n\t\t\tstring += snippet.replace(/\\[\\s*i\\s*\\]/g, '[ ' + i + ' ]').replace(/UNROLLED_LOOP_INDEX/g, i);\n\t\t}\n\n\t\treturn string;\n\t} //\n\n\n\tfunction generatePrecision(parameters) {\n\t\tlet precisionstring = 'precision ' + parameters.precision + ' float;\\nprecision ' + parameters.precision + ' int;';\n\n\t\tif (parameters.precision === 'highp') {\n\t\t\tprecisionstring += '\\n#define HIGH_PRECISION';\n\t\t} else if (parameters.precision === 'mediump') {\n\t\t\tprecisionstring += '\\n#define MEDIUM_PRECISION';\n\t\t} else if (parameters.precision === 'lowp') {\n\t\t\tprecisionstring += '\\n#define LOW_PRECISION';\n\t\t}\n\n\t\treturn precisionstring;\n\t}\n\n\tfunction generateShadowMapTypeDefine(parameters) {\n\t\tlet shadowMapTypeDefine = 'SHADOWMAP_TYPE_BASIC';\n\n\t\tif (parameters.shadowMapType === PCFShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF';\n\t\t} else if (parameters.shadowMapType === PCFSoftShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_PCF_SOFT';\n\t\t} else if (parameters.shadowMapType === VSMShadowMap) {\n\t\t\tshadowMapTypeDefine = 'SHADOWMAP_TYPE_VSM';\n\t\t}\n\n\t\treturn shadowMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapTypeDefine(parameters) {\n\t\tlet envMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeReflectionMapping:\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase CubeUVReflectionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapTypeDefine = 'ENVMAP_TYPE_CUBE_UV';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapTypeDefine;\n\t}\n\n\tfunction generateEnvMapModeDefine(parameters) {\n\t\tlet envMapModeDefine = 'ENVMAP_MODE_REFLECTION';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.envMapMode) {\n\t\t\t\tcase CubeRefractionMapping:\n\t\t\t\tcase CubeUVRefractionMapping:\n\t\t\t\t\tenvMapModeDefine = 'ENVMAP_MODE_REFRACTION';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapModeDefine;\n\t}\n\n\tfunction generateEnvMapBlendingDefine(parameters) {\n\t\tlet envMapBlendingDefine = 'ENVMAP_BLENDING_NONE';\n\n\t\tif (parameters.envMap) {\n\t\t\tswitch (parameters.combine) {\n\t\t\t\tcase MultiplyOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MULTIPLY';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase MixOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_MIX';\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase AddOperation:\n\t\t\t\t\tenvMapBlendingDefine = 'ENVMAP_BLENDING_ADD';\n\t\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\n\t\treturn envMapBlendingDefine;\n\t}\n\n\tfunction WebGLProgram(renderer, cacheKey, parameters, bindingStates) {\n\t\tconst gl = renderer.getContext();\n\t\tconst defines = parameters.defines;\n\t\tlet vertexShader = parameters.vertexShader;\n\t\tlet fragmentShader = parameters.fragmentShader;\n\t\tconst shadowMapTypeDefine = generateShadowMapTypeDefine(parameters);\n\t\tconst envMapTypeDefine = generateEnvMapTypeDefine(parameters);\n\t\tconst envMapModeDefine = generateEnvMapModeDefine(parameters);\n\t\tconst envMapBlendingDefine = generateEnvMapBlendingDefine(parameters);\n\t\tconst gammaFactorDefine = renderer.gammaFactor > 0 ? renderer.gammaFactor : 1.0;\n\t\tconst customExtensions = parameters.isWebGL2 ? '' : generateExtensions(parameters);\n\t\tconst customDefines = generateDefines(defines);\n\t\tconst program = gl.createProgram();\n\t\tlet prefixVertex, prefixFragment;\n\t\tlet versionString = parameters.glslVersion ? '#version ' + parameters.glslVersion + '\\n' : '';\n\n\t\tif (parameters.isRawShaderMaterial) {\n\t\t\tprefixVertex = [customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixVertex.length > 0) {\n\t\t\t\tprefixVertex += '\\n';\n\t\t\t}\n\n\t\t\tprefixFragment = [customExtensions, customDefines].filter(filterEmptyLine).join('\\n');\n\n\t\t\tif (prefixFragment.length > 0) {\n\t\t\t\tprefixFragment += '\\n';\n\t\t\t}\n\t\t} else {\n\t\t\tprefixVertex = [generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.instancing ? '#define USE_INSTANCING' : '', parameters.instancingColor ? '#define USE_INSTANCING_COLOR' : '', parameters.supportsVertexTextures ? '#define VERTEX_TEXTURES' : '', '#define GAMMA_FACTOR ' + gammaFactorDefine, '#define MAX_BONES ' + parameters.maxBones, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.displacementMap && parameters.supportsVertexTextures ? '#define USE_DISPLACEMENTMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.skinning ? '#define USE_SKINNING' : '', parameters.useVertexTexture ? '#define BONE_TEXTURE' : '', parameters.morphTargets ? '#define USE_MORPHTARGETS' : '', parameters.morphNormals && parameters.flatShading === false ? '#define USE_MORPHNORMALS' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.sizeAttenuation ? '#define USE_SIZEATTENUATION' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', 'uniform mat4 modelMatrix;', 'uniform mat4 modelViewMatrix;', 'uniform mat4 projectionMatrix;', 'uniform mat4 viewMatrix;', 'uniform mat3 normalMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', '#ifdef USE_INSTANCING', '\tattribute mat4 instanceMatrix;', '#endif', '#ifdef USE_INSTANCING_COLOR', '\tattribute vec3 instanceColor;', '#endif', 'attribute vec3 position;', 'attribute vec3 normal;', 'attribute vec2 uv;', '#ifdef USE_TANGENT', '\tattribute vec4 tangent;', '#endif', '#if defined( USE_COLOR_ALPHA )', '\tattribute vec4 color;', '#elif defined( USE_COLOR )', '\tattribute vec3 color;', '#endif', '#ifdef USE_MORPHTARGETS', '\tattribute vec3 morphTarget0;', '\tattribute vec3 morphTarget1;', '\tattribute vec3 morphTarget2;', '\tattribute vec3 morphTarget3;', '\t#ifdef USE_MORPHNORMALS', '\t\tattribute vec3 morphNormal0;', '\t\tattribute vec3 morphNormal1;', '\t\tattribute vec3 morphNormal2;', '\t\tattribute vec3 morphNormal3;', '\t#else', '\t\tattribute vec3 morphTarget4;', '\t\tattribute vec3 morphTarget5;', '\t\tattribute vec3 morphTarget6;', '\t\tattribute vec3 morphTarget7;', '\t#endif', '#endif', '#ifdef USE_SKINNING', '\tattribute vec4 skinIndex;', '\tattribute vec4 skinWeight;', '#endif', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t\tprefixFragment = [customExtensions, generatePrecision(parameters), '#define SHADER_NAME ' + parameters.shaderName, customDefines, parameters.alphaTest ? '#define ALPHATEST ' + parameters.alphaTest + (parameters.alphaTest % 1 ? '' : '.0') : '', // add '.0' if integer\n\t\t\t'#define GAMMA_FACTOR ' + gammaFactorDefine, parameters.useFog && parameters.fog ? '#define USE_FOG' : '', parameters.useFog && parameters.fogExp2 ? '#define FOG_EXP2' : '', parameters.map ? '#define USE_MAP' : '', parameters.matcap ? '#define USE_MATCAP' : '', parameters.envMap ? '#define USE_ENVMAP' : '', parameters.envMap ? '#define ' + envMapTypeDefine : '', parameters.envMap ? '#define ' + envMapModeDefine : '', parameters.envMap ? '#define ' + envMapBlendingDefine : '', parameters.lightMap ? '#define USE_LIGHTMAP' : '', parameters.aoMap ? '#define USE_AOMAP' : '', parameters.emissiveMap ? '#define USE_EMISSIVEMAP' : '', parameters.bumpMap ? '#define USE_BUMPMAP' : '', parameters.normalMap ? '#define USE_NORMALMAP' : '', parameters.normalMap && parameters.objectSpaceNormalMap ? '#define OBJECTSPACE_NORMALMAP' : '', parameters.normalMap && parameters.tangentSpaceNormalMap ? '#define TANGENTSPACE_NORMALMAP' : '', parameters.clearcoatMap ? '#define USE_CLEARCOATMAP' : '', parameters.clearcoatRoughnessMap ? '#define USE_CLEARCOAT_ROUGHNESSMAP' : '', parameters.clearcoatNormalMap ? '#define USE_CLEARCOAT_NORMALMAP' : '', parameters.specularMap ? '#define USE_SPECULARMAP' : '', parameters.roughnessMap ? '#define USE_ROUGHNESSMAP' : '', parameters.metalnessMap ? '#define USE_METALNESSMAP' : '', parameters.alphaMap ? '#define USE_ALPHAMAP' : '', parameters.sheen ? '#define USE_SHEEN' : '', parameters.transmission ? '#define USE_TRANSMISSION' : '', parameters.transmissionMap ? '#define USE_TRANSMISSIONMAP' : '', parameters.thicknessMap ? '#define USE_THICKNESSMAP' : '', parameters.vertexTangents ? '#define USE_TANGENT' : '', parameters.vertexColors || parameters.instancingColor ? '#define USE_COLOR' : '', parameters.vertexAlphas ? '#define USE_COLOR_ALPHA' : '', parameters.vertexUvs ? '#define USE_UV' : '', parameters.uvsVertexOnly ? '#define UVS_VERTEX_ONLY' : '', parameters.gradientMap ? '#define USE_GRADIENTMAP' : '', parameters.flatShading ? '#define FLAT_SHADED' : '', parameters.doubleSided ? '#define DOUBLE_SIDED' : '', parameters.flipSided ? '#define FLIP_SIDED' : '', parameters.shadowMapEnabled ? '#define USE_SHADOWMAP' : '', parameters.shadowMapEnabled ? '#define ' + shadowMapTypeDefine : '', parameters.premultipliedAlpha ? '#define PREMULTIPLIED_ALPHA' : '', parameters.physicallyCorrectLights ? '#define PHYSICALLY_CORRECT_LIGHTS' : '', parameters.logarithmicDepthBuffer ? '#define USE_LOGDEPTHBUF' : '', parameters.logarithmicDepthBuffer && parameters.rendererExtensionFragDepth ? '#define USE_LOGDEPTHBUF_EXT' : '', (parameters.extensionShaderTextureLOD || parameters.envMap) && parameters.rendererExtensionShaderTextureLod ? '#define TEXTURE_LOD_EXT' : '', 'uniform mat4 viewMatrix;', 'uniform vec3 cameraPosition;', 'uniform bool isOrthographic;', parameters.toneMapping !== NoToneMapping ? '#define TONE_MAPPING' : '', parameters.toneMapping !== NoToneMapping ? ShaderChunk['tonemapping_pars_fragment'] : '', // this code is required here because it is used by the toneMapping() function defined below\n\t\t\tparameters.toneMapping !== NoToneMapping ? getToneMappingFunction('toneMapping', parameters.toneMapping) : '', parameters.dithering ? '#define DITHERING' : '', ShaderChunk['encodings_pars_fragment'], // this code is required here because it is used by the various encoding/decoding function defined below\n\t\t\tparameters.map ? getTexelDecodingFunction('mapTexelToLinear', parameters.mapEncoding) : '', parameters.matcap ? getTexelDecodingFunction('matcapTexelToLinear', parameters.matcapEncoding) : '', parameters.envMap ? getTexelDecodingFunction('envMapTexelToLinear', parameters.envMapEncoding) : '', parameters.emissiveMap ? getTexelDecodingFunction('emissiveMapTexelToLinear', parameters.emissiveMapEncoding) : '', parameters.lightMap ? getTexelDecodingFunction('lightMapTexelToLinear', parameters.lightMapEncoding) : '', getTexelEncodingFunction('linearToOutputTexel', parameters.outputEncoding), parameters.depthPacking ? '#define DEPTH_PACKING ' + parameters.depthPacking : '', '\\n'].filter(filterEmptyLine).join('\\n');\n\t\t}\n\n\t\tvertexShader = resolveIncludes(vertexShader);\n\t\tvertexShader = replaceLightNums(vertexShader, parameters);\n\t\tvertexShader = replaceClippingPlaneNums(vertexShader, parameters);\n\t\tfragmentShader = resolveIncludes(fragmentShader);\n\t\tfragmentShader = replaceLightNums(fragmentShader, parameters);\n\t\tfragmentShader = replaceClippingPlaneNums(fragmentShader, parameters);\n\t\tvertexShader = unrollLoops(vertexShader);\n\t\tfragmentShader = unrollLoops(fragmentShader);\n\n\t\tif (parameters.isWebGL2 && parameters.isRawShaderMaterial !== true) {\n\t\t\t// GLSL 3.0 conversion for built-in materials and ShaderMaterial\n\t\t\tversionString = '#version 300 es\\n';\n\t\t\tprefixVertex = ['#define attribute in', '#define varying out', '#define texture2D texture'].join('\\n') + '\\n' + prefixVertex;\n\t\t\tprefixFragment = ['#define varying in', parameters.glslVersion === GLSL3 ? '' : 'out highp vec4 pc_fragColor;', parameters.glslVersion === GLSL3 ? '' : '#define gl_FragColor pc_fragColor', '#define gl_FragDepthEXT gl_FragDepth', '#define texture2D texture', '#define textureCube texture', '#define texture2DProj textureProj', '#define texture2DLodEXT textureLod', '#define texture2DProjLodEXT textureProjLod', '#define textureCubeLodEXT textureLod', '#define texture2DGradEXT textureGrad', '#define texture2DProjGradEXT textureProjGrad', '#define textureCubeGradEXT textureGrad'].join('\\n') + '\\n' + prefixFragment;\n\t\t}\n\n\t\tconst vertexGlsl = versionString + prefixVertex + vertexShader;\n\t\tconst fragmentGlsl = versionString + prefixFragment + fragmentShader; // console.log( '*VERTEX*', vertexGlsl );\n\t\t// console.log( '*FRAGMENT*', fragmentGlsl );\n\n\t\tconst glVertexShader = WebGLShader(gl, gl.VERTEX_SHADER, vertexGlsl);\n\t\tconst glFragmentShader = WebGLShader(gl, gl.FRAGMENT_SHADER, fragmentGlsl);\n\t\tgl.attachShader(program, glVertexShader);\n\t\tgl.attachShader(program, glFragmentShader); // Force a particular attribute to index 0.\n\n\t\tif (parameters.index0AttributeName !== undefined) {\n\t\t\tgl.bindAttribLocation(program, 0, parameters.index0AttributeName);\n\t\t} else if (parameters.morphTargets === true) {\n\t\t\t// programs with morphTargets displace position out of attribute 0\n\t\t\tgl.bindAttribLocation(program, 0, 'position');\n\t\t}\n\n\t\tgl.linkProgram(program); // check for link errors\n\n\t\tif (renderer.debug.checkShaderErrors) {\n\t\t\tconst programLog = gl.getProgramInfoLog(program).trim();\n\t\t\tconst vertexLog = gl.getShaderInfoLog(glVertexShader).trim();\n\t\t\tconst fragmentLog = gl.getShaderInfoLog(glFragmentShader).trim();\n\t\t\tlet runnable = true;\n\t\t\tlet haveDiagnostics = true;\n\n\t\t\tif (gl.getProgramParameter(program, gl.LINK_STATUS) === false) {\n\t\t\t\trunnable = false;\n\t\t\t\tconst vertexErrors = getShaderErrors(gl, glVertexShader, 'vertex');\n\t\t\t\tconst fragmentErrors = getShaderErrors(gl, glFragmentShader, 'fragment');\n\t\t\t\tconsole.error('THREE.WebGLProgram: shader error: ', gl.getError(), 'gl.VALIDATE_STATUS', gl.getProgramParameter(program, gl.VALIDATE_STATUS), 'gl.getProgramInfoLog', programLog, vertexErrors, fragmentErrors);\n\t\t\t} else if (programLog !== '') {\n\t\t\t\tconsole.warn('THREE.WebGLProgram: gl.getProgramInfoLog()', programLog);\n\t\t\t} else if (vertexLog === '' || fragmentLog === '') {\n\t\t\t\thaveDiagnostics = false;\n\t\t\t}\n\n\t\t\tif (haveDiagnostics) {\n\t\t\t\tthis.diagnostics = {\n\t\t\t\t\trunnable: runnable,\n\t\t\t\t\tprogramLog: programLog,\n\t\t\t\t\tvertexShader: {\n\t\t\t\t\t\tlog: vertexLog,\n\t\t\t\t\t\tprefix: prefixVertex\n\t\t\t\t\t},\n\t\t\t\t\tfragmentShader: {\n\t\t\t\t\t\tlog: fragmentLog,\n\t\t\t\t\t\tprefix: prefixFragment\n\t\t\t\t\t}\n\t\t\t\t};\n\t\t\t}\n\t\t} // Clean up\n\t\t// Crashes in iOS9 and iOS10. #18402\n\t\t// gl.detachShader( program, glVertexShader );\n\t\t// gl.detachShader( program, glFragmentShader );\n\n\n\t\tgl.deleteShader(glVertexShader);\n\t\tgl.deleteShader(glFragmentShader); // set up caching for uniform locations\n\n\t\tlet cachedUniforms;\n\n\t\tthis.getUniforms = function () {\n\t\t\tif (cachedUniforms === undefined) {\n\t\t\t\tcachedUniforms = new WebGLUniforms(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedUniforms;\n\t\t}; // set up caching for attribute locations\n\n\n\t\tlet cachedAttributes;\n\n\t\tthis.getAttributes = function () {\n\t\t\tif (cachedAttributes === undefined) {\n\t\t\t\tcachedAttributes = fetchAttributeLocations(gl, program);\n\t\t\t}\n\n\t\t\treturn cachedAttributes;\n\t\t}; // free resource\n\n\n\t\tthis.destroy = function () {\n\t\t\tbindingStates.releaseStatesOfProgram(this);\n\t\t\tgl.deleteProgram(program);\n\t\t\tthis.program = undefined;\n\t\t}; //\n\n\n\t\tthis.name = parameters.shaderName;\n\t\tthis.id = programIdCount++;\n\t\tthis.cacheKey = cacheKey;\n\t\tthis.usedTimes = 1;\n\t\tthis.program = program;\n\t\tthis.vertexShader = glVertexShader;\n\t\tthis.fragmentShader = glFragmentShader;\n\t\treturn this;\n\t}\n\n\tfunction WebGLPrograms(renderer, cubemaps, extensions, capabilities, bindingStates, clipping) {\n\t\tconst programs = [];\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst logarithmicDepthBuffer = capabilities.logarithmicDepthBuffer;\n\t\tconst floatVertexTextures = capabilities.floatVertexTextures;\n\t\tconst maxVertexUniforms = capabilities.maxVertexUniforms;\n\t\tconst vertexTextures = capabilities.vertexTextures;\n\t\tlet precision = capabilities.precision;\n\t\tconst shaderIDs = {\n\t\t\tMeshDepthMaterial: 'depth',\n\t\t\tMeshDistanceMaterial: 'distanceRGBA',\n\t\t\tMeshNormalMaterial: 'normal',\n\t\t\tMeshBasicMaterial: 'basic',\n\t\t\tMeshLambertMaterial: 'lambert',\n\t\t\tMeshPhongMaterial: 'phong',\n\t\t\tMeshToonMaterial: 'toon',\n\t\t\tMeshStandardMaterial: 'physical',\n\t\t\tMeshPhysicalMaterial: 'physical',\n\t\t\tMeshMatcapMaterial: 'matcap',\n\t\t\tLineBasicMaterial: 'basic',\n\t\t\tLineDashedMaterial: 'dashed',\n\t\t\tPointsMaterial: 'points',\n\t\t\tShadowMaterial: 'shadow',\n\t\t\tSpriteMaterial: 'sprite'\n\t\t};\n\t\tconst parameterNames = ['precision', 'isWebGL2', 'supportsVertexTextures', 'outputEncoding', 'instancing', 'instancingColor', 'map', 'mapEncoding', 'matcap', 'matcapEncoding', 'envMap', 'envMapMode', 'envMapEncoding', 'envMapCubeUV', 'lightMap', 'lightMapEncoding', 'aoMap', 'emissiveMap', 'emissiveMapEncoding', 'bumpMap', 'normalMap', 'objectSpaceNormalMap', 'tangentSpaceNormalMap', 'clearcoatMap', 'clearcoatRoughnessMap', 'clearcoatNormalMap', 'displacementMap', 'specularMap', 'roughnessMap', 'metalnessMap', 'gradientMap', 'alphaMap', 'combine', 'vertexColors', 'vertexAlphas', 'vertexTangents', 'vertexUvs', 'uvsVertexOnly', 'fog', 'useFog', 'fogExp2', 'flatShading', 'sizeAttenuation', 'logarithmicDepthBuffer', 'skinning', 'maxBones', 'useVertexTexture', 'morphTargets', 'morphNormals', 'premultipliedAlpha', 'numDirLights', 'numPointLights', 'numSpotLights', 'numHemiLights', 'numRectAreaLights', 'numDirLightShadows', 'numPointLightShadows', 'numSpotLightShadows', 'shadowMapEnabled', 'shadowMapType', 'toneMapping', 'physicallyCorrectLights', 'alphaTest', 'doubleSided', 'flipSided', 'numClippingPlanes', 'numClipIntersection', 'depthPacking', 'dithering', 'sheen', 'transmission', 'transmissionMap', 'thicknessMap'];\n\n\t\tfunction getMaxBones(object) {\n\t\t\tconst skeleton = object.skeleton;\n\t\t\tconst bones = skeleton.bones;\n\n\t\t\tif (floatVertexTextures) {\n\t\t\t\treturn 1024;\n\t\t\t} else {\n\t\t\t\t// default for when object is not specified\n\t\t\t\t// ( for example when prebuilding shader to be used with multiple objects )\n\t\t\t\t//\n\t\t\t\t//\t- leave some extra space for other uniforms\n\t\t\t\t//\t- limit here is ANGLE's 254 max uniform vectors\n\t\t\t\t//\t\t(up to 54 should be safe)\n\t\t\t\tconst nVertexUniforms = maxVertexUniforms;\n\t\t\t\tconst nVertexMatrices = Math.floor((nVertexUniforms - 20) / 4);\n\t\t\t\tconst maxBones = Math.min(nVertexMatrices, bones.length);\n\n\t\t\t\tif (maxBones < bones.length) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Skeleton has ' + bones.length + ' bones. This GPU supports ' + maxBones + '.');\n\t\t\t\t\treturn 0;\n\t\t\t\t}\n\n\t\t\t\treturn maxBones;\n\t\t\t}\n\t\t}\n\n\t\tfunction getTextureEncodingFromMap(map) {\n\t\t\tlet encoding;\n\n\t\t\tif (map && map.isTexture) {\n\t\t\t\tencoding = map.encoding;\n\t\t\t} else if (map && map.isWebGLRenderTarget) {\n\t\t\t\tconsole.warn('THREE.WebGLPrograms.getTextureEncodingFromMap: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\tencoding = map.texture.encoding;\n\t\t\t} else {\n\t\t\t\tencoding = LinearEncoding;\n\t\t\t}\n\n\t\t\treturn encoding;\n\t\t}\n\n\t\tfunction getParameters(material, lights, shadows, scene, object) {\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst shaderID = shaderIDs[material.type]; // heuristics to create shader parameters according to lights in the scene\n\t\t\t// (not to blow over maxLights budget)\n\n\t\t\tconst maxBones = object.isSkinnedMesh ? getMaxBones(object) : 0;\n\n\t\t\tif (material.precision !== null) {\n\t\t\t\tprecision = capabilities.getMaxPrecision(material.precision);\n\n\t\t\t\tif (precision !== material.precision) {\n\t\t\t\t\tconsole.warn('THREE.WebGLProgram.getParameters:', material.precision, 'not supported, using', precision, 'instead.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet vertexShader, fragmentShader;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tvertexShader = shader.vertexShader;\n\t\t\t\tfragmentShader = shader.fragmentShader;\n\t\t\t} else {\n\t\t\t\tvertexShader = material.vertexShader;\n\t\t\t\tfragmentShader = material.fragmentShader;\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = renderer.getRenderTarget();\n\t\t\tconst parameters = {\n\t\t\t\tisWebGL2: isWebGL2,\n\t\t\t\tshaderID: shaderID,\n\t\t\t\tshaderName: material.type,\n\t\t\t\tvertexShader: vertexShader,\n\t\t\t\tfragmentShader: fragmentShader,\n\t\t\t\tdefines: material.defines,\n\t\t\t\tisRawShaderMaterial: material.isRawShaderMaterial === true,\n\t\t\t\tglslVersion: material.glslVersion,\n\t\t\t\tprecision: precision,\n\t\t\t\tinstancing: object.isInstancedMesh === true,\n\t\t\t\tinstancingColor: object.isInstancedMesh === true && object.instanceColor !== null,\n\t\t\t\tsupportsVertexTextures: vertexTextures,\n\t\t\t\toutputEncoding: currentRenderTarget !== null ? getTextureEncodingFromMap(currentRenderTarget.texture) : renderer.outputEncoding,\n\t\t\t\tmap: !!material.map,\n\t\t\t\tmapEncoding: getTextureEncodingFromMap(material.map),\n\t\t\t\tmatcap: !!material.matcap,\n\t\t\t\tmatcapEncoding: getTextureEncodingFromMap(material.matcap),\n\t\t\t\tenvMap: !!envMap,\n\t\t\t\tenvMapMode: envMap && envMap.mapping,\n\t\t\t\tenvMapEncoding: getTextureEncodingFromMap(envMap),\n\t\t\t\tenvMapCubeUV: !!envMap && (envMap.mapping === CubeUVReflectionMapping || envMap.mapping === CubeUVRefractionMapping),\n\t\t\t\tlightMap: !!material.lightMap,\n\t\t\t\tlightMapEncoding: getTextureEncodingFromMap(material.lightMap),\n\t\t\t\taoMap: !!material.aoMap,\n\t\t\t\temissiveMap: !!material.emissiveMap,\n\t\t\t\temissiveMapEncoding: getTextureEncodingFromMap(material.emissiveMap),\n\t\t\t\tbumpMap: !!material.bumpMap,\n\t\t\t\tnormalMap: !!material.normalMap,\n\t\t\t\tobjectSpaceNormalMap: material.normalMapType === ObjectSpaceNormalMap,\n\t\t\t\ttangentSpaceNormalMap: material.normalMapType === TangentSpaceNormalMap,\n\t\t\t\tclearcoatMap: !!material.clearcoatMap,\n\t\t\t\tclearcoatRoughnessMap: !!material.clearcoatRoughnessMap,\n\t\t\t\tclearcoatNormalMap: !!material.clearcoatNormalMap,\n\t\t\t\tdisplacementMap: !!material.displacementMap,\n\t\t\t\troughnessMap: !!material.roughnessMap,\n\t\t\t\tmetalnessMap: !!material.metalnessMap,\n\t\t\t\tspecularMap: !!material.specularMap,\n\t\t\t\talphaMap: !!material.alphaMap,\n\t\t\t\tgradientMap: !!material.gradientMap,\n\t\t\t\tsheen: !!material.sheen,\n\t\t\t\ttransmission: !!material.transmission,\n\t\t\t\ttransmissionMap: !!material.transmissionMap,\n\t\t\t\tthicknessMap: !!material.thicknessMap,\n\t\t\t\tcombine: material.combine,\n\t\t\t\tvertexTangents: material.normalMap && material.vertexTangents,\n\t\t\t\tvertexColors: material.vertexColors,\n\t\t\t\tvertexAlphas: material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4,\n\t\t\t\tvertexUvs: !!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatMap || !!material.clearcoatRoughnessMap || !!material.clearcoatNormalMap || !!material.displacementMap || !!material.transmission || !!material.transmissionMap || !!material.thicknessMap,\n\t\t\t\tuvsVertexOnly: !(!!material.map || !!material.bumpMap || !!material.normalMap || !!material.specularMap || !!material.alphaMap || !!material.emissiveMap || !!material.roughnessMap || !!material.metalnessMap || !!material.clearcoatNormalMap || !!material.transmission || !!material.transmissionMap || !!material.thicknessMap) && !!material.displacementMap,\n\t\t\t\tfog: !!fog,\n\t\t\t\tuseFog: material.fog,\n\t\t\t\tfogExp2: fog && fog.isFogExp2,\n\t\t\t\tflatShading: !!material.flatShading,\n\t\t\t\tsizeAttenuation: material.sizeAttenuation,\n\t\t\t\tlogarithmicDepthBuffer: logarithmicDepthBuffer,\n\t\t\t\tskinning: object.isSkinnedMesh === true && maxBones > 0,\n\t\t\t\tmaxBones: maxBones,\n\t\t\t\tuseVertexTexture: floatVertexTextures,\n\t\t\t\tmorphTargets: material.morphTargets,\n\t\t\t\tmorphNormals: material.morphNormals,\n\t\t\t\tnumDirLights: lights.directional.length,\n\t\t\t\tnumPointLights: lights.point.length,\n\t\t\t\tnumSpotLights: lights.spot.length,\n\t\t\t\tnumRectAreaLights: lights.rectArea.length,\n\t\t\t\tnumHemiLights: lights.hemi.length,\n\t\t\t\tnumDirLightShadows: lights.directionalShadowMap.length,\n\t\t\t\tnumPointLightShadows: lights.pointShadowMap.length,\n\t\t\t\tnumSpotLightShadows: lights.spotShadowMap.length,\n\t\t\t\tnumClippingPlanes: clipping.numPlanes,\n\t\t\t\tnumClipIntersection: clipping.numIntersection,\n\t\t\t\tdithering: material.dithering,\n\t\t\t\tshadowMapEnabled: renderer.shadowMap.enabled && shadows.length > 0,\n\t\t\t\tshadowMapType: renderer.shadowMap.type,\n\t\t\t\ttoneMapping: material.toneMapped ? renderer.toneMapping : NoToneMapping,\n\t\t\t\tphysicallyCorrectLights: renderer.physicallyCorrectLights,\n\t\t\t\tpremultipliedAlpha: material.premultipliedAlpha,\n\t\t\t\talphaTest: material.alphaTest,\n\t\t\t\tdoubleSided: material.side === DoubleSide,\n\t\t\t\tflipSided: material.side === BackSide,\n\t\t\t\tdepthPacking: material.depthPacking !== undefined ? material.depthPacking : false,\n\t\t\t\tindex0AttributeName: material.index0AttributeName,\n\t\t\t\textensionDerivatives: material.extensions && material.extensions.derivatives,\n\t\t\t\textensionFragDepth: material.extensions && material.extensions.fragDepth,\n\t\t\t\textensionDrawBuffers: material.extensions && material.extensions.drawBuffers,\n\t\t\t\textensionShaderTextureLOD: material.extensions && material.extensions.shaderTextureLOD,\n\t\t\t\trendererExtensionFragDepth: isWebGL2 || extensions.has('EXT_frag_depth'),\n\t\t\t\trendererExtensionDrawBuffers: isWebGL2 || extensions.has('WEBGL_draw_buffers'),\n\t\t\t\trendererExtensionShaderTextureLod: isWebGL2 || extensions.has('EXT_shader_texture_lod'),\n\t\t\t\tcustomProgramCacheKey: material.customProgramCacheKey()\n\t\t\t};\n\t\t\treturn parameters;\n\t\t}\n\n\t\tfunction getProgramCacheKey(parameters) {\n\t\t\tconst array = [];\n\n\t\t\tif (parameters.shaderID) {\n\t\t\t\tarray.push(parameters.shaderID);\n\t\t\t} else {\n\t\t\t\tarray.push(parameters.fragmentShader);\n\t\t\t\tarray.push(parameters.vertexShader);\n\t\t\t}\n\n\t\t\tif (parameters.defines !== undefined) {\n\t\t\t\tfor (const name in parameters.defines) {\n\t\t\t\t\tarray.push(name);\n\t\t\t\t\tarray.push(parameters.defines[name]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (parameters.isRawShaderMaterial === false) {\n\t\t\t\tfor (let i = 0; i < parameterNames.length; i++) {\n\t\t\t\t\tarray.push(parameters[parameterNames[i]]);\n\t\t\t\t}\n\n\t\t\t\tarray.push(renderer.outputEncoding);\n\t\t\t\tarray.push(renderer.gammaFactor);\n\t\t\t}\n\n\t\t\tarray.push(parameters.customProgramCacheKey);\n\t\t\treturn array.join();\n\t\t}\n\n\t\tfunction getUniforms(material) {\n\t\t\tconst shaderID = shaderIDs[material.type];\n\t\t\tlet uniforms;\n\n\t\t\tif (shaderID) {\n\t\t\t\tconst shader = ShaderLib[shaderID];\n\t\t\t\tuniforms = UniformsUtils.clone(shader.uniforms);\n\t\t\t} else {\n\t\t\t\tuniforms = material.uniforms;\n\t\t\t}\n\n\t\t\treturn uniforms;\n\t\t}\n\n\t\tfunction acquireProgram(parameters, cacheKey) {\n\t\t\tlet program; // Check if code has been already compiled\n\n\t\t\tfor (let p = 0, pl = programs.length; p < pl; p++) {\n\t\t\t\tconst preexistingProgram = programs[p];\n\n\t\t\t\tif (preexistingProgram.cacheKey === cacheKey) {\n\t\t\t\t\tprogram = preexistingProgram;\n\t\t\t\t\t++program.usedTimes;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (program === undefined) {\n\t\t\t\tprogram = new WebGLProgram(renderer, cacheKey, parameters, bindingStates);\n\t\t\t\tprograms.push(program);\n\t\t\t}\n\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction releaseProgram(program) {\n\t\t\tif (--program.usedTimes === 0) {\n\t\t\t\t// Remove from unordered set\n\t\t\t\tconst i = programs.indexOf(program);\n\t\t\t\tprograms[i] = programs[programs.length - 1];\n\t\t\t\tprograms.pop(); // Free WebGL resources\n\n\t\t\t\tprogram.destroy();\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tgetParameters: getParameters,\n\t\t\tgetProgramCacheKey: getProgramCacheKey,\n\t\t\tgetUniforms: getUniforms,\n\t\t\tacquireProgram: acquireProgram,\n\t\t\treleaseProgram: releaseProgram,\n\t\t\t// Exposed for resource monitoring & error feedback via renderer.info:\n\t\t\tprograms: programs\n\t\t};\n\t}\n\n\tfunction WebGLProperties() {\n\t\tlet properties = new WeakMap();\n\n\t\tfunction get(object) {\n\t\t\tlet map = properties.get(object);\n\n\t\t\tif (map === undefined) {\n\t\t\t\tmap = {};\n\t\t\t\tproperties.set(object, map);\n\t\t\t}\n\n\t\t\treturn map;\n\t\t}\n\n\t\tfunction remove(object) {\n\t\t\tproperties.delete(object);\n\t\t}\n\n\t\tfunction update(object, key, value) {\n\t\t\tproperties.get(object)[key] = value;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tproperties = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tremove: remove,\n\t\t\tupdate: update,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction painterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.program !== b.program) {\n\t\t\treturn a.program.id - b.program.id;\n\t\t} else if (a.material.id !== b.material.id) {\n\t\t\treturn a.material.id - b.material.id;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn a.z - b.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction reversePainterSortStable(a, b) {\n\t\tif (a.groupOrder !== b.groupOrder) {\n\t\t\treturn a.groupOrder - b.groupOrder;\n\t\t} else if (a.renderOrder !== b.renderOrder) {\n\t\t\treturn a.renderOrder - b.renderOrder;\n\t\t} else if (a.z !== b.z) {\n\t\t\treturn b.z - a.z;\n\t\t} else {\n\t\t\treturn a.id - b.id;\n\t\t}\n\t}\n\n\tfunction WebGLRenderList(properties) {\n\t\tconst renderItems = [];\n\t\tlet renderItemsIndex = 0;\n\t\tconst opaque = [];\n\t\tconst transmissive = [];\n\t\tconst transparent = [];\n\t\tconst defaultProgram = {\n\t\t\tid: -1\n\t\t};\n\n\t\tfunction init() {\n\t\t\trenderItemsIndex = 0;\n\t\t\topaque.length = 0;\n\t\t\ttransmissive.length = 0;\n\t\t\ttransparent.length = 0;\n\t\t}\n\n\t\tfunction getNextRenderItem(object, geometry, material, groupOrder, z, group) {\n\t\t\tlet renderItem = renderItems[renderItemsIndex];\n\t\t\tconst materialProperties = properties.get(material);\n\n\t\t\tif (renderItem === undefined) {\n\t\t\t\trenderItem = {\n\t\t\t\t\tid: object.id,\n\t\t\t\t\tobject: object,\n\t\t\t\t\tgeometry: geometry,\n\t\t\t\t\tmaterial: material,\n\t\t\t\t\tprogram: materialProperties.program || defaultProgram,\n\t\t\t\t\tgroupOrder: groupOrder,\n\t\t\t\t\trenderOrder: object.renderOrder,\n\t\t\t\t\tz: z,\n\t\t\t\t\tgroup: group\n\t\t\t\t};\n\t\t\t\trenderItems[renderItemsIndex] = renderItem;\n\t\t\t} else {\n\t\t\t\trenderItem.id = object.id;\n\t\t\t\trenderItem.object = object;\n\t\t\t\trenderItem.geometry = geometry;\n\t\t\t\trenderItem.material = material;\n\t\t\t\trenderItem.program = materialProperties.program || defaultProgram;\n\t\t\t\trenderItem.groupOrder = groupOrder;\n\t\t\t\trenderItem.renderOrder = object.renderOrder;\n\t\t\t\trenderItem.z = z;\n\t\t\t\trenderItem.group = group;\n\t\t\t}\n\n\t\t\trenderItemsIndex++;\n\t\t\treturn renderItem;\n\t\t}\n\n\t\tfunction push(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.push(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.push(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.push(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction unshift(object, geometry, material, groupOrder, z, group) {\n\t\t\tconst renderItem = getNextRenderItem(object, geometry, material, groupOrder, z, group);\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\ttransmissive.unshift(renderItem);\n\t\t\t} else if (material.transparent === true) {\n\t\t\t\ttransparent.unshift(renderItem);\n\t\t\t} else {\n\t\t\t\topaque.unshift(renderItem);\n\t\t\t}\n\t\t}\n\n\t\tfunction sort(customOpaqueSort, customTransparentSort) {\n\t\t\tif (opaque.length > 1) opaque.sort(customOpaqueSort || painterSortStable);\n\t\t\tif (transmissive.length > 1) transmissive.sort(customTransparentSort || reversePainterSortStable);\n\t\t\tif (transparent.length > 1) transparent.sort(customTransparentSort || reversePainterSortStable);\n\t\t}\n\n\t\tfunction finish() {\n\t\t\t// Clear references from inactive renderItems in the list\n\t\t\tfor (let i = renderItemsIndex, il = renderItems.length; i < il; i++) {\n\t\t\t\tconst renderItem = renderItems[i];\n\t\t\t\tif (renderItem.id === null) break;\n\t\t\t\trenderItem.id = null;\n\t\t\t\trenderItem.object = null;\n\t\t\t\trenderItem.geometry = null;\n\t\t\t\trenderItem.material = null;\n\t\t\t\trenderItem.program = null;\n\t\t\t\trenderItem.group = null;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\topaque: opaque,\n\t\t\ttransmissive: transmissive,\n\t\t\ttransparent: transparent,\n\t\t\tinit: init,\n\t\t\tpush: push,\n\t\t\tunshift: unshift,\n\t\t\tfinish: finish,\n\t\t\tsort: sort\n\t\t};\n\t}\n\n\tfunction WebGLRenderLists(properties) {\n\t\tlet lists = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth) {\n\t\t\tlet list;\n\n\t\t\tif (lists.has(scene) === false) {\n\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\tlists.set(scene, [list]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= lists.get(scene).length) {\n\t\t\t\t\tlist = new WebGLRenderList(properties);\n\t\t\t\t\tlists.get(scene).push(list);\n\t\t\t\t} else {\n\t\t\t\t\tlist = lists.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn list;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\tlists = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\tfunction UniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tconeCos: 0,\n\t\t\t\t\t\t\tpenumbraCos: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tdistance: 0,\n\t\t\t\t\t\t\tdecay: 0\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tdirection: new Vector3(),\n\t\t\t\t\t\t\tskyColor: new Color(),\n\t\t\t\t\t\t\tgroundColor: new Color()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tcolor: new Color(),\n\t\t\t\t\t\t\tposition: new Vector3(),\n\t\t\t\t\t\t\thalfWidth: new Vector3(),\n\t\t\t\t\t\t\thalfHeight: new Vector3()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tfunction ShadowUniformsCache() {\n\t\tconst lights = {};\n\t\treturn {\n\t\t\tget: function (light) {\n\t\t\t\tif (lights[light.id] !== undefined) {\n\t\t\t\t\treturn lights[light.id];\n\t\t\t\t}\n\n\t\t\t\tlet uniforms;\n\n\t\t\t\tswitch (light.type) {\n\t\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'SpotLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2()\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'PointLight':\n\t\t\t\t\t\tuniforms = {\n\t\t\t\t\t\t\tshadowBias: 0,\n\t\t\t\t\t\t\tshadowNormalBias: 0,\n\t\t\t\t\t\t\tshadowRadius: 1,\n\t\t\t\t\t\t\tshadowMapSize: new Vector2(),\n\t\t\t\t\t\t\tshadowCameraNear: 1,\n\t\t\t\t\t\t\tshadowCameraFar: 1000\n\t\t\t\t\t\t};\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t// TODO (abelnation): set RectAreaLight shadow uniforms\n\t\t\t\t}\n\n\t\t\t\tlights[light.id] = uniforms;\n\t\t\t\treturn uniforms;\n\t\t\t}\n\t\t};\n\t}\n\n\tlet nextVersion = 0;\n\n\tfunction shadowCastingLightsFirst(lightA, lightB) {\n\t\treturn (lightB.castShadow ? 1 : 0) - (lightA.castShadow ? 1 : 0);\n\t}\n\n\tfunction WebGLLights(extensions, capabilities) {\n\t\tconst cache = new UniformsCache();\n\t\tconst shadowCache = ShadowUniformsCache();\n\t\tconst state = {\n\t\t\tversion: 0,\n\t\t\thash: {\n\t\t\t\tdirectionalLength: -1,\n\t\t\t\tpointLength: -1,\n\t\t\t\tspotLength: -1,\n\t\t\t\trectAreaLength: -1,\n\t\t\t\themiLength: -1,\n\t\t\t\tnumDirectionalShadows: -1,\n\t\t\t\tnumPointShadows: -1,\n\t\t\t\tnumSpotShadows: -1\n\t\t\t},\n\t\t\tambient: [0, 0, 0],\n\t\t\tprobe: [],\n\t\t\tdirectional: [],\n\t\t\tdirectionalShadow: [],\n\t\t\tdirectionalShadowMap: [],\n\t\t\tdirectionalShadowMatrix: [],\n\t\t\tspot: [],\n\t\t\tspotShadow: [],\n\t\t\tspotShadowMap: [],\n\t\t\tspotShadowMatrix: [],\n\t\t\trectArea: [],\n\t\t\trectAreaLTC1: null,\n\t\t\trectAreaLTC2: null,\n\t\t\tpoint: [],\n\t\t\tpointShadow: [],\n\t\t\tpointShadowMap: [],\n\t\t\tpointShadowMatrix: [],\n\t\t\themi: []\n\t\t};\n\n\t\tfor (let i = 0; i < 9; i++) state.probe.push(new Vector3());\n\n\t\tconst vector3 = new Vector3();\n\t\tconst matrix4 = new Matrix4();\n\t\tconst matrix42 = new Matrix4();\n\n\t\tfunction setup(lights) {\n\t\t\tlet r = 0,\n\t\t\t\t\tg = 0,\n\t\t\t\t\tb = 0;\n\n\t\t\tfor (let i = 0; i < 9; i++) state.probe[i].set(0, 0, 0);\n\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tlet numDirectionalShadows = 0;\n\t\t\tlet numPointShadows = 0;\n\t\t\tlet numSpotShadows = 0;\n\t\t\tlights.sort(shadowCastingLightsFirst);\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst color = light.color;\n\t\t\t\tconst intensity = light.intensity;\n\t\t\t\tconst distance = light.distance;\n\t\t\t\tconst shadowMap = light.shadow && light.shadow.map ? light.shadow.map.texture : null;\n\n\t\t\t\tif (light.isAmbientLight) {\n\t\t\t\t\tr += color.r * intensity;\n\t\t\t\t\tg += color.g * intensity;\n\t\t\t\t\tb += color.b * intensity;\n\t\t\t\t} else if (light.isLightProbe) {\n\t\t\t\t\tfor (let j = 0; j < 9; j++) {\n\t\t\t\t\t\tstate.probe[j].addScaledVector(light.sh.coefficients[j], intensity);\n\t\t\t\t\t}\n\t\t\t\t} else if (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.directionalShadow[directionalLength] = shadowUniforms;\n\t\t\t\t\t\tstate.directionalShadowMap[directionalLength] = shadowMap;\n\t\t\t\t\t\tstate.directionalShadowMatrix[directionalLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumDirectionalShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.directional[directionalLength] = uniforms;\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.distance = distance;\n\t\t\t\t\tuniforms.coneCos = Math.cos(light.angle);\n\t\t\t\t\tuniforms.penumbraCos = Math.cos(light.angle * (1 - light.penumbra));\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tstate.spotShadow[spotLength] = shadowUniforms;\n\t\t\t\t\t\tstate.spotShadowMap[spotLength] = shadowMap;\n\t\t\t\t\t\tstate.spotShadowMatrix[spotLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumSpotShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.spot[spotLength] = uniforms;\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = cache.get(light); // (a) intensity is the total visible light emitted\n\t\t\t\t\t//uniforms.color.copy( color ).multiplyScalar( intensity / ( light.width * light.height * Math.PI ) );\n\t\t\t\t\t// (b) intensity is the brightness of the light\n\n\t\t\t\t\tuniforms.color.copy(color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tstate.rectArea[rectAreaLength] = uniforms;\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.color.copy(light.color).multiplyScalar(light.intensity);\n\t\t\t\t\tuniforms.distance = light.distance;\n\t\t\t\t\tuniforms.decay = light.decay;\n\n\t\t\t\t\tif (light.castShadow) {\n\t\t\t\t\t\tconst shadow = light.shadow;\n\t\t\t\t\t\tconst shadowUniforms = shadowCache.get(light);\n\t\t\t\t\t\tshadowUniforms.shadowBias = shadow.bias;\n\t\t\t\t\t\tshadowUniforms.shadowNormalBias = shadow.normalBias;\n\t\t\t\t\t\tshadowUniforms.shadowRadius = shadow.radius;\n\t\t\t\t\t\tshadowUniforms.shadowMapSize = shadow.mapSize;\n\t\t\t\t\t\tshadowUniforms.shadowCameraNear = shadow.camera.near;\n\t\t\t\t\t\tshadowUniforms.shadowCameraFar = shadow.camera.far;\n\t\t\t\t\t\tstate.pointShadow[pointLength] = shadowUniforms;\n\t\t\t\t\t\tstate.pointShadowMap[pointLength] = shadowMap;\n\t\t\t\t\t\tstate.pointShadowMatrix[pointLength] = light.shadow.matrix;\n\t\t\t\t\t\tnumPointShadows++;\n\t\t\t\t\t}\n\n\t\t\t\t\tstate.point[pointLength] = uniforms;\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = cache.get(light);\n\t\t\t\t\tuniforms.skyColor.copy(light.color).multiplyScalar(intensity);\n\t\t\t\t\tuniforms.groundColor.copy(light.groundColor).multiplyScalar(intensity);\n\t\t\t\t\tstate.hemi[hemiLength] = uniforms;\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (rectAreaLength > 0) {\n\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t// WebGL 2\n\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t} else {\n\t\t\t\t\t// WebGL 1\n\t\t\t\t\tif (extensions.has('OES_texture_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_FLOAT_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_FLOAT_2;\n\t\t\t\t\t} else if (extensions.has('OES_texture_half_float_linear') === true) {\n\t\t\t\t\t\tstate.rectAreaLTC1 = UniformsLib.LTC_HALF_1;\n\t\t\t\t\t\tstate.rectAreaLTC2 = UniformsLib.LTC_HALF_2;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer: Unable to use RectAreaLight. Missing WebGL extensions.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.ambient[0] = r;\n\t\t\tstate.ambient[1] = g;\n\t\t\tstate.ambient[2] = b;\n\t\t\tconst hash = state.hash;\n\n\t\t\tif (hash.directionalLength !== directionalLength || hash.pointLength !== pointLength || hash.spotLength !== spotLength || hash.rectAreaLength !== rectAreaLength || hash.hemiLength !== hemiLength || hash.numDirectionalShadows !== numDirectionalShadows || hash.numPointShadows !== numPointShadows || hash.numSpotShadows !== numSpotShadows) {\n\t\t\t\tstate.directional.length = directionalLength;\n\t\t\t\tstate.spot.length = spotLength;\n\t\t\t\tstate.rectArea.length = rectAreaLength;\n\t\t\t\tstate.point.length = pointLength;\n\t\t\t\tstate.hemi.length = hemiLength;\n\t\t\t\tstate.directionalShadow.length = numDirectionalShadows;\n\t\t\t\tstate.directionalShadowMap.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadow.length = numPointShadows;\n\t\t\t\tstate.pointShadowMap.length = numPointShadows;\n\t\t\t\tstate.spotShadow.length = numSpotShadows;\n\t\t\t\tstate.spotShadowMap.length = numSpotShadows;\n\t\t\t\tstate.directionalShadowMatrix.length = numDirectionalShadows;\n\t\t\t\tstate.pointShadowMatrix.length = numPointShadows;\n\t\t\t\tstate.spotShadowMatrix.length = numSpotShadows;\n\t\t\t\thash.directionalLength = directionalLength;\n\t\t\t\thash.pointLength = pointLength;\n\t\t\t\thash.spotLength = spotLength;\n\t\t\t\thash.rectAreaLength = rectAreaLength;\n\t\t\t\thash.hemiLength = hemiLength;\n\t\t\t\thash.numDirectionalShadows = numDirectionalShadows;\n\t\t\t\thash.numPointShadows = numPointShadows;\n\t\t\t\thash.numSpotShadows = numSpotShadows;\n\t\t\t\tstate.version = nextVersion++;\n\t\t\t}\n\t\t}\n\n\t\tfunction setupView(lights, camera) {\n\t\t\tlet directionalLength = 0;\n\t\t\tlet pointLength = 0;\n\t\t\tlet spotLength = 0;\n\t\t\tlet rectAreaLength = 0;\n\t\t\tlet hemiLength = 0;\n\t\t\tconst viewMatrix = camera.matrixWorldInverse;\n\n\t\t\tfor (let i = 0, l = lights.length; i < l; i++) {\n\t\t\t\tconst light = lights[i];\n\n\t\t\t\tif (light.isDirectionalLight) {\n\t\t\t\t\tconst uniforms = state.directional[directionalLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tdirectionalLength++;\n\t\t\t\t} else if (light.isSpotLight) {\n\t\t\t\t\tconst uniforms = state.spot[spotLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tvector3.setFromMatrixPosition(light.target.matrixWorld);\n\t\t\t\t\tuniforms.direction.sub(vector3);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tspotLength++;\n\t\t\t\t} else if (light.isRectAreaLight) {\n\t\t\t\t\tconst uniforms = state.rectArea[rectAreaLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix); // extract local rotation of light to derive width/height half vectors\n\n\t\t\t\t\tmatrix42.identity();\n\t\t\t\t\tmatrix4.copy(light.matrixWorld);\n\t\t\t\t\tmatrix4.premultiply(viewMatrix);\n\t\t\t\t\tmatrix42.extractRotation(matrix4);\n\t\t\t\t\tuniforms.halfWidth.set(light.width * 0.5, 0.0, 0.0);\n\t\t\t\t\tuniforms.halfHeight.set(0.0, light.height * 0.5, 0.0);\n\t\t\t\t\tuniforms.halfWidth.applyMatrix4(matrix42);\n\t\t\t\t\tuniforms.halfHeight.applyMatrix4(matrix42);\n\t\t\t\t\trectAreaLength++;\n\t\t\t\t} else if (light.isPointLight) {\n\t\t\t\t\tconst uniforms = state.point[pointLength];\n\t\t\t\t\tuniforms.position.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.position.applyMatrix4(viewMatrix);\n\t\t\t\t\tpointLength++;\n\t\t\t\t} else if (light.isHemisphereLight) {\n\t\t\t\t\tconst uniforms = state.hemi[hemiLength];\n\t\t\t\t\tuniforms.direction.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\t\tuniforms.direction.transformDirection(viewMatrix);\n\t\t\t\t\tuniforms.direction.normalize();\n\t\t\t\t\themiLength++;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tsetup: setup,\n\t\t\tsetupView: setupView,\n\t\t\tstate: state\n\t\t};\n\t}\n\n\tfunction WebGLRenderState(extensions, capabilities) {\n\t\tconst lights = new WebGLLights(extensions, capabilities);\n\t\tconst lightsArray = [];\n\t\tconst shadowsArray = [];\n\n\t\tfunction init() {\n\t\t\tlightsArray.length = 0;\n\t\t\tshadowsArray.length = 0;\n\t\t}\n\n\t\tfunction pushLight(light) {\n\t\t\tlightsArray.push(light);\n\t\t}\n\n\t\tfunction pushShadow(shadowLight) {\n\t\t\tshadowsArray.push(shadowLight);\n\t\t}\n\n\t\tfunction setupLights() {\n\t\t\tlights.setup(lightsArray);\n\t\t}\n\n\t\tfunction setupLightsView(camera) {\n\t\t\tlights.setupView(lightsArray, camera);\n\t\t}\n\n\t\tconst state = {\n\t\t\tlightsArray: lightsArray,\n\t\t\tshadowsArray: shadowsArray,\n\t\t\tlights: lights\n\t\t};\n\t\treturn {\n\t\t\tinit: init,\n\t\t\tstate: state,\n\t\t\tsetupLights: setupLights,\n\t\t\tsetupLightsView: setupLightsView,\n\t\t\tpushLight: pushLight,\n\t\t\tpushShadow: pushShadow\n\t\t};\n\t}\n\n\tfunction WebGLRenderStates(extensions, capabilities) {\n\t\tlet renderStates = new WeakMap();\n\n\t\tfunction get(scene, renderCallDepth = 0) {\n\t\t\tlet renderState;\n\n\t\t\tif (renderStates.has(scene) === false) {\n\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\trenderStates.set(scene, [renderState]);\n\t\t\t} else {\n\t\t\t\tif (renderCallDepth >= renderStates.get(scene).length) {\n\t\t\t\t\trenderState = new WebGLRenderState(extensions, capabilities);\n\t\t\t\t\trenderStates.get(scene).push(renderState);\n\t\t\t\t} else {\n\t\t\t\t\trenderState = renderStates.get(scene)[renderCallDepth];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn renderState;\n\t\t}\n\n\t\tfunction dispose() {\n\t\t\trenderStates = new WeakMap();\n\t\t}\n\n\t\treturn {\n\t\t\tget: get,\n\t\t\tdispose: dispose\n\t\t};\n\t}\n\n\t/**\n\t * parameters = {\n\t *\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t * }\n\t */\n\n\tclass MeshDepthMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDepthMaterial';\n\t\t\tthis.depthPacking = BasicDepthPacking;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.depthPacking = source.depthPacking;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDepthMaterial.prototype.isMeshDepthMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\n\t *\treferencePosition: <float>,\n\t *\tnearDistance: <float>,\n\t *\tfarDistance: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>\n\t *\n\t * }\n\t */\n\n\tclass MeshDistanceMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshDistanceMaterial';\n\t\t\tthis.referencePosition = new Vector3();\n\t\t\tthis.nearDistance = 1;\n\t\t\tthis.farDistance = 1000;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.fog = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.referencePosition.copy(source.referencePosition);\n\t\t\tthis.nearDistance = source.nearDistance;\n\t\t\tthis.farDistance = source.farDistance;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshDistanceMaterial.prototype.isMeshDistanceMaterial = true;\n\n\tvar vsm_frag = \"uniform sampler2D shadow_pass;\\nuniform vec2 resolution;\\nuniform float radius;\\n#include <packing>\\nvoid main() {\\n\\tfloat mean = 0.0;\\n\\tfloat squared_mean = 0.0;\\n\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy ) / resolution ) );\\n\\tfor ( float i = -1.0; i < 1.0 ; i += SAMPLE_RATE) {\\n\\t\\t#ifdef HORIZONTAL_PASS\\n\\t\\t\\tvec2 distribution = unpackRGBATo2Half( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( i, 0.0 ) * radius ) / resolution ) );\\n\\t\\t\\tmean += distribution.x;\\n\\t\\t\\tsquared_mean += distribution.y * distribution.y + distribution.x * distribution.x;\\n\\t\\t#else\\n\\t\\t\\tfloat depth = unpackRGBAToDepth( texture2D( shadow_pass, ( gl_FragCoord.xy + vec2( 0.0, i ) * radius ) / resolution ) );\\n\\t\\t\\tmean += depth;\\n\\t\\t\\tsquared_mean += depth * depth;\\n\\t\\t#endif\\n\\t}\\n\\tmean = mean * HALF_SAMPLE_RATE;\\n\\tsquared_mean = squared_mean * HALF_SAMPLE_RATE;\\n\\tfloat std_dev = sqrt( squared_mean - mean * mean );\\n\\tgl_FragColor = pack2HalfToRGBA( vec2( mean, std_dev ) );\\n}\";\n\n\tvar vsm_vert = \"void main() {\\n\\tgl_Position = vec4( position, 1.0 );\\n}\";\n\n\tfunction WebGLShadowMap(_renderer, _objects, _capabilities) {\n\t\tlet _frustum = new Frustum();\n\n\t\tconst _shadowMapSize = new Vector2(),\n\t\t\t\t\t_viewportSize = new Vector2(),\n\t\t\t\t\t_viewport = new Vector4(),\n\t\t\t\t\t_depthMaterials = [],\n\t\t\t\t\t_distanceMaterials = [],\n\t\t\t\t\t_materialCache = {},\n\t\t\t\t\t_maxTextureSize = _capabilities.maxTextureSize;\n\n\t\tconst shadowSide = {\n\t\t\t0: BackSide,\n\t\t\t1: FrontSide,\n\t\t\t2: DoubleSide\n\t\t};\n\t\tconst shadowMaterialVertical = new ShaderMaterial({\n\t\t\tdefines: {\n\t\t\t\tSAMPLE_RATE: 2.0 / 8.0,\n\t\t\t\tHALF_SAMPLE_RATE: 1.0 / 8.0\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\tshadow_pass: {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\tresolution: {\n\t\t\t\t\tvalue: new Vector2()\n\t\t\t\t},\n\t\t\t\tradius: {\n\t\t\t\t\tvalue: 4.0\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: vsm_vert,\n\t\t\tfragmentShader: vsm_frag\n\t\t});\n\t\tconst shadowMaterialHorizontal = shadowMaterialVertical.clone();\n\t\tshadowMaterialHorizontal.defines.HORIZONTAL_PASS = 1;\n\t\tconst fullScreenTri = new BufferGeometry();\n\t\tfullScreenTri.setAttribute('position', new BufferAttribute(new Float32Array([-1, -1, 0.5, 3, -1, 0.5, -1, 3, 0.5]), 3));\n\t\tconst fullScreenMesh = new Mesh(fullScreenTri, shadowMaterialVertical);\n\t\tconst scope = this;\n\t\tthis.enabled = false;\n\t\tthis.autoUpdate = true;\n\t\tthis.needsUpdate = false;\n\t\tthis.type = PCFShadowMap;\n\n\t\tthis.render = function (lights, scene, camera) {\n\t\t\tif (scope.enabled === false) return;\n\t\t\tif (scope.autoUpdate === false && scope.needsUpdate === false) return;\n\t\t\tif (lights.length === 0) return;\n\n\t\t\tconst currentRenderTarget = _renderer.getRenderTarget();\n\n\t\t\tconst activeCubeFace = _renderer.getActiveCubeFace();\n\n\t\t\tconst activeMipmapLevel = _renderer.getActiveMipmapLevel();\n\n\t\t\tconst _state = _renderer.state; // Set GL state for depth map.\n\n\t\t\t_state.setBlending(NoBlending);\n\n\t\t\t_state.buffers.color.setClear(1, 1, 1, 1);\n\n\t\t\t_state.buffers.depth.setTest(true);\n\n\t\t\t_state.setScissorTest(false); // render depth map\n\n\n\t\t\tfor (let i = 0, il = lights.length; i < il; i++) {\n\t\t\t\tconst light = lights[i];\n\t\t\t\tconst shadow = light.shadow;\n\n\t\t\t\tif (shadow === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLShadowMap:', light, 'has no shadow.');\n\t\t\t\t\tcontinue;\n\t\t\t\t}\n\n\t\t\t\tif (shadow.autoUpdate === false && shadow.needsUpdate === false) continue;\n\n\t\t\t\t_shadowMapSize.copy(shadow.mapSize);\n\n\t\t\t\tconst shadowFrameExtents = shadow.getFrameExtents();\n\n\t\t\t\t_shadowMapSize.multiply(shadowFrameExtents);\n\n\t\t\t\t_viewportSize.copy(shadow.mapSize);\n\n\t\t\t\tif (_shadowMapSize.x > _maxTextureSize || _shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\tif (_shadowMapSize.x > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.x = Math.floor(_maxTextureSize / shadowFrameExtents.x);\n\t\t\t\t\t\t_shadowMapSize.x = _viewportSize.x * shadowFrameExtents.x;\n\t\t\t\t\t\tshadow.mapSize.x = _viewportSize.x;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_shadowMapSize.y > _maxTextureSize) {\n\t\t\t\t\t\t_viewportSize.y = Math.floor(_maxTextureSize / shadowFrameExtents.y);\n\t\t\t\t\t\t_shadowMapSize.y = _viewportSize.y * shadowFrameExtents.y;\n\t\t\t\t\t\tshadow.mapSize.y = _viewportSize.y;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null && !shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: LinearFilter,\n\t\t\t\t\t\tmagFilter: LinearFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.mapPass = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\tif (shadow.map === null) {\n\t\t\t\t\tconst pars = {\n\t\t\t\t\t\tminFilter: NearestFilter,\n\t\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\t\tformat: RGBAFormat\n\t\t\t\t\t};\n\t\t\t\t\tshadow.map = new WebGLRenderTarget(_shadowMapSize.x, _shadowMapSize.y, pars);\n\t\t\t\t\tshadow.map.texture.name = light.name + '.shadowMap';\n\t\t\t\t\tshadow.camera.updateProjectionMatrix();\n\t\t\t\t}\n\n\t\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t\t_renderer.clear();\n\n\t\t\t\tconst viewportCount = shadow.getViewportCount();\n\n\t\t\t\tfor (let vp = 0; vp < viewportCount; vp++) {\n\t\t\t\t\tconst viewport = shadow.getViewport(vp);\n\n\t\t\t\t\t_viewport.set(_viewportSize.x * viewport.x, _viewportSize.y * viewport.y, _viewportSize.x * viewport.z, _viewportSize.y * viewport.w);\n\n\t\t\t\t\t_state.viewport(_viewport);\n\n\t\t\t\t\tshadow.updateMatrices(light, vp);\n\t\t\t\t\t_frustum = shadow.getFrustum();\n\t\t\t\t\trenderObject(scene, camera, shadow.camera, light, this.type);\n\t\t\t\t} // do blur pass for VSM\n\n\n\t\t\t\tif (!shadow.isPointLightShadow && this.type === VSMShadowMap) {\n\t\t\t\t\tVSMPass(shadow, camera);\n\t\t\t\t}\n\n\t\t\t\tshadow.needsUpdate = false;\n\t\t\t}\n\n\t\t\tscope.needsUpdate = false;\n\n\t\t\t_renderer.setRenderTarget(currentRenderTarget, activeCubeFace, activeMipmapLevel);\n\t\t};\n\n\t\tfunction VSMPass(shadow, camera) {\n\t\t\tconst geometry = _objects.update(fullScreenMesh); // vertical pass\n\n\n\t\t\tshadowMaterialVertical.uniforms.shadow_pass.value = shadow.map.texture;\n\t\t\tshadowMaterialVertical.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialVertical.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.mapPass);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialVertical, fullScreenMesh, null); // horizontal pass\n\n\n\t\t\tshadowMaterialHorizontal.uniforms.shadow_pass.value = shadow.mapPass.texture;\n\t\t\tshadowMaterialHorizontal.uniforms.resolution.value = shadow.mapSize;\n\t\t\tshadowMaterialHorizontal.uniforms.radius.value = shadow.radius;\n\n\t\t\t_renderer.setRenderTarget(shadow.map);\n\n\t\t\t_renderer.clear();\n\n\t\t\t_renderer.renderBufferDirect(camera, null, geometry, shadowMaterialHorizontal, fullScreenMesh, null);\n\t\t}\n\n\t\tfunction getDepthMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _depthMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDepthMaterial({\n\t\t\t\t\tdepthPacking: RGBADepthPacking,\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_depthMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDistanceMaterialVariant(useMorphing) {\n\t\t\tconst index = useMorphing << 0;\n\t\t\tlet material = _distanceMaterials[index];\n\n\t\t\tif (material === undefined) {\n\t\t\t\tmaterial = new MeshDistanceMaterial({\n\t\t\t\t\tmorphTargets: useMorphing\n\t\t\t\t});\n\t\t\t\t_distanceMaterials[index] = material;\n\t\t\t}\n\n\t\t\treturn material;\n\t\t}\n\n\t\tfunction getDepthMaterial(object, geometry, material, light, shadowCameraNear, shadowCameraFar, type) {\n\t\t\tlet result = null;\n\t\t\tlet getMaterialVariant = getDepthMaterialVariant;\n\t\t\tlet customMaterial = object.customDepthMaterial;\n\n\t\t\tif (light.isPointLight === true) {\n\t\t\t\tgetMaterialVariant = getDistanceMaterialVariant;\n\t\t\t\tcustomMaterial = object.customDistanceMaterial;\n\t\t\t}\n\n\t\t\tif (customMaterial === undefined) {\n\t\t\t\tlet useMorphing = false;\n\n\t\t\t\tif (material.morphTargets === true) {\n\t\t\t\t\tuseMorphing = geometry.morphAttributes && geometry.morphAttributes.position && geometry.morphAttributes.position.length > 0;\n\t\t\t\t}\n\n\t\t\t\tresult = getMaterialVariant(useMorphing);\n\t\t\t} else {\n\t\t\t\tresult = customMaterial;\n\t\t\t}\n\n\t\t\tif (_renderer.localClippingEnabled && material.clipShadows === true && material.clippingPlanes.length !== 0) {\n\t\t\t\t// in this case we need a unique material instance reflecting the\n\t\t\t\t// appropriate state\n\t\t\t\tconst keyA = result.uuid,\n\t\t\t\t\t\t\tkeyB = material.uuid;\n\t\t\t\tlet materialsForVariant = _materialCache[keyA];\n\n\t\t\t\tif (materialsForVariant === undefined) {\n\t\t\t\t\tmaterialsForVariant = {};\n\t\t\t\t\t_materialCache[keyA] = materialsForVariant;\n\t\t\t\t}\n\n\t\t\t\tlet cachedMaterial = materialsForVariant[keyB];\n\n\t\t\t\tif (cachedMaterial === undefined) {\n\t\t\t\t\tcachedMaterial = result.clone();\n\t\t\t\t\tmaterialsForVariant[keyB] = cachedMaterial;\n\t\t\t\t}\n\n\t\t\t\tresult = cachedMaterial;\n\t\t\t}\n\n\t\t\tresult.visible = material.visible;\n\t\t\tresult.wireframe = material.wireframe;\n\n\t\t\tif (type === VSMShadowMap) {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : material.side;\n\t\t\t} else {\n\t\t\t\tresult.side = material.shadowSide !== null ? material.shadowSide : shadowSide[material.side];\n\t\t\t}\n\n\t\t\tresult.clipShadows = material.clipShadows;\n\t\t\tresult.clippingPlanes = material.clippingPlanes;\n\t\t\tresult.clipIntersection = material.clipIntersection;\n\t\t\tresult.wireframeLinewidth = material.wireframeLinewidth;\n\t\t\tresult.linewidth = material.linewidth;\n\n\t\t\tif (light.isPointLight === true && result.isMeshDistanceMaterial === true) {\n\t\t\t\tresult.referencePosition.setFromMatrixPosition(light.matrixWorld);\n\t\t\t\tresult.nearDistance = shadowCameraNear;\n\t\t\t\tresult.farDistance = shadowCameraFar;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t\tfunction renderObject(object, camera, shadowCamera, light, type) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible && (object.isMesh || object.isLine || object.isPoints)) {\n\t\t\t\tif ((object.castShadow || object.receiveShadow && type === VSMShadowMap) && (!object.frustumCulled || _frustum.intersectsObject(object))) {\n\t\t\t\t\tobject.modelViewMatrix.multiplyMatrices(shadowCamera.matrixWorldInverse, object.matrixWorld);\n\n\t\t\t\t\tconst geometry = _objects.update(object);\n\n\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\tfor (let k = 0, kl = groups.length; k < kl; k++) {\n\t\t\t\t\t\t\tconst group = groups[k];\n\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, groupMaterial, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, group);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\tconst depthMaterial = getDepthMaterial(object, geometry, material, light, shadowCamera.near, shadowCamera.far, type);\n\n\t\t\t\t\t\t_renderer.renderBufferDirect(shadowCamera, null, geometry, depthMaterial, object, null);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\trenderObject(children[i], camera, shadowCamera, light, type);\n\t\t\t}\n\t\t}\n\t}\n\n\tfunction WebGLState(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction ColorBuffer() {\n\t\t\tlet locked = false;\n\t\t\tconst color = new Vector4();\n\t\t\tlet currentColorMask = null;\n\t\t\tconst currentColorClear = new Vector4(0, 0, 0, 0);\n\t\t\treturn {\n\t\t\t\tsetMask: function (colorMask) {\n\t\t\t\t\tif (currentColorMask !== colorMask && !locked) {\n\t\t\t\t\t\tgl.colorMask(colorMask, colorMask, colorMask, colorMask);\n\t\t\t\t\t\tcurrentColorMask = colorMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (r, g, b, a, premultipliedAlpha) {\n\t\t\t\t\tif (premultipliedAlpha === true) {\n\t\t\t\t\t\tr *= a;\n\t\t\t\t\t\tg *= a;\n\t\t\t\t\t\tb *= a;\n\t\t\t\t\t}\n\n\t\t\t\t\tcolor.set(r, g, b, a);\n\n\t\t\t\t\tif (currentColorClear.equals(color) === false) {\n\t\t\t\t\t\tgl.clearColor(r, g, b, a);\n\t\t\t\t\t\tcurrentColorClear.copy(color);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentColorMask = null;\n\t\t\t\t\tcurrentColorClear.set(-1, 0, 0, 0); // set to invalid state\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction DepthBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentDepthMask = null;\n\t\t\tlet currentDepthFunc = null;\n\t\t\tlet currentDepthClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (depthTest) {\n\t\t\t\t\tif (depthTest) {\n\t\t\t\t\t\tenable(gl.DEPTH_TEST);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tdisable(gl.DEPTH_TEST);\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (depthMask) {\n\t\t\t\t\tif (currentDepthMask !== depthMask && !locked) {\n\t\t\t\t\t\tgl.depthMask(depthMask);\n\t\t\t\t\t\tcurrentDepthMask = depthMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (depthFunc) {\n\t\t\t\t\tif (currentDepthFunc !== depthFunc) {\n\t\t\t\t\t\tif (depthFunc) {\n\t\t\t\t\t\t\tswitch (depthFunc) {\n\t\t\t\t\t\t\t\tcase NeverDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NEVER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase AlwaysDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.ALWAYS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LESS);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase LessEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase EqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.EQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase GreaterDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.GREATER);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tcase NotEqualDepth:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.NOTEQUAL);\n\t\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tgl.depthFunc(gl.LEQUAL);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcurrentDepthFunc = depthFunc;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (depth) {\n\t\t\t\t\tif (currentDepthClear !== depth) {\n\t\t\t\t\t\tgl.clearDepth(depth);\n\t\t\t\t\t\tcurrentDepthClear = depth;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentDepthMask = null;\n\t\t\t\t\tcurrentDepthFunc = null;\n\t\t\t\t\tcurrentDepthClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tfunction StencilBuffer() {\n\t\t\tlet locked = false;\n\t\t\tlet currentStencilMask = null;\n\t\t\tlet currentStencilFunc = null;\n\t\t\tlet currentStencilRef = null;\n\t\t\tlet currentStencilFuncMask = null;\n\t\t\tlet currentStencilFail = null;\n\t\t\tlet currentStencilZFail = null;\n\t\t\tlet currentStencilZPass = null;\n\t\t\tlet currentStencilClear = null;\n\t\t\treturn {\n\t\t\t\tsetTest: function (stencilTest) {\n\t\t\t\t\tif (!locked) {\n\t\t\t\t\t\tif (stencilTest) {\n\t\t\t\t\t\t\tenable(gl.STENCIL_TEST);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tdisable(gl.STENCIL_TEST);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetMask: function (stencilMask) {\n\t\t\t\t\tif (currentStencilMask !== stencilMask && !locked) {\n\t\t\t\t\t\tgl.stencilMask(stencilMask);\n\t\t\t\t\t\tcurrentStencilMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetFunc: function (stencilFunc, stencilRef, stencilMask) {\n\t\t\t\t\tif (currentStencilFunc !== stencilFunc || currentStencilRef !== stencilRef || currentStencilFuncMask !== stencilMask) {\n\t\t\t\t\t\tgl.stencilFunc(stencilFunc, stencilRef, stencilMask);\n\t\t\t\t\t\tcurrentStencilFunc = stencilFunc;\n\t\t\t\t\t\tcurrentStencilRef = stencilRef;\n\t\t\t\t\t\tcurrentStencilFuncMask = stencilMask;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetOp: function (stencilFail, stencilZFail, stencilZPass) {\n\t\t\t\t\tif (currentStencilFail !== stencilFail || currentStencilZFail !== stencilZFail || currentStencilZPass !== stencilZPass) {\n\t\t\t\t\t\tgl.stencilOp(stencilFail, stencilZFail, stencilZPass);\n\t\t\t\t\t\tcurrentStencilFail = stencilFail;\n\t\t\t\t\t\tcurrentStencilZFail = stencilZFail;\n\t\t\t\t\t\tcurrentStencilZPass = stencilZPass;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tsetLocked: function (lock) {\n\t\t\t\t\tlocked = lock;\n\t\t\t\t},\n\t\t\t\tsetClear: function (stencil) {\n\t\t\t\t\tif (currentStencilClear !== stencil) {\n\t\t\t\t\t\tgl.clearStencil(stencil);\n\t\t\t\t\t\tcurrentStencilClear = stencil;\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\treset: function () {\n\t\t\t\t\tlocked = false;\n\t\t\t\t\tcurrentStencilMask = null;\n\t\t\t\t\tcurrentStencilFunc = null;\n\t\t\t\t\tcurrentStencilRef = null;\n\t\t\t\t\tcurrentStencilFuncMask = null;\n\t\t\t\t\tcurrentStencilFail = null;\n\t\t\t\t\tcurrentStencilZFail = null;\n\t\t\t\t\tcurrentStencilZPass = null;\n\t\t\t\t\tcurrentStencilClear = null;\n\t\t\t\t}\n\t\t\t};\n\t\t} //\n\n\n\t\tconst colorBuffer = new ColorBuffer();\n\t\tconst depthBuffer = new DepthBuffer();\n\t\tconst stencilBuffer = new StencilBuffer();\n\t\tlet enabledCapabilities = {};\n\t\tlet xrFramebuffer = null;\n\t\tlet currentBoundFramebuffers = {};\n\t\tlet currentProgram = null;\n\t\tlet currentBlendingEnabled = false;\n\t\tlet currentBlending = null;\n\t\tlet currentBlendEquation = null;\n\t\tlet currentBlendSrc = null;\n\t\tlet currentBlendDst = null;\n\t\tlet currentBlendEquationAlpha = null;\n\t\tlet currentBlendSrcAlpha = null;\n\t\tlet currentBlendDstAlpha = null;\n\t\tlet currentPremultipledAlpha = false;\n\t\tlet currentFlipSided = null;\n\t\tlet currentCullFace = null;\n\t\tlet currentLineWidth = null;\n\t\tlet currentPolygonOffsetFactor = null;\n\t\tlet currentPolygonOffsetUnits = null;\n\t\tconst maxTextures = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS);\n\t\tlet lineWidthAvailable = false;\n\t\tlet version = 0;\n\t\tconst glVersion = gl.getParameter(gl.VERSION);\n\n\t\tif (glVersion.indexOf('WebGL') !== -1) {\n\t\t\tversion = parseFloat(/^WebGL (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 1.0;\n\t\t} else if (glVersion.indexOf('OpenGL ES') !== -1) {\n\t\t\tversion = parseFloat(/^OpenGL ES (\\d)/.exec(glVersion)[1]);\n\t\t\tlineWidthAvailable = version >= 2.0;\n\t\t}\n\n\t\tlet currentTextureSlot = null;\n\t\tlet currentBoundTextures = {};\n\t\tconst scissorParam = gl.getParameter(gl.SCISSOR_BOX);\n\t\tconst viewportParam = gl.getParameter(gl.VIEWPORT);\n\t\tconst currentScissor = new Vector4().fromArray(scissorParam);\n\t\tconst currentViewport = new Vector4().fromArray(viewportParam);\n\n\t\tfunction createTexture(type, target, count) {\n\t\t\tconst data = new Uint8Array(4); // 4 is required to match default unpack alignment of 4.\n\n\t\t\tconst texture = gl.createTexture();\n\t\t\tgl.bindTexture(type, texture);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\n\t\t\tgl.texParameteri(type, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\n\n\t\t\tfor (let i = 0; i < count; i++) {\n\t\t\t\tgl.texImage2D(target + i, 0, gl.RGBA, 1, 1, 0, gl.RGBA, gl.UNSIGNED_BYTE, data);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t\tconst emptyTextures = {};\n\t\temptyTextures[gl.TEXTURE_2D] = createTexture(gl.TEXTURE_2D, gl.TEXTURE_2D, 1);\n\t\temptyTextures[gl.TEXTURE_CUBE_MAP] = createTexture(gl.TEXTURE_CUBE_MAP, gl.TEXTURE_CUBE_MAP_POSITIVE_X, 6); // init\n\n\t\tcolorBuffer.setClear(0, 0, 0, 1);\n\t\tdepthBuffer.setClear(1);\n\t\tstencilBuffer.setClear(0);\n\t\tenable(gl.DEPTH_TEST);\n\t\tdepthBuffer.setFunc(LessEqualDepth);\n\t\tsetFlipSided(false);\n\t\tsetCullFace(CullFaceBack);\n\t\tenable(gl.CULL_FACE);\n\t\tsetBlending(NoBlending); //\n\n\t\tfunction enable(id) {\n\t\t\tif (enabledCapabilities[id] !== true) {\n\t\t\t\tgl.enable(id);\n\t\t\t\tenabledCapabilities[id] = true;\n\t\t\t}\n\t\t}\n\n\t\tfunction disable(id) {\n\t\t\tif (enabledCapabilities[id] !== false) {\n\t\t\t\tgl.disable(id);\n\t\t\t\tenabledCapabilities[id] = false;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindXRFramebuffer(framebuffer) {\n\t\t\tif (framebuffer !== xrFramebuffer) {\n\t\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, framebuffer);\n\t\t\t\txrFramebuffer = framebuffer;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindFramebuffer(target, framebuffer) {\n\t\t\tif (framebuffer === null && xrFramebuffer !== null) framebuffer = xrFramebuffer; // use active XR framebuffer if available\n\n\t\t\tif (currentBoundFramebuffers[target] !== framebuffer) {\n\t\t\t\tgl.bindFramebuffer(target, framebuffer);\n\t\t\t\tcurrentBoundFramebuffers[target] = framebuffer;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t// gl.DRAW_FRAMEBUFFER is equivalent to gl.FRAMEBUFFER\n\t\t\t\t\tif (target === gl.DRAW_FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (target === gl.FRAMEBUFFER) {\n\t\t\t\t\t\tcurrentBoundFramebuffers[gl.DRAW_FRAMEBUFFER] = framebuffer;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tfunction useProgram(program) {\n\t\t\tif (currentProgram !== program) {\n\t\t\t\tgl.useProgram(program);\n\t\t\t\tcurrentProgram = program;\n\t\t\t\treturn true;\n\t\t\t}\n\n\t\t\treturn false;\n\t\t}\n\n\t\tconst equationToGL = {\n\t\t\t[AddEquation]: gl.FUNC_ADD,\n\t\t\t[SubtractEquation]: gl.FUNC_SUBTRACT,\n\t\t\t[ReverseSubtractEquation]: gl.FUNC_REVERSE_SUBTRACT\n\t\t};\n\n\t\tif (isWebGL2) {\n\t\t\tequationToGL[MinEquation] = gl.MIN;\n\t\t\tequationToGL[MaxEquation] = gl.MAX;\n\t\t} else {\n\t\t\tconst extension = extensions.get('EXT_blend_minmax');\n\n\t\t\tif (extension !== null) {\n\t\t\t\tequationToGL[MinEquation] = extension.MIN_EXT;\n\t\t\t\tequationToGL[MaxEquation] = extension.MAX_EXT;\n\t\t\t}\n\t\t}\n\n\t\tconst factorToGL = {\n\t\t\t[ZeroFactor]: gl.ZERO,\n\t\t\t[OneFactor]: gl.ONE,\n\t\t\t[SrcColorFactor]: gl.SRC_COLOR,\n\t\t\t[SrcAlphaFactor]: gl.SRC_ALPHA,\n\t\t\t[SrcAlphaSaturateFactor]: gl.SRC_ALPHA_SATURATE,\n\t\t\t[DstColorFactor]: gl.DST_COLOR,\n\t\t\t[DstAlphaFactor]: gl.DST_ALPHA,\n\t\t\t[OneMinusSrcColorFactor]: gl.ONE_MINUS_SRC_COLOR,\n\t\t\t[OneMinusSrcAlphaFactor]: gl.ONE_MINUS_SRC_ALPHA,\n\t\t\t[OneMinusDstColorFactor]: gl.ONE_MINUS_DST_COLOR,\n\t\t\t[OneMinusDstAlphaFactor]: gl.ONE_MINUS_DST_ALPHA\n\t\t};\n\n\t\tfunction setBlending(blending, blendEquation, blendSrc, blendDst, blendEquationAlpha, blendSrcAlpha, blendDstAlpha, premultipliedAlpha) {\n\t\t\tif (blending === NoBlending) {\n\t\t\t\tif (currentBlendingEnabled === true) {\n\t\t\t\t\tdisable(gl.BLEND);\n\t\t\t\t\tcurrentBlendingEnabled = false;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (currentBlendingEnabled === false) {\n\t\t\t\tenable(gl.BLEND);\n\t\t\t\tcurrentBlendingEnabled = true;\n\t\t\t}\n\n\t\t\tif (blending !== CustomBlending) {\n\t\t\t\tif (blending !== currentBlending || premultipliedAlpha !== currentPremultipledAlpha) {\n\t\t\t\t\tif (currentBlendEquation !== AddEquation || currentBlendEquationAlpha !== AddEquation) {\n\t\t\t\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\t\t\t\tcurrentBlendEquation = AddEquation;\n\t\t\t\t\t\tcurrentBlendEquationAlpha = AddEquation;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (premultipliedAlpha) {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ONE, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.ZERO, gl.ONE_MINUS_SRC_COLOR, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.ZERO, gl.SRC_COLOR, gl.ZERO, gl.SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tswitch (blending) {\n\t\t\t\t\t\t\tcase NormalBlending:\n\t\t\t\t\t\t\t\tgl.blendFuncSeparate(gl.SRC_ALPHA, gl.ONE_MINUS_SRC_ALPHA, gl.ONE, gl.ONE_MINUS_SRC_ALPHA);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase AdditiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.SRC_ALPHA, gl.ONE);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase SubtractiveBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.ONE_MINUS_SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tcase MultiplyBlending:\n\t\t\t\t\t\t\t\tgl.blendFunc(gl.ZERO, gl.SRC_COLOR);\n\t\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t\tconsole.error('THREE.WebGLState: Invalid blending: ', blending);\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentBlendSrc = null;\n\t\t\t\t\tcurrentBlendDst = null;\n\t\t\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\t\t\tcurrentBlendDstAlpha = null;\n\t\t\t\t\tcurrentBlending = blending;\n\t\t\t\t\tcurrentPremultipledAlpha = premultipliedAlpha;\n\t\t\t\t}\n\n\t\t\t\treturn;\n\t\t\t} // custom blending\n\n\n\t\t\tblendEquationAlpha = blendEquationAlpha || blendEquation;\n\t\t\tblendSrcAlpha = blendSrcAlpha || blendSrc;\n\t\t\tblendDstAlpha = blendDstAlpha || blendDst;\n\n\t\t\tif (blendEquation !== currentBlendEquation || blendEquationAlpha !== currentBlendEquationAlpha) {\n\t\t\t\tgl.blendEquationSeparate(equationToGL[blendEquation], equationToGL[blendEquationAlpha]);\n\t\t\t\tcurrentBlendEquation = blendEquation;\n\t\t\t\tcurrentBlendEquationAlpha = blendEquationAlpha;\n\t\t\t}\n\n\t\t\tif (blendSrc !== currentBlendSrc || blendDst !== currentBlendDst || blendSrcAlpha !== currentBlendSrcAlpha || blendDstAlpha !== currentBlendDstAlpha) {\n\t\t\t\tgl.blendFuncSeparate(factorToGL[blendSrc], factorToGL[blendDst], factorToGL[blendSrcAlpha], factorToGL[blendDstAlpha]);\n\t\t\t\tcurrentBlendSrc = blendSrc;\n\t\t\t\tcurrentBlendDst = blendDst;\n\t\t\t\tcurrentBlendSrcAlpha = blendSrcAlpha;\n\t\t\t\tcurrentBlendDstAlpha = blendDstAlpha;\n\t\t\t}\n\n\t\t\tcurrentBlending = blending;\n\t\t\tcurrentPremultipledAlpha = null;\n\t\t}\n\n\t\tfunction setMaterial(material, frontFaceCW) {\n\t\t\tmaterial.side === DoubleSide ? disable(gl.CULL_FACE) : enable(gl.CULL_FACE);\n\t\t\tlet flipSided = material.side === BackSide;\n\t\t\tif (frontFaceCW) flipSided = !flipSided;\n\t\t\tsetFlipSided(flipSided);\n\t\t\tmaterial.blending === NormalBlending && material.transparent === false ? setBlending(NoBlending) : setBlending(material.blending, material.blendEquation, material.blendSrc, material.blendDst, material.blendEquationAlpha, material.blendSrcAlpha, material.blendDstAlpha, material.premultipliedAlpha);\n\t\t\tdepthBuffer.setFunc(material.depthFunc);\n\t\t\tdepthBuffer.setTest(material.depthTest);\n\t\t\tdepthBuffer.setMask(material.depthWrite);\n\t\t\tcolorBuffer.setMask(material.colorWrite);\n\t\t\tconst stencilWrite = material.stencilWrite;\n\t\t\tstencilBuffer.setTest(stencilWrite);\n\n\t\t\tif (stencilWrite) {\n\t\t\t\tstencilBuffer.setMask(material.stencilWriteMask);\n\t\t\t\tstencilBuffer.setFunc(material.stencilFunc, material.stencilRef, material.stencilFuncMask);\n\t\t\t\tstencilBuffer.setOp(material.stencilFail, material.stencilZFail, material.stencilZPass);\n\t\t\t}\n\n\t\t\tsetPolygonOffset(material.polygonOffset, material.polygonOffsetFactor, material.polygonOffsetUnits);\n\t\t\tmaterial.alphaToCoverage === true ? enable(gl.SAMPLE_ALPHA_TO_COVERAGE) : disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t} //\n\n\n\t\tfunction setFlipSided(flipSided) {\n\t\t\tif (currentFlipSided !== flipSided) {\n\t\t\t\tif (flipSided) {\n\t\t\t\t\tgl.frontFace(gl.CW);\n\t\t\t\t} else {\n\t\t\t\t\tgl.frontFace(gl.CCW);\n\t\t\t\t}\n\n\t\t\t\tcurrentFlipSided = flipSided;\n\t\t\t}\n\t\t}\n\n\t\tfunction setCullFace(cullFace) {\n\t\t\tif (cullFace !== CullFaceNone) {\n\t\t\t\tenable(gl.CULL_FACE);\n\n\t\t\t\tif (cullFace !== currentCullFace) {\n\t\t\t\t\tif (cullFace === CullFaceBack) {\n\t\t\t\t\t\tgl.cullFace(gl.BACK);\n\t\t\t\t\t} else if (cullFace === CullFaceFront) {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgl.cullFace(gl.FRONT_AND_BACK);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.CULL_FACE);\n\t\t\t}\n\n\t\t\tcurrentCullFace = cullFace;\n\t\t}\n\n\t\tfunction setLineWidth(width) {\n\t\t\tif (width !== currentLineWidth) {\n\t\t\t\tif (lineWidthAvailable) gl.lineWidth(width);\n\t\t\t\tcurrentLineWidth = width;\n\t\t\t}\n\t\t}\n\n\t\tfunction setPolygonOffset(polygonOffset, factor, units) {\n\t\t\tif (polygonOffset) {\n\t\t\t\tenable(gl.POLYGON_OFFSET_FILL);\n\n\t\t\t\tif (currentPolygonOffsetFactor !== factor || currentPolygonOffsetUnits !== units) {\n\t\t\t\t\tgl.polygonOffset(factor, units);\n\t\t\t\t\tcurrentPolygonOffsetFactor = factor;\n\t\t\t\t\tcurrentPolygonOffsetUnits = units;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tdisable(gl.POLYGON_OFFSET_FILL);\n\t\t\t}\n\t\t}\n\n\t\tfunction setScissorTest(scissorTest) {\n\t\t\tif (scissorTest) {\n\t\t\t\tenable(gl.SCISSOR_TEST);\n\t\t\t} else {\n\t\t\t\tdisable(gl.SCISSOR_TEST);\n\t\t\t}\n\t\t} // texture\n\n\n\t\tfunction activeTexture(webglSlot) {\n\t\t\tif (webglSlot === undefined) webglSlot = gl.TEXTURE0 + maxTextures - 1;\n\n\t\t\tif (currentTextureSlot !== webglSlot) {\n\t\t\t\tgl.activeTexture(webglSlot);\n\t\t\t\tcurrentTextureSlot = webglSlot;\n\t\t\t}\n\t\t}\n\n\t\tfunction bindTexture(webglType, webglTexture) {\n\t\t\tif (currentTextureSlot === null) {\n\t\t\t\tactiveTexture();\n\t\t\t}\n\n\t\t\tlet boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture === undefined) {\n\t\t\t\tboundTexture = {\n\t\t\t\t\ttype: undefined,\n\t\t\t\t\ttexture: undefined\n\t\t\t\t};\n\t\t\t\tcurrentBoundTextures[currentTextureSlot] = boundTexture;\n\t\t\t}\n\n\t\t\tif (boundTexture.type !== webglType || boundTexture.texture !== webglTexture) {\n\t\t\t\tgl.bindTexture(webglType, webglTexture || emptyTextures[webglType]);\n\t\t\t\tboundTexture.type = webglType;\n\t\t\t\tboundTexture.texture = webglTexture;\n\t\t\t}\n\t\t}\n\n\t\tfunction unbindTexture() {\n\t\t\tconst boundTexture = currentBoundTextures[currentTextureSlot];\n\n\t\t\tif (boundTexture !== undefined && boundTexture.type !== undefined) {\n\t\t\t\tgl.bindTexture(boundTexture.type, null);\n\t\t\t\tboundTexture.type = undefined;\n\t\t\t\tboundTexture.texture = undefined;\n\t\t\t}\n\t\t}\n\n\t\tfunction compressedTexImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.compressedTexImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage2D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage2D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t}\n\n\t\tfunction texImage3D() {\n\t\t\ttry {\n\t\t\t\tgl.texImage3D.apply(gl, arguments);\n\t\t\t} catch (error) {\n\t\t\t\tconsole.error('THREE.WebGLState:', error);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction scissor(scissor) {\n\t\t\tif (currentScissor.equals(scissor) === false) {\n\t\t\t\tgl.scissor(scissor.x, scissor.y, scissor.z, scissor.w);\n\t\t\t\tcurrentScissor.copy(scissor);\n\t\t\t}\n\t\t}\n\n\t\tfunction viewport(viewport) {\n\t\t\tif (currentViewport.equals(viewport) === false) {\n\t\t\t\tgl.viewport(viewport.x, viewport.y, viewport.z, viewport.w);\n\t\t\t\tcurrentViewport.copy(viewport);\n\t\t\t}\n\t\t} //\n\n\n\t\tfunction reset() {\n\t\t\t// reset state\n\t\t\tgl.disable(gl.BLEND);\n\t\t\tgl.disable(gl.CULL_FACE);\n\t\t\tgl.disable(gl.DEPTH_TEST);\n\t\t\tgl.disable(gl.POLYGON_OFFSET_FILL);\n\t\t\tgl.disable(gl.SCISSOR_TEST);\n\t\t\tgl.disable(gl.STENCIL_TEST);\n\t\t\tgl.disable(gl.SAMPLE_ALPHA_TO_COVERAGE);\n\t\t\tgl.blendEquation(gl.FUNC_ADD);\n\t\t\tgl.blendFunc(gl.ONE, gl.ZERO);\n\t\t\tgl.blendFuncSeparate(gl.ONE, gl.ZERO, gl.ONE, gl.ZERO);\n\t\t\tgl.colorMask(true, true, true, true);\n\t\t\tgl.clearColor(0, 0, 0, 0);\n\t\t\tgl.depthMask(true);\n\t\t\tgl.depthFunc(gl.LESS);\n\t\t\tgl.clearDepth(1);\n\t\t\tgl.stencilMask(0xffffffff);\n\t\t\tgl.stencilFunc(gl.ALWAYS, 0, 0xffffffff);\n\t\t\tgl.stencilOp(gl.KEEP, gl.KEEP, gl.KEEP);\n\t\t\tgl.clearStencil(0);\n\t\t\tgl.cullFace(gl.BACK);\n\t\t\tgl.frontFace(gl.CCW);\n\t\t\tgl.polygonOffset(0, 0);\n\t\t\tgl.activeTexture(gl.TEXTURE0);\n\t\t\tgl.bindFramebuffer(gl.FRAMEBUFFER, null);\n\n\t\t\tif (isWebGL2 === true) {\n\t\t\t\tgl.bindFramebuffer(gl.DRAW_FRAMEBUFFER, null);\n\t\t\t\tgl.bindFramebuffer(gl.READ_FRAMEBUFFER, null);\n\t\t\t}\n\n\t\t\tgl.useProgram(null);\n\t\t\tgl.lineWidth(1);\n\t\t\tgl.scissor(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tgl.viewport(0, 0, gl.canvas.width, gl.canvas.height); // reset internals\n\n\t\t\tenabledCapabilities = {};\n\t\t\tcurrentTextureSlot = null;\n\t\t\tcurrentBoundTextures = {};\n\t\t\txrFramebuffer = null;\n\t\t\tcurrentBoundFramebuffers = {};\n\t\t\tcurrentProgram = null;\n\t\t\tcurrentBlendingEnabled = false;\n\t\t\tcurrentBlending = null;\n\t\t\tcurrentBlendEquation = null;\n\t\t\tcurrentBlendSrc = null;\n\t\t\tcurrentBlendDst = null;\n\t\t\tcurrentBlendEquationAlpha = null;\n\t\t\tcurrentBlendSrcAlpha = null;\n\t\t\tcurrentBlendDstAlpha = null;\n\t\t\tcurrentPremultipledAlpha = false;\n\t\t\tcurrentFlipSided = null;\n\t\t\tcurrentCullFace = null;\n\t\t\tcurrentLineWidth = null;\n\t\t\tcurrentPolygonOffsetFactor = null;\n\t\t\tcurrentPolygonOffsetUnits = null;\n\t\t\tcurrentScissor.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcurrentViewport.set(0, 0, gl.canvas.width, gl.canvas.height);\n\t\t\tcolorBuffer.reset();\n\t\t\tdepthBuffer.reset();\n\t\t\tstencilBuffer.reset();\n\t\t}\n\n\t\treturn {\n\t\t\tbuffers: {\n\t\t\t\tcolor: colorBuffer,\n\t\t\t\tdepth: depthBuffer,\n\t\t\t\tstencil: stencilBuffer\n\t\t\t},\n\t\t\tenable: enable,\n\t\t\tdisable: disable,\n\t\t\tbindFramebuffer: bindFramebuffer,\n\t\t\tbindXRFramebuffer: bindXRFramebuffer,\n\t\t\tuseProgram: useProgram,\n\t\t\tsetBlending: setBlending,\n\t\t\tsetMaterial: setMaterial,\n\t\t\tsetFlipSided: setFlipSided,\n\t\t\tsetCullFace: setCullFace,\n\t\t\tsetLineWidth: setLineWidth,\n\t\t\tsetPolygonOffset: setPolygonOffset,\n\t\t\tsetScissorTest: setScissorTest,\n\t\t\tactiveTexture: activeTexture,\n\t\t\tbindTexture: bindTexture,\n\t\t\tunbindTexture: unbindTexture,\n\t\t\tcompressedTexImage2D: compressedTexImage2D,\n\t\t\ttexImage2D: texImage2D,\n\t\t\ttexImage3D: texImage3D,\n\t\t\tscissor: scissor,\n\t\t\tviewport: viewport,\n\t\t\treset: reset\n\t\t};\n\t}\n\n\tfunction WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\t\tconst maxTextures = capabilities.maxTextures;\n\t\tconst maxCubemapSize = capabilities.maxCubemapSize;\n\t\tconst maxTextureSize = capabilities.maxTextureSize;\n\t\tconst maxSamples = capabilities.maxSamples;\n\n\t\tconst _videoTextures = new WeakMap();\n\n\t\tlet _canvas; // cordova iOS (as of 5.0) still uses UIWebView, which provides OffscreenCanvas,\n\t\t// also OffscreenCanvas.getContext(\"webgl\"), but not OffscreenCanvas.getContext(\"2d\")!\n\t\t// Some implementations may only implement OffscreenCanvas partially (e.g. lacking 2d).\n\n\n\t\tlet useOffscreenCanvas = false;\n\n\t\ttry {\n\t\t\tuseOffscreenCanvas = typeof OffscreenCanvas !== 'undefined' && new OffscreenCanvas(1, 1).getContext('2d') !== null;\n\t\t} catch (err) {// Ignore any errors\n\t\t}\n\n\t\tfunction createCanvas(width, height) {\n\t\t\t// Use OffscreenCanvas when available. Specially needed in web workers\n\t\t\treturn useOffscreenCanvas ? new OffscreenCanvas(width, height) : document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\t}\n\n\t\tfunction resizeImage(image, needsPowerOfTwo, needsNewCanvas, maxSize) {\n\t\t\tlet scale = 1; // handle case if texture exceeds max size\n\n\t\t\tif (image.width > maxSize || image.height > maxSize) {\n\t\t\t\tscale = maxSize / Math.max(image.width, image.height);\n\t\t\t} // only perform resize if necessary\n\n\n\t\t\tif (scale < 1 || needsPowerOfTwo === true) {\n\t\t\t\t// only perform resize for certain image types\n\t\t\t\tif (typeof HTMLImageElement !== 'undefined' && image instanceof HTMLImageElement || typeof HTMLCanvasElement !== 'undefined' && image instanceof HTMLCanvasElement || typeof ImageBitmap !== 'undefined' && image instanceof ImageBitmap) {\n\t\t\t\t\tconst floor = needsPowerOfTwo ? floorPowerOfTwo : Math.floor;\n\t\t\t\t\tconst width = floor(scale * image.width);\n\t\t\t\t\tconst height = floor(scale * image.height);\n\t\t\t\t\tif (_canvas === undefined) _canvas = createCanvas(width, height); // cube textures can't reuse the same canvas\n\n\t\t\t\t\tconst canvas = needsNewCanvas ? createCanvas(width, height) : _canvas;\n\t\t\t\t\tcanvas.width = width;\n\t\t\t\t\tcanvas.height = height;\n\t\t\t\t\tconst context = canvas.getContext('2d');\n\t\t\t\t\tcontext.drawImage(image, 0, 0, width, height);\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture has been resized from (' + image.width + 'x' + image.height + ') to (' + width + 'x' + height + ').');\n\t\t\t\t\treturn canvas;\n\t\t\t\t} else {\n\t\t\t\t\tif ('data' in image) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Image in DataTexture is too big (' + image.width + 'x' + image.height + ').');\n\t\t\t\t\t}\n\n\t\t\t\t\treturn image;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn image;\n\t\t}\n\n\t\tfunction isPowerOfTwo$1(image) {\n\t\t\treturn isPowerOfTwo(image.width) && isPowerOfTwo(image.height);\n\t\t}\n\n\t\tfunction textureNeedsPowerOfTwo(texture) {\n\t\t\tif (isWebGL2) return false;\n\t\t\treturn texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping || texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction textureNeedsGenerateMipmaps(texture, supportsMips) {\n\t\t\treturn texture.generateMipmaps && supportsMips && texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter;\n\t\t}\n\n\t\tfunction generateMipmap(target, texture, width, height) {\n\t\t\t_gl.generateMipmap(target);\n\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\ttextureProperties.__maxMipLevel = Math.log2(Math.max(width, height));\n\t\t}\n\n\t\tfunction getInternalFormat(internalFormatName, glFormat, glType) {\n\t\t\tif (isWebGL2 === false) return glFormat;\n\n\t\t\tif (internalFormatName !== null) {\n\t\t\t\tif (_gl[internalFormatName] !== undefined) return _gl[internalFormatName];\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to use non-existing WebGL internal format \\'' + internalFormatName + '\\'');\n\t\t\t}\n\n\t\t\tlet internalFormat = glFormat;\n\n\t\t\tif (glFormat === _gl.RED) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.R32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.R16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.R8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGB) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGB32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGB16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGB8;\n\t\t\t}\n\n\t\t\tif (glFormat === _gl.RGBA) {\n\t\t\t\tif (glType === _gl.FLOAT) internalFormat = _gl.RGBA32F;\n\t\t\t\tif (glType === _gl.HALF_FLOAT) internalFormat = _gl.RGBA16F;\n\t\t\t\tif (glType === _gl.UNSIGNED_BYTE) internalFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\tif (internalFormat === _gl.R16F || internalFormat === _gl.R32F || internalFormat === _gl.RGBA16F || internalFormat === _gl.RGBA32F) {\n\t\t\t\textensions.get('EXT_color_buffer_float');\n\t\t\t}\n\n\t\t\treturn internalFormat;\n\t\t} // Fallback filters for non-power-of-2 textures\n\n\n\t\tfunction filterFallback(f) {\n\t\t\tif (f === NearestFilter || f === NearestMipmapNearestFilter || f === NearestMipmapLinearFilter) {\n\t\t\t\treturn _gl.NEAREST;\n\t\t\t}\n\n\t\t\treturn _gl.LINEAR;\n\t\t} //\n\n\n\t\tfunction onTextureDispose(event) {\n\t\t\tconst texture = event.target;\n\t\t\ttexture.removeEventListener('dispose', onTextureDispose);\n\t\t\tdeallocateTexture(texture);\n\n\t\t\tif (texture.isVideoTexture) {\n\t\t\t\t_videoTextures.delete(texture);\n\t\t\t}\n\n\t\t\tinfo.memory.textures--;\n\t\t}\n\n\t\tfunction onRenderTargetDispose(event) {\n\t\t\tconst renderTarget = event.target;\n\t\t\trenderTarget.removeEventListener('dispose', onRenderTargetDispose);\n\t\t\tdeallocateRenderTarget(renderTarget);\n\t\t} //\n\n\n\t\tfunction deallocateTexture(texture) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (textureProperties.__webglInit === undefined) return;\n\n\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\tproperties.remove(texture);\n\t\t}\n\n\t\tfunction deallocateRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (!renderTarget) return;\n\n\t\t\tif (textureProperties.__webglTexture !== undefined) {\n\t\t\t\t_gl.deleteTexture(textureProperties.__webglTexture);\n\n\t\t\t\tinfo.memory.textures--;\n\t\t\t}\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\trenderTarget.depthTexture.dispose();\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer[i]);\n\n\t\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer[i]);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t_gl.deleteFramebuffer(renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\tif (renderTargetProperties.__webglDepthbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthbuffer);\n\t\t\t\tif (renderTargetProperties.__webglMultisampledFramebuffer) _gl.deleteFramebuffer(renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\tif (renderTargetProperties.__webglColorRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglColorRenderbuffer);\n\t\t\t\tif (renderTargetProperties.__webglDepthRenderbuffer) _gl.deleteRenderbuffer(renderTargetProperties.__webglDepthRenderbuffer);\n\t\t\t}\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\tfor (let i = 0, il = texture.length; i < il; i++) {\n\t\t\t\t\tconst attachmentProperties = properties.get(texture[i]);\n\n\t\t\t\t\tif (attachmentProperties.__webglTexture) {\n\t\t\t\t\t\t_gl.deleteTexture(attachmentProperties.__webglTexture);\n\n\t\t\t\t\t\tinfo.memory.textures--;\n\t\t\t\t\t}\n\n\t\t\t\t\tproperties.remove(texture[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tproperties.remove(texture);\n\t\t\tproperties.remove(renderTarget);\n\t\t} //\n\n\n\t\tlet textureUnits = 0;\n\n\t\tfunction resetTextureUnits() {\n\t\t\ttextureUnits = 0;\n\t\t}\n\n\t\tfunction allocateTextureUnit() {\n\t\t\tconst textureUnit = textureUnits;\n\n\t\t\tif (textureUnit >= maxTextures) {\n\t\t\t\tconsole.warn('THREE.WebGLTextures: Trying to use ' + textureUnit + ' texture units while this GPU supports only ' + maxTextures);\n\t\t\t}\n\n\t\t\ttextureUnits += 1;\n\t\t\treturn textureUnit;\n\t\t} //\n\n\n\t\tfunction setTexture2D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\tif (texture.isVideoTexture) updateVideoTexture(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tconst image = texture.image;\n\n\t\t\t\tif (image === undefined) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is undefined');\n\t\t\t\t} else if (image.complete === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture marked for update but image is incomplete');\n\t\t\t\t} else {\n\t\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture2DArray(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_2D_ARRAY, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTexture3D(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_3D, textureProperties.__webglTexture);\n\t\t}\n\n\t\tfunction setTextureCube(texture, slot) {\n\t\t\tconst textureProperties = properties.get(texture);\n\n\t\t\tif (texture.version > 0 && textureProperties.__version !== texture.version) {\n\t\t\t\tuploadCubeTexture(textureProperties, texture, slot);\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t}\n\n\t\tconst wrappingToGL = {\n\t\t\t[RepeatWrapping]: _gl.REPEAT,\n\t\t\t[ClampToEdgeWrapping]: _gl.CLAMP_TO_EDGE,\n\t\t\t[MirroredRepeatWrapping]: _gl.MIRRORED_REPEAT\n\t\t};\n\t\tconst filterToGL = {\n\t\t\t[NearestFilter]: _gl.NEAREST,\n\t\t\t[NearestMipmapNearestFilter]: _gl.NEAREST_MIPMAP_NEAREST,\n\t\t\t[NearestMipmapLinearFilter]: _gl.NEAREST_MIPMAP_LINEAR,\n\t\t\t[LinearFilter]: _gl.LINEAR,\n\t\t\t[LinearMipmapNearestFilter]: _gl.LINEAR_MIPMAP_NEAREST,\n\t\t\t[LinearMipmapLinearFilter]: _gl.LINEAR_MIPMAP_LINEAR\n\t\t};\n\n\t\tfunction setTextureParameters(textureType, texture, supportsMips) {\n\t\t\tif (supportsMips) {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, wrappingToGL[texture.wrapS]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, wrappingToGL[texture.wrapT]);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, wrappingToGL[texture.wrapR]);\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterToGL[texture.magFilter]);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterToGL[texture.minFilter]);\n\t\t\t} else {\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_S, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_T, _gl.CLAMP_TO_EDGE);\n\n\t\t\t\tif (textureType === _gl.TEXTURE_3D || textureType === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_WRAP_R, _gl.CLAMP_TO_EDGE);\n\t\t\t\t}\n\n\t\t\t\tif (texture.wrapS !== ClampToEdgeWrapping || texture.wrapT !== ClampToEdgeWrapping) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.wrapS and Texture.wrapT should be set to THREE.ClampToEdgeWrapping.');\n\t\t\t\t}\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MAG_FILTER, filterFallback(texture.magFilter));\n\n\t\t\t\t_gl.texParameteri(textureType, _gl.TEXTURE_MIN_FILTER, filterFallback(texture.minFilter));\n\n\t\t\t\tif (texture.minFilter !== NearestFilter && texture.minFilter !== LinearFilter) {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Texture is not power of two. Texture.minFilter should be set to THREE.NearestFilter or THREE.LinearFilter.');\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (extensions.has('EXT_texture_filter_anisotropic') === true) {\n\t\t\t\tconst extension = extensions.get('EXT_texture_filter_anisotropic');\n\t\t\t\tif (texture.type === FloatType && extensions.has('OES_texture_float_linear') === false) return; // verify extension for WebGL 1 and WebGL 2\n\n\t\t\t\tif (isWebGL2 === false && texture.type === HalfFloatType && extensions.has('OES_texture_half_float_linear') === false) return; // verify extension for WebGL 1 only\n\n\t\t\t\tif (texture.anisotropy > 1 || properties.get(texture).__currentAnisotropy) {\n\t\t\t\t\t_gl.texParameterf(textureType, extension.TEXTURE_MAX_ANISOTROPY_EXT, Math.min(texture.anisotropy, capabilities.getMaxAnisotropy()));\n\n\t\t\t\t\tproperties.get(texture).__currentAnisotropy = texture.anisotropy;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction initTexture(textureProperties, texture) {\n\t\t\tif (textureProperties.__webglInit === undefined) {\n\t\t\t\ttextureProperties.__webglInit = true;\n\t\t\t\ttexture.addEventListener('dispose', onTextureDispose);\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\t\t}\n\n\t\tfunction uploadTexture(textureProperties, texture, slot) {\n\t\t\tlet textureType = _gl.TEXTURE_2D;\n\t\t\tif (texture.isDataTexture2DArray) textureType = _gl.TEXTURE_2D_ARRAY;\n\t\t\tif (texture.isDataTexture3D) textureType = _gl.TEXTURE_3D;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(textureType, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst needsPowerOfTwo = textureNeedsPowerOfTwo(texture) && isPowerOfTwo$1(texture.image) === false;\n\t\t\tconst image = resizeImage(texture.image, needsPowerOfTwo, false, maxTextureSize);\n\t\t\tconst supportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format);\n\t\t\tlet glType = utils.convert(texture.type),\n\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(textureType, texture, supportsMips);\n\t\t\tlet mipmap;\n\t\t\tconst mipmaps = texture.mipmaps;\n\n\t\t\tif (texture.isDepthTexture) {\n\t\t\t\t// populate depth texture with dummy data\n\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT;\n\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t} else if (texture.type === UnsignedIntType) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t} else if (texture.type === UnsignedInt248Type) {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH24_STENCIL8;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT16; // WebGL2 requires sized internalformat for glTexImage2D\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (texture.type === FloatType) {\n\t\t\t\t\t\tconsole.error('WebGLRenderer: Floating point depth texture requires WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t} // validation checks for WebGL 1\n\n\n\t\t\t\tif (texture.format === DepthFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_COMPONENT and type is not UNSIGNED_SHORT or UNSIGNED_INT\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tif (texture.type !== UnsignedShortType && texture.type !== UnsignedIntType) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedShortType or UnsignedIntType for DepthFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedShortType;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (texture.format === DepthStencilFormat && glInternalFormat === _gl.DEPTH_COMPONENT) {\n\t\t\t\t\t// Depth stencil textures need the DEPTH_STENCIL internal format\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\t\t\t\t\tglInternalFormat = _gl.DEPTH_STENCIL; // The error INVALID_OPERATION is generated by texImage2D if format and internalformat are\n\t\t\t\t\t// DEPTH_STENCIL and type is not UNSIGNED_INT_24_8_WEBGL.\n\t\t\t\t\t// (https://www.khronos.org/registry/webgl/extensions/WEBGL_depth_texture/)\n\n\t\t\t\t\tif (texture.type !== UnsignedInt248Type) {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Use UnsignedInt248Type for DepthStencilFormat DepthTexture.');\n\t\t\t\t\t\ttexture.type = UnsignedInt248Type;\n\t\t\t\t\t\tglType = utils.convert(texture.type);\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, null);\n\t\t\t} else if (texture.isDataTexture) {\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, image.width, image.height, 0, glFormat, glType, image.data);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t} else if (texture.isCompressedTexture) {\n\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\tmipmap = mipmaps[i];\n\n\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .uploadTexture()');\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else if (texture.isDataTexture2DArray) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_2D_ARRAY, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else if (texture.isDataTexture3D) {\n\t\t\t\tstate.texImage3D(_gl.TEXTURE_3D, 0, glInternalFormat, image.width, image.height, image.depth, 0, glFormat, glType, image.data);\n\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t} else {\n\t\t\t\t// regular Texture (image, video, canvas)\n\t\t\t\t// use manually created mipmaps if available\n\t\t\t\t// if there are no manual mipmaps\n\t\t\t\t// set 0 level mipmap and then use GL to generate other mipmap levels\n\t\t\t\tif (mipmaps.length > 0 && supportsMips) {\n\t\t\t\t\tfor (let i = 0, il = mipmaps.length; i < il; i++) {\n\t\t\t\t\t\tmipmap = mipmaps[i];\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, i, glInternalFormat, glFormat, glType, mipmap);\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.generateMipmaps = false;\n\t\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t\t} else {\n\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_2D, 0, glInternalFormat, glFormat, glType, image);\n\t\t\t\t\ttextureProperties.__maxMipLevel = 0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\tgenerateMipmap(textureType, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t}\n\n\t\tfunction uploadCubeTexture(textureProperties, texture, slot) {\n\t\t\tif (texture.image.length !== 6) return;\n\t\t\tinitTexture(textureProperties, texture);\n\t\t\tstate.activeTexture(_gl.TEXTURE0 + slot);\n\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, texture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, texture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, texture.unpackAlignment);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_COLORSPACE_CONVERSION_WEBGL, _gl.NONE);\n\n\t\t\tconst isCompressed = texture && (texture.isCompressedTexture || texture.image[0].isCompressedTexture);\n\t\t\tconst isDataTexture = texture.image[0] && texture.image[0].isDataTexture;\n\t\t\tconst cubeImage = [];\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tif (!isCompressed && !isDataTexture) {\n\t\t\t\t\tcubeImage[i] = resizeImage(texture.image[i], false, true, maxCubemapSize);\n\t\t\t\t} else {\n\t\t\t\t\tcubeImage[i] = isDataTexture ? texture.image[i].image : texture.image[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst image = cubeImage[0],\n\t\t\t\t\t\tsupportsMips = isPowerOfTwo$1(image) || isWebGL2,\n\t\t\t\t\t\tglFormat = utils.convert(texture.format),\n\t\t\t\t\t\tglType = utils.convert(texture.type),\n\t\t\t\t\t\tglInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\t\t\tlet mipmaps;\n\n\t\t\tif (isCompressed) {\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tmipmaps = cubeImage[i].mipmaps;\n\n\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\n\t\t\t\t\t\tif (texture.format !== RGBAFormat && texture.format !== RGBFormat) {\n\t\t\t\t\t\t\tif (glFormat !== null) {\n\t\t\t\t\t\t\t\tstate.compressedTexImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, mipmap.data);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: Attempt to load unsupported compressed texture format in .setTextureCube()');\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j, glInternalFormat, mipmap.width, mipmap.height, 0, glFormat, glType, mipmap.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length - 1;\n\t\t\t} else {\n\t\t\t\tmipmaps = texture.mipmaps;\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tif (isDataTexture) {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, cubeImage[i].width, cubeImage[i].height, 0, glFormat, glType, cubeImage[i].data);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tconst mipmapImage = mipmap.image[i].image;\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, mipmapImage.width, mipmapImage.height, 0, glFormat, glType, mipmapImage.data);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, 0, glInternalFormat, glFormat, glType, cubeImage[i]);\n\n\t\t\t\t\t\tfor (let j = 0; j < mipmaps.length; j++) {\n\t\t\t\t\t\t\tconst mipmap = mipmaps[j];\n\t\t\t\t\t\t\tstate.texImage2D(_gl.TEXTURE_CUBE_MAP_POSITIVE_X + i, j + 1, glInternalFormat, glFormat, glType, mipmap.image[i]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\ttextureProperties.__maxMipLevel = mipmaps.length;\n\t\t\t}\n\n\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t// We assume images for cube map have the same size.\n\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, image.width, image.height);\n\t\t\t}\n\n\t\t\ttextureProperties.__version = texture.version;\n\t\t\tif (texture.onUpdate) texture.onUpdate(texture);\n\t\t} // Render targets\n\t\t// Setup storage for target texture and bind it to correct framebuffer\n\n\n\t\tfunction setupFrameBufferTexture(framebuffer, renderTarget, texture, attachment, textureTarget) {\n\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\tconst glType = utils.convert(texture.type);\n\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\tif (textureTarget === _gl.TEXTURE_3D || textureTarget === _gl.TEXTURE_2D_ARRAY) {\n\t\t\t\tstate.texImage3D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, renderTarget.depth, 0, glFormat, glType, null);\n\t\t\t} else {\n\t\t\t\tstate.texImage2D(textureTarget, 0, glInternalFormat, renderTarget.width, renderTarget.height, 0, glFormat, glType, null);\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, attachment, textureTarget, properties.get(texture).__webglTexture, 0);\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Setup storage for internal depth/stencil buffers and bind to correct framebuffer\n\n\n\t\tfunction setupRenderBufferStorage(renderbuffer, renderTarget, isMultisample) {\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderbuffer);\n\n\t\t\tif (renderTarget.depthBuffer && !renderTarget.stencilBuffer) {\n\t\t\t\tlet glInternalFormat = _gl.DEPTH_COMPONENT16;\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst depthTexture = renderTarget.depthTexture;\n\n\t\t\t\t\tif (depthTexture && depthTexture.isDepthTexture) {\n\t\t\t\t\t\tif (depthTexture.type === FloatType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT32F;\n\t\t\t\t\t\t} else if (depthTexture.type === UnsignedIntType) {\n\t\t\t\t\t\t\tglInternalFormat = _gl.DEPTH_COMPONENT24;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else if (renderTarget.depthBuffer && renderTarget.stencilBuffer) {\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, _gl.DEPTH24_STENCIL8, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, _gl.DEPTH_STENCIL, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.RENDERBUFFER, renderbuffer);\n\t\t\t} else {\n\t\t\t\t// Use the first texture for MRT so far\n\t\t\t\tconst texture = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture[0] : renderTarget.texture;\n\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\n\t\t\t\tif (isMultisample) {\n\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.renderbufferStorage(_gl.RENDERBUFFER, glInternalFormat, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\t\t} // Setup resources for a Depth Texture for a FBO (needs an extension)\n\n\n\t\tfunction setupDepthTexture(framebuffer, renderTarget) {\n\t\t\tconst isCube = renderTarget && renderTarget.isWebGLCubeRenderTarget;\n\t\t\tif (isCube) throw new Error('Depth Texture with cube render targets is not supported');\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (!(renderTarget.depthTexture && renderTarget.depthTexture.isDepthTexture)) {\n\t\t\t\tthrow new Error('renderTarget.depthTexture must be an instance of THREE.DepthTexture');\n\t\t\t} // upload an empty depth texture with framebuffer size\n\n\n\t\t\tif (!properties.get(renderTarget.depthTexture).__webglTexture || renderTarget.depthTexture.image.width !== renderTarget.width || renderTarget.depthTexture.image.height !== renderTarget.height) {\n\t\t\t\trenderTarget.depthTexture.image.width = renderTarget.width;\n\t\t\t\trenderTarget.depthTexture.image.height = renderTarget.height;\n\t\t\t\trenderTarget.depthTexture.needsUpdate = true;\n\t\t\t}\n\n\t\t\tsetTexture2D(renderTarget.depthTexture, 0);\n\n\t\t\tconst webglDepthTexture = properties.get(renderTarget.depthTexture).__webglTexture;\n\n\t\t\tif (renderTarget.depthTexture.format === DepthFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else if (renderTarget.depthTexture.format === DepthStencilFormat) {\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.DEPTH_STENCIL_ATTACHMENT, _gl.TEXTURE_2D, webglDepthTexture, 0);\n\t\t\t} else {\n\t\t\t\tthrow new Error('Unknown depthTexture format');\n\t\t\t}\n\t\t} // Setup GL resources for a non-texture depth buffer\n\n\n\t\tfunction setupDepthRenderbuffer(renderTarget) {\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\n\t\t\tif (renderTarget.depthTexture) {\n\t\t\t\tif (isCube) throw new Error('target.depthTexture not supported in Cube render targets');\n\t\t\t\tsetupDepthTexture(renderTargetProperties.__webglFramebuffer, renderTarget);\n\t\t\t} else {\n\t\t\t\tif (isCube) {\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = [];\n\n\t\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer[i]);\n\t\t\t\t\t\trenderTargetProperties.__webglDepthbuffer[i] = _gl.createRenderbuffer();\n\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer[i], renderTarget, false);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\t\t\t\t\trenderTargetProperties.__webglDepthbuffer = _gl.createRenderbuffer();\n\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthbuffer, renderTarget, false);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t} // Set up GL resources for the render target\n\n\n\t\tfunction setupRenderTarget(renderTarget) {\n\t\t\tconst texture = renderTarget.texture;\n\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\tconst textureProperties = properties.get(texture);\n\t\t\trenderTarget.addEventListener('dispose', onRenderTargetDispose);\n\n\t\t\tif (renderTarget.isWebGLMultipleRenderTargets !== true) {\n\t\t\t\ttextureProperties.__webglTexture = _gl.createTexture();\n\t\t\t\ttextureProperties.__version = texture.version;\n\t\t\t\tinfo.memory.textures++;\n\t\t\t}\n\n\t\t\tconst isCube = renderTarget.isWebGLCubeRenderTarget === true;\n\t\t\tconst isMultipleRenderTargets = renderTarget.isWebGLMultipleRenderTargets === true;\n\t\t\tconst isMultisample = renderTarget.isWebGLMultisampleRenderTarget === true;\n\t\t\tconst isRenderTarget3D = texture.isDataTexture3D || texture.isDataTexture2DArray;\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2; // Handles WebGL2 RGBFormat fallback - #18858\n\n\t\t\tif (isWebGL2 && texture.format === RGBFormat && (texture.type === FloatType || texture.type === HalfFloatType)) {\n\t\t\t\ttexture.format = RGBAFormat;\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Rendering to textures with RGB format is not supported. Using RGBA format instead.');\n\t\t\t} // Setup framebuffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = [];\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\trenderTargetProperties.__webglFramebuffer[i] = _gl.createFramebuffer();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\trenderTargetProperties.__webglFramebuffer = _gl.createFramebuffer();\n\n\t\t\t\tif (isMultipleRenderTargets) {\n\t\t\t\t\tif (capabilities.drawBuffers) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\tconst attachmentProperties = properties.get(textures[i]);\n\n\t\t\t\t\t\t\tif (attachmentProperties.__webglTexture === undefined) {\n\t\t\t\t\t\t\t\tattachmentProperties.__webglTexture = _gl.createTexture();\n\t\t\t\t\t\t\t\tinfo.memory.textures++;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultipleRenderTargets can only be used with WebGL2 or WEBGL_draw_buffers extension.');\n\t\t\t\t\t}\n\t\t\t\t} else if (isMultisample) {\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\trenderTargetProperties.__webglMultisampledFramebuffer = _gl.createFramebuffer();\n\t\t\t\t\t\trenderTargetProperties.__webglColorRenderbuffer = _gl.createRenderbuffer();\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\tconst glFormat = utils.convert(texture.format);\n\t\t\t\t\t\tconst glType = utils.convert(texture.type);\n\t\t\t\t\t\tconst glInternalFormat = getInternalFormat(texture.internalFormat, glFormat, glType);\n\t\t\t\t\t\tconst samples = getRenderTargetSamples(renderTarget);\n\n\t\t\t\t\t\t_gl.renderbufferStorageMultisample(_gl.RENDERBUFFER, samples, glInternalFormat, renderTarget.width, renderTarget.height);\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\n\t\t\t\t\t\t_gl.framebufferRenderbuffer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.RENDERBUFFER, renderTargetProperties.__webglColorRenderbuffer);\n\n\t\t\t\t\t\t_gl.bindRenderbuffer(_gl.RENDERBUFFER, null);\n\n\t\t\t\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\t\t\t\trenderTargetProperties.__webglDepthRenderbuffer = _gl.createRenderbuffer();\n\t\t\t\t\t\t\tsetupRenderBufferStorage(renderTargetProperties.__webglDepthRenderbuffer, renderTarget, true);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, null);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Setup color buffer\n\n\n\t\t\tif (isCube) {\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(_gl.TEXTURE_CUBE_MAP, texture, supportsMips);\n\n\t\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer[i], renderTarget, texture, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + i);\n\t\t\t\t}\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_CUBE_MAP, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_CUBE_MAP, null);\n\t\t\t} else if (isMultipleRenderTargets) {\n\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\tconst attachment = textures[i];\n\t\t\t\t\tconst attachmentProperties = properties.get(attachment);\n\t\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, attachmentProperties.__webglTexture);\n\t\t\t\t\tsetTextureParameters(_gl.TEXTURE_2D, attachment, supportsMips);\n\t\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, attachment, _gl.COLOR_ATTACHMENT0 + i, _gl.TEXTURE_2D);\n\n\t\t\t\t\tif (textureNeedsGenerateMipmaps(attachment, supportsMips)) {\n\t\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, attachment, renderTarget.width, renderTarget.height);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\n\t\t\t} else {\n\t\t\t\tlet glTextureType = _gl.TEXTURE_2D;\n\n\t\t\t\tif (isRenderTarget3D) {\n\t\t\t\t\t// Render targets containing layers, i.e: Texture 3D and 2d arrays\n\t\t\t\t\tif (isWebGL2) {\n\t\t\t\t\t\tconst isTexture3D = texture.isDataTexture3D;\n\t\t\t\t\t\tglTextureType = isTexture3D ? _gl.TEXTURE_3D : _gl.TEXTURE_2D_ARRAY;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.warn('THREE.DataTexture3D and THREE.DataTexture2DArray only supported with WebGL2.');\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(glTextureType, textureProperties.__webglTexture);\n\t\t\t\tsetTextureParameters(glTextureType, texture, supportsMips);\n\t\t\t\tsetupFrameBufferTexture(renderTargetProperties.__webglFramebuffer, renderTarget, texture, _gl.COLOR_ATTACHMENT0, glTextureType);\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tgenerateMipmap(_gl.TEXTURE_2D, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t}\n\n\t\t\t\tstate.bindTexture(_gl.TEXTURE_2D, null);\n\t\t\t} // Setup depth and stencil buffers\n\n\n\t\t\tif (renderTarget.depthBuffer) {\n\t\t\t\tsetupDepthRenderbuffer(renderTarget);\n\t\t\t}\n\t\t}\n\n\t\tfunction updateRenderTargetMipmap(renderTarget) {\n\t\t\tconst supportsMips = isPowerOfTwo$1(renderTarget) || isWebGL2;\n\t\t\tconst textures = renderTarget.isWebGLMultipleRenderTargets === true ? renderTarget.texture : [renderTarget.texture];\n\n\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\tconst texture = textures[i];\n\n\t\t\t\tif (textureNeedsGenerateMipmaps(texture, supportsMips)) {\n\t\t\t\t\tconst target = renderTarget.isWebGLCubeRenderTarget ? _gl.TEXTURE_CUBE_MAP : _gl.TEXTURE_2D;\n\n\t\t\t\t\tconst webglTexture = properties.get(texture).__webglTexture;\n\n\t\t\t\t\tstate.bindTexture(target, webglTexture);\n\t\t\t\t\tgenerateMipmap(target, texture, renderTarget.width, renderTarget.height);\n\t\t\t\t\tstate.bindTexture(target, null);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction updateMultisampleRenderTarget(renderTarget) {\n\t\t\tif (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\tif (isWebGL2) {\n\t\t\t\t\tconst width = renderTarget.width;\n\t\t\t\t\tconst height = renderTarget.height;\n\t\t\t\t\tlet mask = _gl.COLOR_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.depthBuffer) mask |= _gl.DEPTH_BUFFER_BIT;\n\t\t\t\t\tif (renderTarget.stencilBuffer) mask |= _gl.STENCIL_BUFFER_BIT;\n\t\t\t\t\tconst renderTargetProperties = properties.get(renderTarget);\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglFramebuffer);\n\n\t\t\t\t\t_gl.blitFramebuffer(0, 0, width, height, 0, 0, width, height, mask, _gl.NEAREST);\n\n\t\t\t\t\tstate.bindFramebuffer(_gl.READ_FRAMEBUFFER, null);\n\t\t\t\t\tstate.bindFramebuffer(_gl.DRAW_FRAMEBUFFER, renderTargetProperties.__webglMultisampledFramebuffer);\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.WebGLRenderer: WebGLMultisampleRenderTarget can only be used with WebGL2.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction getRenderTargetSamples(renderTarget) {\n\t\t\treturn isWebGL2 && renderTarget.isWebGLMultisampleRenderTarget ? Math.min(maxSamples, renderTarget.samples) : 0;\n\t\t}\n\n\t\tfunction updateVideoTexture(texture) {\n\t\t\tconst frame = info.render.frame; // Check the last frame we updated the VideoTexture\n\n\t\t\tif (_videoTextures.get(texture) !== frame) {\n\t\t\t\t_videoTextures.set(texture, frame);\n\n\t\t\t\ttexture.update();\n\t\t\t}\n\t\t} // backwards compatibility\n\n\n\t\tlet warnedTexture2D = false;\n\t\tlet warnedTextureCube = false;\n\n\t\tfunction safeSetTexture2D(texture, slot) {\n\t\t\tif (texture && texture.isWebGLRenderTarget) {\n\t\t\t\tif (warnedTexture2D === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTexture2D: don\\'t use render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTexture2D = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTexture2D(texture, slot);\n\t\t}\n\n\t\tfunction safeSetTextureCube(texture, slot) {\n\t\t\tif (texture && texture.isWebGLCubeRenderTarget) {\n\t\t\t\tif (warnedTextureCube === false) {\n\t\t\t\t\tconsole.warn('THREE.WebGLTextures.safeSetTextureCube: don\\'t use cube render targets as textures. Use their .texture property instead.');\n\t\t\t\t\twarnedTextureCube = true;\n\t\t\t\t}\n\n\t\t\t\ttexture = texture.texture;\n\t\t\t}\n\n\t\t\tsetTextureCube(texture, slot);\n\t\t} //\n\n\n\t\tthis.allocateTextureUnit = allocateTextureUnit;\n\t\tthis.resetTextureUnits = resetTextureUnits;\n\t\tthis.setTexture2D = setTexture2D;\n\t\tthis.setTexture2DArray = setTexture2DArray;\n\t\tthis.setTexture3D = setTexture3D;\n\t\tthis.setTextureCube = setTextureCube;\n\t\tthis.setupRenderTarget = setupRenderTarget;\n\t\tthis.updateRenderTargetMipmap = updateRenderTargetMipmap;\n\t\tthis.updateMultisampleRenderTarget = updateMultisampleRenderTarget;\n\t\tthis.safeSetTexture2D = safeSetTexture2D;\n\t\tthis.safeSetTextureCube = safeSetTextureCube;\n\t}\n\n\tfunction WebGLUtils(gl, extensions, capabilities) {\n\t\tconst isWebGL2 = capabilities.isWebGL2;\n\n\t\tfunction convert(p) {\n\t\t\tlet extension;\n\t\t\tif (p === UnsignedByteType) return gl.UNSIGNED_BYTE;\n\t\t\tif (p === UnsignedShort4444Type) return gl.UNSIGNED_SHORT_4_4_4_4;\n\t\t\tif (p === UnsignedShort5551Type) return gl.UNSIGNED_SHORT_5_5_5_1;\n\t\t\tif (p === UnsignedShort565Type) return gl.UNSIGNED_SHORT_5_6_5;\n\t\t\tif (p === ByteType) return gl.BYTE;\n\t\t\tif (p === ShortType) return gl.SHORT;\n\t\t\tif (p === UnsignedShortType) return gl.UNSIGNED_SHORT;\n\t\t\tif (p === IntType) return gl.INT;\n\t\t\tif (p === UnsignedIntType) return gl.UNSIGNED_INT;\n\t\t\tif (p === FloatType) return gl.FLOAT;\n\n\t\t\tif (p === HalfFloatType) {\n\t\t\t\tif (isWebGL2) return gl.HALF_FLOAT;\n\t\t\t\textension = extensions.get('OES_texture_half_float');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.HALF_FLOAT_OES;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === AlphaFormat) return gl.ALPHA;\n\t\t\tif (p === RGBFormat) return gl.RGB;\n\t\t\tif (p === RGBAFormat) return gl.RGBA;\n\t\t\tif (p === LuminanceFormat) return gl.LUMINANCE;\n\t\t\tif (p === LuminanceAlphaFormat) return gl.LUMINANCE_ALPHA;\n\t\t\tif (p === DepthFormat) return gl.DEPTH_COMPONENT;\n\t\t\tif (p === DepthStencilFormat) return gl.DEPTH_STENCIL;\n\t\t\tif (p === RedFormat) return gl.RED; // WebGL2 formats.\n\n\t\t\tif (p === RedIntegerFormat) return gl.RED_INTEGER;\n\t\t\tif (p === RGFormat) return gl.RG;\n\t\t\tif (p === RGIntegerFormat) return gl.RG_INTEGER;\n\t\t\tif (p === RGBIntegerFormat) return gl.RGB_INTEGER;\n\t\t\tif (p === RGBAIntegerFormat) return gl.RGBA_INTEGER;\n\n\t\t\tif (p === RGB_S3TC_DXT1_Format || p === RGBA_S3TC_DXT1_Format || p === RGBA_S3TC_DXT3_Format || p === RGBA_S3TC_DXT5_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_s3tc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_S3TC_DXT1_Format) return extension.COMPRESSED_RGB_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT1_Format) return extension.COMPRESSED_RGBA_S3TC_DXT1_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT3_Format) return extension.COMPRESSED_RGBA_S3TC_DXT3_EXT;\n\t\t\t\t\tif (p === RGBA_S3TC_DXT5_Format) return extension.COMPRESSED_RGBA_S3TC_DXT5_EXT;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_PVRTC_4BPPV1_Format || p === RGB_PVRTC_2BPPV1_Format || p === RGBA_PVRTC_4BPPV1_Format || p === RGBA_PVRTC_2BPPV1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_pvrtc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGB_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGB_PVRTC_2BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_4BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG;\n\t\t\t\t\tif (p === RGBA_PVRTC_2BPPV1_Format) return extension.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC1_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc1');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.COMPRESSED_RGB_ETC1_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGB_ETC2_Format || p === RGBA_ETC2_EAC_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_etc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\tif (p === RGB_ETC2_Format) return extension.COMPRESSED_RGB8_ETC2;\n\t\t\t\t\tif (p === RGBA_ETC2_EAC_Format) return extension.COMPRESSED_RGBA8_ETC2_EAC;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_ASTC_4x4_Format || p === RGBA_ASTC_5x4_Format || p === RGBA_ASTC_5x5_Format || p === RGBA_ASTC_6x5_Format || p === RGBA_ASTC_6x6_Format || p === RGBA_ASTC_8x5_Format || p === RGBA_ASTC_8x6_Format || p === RGBA_ASTC_8x8_Format || p === RGBA_ASTC_10x5_Format || p === RGBA_ASTC_10x6_Format || p === RGBA_ASTC_10x8_Format || p === RGBA_ASTC_10x10_Format || p === RGBA_ASTC_12x10_Format || p === RGBA_ASTC_12x12_Format || p === SRGB8_ALPHA8_ASTC_4x4_Format || p === SRGB8_ALPHA8_ASTC_5x4_Format || p === SRGB8_ALPHA8_ASTC_5x5_Format || p === SRGB8_ALPHA8_ASTC_6x5_Format || p === SRGB8_ALPHA8_ASTC_6x6_Format || p === SRGB8_ALPHA8_ASTC_8x5_Format || p === SRGB8_ALPHA8_ASTC_8x6_Format || p === SRGB8_ALPHA8_ASTC_8x8_Format || p === SRGB8_ALPHA8_ASTC_10x5_Format || p === SRGB8_ALPHA8_ASTC_10x6_Format || p === SRGB8_ALPHA8_ASTC_10x8_Format || p === SRGB8_ALPHA8_ASTC_10x10_Format || p === SRGB8_ALPHA8_ASTC_12x10_Format || p === SRGB8_ALPHA8_ASTC_12x12_Format) {\n\t\t\t\textension = extensions.get('WEBGL_compressed_texture_astc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === RGBA_BPTC_Format) {\n\t\t\t\textension = extensions.get('EXT_texture_compression_bptc');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\t// TODO Complete?\n\t\t\t\t\treturn p;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (p === UnsignedInt248Type) {\n\t\t\t\tif (isWebGL2) return gl.UNSIGNED_INT_24_8;\n\t\t\t\textension = extensions.get('WEBGL_depth_texture');\n\n\t\t\t\tif (extension !== null) {\n\t\t\t\t\treturn extension.UNSIGNED_INT_24_8_WEBGL;\n\t\t\t\t} else {\n\t\t\t\t\treturn null;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\tconvert: convert\n\t\t};\n\t}\n\n\tclass ArrayCamera extends PerspectiveCamera {\n\t\tconstructor(array = []) {\n\t\t\tsuper();\n\t\t\tthis.cameras = array;\n\t\t}\n\n\t}\n\n\tArrayCamera.prototype.isArrayCamera = true;\n\n\tclass Group extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Group';\n\t\t}\n\n\t}\n\n\tGroup.prototype.isGroup = true;\n\n\tconst _moveEvent = {\n\t\ttype: 'move'\n\t};\n\n\tclass WebXRController {\n\t\tconstructor() {\n\t\t\tthis._targetRay = null;\n\t\t\tthis._grip = null;\n\t\t\tthis._hand = null;\n\t\t}\n\n\t\tgetHandSpace() {\n\t\t\tif (this._hand === null) {\n\t\t\t\tthis._hand = new Group();\n\t\t\t\tthis._hand.matrixAutoUpdate = false;\n\t\t\t\tthis._hand.visible = false;\n\t\t\t\tthis._hand.joints = {};\n\t\t\t\tthis._hand.inputState = {\n\t\t\t\t\tpinching: false\n\t\t\t\t};\n\t\t\t}\n\n\t\t\treturn this._hand;\n\t\t}\n\n\t\tgetTargetRaySpace() {\n\t\t\tif (this._targetRay === null) {\n\t\t\t\tthis._targetRay = new Group();\n\t\t\t\tthis._targetRay.matrixAutoUpdate = false;\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t\tthis._targetRay.hasLinearVelocity = false;\n\t\t\t\tthis._targetRay.linearVelocity = new Vector3();\n\t\t\t\tthis._targetRay.hasAngularVelocity = false;\n\t\t\t\tthis._targetRay.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._targetRay;\n\t\t}\n\n\t\tgetGripSpace() {\n\t\t\tif (this._grip === null) {\n\t\t\t\tthis._grip = new Group();\n\t\t\t\tthis._grip.matrixAutoUpdate = false;\n\t\t\t\tthis._grip.visible = false;\n\t\t\t\tthis._grip.hasLinearVelocity = false;\n\t\t\t\tthis._grip.linearVelocity = new Vector3();\n\t\t\t\tthis._grip.hasAngularVelocity = false;\n\t\t\t\tthis._grip.angularVelocity = new Vector3();\n\t\t\t}\n\n\t\t\treturn this._grip;\n\t\t}\n\n\t\tdispatchEvent(event) {\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.dispatchEvent(event);\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.dispatchEvent(event);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect(inputSource) {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'disconnected',\n\t\t\t\tdata: inputSource\n\t\t\t});\n\n\t\t\tif (this._targetRay !== null) {\n\t\t\t\tthis._targetRay.visible = false;\n\t\t\t}\n\n\t\t\tif (this._grip !== null) {\n\t\t\t\tthis._grip.visible = false;\n\t\t\t}\n\n\t\t\tif (this._hand !== null) {\n\t\t\t\tthis._hand.visible = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tupdate(inputSource, frame, referenceSpace) {\n\t\t\tlet inputPose = null;\n\t\t\tlet gripPose = null;\n\t\t\tlet handPose = null;\n\t\t\tconst targetRay = this._targetRay;\n\t\t\tconst grip = this._grip;\n\t\t\tconst hand = this._hand;\n\n\t\t\tif (inputSource && frame.session.visibilityState !== 'visible-blurred') {\n\t\t\t\tif (targetRay !== null) {\n\t\t\t\t\tinputPose = frame.getPose(inputSource.targetRaySpace, referenceSpace);\n\n\t\t\t\t\tif (inputPose !== null) {\n\t\t\t\t\t\ttargetRay.matrix.fromArray(inputPose.transform.matrix);\n\t\t\t\t\t\ttargetRay.matrix.decompose(targetRay.position, targetRay.rotation, targetRay.scale);\n\n\t\t\t\t\t\tif (inputPose.linearVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = true;\n\t\t\t\t\t\t\ttargetRay.linearVelocity.copy(inputPose.linearVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasLinearVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inputPose.angularVelocity) {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = true;\n\t\t\t\t\t\t\ttargetRay.angularVelocity.copy(inputPose.angularVelocity);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttargetRay.hasAngularVelocity = false;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis.dispatchEvent(_moveEvent);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hand && inputSource.hand) {\n\t\t\t\t\thandPose = true;\n\n\t\t\t\t\tfor (const inputjoint of inputSource.hand.values()) {\n\t\t\t\t\t\t// Update the joints groups with the XRJoint poses\n\t\t\t\t\t\tconst jointPose = frame.getJointPose(inputjoint, referenceSpace);\n\n\t\t\t\t\t\tif (hand.joints[inputjoint.jointName] === undefined) {\n\t\t\t\t\t\t\t// The transform of this joint will be updated with the joint pose on each frame\n\t\t\t\t\t\t\tconst joint = new Group();\n\t\t\t\t\t\t\tjoint.matrixAutoUpdate = false;\n\t\t\t\t\t\t\tjoint.visible = false;\n\t\t\t\t\t\t\thand.joints[inputjoint.jointName] = joint; // ??\n\n\t\t\t\t\t\t\thand.add(joint);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst joint = hand.joints[inputjoint.jointName];\n\n\t\t\t\t\t\tif (jointPose !== null) {\n\t\t\t\t\t\t\tjoint.matrix.fromArray(jointPose.transform.matrix);\n\t\t\t\t\t\t\tjoint.matrix.decompose(joint.position, joint.rotation, joint.scale);\n\t\t\t\t\t\t\tjoint.jointRadius = jointPose.radius;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tjoint.visible = jointPose !== null;\n\t\t\t\t\t} // Custom events\n\t\t\t\t\t// Check pinchz\n\n\n\t\t\t\t\tconst indexTip = hand.joints['index-finger-tip'];\n\t\t\t\t\tconst thumbTip = hand.joints['thumb-tip'];\n\t\t\t\t\tconst distance = indexTip.position.distanceTo(thumbTip.position);\n\t\t\t\t\tconst distanceToPinch = 0.02;\n\t\t\t\t\tconst threshold = 0.005;\n\n\t\t\t\t\tif (hand.inputState.pinching && distance > distanceToPinch + threshold) {\n\t\t\t\t\t\thand.inputState.pinching = false;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchend',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t} else if (!hand.inputState.pinching && distance <= distanceToPinch - threshold) {\n\t\t\t\t\t\thand.inputState.pinching = true;\n\t\t\t\t\t\tthis.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'pinchstart',\n\t\t\t\t\t\t\thandedness: inputSource.handedness,\n\t\t\t\t\t\t\ttarget: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (grip !== null && inputSource.gripSpace) {\n\t\t\t\t\t\tgripPose = frame.getPose(inputSource.gripSpace, referenceSpace);\n\n\t\t\t\t\t\tif (gripPose !== null) {\n\t\t\t\t\t\t\tgrip.matrix.fromArray(gripPose.transform.matrix);\n\t\t\t\t\t\t\tgrip.matrix.decompose(grip.position, grip.rotation, grip.scale);\n\n\t\t\t\t\t\t\tif (gripPose.linearVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = true;\n\t\t\t\t\t\t\t\tgrip.linearVelocity.copy(gripPose.linearVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasLinearVelocity = false;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (gripPose.angularVelocity) {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = true;\n\t\t\t\t\t\t\t\tgrip.angularVelocity.copy(gripPose.angularVelocity);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tgrip.hasAngularVelocity = false;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (targetRay !== null) {\n\t\t\t\ttargetRay.visible = inputPose !== null;\n\t\t\t}\n\n\t\t\tif (grip !== null) {\n\t\t\t\tgrip.visible = gripPose !== null;\n\t\t\t}\n\n\t\t\tif (hand !== null) {\n\t\t\t\thand.visible = handPose !== null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass WebXRManager extends EventDispatcher {\n\t\tconstructor(renderer, gl) {\n\t\t\tsuper();\n\t\t\tconst scope = this;\n\t\t\tconst state = renderer.state;\n\t\t\tlet session = null;\n\t\t\tlet framebufferScaleFactor = 1.0;\n\t\t\tlet referenceSpace = null;\n\t\t\tlet referenceSpaceType = 'local-floor';\n\t\t\tlet pose = null;\n\t\t\tconst controllers = [];\n\t\t\tconst inputSourcesMap = new Map(); //\n\n\t\t\tconst cameraL = new PerspectiveCamera();\n\t\t\tcameraL.layers.enable(1);\n\t\t\tcameraL.viewport = new Vector4();\n\t\t\tconst cameraR = new PerspectiveCamera();\n\t\t\tcameraR.layers.enable(2);\n\t\t\tcameraR.viewport = new Vector4();\n\t\t\tconst cameras = [cameraL, cameraR];\n\t\t\tconst cameraVR = new ArrayCamera();\n\t\t\tcameraVR.layers.enable(1);\n\t\t\tcameraVR.layers.enable(2);\n\t\t\tlet _currentDepthNear = null;\n\t\t\tlet _currentDepthFar = null; //\n\n\t\t\tthis.cameraAutoUpdate = true;\n\t\t\tthis.enabled = false;\n\t\t\tthis.isPresenting = false;\n\n\t\t\tthis.getController = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getTargetRaySpace();\n\t\t\t};\n\n\t\t\tthis.getControllerGrip = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getGripSpace();\n\t\t\t};\n\n\t\t\tthis.getHand = function (index) {\n\t\t\t\tlet controller = controllers[index];\n\n\t\t\t\tif (controller === undefined) {\n\t\t\t\t\tcontroller = new WebXRController();\n\t\t\t\t\tcontrollers[index] = controller;\n\t\t\t\t}\n\n\t\t\t\treturn controller.getHandSpace();\n\t\t\t}; //\n\n\n\t\t\tfunction onSessionEvent(event) {\n\t\t\t\tconst controller = inputSourcesMap.get(event.inputSource);\n\n\t\t\t\tif (controller) {\n\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\ttype: event.type,\n\t\t\t\t\t\tdata: event.inputSource\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction onSessionEnd() {\n\t\t\t\tinputSourcesMap.forEach(function (controller, inputSource) {\n\t\t\t\t\tcontroller.disconnect(inputSource);\n\t\t\t\t});\n\t\t\t\tinputSourcesMap.clear();\n\t\t\t\t_currentDepthNear = null;\n\t\t\t\t_currentDepthFar = null; // restore framebuffer/rendering state\n\n\t\t\t\tstate.bindXRFramebuffer(null);\n\t\t\t\trenderer.setRenderTarget(renderer.getRenderTarget()); //\n\n\t\t\t\tanimation.stop();\n\t\t\t\tscope.isPresenting = false;\n\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\ttype: 'sessionend'\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tthis.setFramebufferScaleFactor = function (value) {\n\t\t\t\tframebufferScaleFactor = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change framebuffer scale while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.setReferenceSpaceType = function (value) {\n\t\t\t\treferenceSpaceType = value;\n\n\t\t\t\tif (scope.isPresenting === true) {\n\t\t\t\t\tconsole.warn('THREE.WebXRManager: Cannot change reference space type while presenting.');\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getReferenceSpace = function () {\n\t\t\t\treturn referenceSpace;\n\t\t\t};\n\n\t\t\tthis.getSession = function () {\n\t\t\t\treturn session;\n\t\t\t};\n\n\t\t\tthis.setSession = async function (value) {\n\t\t\t\tsession = value;\n\n\t\t\t\tif (session !== null) {\n\t\t\t\t\tsession.addEventListener('select', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectstart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('selectend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeeze', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezestart', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('squeezeend', onSessionEvent);\n\t\t\t\t\tsession.addEventListener('end', onSessionEnd);\n\t\t\t\t\tsession.addEventListener('inputsourceschange', onInputSourcesChange);\n\t\t\t\t\tconst attributes = gl.getContextAttributes();\n\n\t\t\t\t\tif (attributes.xrCompatible !== true) {\n\t\t\t\t\t\tawait gl.makeXRCompatible();\n\t\t\t\t\t}\n\n\t\t\t\t\tconst layerInit = {\n\t\t\t\t\t\tantialias: attributes.antialias,\n\t\t\t\t\t\talpha: attributes.alpha,\n\t\t\t\t\t\tdepth: attributes.depth,\n\t\t\t\t\t\tstencil: attributes.stencil,\n\t\t\t\t\t\tframebufferScaleFactor: framebufferScaleFactor\n\t\t\t\t\t}; // eslint-disable-next-line no-undef\n\n\t\t\t\t\tconst baseLayer = new XRWebGLLayer(session, gl, layerInit);\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tbaseLayer: baseLayer\n\t\t\t\t\t});\n\t\t\t\t\treferenceSpace = await session.requestReferenceSpace(referenceSpaceType);\n\t\t\t\t\tanimation.setContext(session);\n\t\t\t\t\tanimation.start();\n\t\t\t\t\tscope.isPresenting = true;\n\t\t\t\t\tscope.dispatchEvent({\n\t\t\t\t\t\ttype: 'sessionstart'\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tfunction onInputSourcesChange(event) {\n\t\t\t\tconst inputSources = session.inputSources; // Assign inputSources to available controllers\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tinputSourcesMap.set(inputSources[i], controllers[i]);\n\t\t\t\t} // Notify disconnected\n\n\n\t\t\t\tfor (let i = 0; i < event.removed.length; i++) {\n\t\t\t\t\tconst inputSource = event.removed[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'disconnected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t\tinputSourcesMap.delete(inputSource);\n\t\t\t\t\t}\n\t\t\t\t} // Notify connected\n\n\n\t\t\t\tfor (let i = 0; i < event.added.length; i++) {\n\t\t\t\t\tconst inputSource = event.added[i];\n\t\t\t\t\tconst controller = inputSourcesMap.get(inputSource);\n\n\t\t\t\t\tif (controller) {\n\t\t\t\t\t\tcontroller.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'connected',\n\t\t\t\t\t\t\tdata: inputSource\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tconst cameraLPos = new Vector3();\n\t\t\tconst cameraRPos = new Vector3();\n\t\t\t/**\n\t\t\t * Assumes 2 cameras that are parallel and share an X-axis, and that\n\t\t\t * the cameras' projection and world matrices have already been set.\n\t\t\t * And that near and far planes are identical for both cameras.\n\t\t\t * Visualization of this technique: https://computergraphics.stackexchange.com/a/4765\n\t\t\t */\n\n\t\t\tfunction setProjectionFromUnion(camera, cameraL, cameraR) {\n\t\t\t\tcameraLPos.setFromMatrixPosition(cameraL.matrixWorld);\n\t\t\t\tcameraRPos.setFromMatrixPosition(cameraR.matrixWorld);\n\t\t\t\tconst ipd = cameraLPos.distanceTo(cameraRPos);\n\t\t\t\tconst projL = cameraL.projectionMatrix.elements;\n\t\t\t\tconst projR = cameraR.projectionMatrix.elements; // VR systems will have identical far and near planes, and\n\t\t\t\t// most likely identical top and bottom frustum extents.\n\t\t\t\t// Use the left camera for these values.\n\n\t\t\t\tconst near = projL[14] / (projL[10] - 1);\n\t\t\t\tconst far = projL[14] / (projL[10] + 1);\n\t\t\t\tconst topFov = (projL[9] + 1) / projL[5];\n\t\t\t\tconst bottomFov = (projL[9] - 1) / projL[5];\n\t\t\t\tconst leftFov = (projL[8] - 1) / projL[0];\n\t\t\t\tconst rightFov = (projR[8] + 1) / projR[0];\n\t\t\t\tconst left = near * leftFov;\n\t\t\t\tconst right = near * rightFov; // Calculate the new camera's position offset from the\n\t\t\t\t// left camera. xOffset should be roughly half `ipd`.\n\n\t\t\t\tconst zOffset = ipd / (-leftFov + rightFov);\n\t\t\t\tconst xOffset = zOffset * -leftFov; // TODO: Better way to apply this offset?\n\n\t\t\t\tcameraL.matrixWorld.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.translateX(xOffset);\n\t\t\t\tcamera.translateZ(zOffset);\n\t\t\t\tcamera.matrixWorld.compose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert(); // Find the union of the frustum values of the cameras and scale\n\t\t\t\t// the values so that the near plane's position does not change in world space,\n\t\t\t\t// although must now be relative to the new union camera.\n\n\t\t\t\tconst near2 = near + zOffset;\n\t\t\t\tconst far2 = far + zOffset;\n\t\t\t\tconst left2 = left - xOffset;\n\t\t\t\tconst right2 = right + (ipd - xOffset);\n\t\t\t\tconst top2 = topFov * far / far2 * near2;\n\t\t\t\tconst bottom2 = bottomFov * far / far2 * near2;\n\t\t\t\tcamera.projectionMatrix.makePerspective(left2, right2, top2, bottom2, near2, far2);\n\t\t\t}\n\n\t\t\tfunction updateCamera(camera, parent) {\n\t\t\t\tif (parent === null) {\n\t\t\t\t\tcamera.matrixWorld.copy(camera.matrix);\n\t\t\t\t} else {\n\t\t\t\t\tcamera.matrixWorld.multiplyMatrices(parent.matrixWorld, camera.matrix);\n\t\t\t\t}\n\n\t\t\t\tcamera.matrixWorldInverse.copy(camera.matrixWorld).invert();\n\t\t\t}\n\n\t\t\tthis.updateCamera = function (camera) {\n\t\t\t\tif (session === null) return;\n\t\t\t\tcameraVR.near = cameraR.near = cameraL.near = camera.near;\n\t\t\t\tcameraVR.far = cameraR.far = cameraL.far = camera.far;\n\n\t\t\t\tif (_currentDepthNear !== cameraVR.near || _currentDepthFar !== cameraVR.far) {\n\t\t\t\t\t// Note that the new renderState won't apply until the next frame. See #18320\n\t\t\t\t\tsession.updateRenderState({\n\t\t\t\t\t\tdepthNear: cameraVR.near,\n\t\t\t\t\t\tdepthFar: cameraVR.far\n\t\t\t\t\t});\n\t\t\t\t\t_currentDepthNear = cameraVR.near;\n\t\t\t\t\t_currentDepthFar = cameraVR.far;\n\t\t\t\t}\n\n\t\t\t\tconst parent = camera.parent;\n\t\t\t\tconst cameras = cameraVR.cameras;\n\t\t\t\tupdateCamera(cameraVR, parent);\n\n\t\t\t\tfor (let i = 0; i < cameras.length; i++) {\n\t\t\t\t\tupdateCamera(cameras[i], parent);\n\t\t\t\t} // update camera and its children\n\n\n\t\t\t\tcamera.matrixWorld.copy(cameraVR.matrixWorld);\n\t\t\t\tcamera.matrix.copy(cameraVR.matrix);\n\t\t\t\tcamera.matrix.decompose(camera.position, camera.quaternion, camera.scale);\n\t\t\t\tconst children = camera.children;\n\n\t\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\t\tchildren[i].updateMatrixWorld(true);\n\t\t\t\t} // update projection matrix for proper view frustum culling\n\n\n\t\t\t\tif (cameras.length === 2) {\n\t\t\t\t\tsetProjectionFromUnion(cameraVR, cameraL, cameraR);\n\t\t\t\t} else {\n\t\t\t\t\t// assume single camera setup (AR)\n\t\t\t\t\tcameraVR.projectionMatrix.copy(cameraL.projectionMatrix);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.getCamera = function () {\n\t\t\t\treturn cameraVR;\n\t\t\t}; // Animation Loop\n\n\n\t\t\tlet onAnimationFrameCallback = null;\n\n\t\t\tfunction onAnimationFrame(time, frame) {\n\t\t\t\tpose = frame.getViewerPose(referenceSpace);\n\n\t\t\t\tif (pose !== null) {\n\t\t\t\t\tconst views = pose.views;\n\t\t\t\t\tconst baseLayer = session.renderState.baseLayer;\n\t\t\t\t\tstate.bindXRFramebuffer(baseLayer.framebuffer);\n\t\t\t\t\tlet cameraVRNeedsUpdate = false; // check if it's necessary to rebuild cameraVR's camera list\n\n\t\t\t\t\tif (views.length !== cameraVR.cameras.length) {\n\t\t\t\t\t\tcameraVR.cameras.length = 0;\n\t\t\t\t\t\tcameraVRNeedsUpdate = true;\n\t\t\t\t\t}\n\n\t\t\t\t\tfor (let i = 0; i < views.length; i++) {\n\t\t\t\t\t\tconst view = views[i];\n\t\t\t\t\t\tconst viewport = baseLayer.getViewport(view);\n\t\t\t\t\t\tconst camera = cameras[i];\n\t\t\t\t\t\tcamera.matrix.fromArray(view.transform.matrix);\n\t\t\t\t\t\tcamera.projectionMatrix.fromArray(view.projectionMatrix);\n\t\t\t\t\t\tcamera.viewport.set(viewport.x, viewport.y, viewport.width, viewport.height);\n\n\t\t\t\t\t\tif (i === 0) {\n\t\t\t\t\t\t\tcameraVR.matrix.copy(camera.matrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (cameraVRNeedsUpdate === true) {\n\t\t\t\t\t\t\tcameraVR.cameras.push(camera);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} //\n\n\n\t\t\t\tconst inputSources = session.inputSources;\n\n\t\t\t\tfor (let i = 0; i < controllers.length; i++) {\n\t\t\t\t\tconst controller = controllers[i];\n\t\t\t\t\tconst inputSource = inputSources[i];\n\t\t\t\t\tcontroller.update(inputSource, frame, referenceSpace);\n\t\t\t\t}\n\n\t\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time, frame);\n\t\t\t}\n\n\t\t\tconst animation = new WebGLAnimation();\n\t\t\tanimation.setAnimationLoop(onAnimationFrame);\n\n\t\t\tthis.setAnimationLoop = function (callback) {\n\t\t\t\tonAnimationFrameCallback = callback;\n\t\t\t};\n\n\t\t\tthis.dispose = function () {};\n\t\t}\n\n\t}\n\n\tfunction WebGLMaterials(properties) {\n\t\tfunction refreshFogUniforms(uniforms, fog) {\n\t\t\tuniforms.fogColor.value.copy(fog.color);\n\n\t\t\tif (fog.isFog) {\n\t\t\t\tuniforms.fogNear.value = fog.near;\n\t\t\t\tuniforms.fogFar.value = fog.far;\n\t\t\t} else if (fog.isFogExp2) {\n\t\t\t\tuniforms.fogDensity.value = fog.density;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshMaterialUniforms(uniforms, material, pixelRatio, height, transmissionRenderTarget) {\n\t\t\tif (material.isMeshBasicMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t} else if (material.isMeshLambertMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsLambert(uniforms, material);\n\t\t\t} else if (material.isMeshToonMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsToon(uniforms, material);\n\t\t\t} else if (material.isMeshPhongMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsPhong(uniforms, material);\n\t\t\t} else if (material.isMeshStandardMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\n\t\t\t\tif (material.isMeshPhysicalMaterial) {\n\t\t\t\t\trefreshUniformsPhysical(uniforms, material, transmissionRenderTarget);\n\t\t\t\t} else {\n\t\t\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isMeshMatcapMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsMatcap(uniforms, material);\n\t\t\t} else if (material.isMeshDepthMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDepth(uniforms, material);\n\t\t\t} else if (material.isMeshDistanceMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsDistance(uniforms, material);\n\t\t\t} else if (material.isMeshNormalMaterial) {\n\t\t\t\trefreshUniformsCommon(uniforms, material);\n\t\t\t\trefreshUniformsNormal(uniforms, material);\n\t\t\t} else if (material.isLineBasicMaterial) {\n\t\t\t\trefreshUniformsLine(uniforms, material);\n\n\t\t\t\tif (material.isLineDashedMaterial) {\n\t\t\t\t\trefreshUniformsDash(uniforms, material);\n\t\t\t\t}\n\t\t\t} else if (material.isPointsMaterial) {\n\t\t\t\trefreshUniformsPoints(uniforms, material, pixelRatio, height);\n\t\t\t} else if (material.isSpriteMaterial) {\n\t\t\t\trefreshUniformsSprites(uniforms, material);\n\t\t\t} else if (material.isShadowMaterial) {\n\t\t\t\tuniforms.color.value.copy(material.color);\n\t\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\t} else if (material.isShaderMaterial) {\n\t\t\t\tmaterial.uniformsNeedUpdate = false; // #15581\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsCommon(uniforms, material) {\n\t\t\tuniforms.opacity.value = material.opacity;\n\n\t\t\tif (material.color) {\n\t\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\t}\n\n\t\t\tif (material.emissive) {\n\t\t\t\tuniforms.emissive.value.copy(material.emissive).multiplyScalar(material.emissiveIntensity);\n\t\t\t}\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (material.specularMap) {\n\t\t\t\tuniforms.specularMap.value = material.specularMap;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\tuniforms.envMap.value = envMap;\n\t\t\t\tuniforms.flipEnvMap.value = envMap.isCubeTexture && envMap._needsFlipEnvMap ? -1 : 1;\n\t\t\t\tuniforms.reflectivity.value = material.reflectivity;\n\t\t\t\tuniforms.refractionRatio.value = material.refractionRatio;\n\n\t\t\t\tconst maxMipLevel = properties.get(envMap).__maxMipLevel;\n\n\t\t\t\tif (maxMipLevel !== undefined) {\n\t\t\t\t\tuniforms.maxMipLevel.value = maxMipLevel;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (material.lightMap) {\n\t\t\t\tuniforms.lightMap.value = material.lightMap;\n\t\t\t\tuniforms.lightMapIntensity.value = material.lightMapIntensity;\n\t\t\t}\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuniforms.aoMap.value = material.aoMap;\n\t\t\t\tuniforms.aoMapIntensity.value = material.aoMapIntensity;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. specular map\n\t\t\t// 3. displacementMap map\n\t\t\t// 4. normal map\n\t\t\t// 5. bump map\n\t\t\t// 6. roughnessMap map\n\t\t\t// 7. metalnessMap map\n\t\t\t// 8. alphaMap map\n\t\t\t// 9. emissiveMap map\n\t\t\t// 10. clearcoat map\n\t\t\t// 11. clearcoat normal map\n\t\t\t// 12. clearcoat roughnessMap map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.specularMap) {\n\t\t\t\tuvScaleMap = material.specularMap;\n\t\t\t} else if (material.displacementMap) {\n\t\t\t\tuvScaleMap = material.displacementMap;\n\t\t\t} else if (material.normalMap) {\n\t\t\t\tuvScaleMap = material.normalMap;\n\t\t\t} else if (material.bumpMap) {\n\t\t\t\tuvScaleMap = material.bumpMap;\n\t\t\t} else if (material.roughnessMap) {\n\t\t\t\tuvScaleMap = material.roughnessMap;\n\t\t\t} else if (material.metalnessMap) {\n\t\t\t\tuvScaleMap = material.metalnessMap;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t} else if (material.emissiveMap) {\n\t\t\t\tuvScaleMap = material.emissiveMap;\n\t\t\t} else if (material.clearcoatMap) {\n\t\t\t\tuvScaleMap = material.clearcoatMap;\n\t\t\t} else if (material.clearcoatNormalMap) {\n\t\t\t\tuvScaleMap = material.clearcoatNormalMap;\n\t\t\t} else if (material.clearcoatRoughnessMap) {\n\t\t\t\tuvScaleMap = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uvScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuvScaleMap = uvScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t} // uv repeat and offset setting priorities for uv2\n\t\t\t// 1. ao map\n\t\t\t// 2. light map\n\n\n\t\t\tlet uv2ScaleMap;\n\n\t\t\tif (material.aoMap) {\n\t\t\t\tuv2ScaleMap = material.aoMap;\n\t\t\t} else if (material.lightMap) {\n\t\t\t\tuv2ScaleMap = material.lightMap;\n\t\t\t}\n\n\t\t\tif (uv2ScaleMap !== undefined) {\n\t\t\t\t// backwards compatibility\n\t\t\t\tif (uv2ScaleMap.isWebGLRenderTarget) {\n\t\t\t\t\tuv2ScaleMap = uv2ScaleMap.texture;\n\t\t\t\t}\n\n\t\t\t\tif (uv2ScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuv2ScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uv2Transform.value.copy(uv2ScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLine(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t}\n\n\t\tfunction refreshUniformsDash(uniforms, material) {\n\t\t\tuniforms.dashSize.value = material.dashSize;\n\t\t\tuniforms.totalSize.value = material.dashSize + material.gapSize;\n\t\t\tuniforms.scale.value = material.scale;\n\t\t}\n\n\t\tfunction refreshUniformsPoints(uniforms, material, pixelRatio, height) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.size.value = material.size * pixelRatio;\n\t\t\tuniforms.scale.value = height * 0.5;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsSprites(uniforms, material) {\n\t\t\tuniforms.diffuse.value.copy(material.color);\n\t\t\tuniforms.opacity.value = material.opacity;\n\t\t\tuniforms.rotation.value = material.rotation;\n\n\t\t\tif (material.map) {\n\t\t\t\tuniforms.map.value = material.map;\n\t\t\t}\n\n\t\t\tif (material.alphaMap) {\n\t\t\t\tuniforms.alphaMap.value = material.alphaMap;\n\t\t\t} // uv repeat and offset setting priorities\n\t\t\t// 1. color map\n\t\t\t// 2. alpha map\n\n\n\t\t\tlet uvScaleMap;\n\n\t\t\tif (material.map) {\n\t\t\t\tuvScaleMap = material.map;\n\t\t\t} else if (material.alphaMap) {\n\t\t\t\tuvScaleMap = material.alphaMap;\n\t\t\t}\n\n\t\t\tif (uvScaleMap !== undefined) {\n\t\t\t\tif (uvScaleMap.matrixAutoUpdate === true) {\n\t\t\t\t\tuvScaleMap.updateMatrix();\n\t\t\t\t}\n\n\t\t\t\tuniforms.uvTransform.value.copy(uvScaleMap.matrix);\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsLambert(uniforms, material) {\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhong(uniforms, material) {\n\t\t\tuniforms.specular.value.copy(material.specular);\n\t\t\tuniforms.shininess.value = Math.max(material.shininess, 1e-4); // to prevent pow( 0.0, 0.0 )\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsToon(uniforms, material) {\n\t\t\tif (material.gradientMap) {\n\t\t\t\tuniforms.gradientMap.value = material.gradientMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsStandard(uniforms, material) {\n\t\t\tuniforms.roughness.value = material.roughness;\n\t\t\tuniforms.metalness.value = material.metalness;\n\n\t\t\tif (material.roughnessMap) {\n\t\t\t\tuniforms.roughnessMap.value = material.roughnessMap;\n\t\t\t}\n\n\t\t\tif (material.metalnessMap) {\n\t\t\t\tuniforms.metalnessMap.value = material.metalnessMap;\n\t\t\t}\n\n\t\t\tif (material.emissiveMap) {\n\t\t\t\tuniforms.emissiveMap.value = material.emissiveMap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tconst envMap = properties.get(material).envMap;\n\n\t\t\tif (envMap) {\n\t\t\t\t//uniforms.envMap.value = material.envMap; // part of uniforms common\n\t\t\t\tuniforms.envMapIntensity.value = material.envMapIntensity;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsPhysical(uniforms, material, transmissionRenderTarget) {\n\t\t\trefreshUniformsStandard(uniforms, material);\n\t\t\tuniforms.reflectivity.value = material.reflectivity; // also part of uniforms common\n\n\t\t\tuniforms.clearcoat.value = material.clearcoat;\n\t\t\tuniforms.clearcoatRoughness.value = material.clearcoatRoughness;\n\t\t\tif (material.sheen) uniforms.sheen.value.copy(material.sheen);\n\n\t\t\tif (material.clearcoatMap) {\n\t\t\t\tuniforms.clearcoatMap.value = material.clearcoatMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatRoughnessMap) {\n\t\t\t\tuniforms.clearcoatRoughnessMap.value = material.clearcoatRoughnessMap;\n\t\t\t}\n\n\t\t\tif (material.clearcoatNormalMap) {\n\t\t\t\tuniforms.clearcoatNormalScale.value.copy(material.clearcoatNormalScale);\n\t\t\t\tuniforms.clearcoatNormalMap.value = material.clearcoatNormalMap;\n\n\t\t\t\tif (material.side === BackSide) {\n\t\t\t\t\tuniforms.clearcoatNormalScale.value.negate();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tuniforms.transmission.value = material.transmission;\n\n\t\t\tif (material.transmissionMap) {\n\t\t\t\tuniforms.transmissionMap.value = material.transmissionMap;\n\t\t\t}\n\n\t\t\tif (material.transmission > 0.0) {\n\t\t\t\tuniforms.transmissionSamplerMap.value = transmissionRenderTarget.texture;\n\t\t\t\tuniforms.transmissionSamplerSize.value.set(transmissionRenderTarget.width, transmissionRenderTarget.height);\n\t\t\t}\n\n\t\t\tuniforms.thickness.value = material.thickness;\n\n\t\t\tif (material.thicknessMap) {\n\t\t\t\tuniforms.thicknessMap.value = material.thicknessMap;\n\t\t\t}\n\n\t\t\tuniforms.attenuationDistance.value = material.attenuationDistance;\n\t\t\tuniforms.attenuationColor.value.copy(material.attenuationColor);\n\t\t}\n\n\t\tfunction refreshUniformsMatcap(uniforms, material) {\n\t\t\tif (material.matcap) {\n\t\t\t\tuniforms.matcap.value = material.matcap;\n\t\t\t}\n\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDepth(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\tfunction refreshUniformsDistance(uniforms, material) {\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\n\t\t\tuniforms.referencePosition.value.copy(material.referencePosition);\n\t\t\tuniforms.nearDistance.value = material.nearDistance;\n\t\t\tuniforms.farDistance.value = material.farDistance;\n\t\t}\n\n\t\tfunction refreshUniformsNormal(uniforms, material) {\n\t\t\tif (material.bumpMap) {\n\t\t\t\tuniforms.bumpMap.value = material.bumpMap;\n\t\t\t\tuniforms.bumpScale.value = material.bumpScale;\n\t\t\t\tif (material.side === BackSide) uniforms.bumpScale.value *= -1;\n\t\t\t}\n\n\t\t\tif (material.normalMap) {\n\t\t\t\tuniforms.normalMap.value = material.normalMap;\n\t\t\t\tuniforms.normalScale.value.copy(material.normalScale);\n\t\t\t\tif (material.side === BackSide) uniforms.normalScale.value.negate();\n\t\t\t}\n\n\t\t\tif (material.displacementMap) {\n\t\t\t\tuniforms.displacementMap.value = material.displacementMap;\n\t\t\t\tuniforms.displacementScale.value = material.displacementScale;\n\t\t\t\tuniforms.displacementBias.value = material.displacementBias;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\trefreshFogUniforms: refreshFogUniforms,\n\t\t\trefreshMaterialUniforms: refreshMaterialUniforms\n\t\t};\n\t}\n\n\tfunction createCanvasElement() {\n\t\tconst canvas = document.createElementNS('http://www.w3.org/1999/xhtml', 'canvas');\n\t\tcanvas.style.display = 'block';\n\t\treturn canvas;\n\t}\n\n\tfunction WebGLRenderer(parameters) {\n\t\tparameters = parameters || {};\n\n\t\tconst _canvas = parameters.canvas !== undefined ? parameters.canvas : createCanvasElement(),\n\t\t\t\t\t_context = parameters.context !== undefined ? parameters.context : null,\n\t\t\t\t\t_alpha = parameters.alpha !== undefined ? parameters.alpha : false,\n\t\t\t\t\t_depth = parameters.depth !== undefined ? parameters.depth : true,\n\t\t\t\t\t_stencil = parameters.stencil !== undefined ? parameters.stencil : true,\n\t\t\t\t\t_antialias = parameters.antialias !== undefined ? parameters.antialias : false,\n\t\t\t\t\t_premultipliedAlpha = parameters.premultipliedAlpha !== undefined ? parameters.premultipliedAlpha : true,\n\t\t\t\t\t_preserveDrawingBuffer = parameters.preserveDrawingBuffer !== undefined ? parameters.preserveDrawingBuffer : false,\n\t\t\t\t\t_powerPreference = parameters.powerPreference !== undefined ? parameters.powerPreference : 'default',\n\t\t\t\t\t_failIfMajorPerformanceCaveat = parameters.failIfMajorPerformanceCaveat !== undefined ? parameters.failIfMajorPerformanceCaveat : false;\n\n\t\tlet currentRenderList = null;\n\t\tlet currentRenderState = null; // render() can be called from within a callback triggered by another render.\n\t\t// We track this so that the nested render call gets its list and state isolated from the parent render call.\n\n\t\tconst renderListStack = [];\n\t\tconst renderStateStack = []; // public properties\n\n\t\tthis.domElement = _canvas; // Debug configuration container\n\n\t\tthis.debug = {\n\t\t\t/**\n\t\t\t * Enables error checking and reporting when shader programs are being compiled\n\t\t\t * @type {boolean}\n\t\t\t */\n\t\t\tcheckShaderErrors: true\n\t\t}; // clearing\n\n\t\tthis.autoClear = true;\n\t\tthis.autoClearColor = true;\n\t\tthis.autoClearDepth = true;\n\t\tthis.autoClearStencil = true; // scene graph\n\n\t\tthis.sortObjects = true; // user-defined clipping\n\n\t\tthis.clippingPlanes = [];\n\t\tthis.localClippingEnabled = false; // physically based shading\n\n\t\tthis.gammaFactor = 2.0; // for backwards compatibility\n\n\t\tthis.outputEncoding = LinearEncoding; // physical lights\n\n\t\tthis.physicallyCorrectLights = false; // tone mapping\n\n\t\tthis.toneMapping = NoToneMapping;\n\t\tthis.toneMappingExposure = 1.0; // internal properties\n\n\t\tconst _this = this;\n\n\t\tlet _isContextLost = false; // internal state cache\n\n\t\tlet _currentActiveCubeFace = 0;\n\t\tlet _currentActiveMipmapLevel = 0;\n\t\tlet _currentRenderTarget = null;\n\n\t\tlet _currentMaterialId = -1;\n\n\t\tlet _currentCamera = null;\n\n\t\tconst _currentViewport = new Vector4();\n\n\t\tconst _currentScissor = new Vector4();\n\n\t\tlet _currentScissorTest = null; //\n\n\t\tlet _width = _canvas.width;\n\t\tlet _height = _canvas.height;\n\t\tlet _pixelRatio = 1;\n\t\tlet _opaqueSort = null;\n\t\tlet _transparentSort = null;\n\n\t\tconst _viewport = new Vector4(0, 0, _width, _height);\n\n\t\tconst _scissor = new Vector4(0, 0, _width, _height);\n\n\t\tlet _scissorTest = false; //\n\n\t\tconst _currentDrawBuffers = []; // frustum\n\n\t\tconst _frustum = new Frustum(); // clipping\n\n\n\t\tlet _clippingEnabled = false;\n\t\tlet _localClippingEnabled = false; // transmission\n\n\t\tlet _transmissionRenderTarget = null; // camera matrices cache\n\n\t\tconst _projScreenMatrix = new Matrix4();\n\n\t\tconst _vector3 = new Vector3();\n\n\t\tconst _emptyScene = {\n\t\t\tbackground: null,\n\t\t\tfog: null,\n\t\t\tenvironment: null,\n\t\t\toverrideMaterial: null,\n\t\t\tisScene: true\n\t\t};\n\n\t\tfunction getTargetPixelRatio() {\n\t\t\treturn _currentRenderTarget === null ? _pixelRatio : 1;\n\t\t} // initialize\n\n\n\t\tlet _gl = _context;\n\n\t\tfunction getContext(contextNames, contextAttributes) {\n\t\t\tfor (let i = 0; i < contextNames.length; i++) {\n\t\t\t\tconst contextName = contextNames[i];\n\n\t\t\t\tconst context = _canvas.getContext(contextName, contextAttributes);\n\n\t\t\t\tif (context !== null) return context;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\ttry {\n\t\t\tconst contextAttributes = {\n\t\t\t\talpha: _alpha,\n\t\t\t\tdepth: _depth,\n\t\t\t\tstencil: _stencil,\n\t\t\t\tantialias: _antialias,\n\t\t\t\tpremultipliedAlpha: _premultipliedAlpha,\n\t\t\t\tpreserveDrawingBuffer: _preserveDrawingBuffer,\n\t\t\t\tpowerPreference: _powerPreference,\n\t\t\t\tfailIfMajorPerformanceCaveat: _failIfMajorPerformanceCaveat\n\t\t\t}; // event listeners must be registered before WebGL context is created, see #12753\n\n\t\t\t_canvas.addEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.addEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\tif (_gl === null) {\n\t\t\t\tconst contextNames = ['webgl2', 'webgl', 'experimental-webgl'];\n\n\t\t\t\tif (_this.isWebGL1Renderer === true) {\n\t\t\t\t\tcontextNames.shift();\n\t\t\t\t}\n\n\t\t\t\t_gl = getContext(contextNames, contextAttributes);\n\n\t\t\t\tif (_gl === null) {\n\t\t\t\t\tif (getContext(contextNames)) {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context with your selected attributes.');\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error('Error creating WebGL context.');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // Some experimental-webgl implementations do not have getShaderPrecisionFormat\n\n\n\t\t\tif (_gl.getShaderPrecisionFormat === undefined) {\n\t\t\t\t_gl.getShaderPrecisionFormat = function () {\n\t\t\t\t\treturn {\n\t\t\t\t\t\t'rangeMin': 1,\n\t\t\t\t\t\t'rangeMax': 1,\n\t\t\t\t\t\t'precision': 1\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t}\n\t\t} catch (error) {\n\t\t\tconsole.error('THREE.WebGLRenderer: ' + error.message);\n\t\t\tthrow error;\n\t\t}\n\n\t\tlet extensions, capabilities, state, info;\n\t\tlet properties, textures, cubemaps, attributes, geometries, objects;\n\t\tlet programCache, materials, renderLists, renderStates, clipping, shadowMap;\n\t\tlet background, morphtargets, bufferRenderer, indexedBufferRenderer;\n\t\tlet utils, bindingStates;\n\n\t\tfunction initGLContext() {\n\t\t\textensions = new WebGLExtensions(_gl);\n\t\t\tcapabilities = new WebGLCapabilities(_gl, extensions, parameters);\n\t\t\textensions.init(capabilities);\n\t\t\tutils = new WebGLUtils(_gl, extensions, capabilities);\n\t\t\tstate = new WebGLState(_gl, extensions, capabilities);\n\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\tinfo = new WebGLInfo(_gl);\n\t\t\tproperties = new WebGLProperties();\n\t\t\ttextures = new WebGLTextures(_gl, extensions, state, properties, capabilities, utils, info);\n\t\t\tcubemaps = new WebGLCubeMaps(_this);\n\t\t\tattributes = new WebGLAttributes(_gl, capabilities);\n\t\t\tbindingStates = new WebGLBindingStates(_gl, extensions, attributes, capabilities);\n\t\t\tgeometries = new WebGLGeometries(_gl, attributes, info, bindingStates);\n\t\t\tobjects = new WebGLObjects(_gl, geometries, attributes, info);\n\t\t\tmorphtargets = new WebGLMorphtargets(_gl);\n\t\t\tclipping = new WebGLClipping(properties);\n\t\t\tprogramCache = new WebGLPrograms(_this, cubemaps, extensions, capabilities, bindingStates, clipping);\n\t\t\tmaterials = new WebGLMaterials(properties);\n\t\t\trenderLists = new WebGLRenderLists(properties);\n\t\t\trenderStates = new WebGLRenderStates(extensions, capabilities);\n\t\t\tbackground = new WebGLBackground(_this, cubemaps, state, objects, _premultipliedAlpha);\n\t\t\tshadowMap = new WebGLShadowMap(_this, objects, capabilities);\n\t\t\tbufferRenderer = new WebGLBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tindexedBufferRenderer = new WebGLIndexedBufferRenderer(_gl, extensions, info, capabilities);\n\t\t\tinfo.programs = programCache.programs;\n\t\t\t_this.capabilities = capabilities;\n\t\t\t_this.extensions = extensions;\n\t\t\t_this.properties = properties;\n\t\t\t_this.renderLists = renderLists;\n\t\t\t_this.shadowMap = shadowMap;\n\t\t\t_this.state = state;\n\t\t\t_this.info = info;\n\t\t}\n\n\t\tinitGLContext(); // xr\n\n\t\tconst xr = new WebXRManager(_this, _gl);\n\t\tthis.xr = xr; // API\n\n\t\tthis.getContext = function () {\n\t\t\treturn _gl;\n\t\t};\n\n\t\tthis.getContextAttributes = function () {\n\t\t\treturn _gl.getContextAttributes();\n\t\t};\n\n\t\tthis.forceContextLoss = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.loseContext();\n\t\t};\n\n\t\tthis.forceContextRestore = function () {\n\t\t\tconst extension = extensions.get('WEBGL_lose_context');\n\t\t\tif (extension) extension.restoreContext();\n\t\t};\n\n\t\tthis.getPixelRatio = function () {\n\t\t\treturn _pixelRatio;\n\t\t};\n\n\t\tthis.setPixelRatio = function (value) {\n\t\t\tif (value === undefined) return;\n\t\t\t_pixelRatio = value;\n\t\t\tthis.setSize(_width, _height, false);\n\t\t};\n\n\t\tthis.getSize = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getsize() now requires a Vector2 as an argument');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set(_width, _height);\n\t\t};\n\n\t\tthis.setSize = function (width, height, updateStyle) {\n\t\t\tif (xr.isPresenting) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: Can\\'t change size while VR device is presenting.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_canvas.width = Math.floor(width * _pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * _pixelRatio);\n\n\t\t\tif (updateStyle !== false) {\n\t\t\t\t_canvas.style.width = width + 'px';\n\t\t\t\t_canvas.style.height = height + 'px';\n\t\t\t}\n\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getDrawingBufferSize = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getdrawingBufferSize() now requires a Vector2 as an argument');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set(_width * _pixelRatio, _height * _pixelRatio).floor();\n\t\t};\n\n\t\tthis.setDrawingBufferSize = function (width, height, pixelRatio) {\n\t\t\t_width = width;\n\t\t\t_height = height;\n\t\t\t_pixelRatio = pixelRatio;\n\t\t\t_canvas.width = Math.floor(width * pixelRatio);\n\t\t\t_canvas.height = Math.floor(height * pixelRatio);\n\t\t\tthis.setViewport(0, 0, width, height);\n\t\t};\n\n\t\tthis.getCurrentViewport = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getCurrentViewport() now requires a Vector4 as an argument');\n\t\t\t\ttarget = new Vector4();\n\t\t\t}\n\n\t\t\treturn target.copy(_currentViewport);\n\t\t};\n\n\t\tthis.getViewport = function (target) {\n\t\t\treturn target.copy(_viewport);\n\t\t};\n\n\t\tthis.setViewport = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_viewport.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_viewport.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissor = function (target) {\n\t\t\treturn target.copy(_scissor);\n\t\t};\n\n\t\tthis.setScissor = function (x, y, width, height) {\n\t\t\tif (x.isVector4) {\n\t\t\t\t_scissor.set(x.x, x.y, x.z, x.w);\n\t\t\t} else {\n\t\t\t\t_scissor.set(x, y, width, height);\n\t\t\t}\n\n\t\t\tstate.scissor(_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor());\n\t\t};\n\n\t\tthis.getScissorTest = function () {\n\t\t\treturn _scissorTest;\n\t\t};\n\n\t\tthis.setScissorTest = function (boolean) {\n\t\t\tstate.setScissorTest(_scissorTest = boolean);\n\t\t};\n\n\t\tthis.setOpaqueSort = function (method) {\n\t\t\t_opaqueSort = method;\n\t\t};\n\n\t\tthis.setTransparentSort = function (method) {\n\t\t\t_transparentSort = method;\n\t\t}; // Clearing\n\n\n\t\tthis.getClearColor = function (target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('WebGLRenderer: .getClearColor() now requires a Color as an argument');\n\t\t\t\ttarget = new Color();\n\t\t\t}\n\n\t\t\treturn target.copy(background.getClearColor());\n\t\t};\n\n\t\tthis.setClearColor = function () {\n\t\t\tbackground.setClearColor.apply(background, arguments);\n\t\t};\n\n\t\tthis.getClearAlpha = function () {\n\t\t\treturn background.getClearAlpha();\n\t\t};\n\n\t\tthis.setClearAlpha = function () {\n\t\t\tbackground.setClearAlpha.apply(background, arguments);\n\t\t};\n\n\t\tthis.clear = function (color, depth, stencil) {\n\t\t\tlet bits = 0;\n\t\t\tif (color === undefined || color) bits |= _gl.COLOR_BUFFER_BIT;\n\t\t\tif (depth === undefined || depth) bits |= _gl.DEPTH_BUFFER_BIT;\n\t\t\tif (stencil === undefined || stencil) bits |= _gl.STENCIL_BUFFER_BIT;\n\n\t\t\t_gl.clear(bits);\n\t\t};\n\n\t\tthis.clearColor = function () {\n\t\t\tthis.clear(true, false, false);\n\t\t};\n\n\t\tthis.clearDepth = function () {\n\t\t\tthis.clear(false, true, false);\n\t\t};\n\n\t\tthis.clearStencil = function () {\n\t\t\tthis.clear(false, false, true);\n\t\t}; //\n\n\n\t\tthis.dispose = function () {\n\t\t\t_canvas.removeEventListener('webglcontextlost', onContextLost, false);\n\n\t\t\t_canvas.removeEventListener('webglcontextrestored', onContextRestore, false);\n\n\t\t\trenderLists.dispose();\n\t\t\trenderStates.dispose();\n\t\t\tproperties.dispose();\n\t\t\tcubemaps.dispose();\n\t\t\tobjects.dispose();\n\t\t\tbindingStates.dispose();\n\t\t\txr.dispose();\n\t\t\txr.removeEventListener('sessionstart', onXRSessionStart);\n\t\t\txr.removeEventListener('sessionend', onXRSessionEnd);\n\n\t\t\tif (_transmissionRenderTarget) {\n\t\t\t\t_transmissionRenderTarget.dispose();\n\n\t\t\t\t_transmissionRenderTarget = null;\n\t\t\t}\n\n\t\t\tanimation.stop();\n\t\t}; // Events\n\n\n\t\tfunction onContextLost(event) {\n\t\t\tevent.preventDefault();\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Lost.');\n\t\t\t_isContextLost = true;\n\t\t}\n\n\t\tfunction onContextRestore()\n\t\t/* event */\n\t\t{\n\t\t\tconsole.log('THREE.WebGLRenderer: Context Restored.');\n\t\t\t_isContextLost = false;\n\t\t\tconst infoAutoReset = info.autoReset;\n\t\t\tconst shadowMapEnabled = shadowMap.enabled;\n\t\t\tconst shadowMapAutoUpdate = shadowMap.autoUpdate;\n\t\t\tconst shadowMapNeedsUpdate = shadowMap.needsUpdate;\n\t\t\tconst shadowMapType = shadowMap.type;\n\t\t\tinitGLContext();\n\t\t\tinfo.autoReset = infoAutoReset;\n\t\t\tshadowMap.enabled = shadowMapEnabled;\n\t\t\tshadowMap.autoUpdate = shadowMapAutoUpdate;\n\t\t\tshadowMap.needsUpdate = shadowMapNeedsUpdate;\n\t\t\tshadowMap.type = shadowMapType;\n\t\t}\n\n\t\tfunction onMaterialDispose(event) {\n\t\t\tconst material = event.target;\n\t\t\tmaterial.removeEventListener('dispose', onMaterialDispose);\n\t\t\tdeallocateMaterial(material);\n\t\t} // Buffer deallocation\n\n\n\t\tfunction deallocateMaterial(material) {\n\t\t\treleaseMaterialProgramReferences(material);\n\t\t\tproperties.remove(material);\n\t\t}\n\n\t\tfunction releaseMaterialProgramReferences(material) {\n\t\t\tconst programs = properties.get(material).programs;\n\n\t\t\tif (programs !== undefined) {\n\t\t\t\tprograms.forEach(function (program) {\n\t\t\t\t\tprogramCache.releaseProgram(program);\n\t\t\t\t});\n\t\t\t}\n\t\t} // Buffer rendering\n\n\n\t\tfunction renderObjectImmediate(object, program) {\n\t\t\tobject.render(function (object) {\n\t\t\t\t_this.renderBufferImmediate(object, program);\n\t\t\t});\n\t\t}\n\n\t\tthis.renderBufferImmediate = function (object, program) {\n\t\t\tbindingStates.initAttributes();\n\t\t\tconst buffers = properties.get(object);\n\t\t\tif (object.hasPositions && !buffers.position) buffers.position = _gl.createBuffer();\n\t\t\tif (object.hasNormals && !buffers.normal) buffers.normal = _gl.createBuffer();\n\t\t\tif (object.hasUvs && !buffers.uv) buffers.uv = _gl.createBuffer();\n\t\t\tif (object.hasColors && !buffers.color) buffers.color = _gl.createBuffer();\n\t\t\tconst programAttributes = program.getAttributes();\n\n\t\t\tif (object.hasPositions) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.position);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.positionArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.position);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.position, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasNormals) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.normal);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.normalArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.normal);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.normal, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasUvs) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.uv);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.uvArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.uv);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.uv, 2, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tif (object.hasColors) {\n\t\t\t\t_gl.bindBuffer(_gl.ARRAY_BUFFER, buffers.color);\n\n\t\t\t\t_gl.bufferData(_gl.ARRAY_BUFFER, object.colorArray, _gl.DYNAMIC_DRAW);\n\n\t\t\t\tbindingStates.enableAttribute(programAttributes.color);\n\n\t\t\t\t_gl.vertexAttribPointer(programAttributes.color, 3, _gl.FLOAT, false, 0, 0);\n\t\t\t}\n\n\t\t\tbindingStates.disableUnusedAttributes();\n\n\t\t\t_gl.drawArrays(_gl.TRIANGLES, 0, object.count);\n\n\t\t\tobject.count = 0;\n\t\t};\n\n\t\tthis.renderBufferDirect = function (camera, scene, geometry, material, object, group) {\n\t\t\tif (scene === null) scene = _emptyScene; // renderBufferDirect second parameter used to be fog (could be null)\n\n\t\t\tconst frontFaceCW = object.isMesh && object.matrixWorld.determinant() < 0;\n\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\tstate.setMaterial(material, frontFaceCW); //\n\n\t\t\tlet index = geometry.index;\n\t\t\tconst position = geometry.attributes.position; //\n\n\t\t\tif (index === null) {\n\t\t\t\tif (position === undefined || position.count === 0) return;\n\t\t\t} else if (index.count === 0) {\n\t\t\t\treturn;\n\t\t\t} //\n\n\n\t\t\tlet rangeFactor = 1;\n\n\t\t\tif (material.wireframe === true) {\n\t\t\t\tindex = geometries.getWireframeAttribute(geometry);\n\t\t\t\trangeFactor = 2;\n\t\t\t}\n\n\t\t\tif (material.morphTargets || material.morphNormals) {\n\t\t\t\tmorphtargets.update(object, geometry, material, program);\n\t\t\t}\n\n\t\t\tbindingStates.setup(object, material, program, geometry, index);\n\t\t\tlet attribute;\n\t\t\tlet renderer = bufferRenderer;\n\n\t\t\tif (index !== null) {\n\t\t\t\tattribute = attributes.get(index);\n\t\t\t\trenderer = indexedBufferRenderer;\n\t\t\t\trenderer.setIndex(attribute);\n\t\t\t} //\n\n\n\t\t\tconst dataCount = index !== null ? index.count : position.count;\n\t\t\tconst rangeStart = geometry.drawRange.start * rangeFactor;\n\t\t\tconst rangeCount = geometry.drawRange.count * rangeFactor;\n\t\t\tconst groupStart = group !== null ? group.start * rangeFactor : 0;\n\t\t\tconst groupCount = group !== null ? group.count * rangeFactor : Infinity;\n\t\t\tconst drawStart = Math.max(rangeStart, groupStart);\n\t\t\tconst drawEnd = Math.min(dataCount, rangeStart + rangeCount, groupStart + groupCount) - 1;\n\t\t\tconst drawCount = Math.max(0, drawEnd - drawStart + 1);\n\t\t\tif (drawCount === 0) return; //\n\n\t\t\tif (object.isMesh) {\n\t\t\t\tif (material.wireframe === true) {\n\t\t\t\t\tstate.setLineWidth(material.wireframeLinewidth * getTargetPixelRatio());\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t\t}\n\t\t\t} else if (object.isLine) {\n\t\t\t\tlet lineWidth = material.linewidth;\n\t\t\t\tif (lineWidth === undefined) lineWidth = 1; // Not using Line*Material\n\n\t\t\t\tstate.setLineWidth(lineWidth * getTargetPixelRatio());\n\n\t\t\t\tif (object.isLineSegments) {\n\t\t\t\t\trenderer.setMode(_gl.LINES);\n\t\t\t\t} else if (object.isLineLoop) {\n\t\t\t\t\trenderer.setMode(_gl.LINE_LOOP);\n\t\t\t\t} else {\n\t\t\t\t\trenderer.setMode(_gl.LINE_STRIP);\n\t\t\t\t}\n\t\t\t} else if (object.isPoints) {\n\t\t\t\trenderer.setMode(_gl.POINTS);\n\t\t\t} else if (object.isSprite) {\n\t\t\t\trenderer.setMode(_gl.TRIANGLES);\n\t\t\t}\n\n\t\t\tif (object.isInstancedMesh) {\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, object.count);\n\t\t\t} else if (geometry.isInstancedBufferGeometry) {\n\t\t\t\tconst instanceCount = Math.min(geometry.instanceCount, geometry._maxInstanceCount);\n\t\t\t\trenderer.renderInstances(drawStart, drawCount, instanceCount);\n\t\t\t} else {\n\t\t\t\trenderer.render(drawStart, drawCount);\n\t\t\t}\n\t\t}; // Compile\n\n\n\t\tthis.compile = function (scene, camera) {\n\t\t\tcurrentRenderState = renderStates.get(scene);\n\t\t\tcurrentRenderState.init();\n\t\t\tscene.traverseVisible(function (object) {\n\t\t\t\tif (object.isLight && object.layers.test(camera.layers)) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tscene.traverse(function (object) {\n\t\t\t\tconst material = object.material;\n\n\t\t\t\tif (material) {\n\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\tfor (let i = 0; i < material.length; i++) {\n\t\t\t\t\t\t\tconst material2 = material[i];\n\t\t\t\t\t\t\tgetProgram(material2, scene, object);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tgetProgram(material, scene, object);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}; // Animation Loop\n\n\n\t\tlet onAnimationFrameCallback = null;\n\n\t\tfunction onAnimationFrame(time) {\n\t\t\tif (onAnimationFrameCallback) onAnimationFrameCallback(time);\n\t\t}\n\n\t\tfunction onXRSessionStart() {\n\t\t\tanimation.stop();\n\t\t}\n\n\t\tfunction onXRSessionEnd() {\n\t\t\tanimation.start();\n\t\t}\n\n\t\tconst animation = new WebGLAnimation();\n\t\tanimation.setAnimationLoop(onAnimationFrame);\n\t\tif (typeof window !== 'undefined') animation.setContext(window);\n\n\t\tthis.setAnimationLoop = function (callback) {\n\t\t\tonAnimationFrameCallback = callback;\n\t\t\txr.setAnimationLoop(callback);\n\t\t\tcallback === null ? animation.stop() : animation.start();\n\t\t};\n\n\t\txr.addEventListener('sessionstart', onXRSessionStart);\n\t\txr.addEventListener('sessionend', onXRSessionEnd); // Rendering\n\n\t\tthis.render = function (scene, camera) {\n\t\t\tif (camera !== undefined && camera.isCamera !== true) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.render: camera is not an instance of THREE.Camera.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (_isContextLost === true) return; // update scene graph\n\n\t\t\tif (scene.autoUpdate === true) scene.updateMatrixWorld(); // update camera matrices and frustum\n\n\t\t\tif (camera.parent === null) camera.updateMatrixWorld();\n\n\t\t\tif (xr.enabled === true && xr.isPresenting === true) {\n\t\t\t\tif (xr.cameraAutoUpdate === true) xr.updateCamera(camera);\n\t\t\t\tcamera = xr.getCamera(); // use XR camera for rendering\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onBeforeRender(_this, scene, camera, _currentRenderTarget);\n\t\t\tcurrentRenderState = renderStates.get(scene, renderStateStack.length);\n\t\t\tcurrentRenderState.init();\n\t\t\trenderStateStack.push(currentRenderState);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\t_frustum.setFromProjectionMatrix(_projScreenMatrix);\n\n\t\t\t_localClippingEnabled = this.localClippingEnabled;\n\t\t\t_clippingEnabled = clipping.init(this.clippingPlanes, _localClippingEnabled, camera);\n\t\t\tcurrentRenderList = renderLists.get(scene, renderListStack.length);\n\t\t\tcurrentRenderList.init();\n\t\t\trenderListStack.push(currentRenderList);\n\t\t\tprojectObject(scene, camera, 0, _this.sortObjects);\n\t\t\tcurrentRenderList.finish();\n\n\t\t\tif (_this.sortObjects === true) {\n\t\t\t\tcurrentRenderList.sort(_opaqueSort, _transparentSort);\n\t\t\t} //\n\n\n\t\t\tif (_clippingEnabled === true) clipping.beginShadows();\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tshadowMap.render(shadowsArray, scene, camera);\n\t\t\tcurrentRenderState.setupLights();\n\t\t\tcurrentRenderState.setupLightsView(camera);\n\t\t\tif (_clippingEnabled === true) clipping.endShadows(); //\n\n\t\t\tif (this.info.autoReset === true) this.info.reset(); //\n\n\t\t\tbackground.render(currentRenderList, scene); // render scene\n\n\t\t\tconst opaqueObjects = currentRenderList.opaque;\n\t\t\tconst transmissiveObjects = currentRenderList.transmissive;\n\t\t\tconst transparentObjects = currentRenderList.transparent;\n\t\t\tif (opaqueObjects.length > 0) renderObjects(opaqueObjects, scene, camera);\n\t\t\tif (transmissiveObjects.length > 0) renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera);\n\t\t\tif (transparentObjects.length > 0) renderObjects(transparentObjects, scene, camera); //\n\n\t\t\tif (_currentRenderTarget !== null) {\n\t\t\t\t// Generate mipmap if we're using any kind of mipmap filtering\n\t\t\t\ttextures.updateRenderTargetMipmap(_currentRenderTarget); // resolve multisample renderbuffers to a single-sample texture if necessary\n\n\t\t\t\ttextures.updateMultisampleRenderTarget(_currentRenderTarget);\n\t\t\t} //\n\n\n\t\t\tif (scene.isScene === true) scene.onAfterRender(_this, scene, camera); // Ensure depth buffer writing is enabled so it can be cleared on next render\n\n\t\t\tstate.buffers.depth.setTest(true);\n\t\t\tstate.buffers.depth.setMask(true);\n\t\t\tstate.buffers.color.setMask(true);\n\t\t\tstate.setPolygonOffset(false); // _gl.finish();\n\n\t\t\tbindingStates.resetDefaultState();\n\t\t\t_currentMaterialId = -1;\n\t\t\t_currentCamera = null;\n\t\t\trenderStateStack.pop();\n\n\t\t\tif (renderStateStack.length > 0) {\n\t\t\t\tcurrentRenderState = renderStateStack[renderStateStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderState = null;\n\t\t\t}\n\n\t\t\trenderListStack.pop();\n\n\t\t\tif (renderListStack.length > 0) {\n\t\t\t\tcurrentRenderList = renderListStack[renderListStack.length - 1];\n\t\t\t} else {\n\t\t\t\tcurrentRenderList = null;\n\t\t\t}\n\t\t};\n\n\t\tfunction projectObject(object, camera, groupOrder, sortObjects) {\n\t\t\tif (object.visible === false) return;\n\t\t\tconst visible = object.layers.test(camera.layers);\n\n\t\t\tif (visible) {\n\t\t\t\tif (object.isGroup) {\n\t\t\t\t\tgroupOrder = object.renderOrder;\n\t\t\t\t} else if (object.isLOD) {\n\t\t\t\t\tif (object.autoUpdate === true) object.update(camera);\n\t\t\t\t} else if (object.isLight) {\n\t\t\t\t\tcurrentRenderState.pushLight(object);\n\n\t\t\t\t\tif (object.castShadow) {\n\t\t\t\t\t\tcurrentRenderState.pushShadow(object);\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isSprite) {\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsSprite(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else if (object.isImmediateRenderObject) {\n\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t}\n\n\t\t\t\t\tcurrentRenderList.push(object, null, object.material, groupOrder, _vector3.z, null);\n\t\t\t\t} else if (object.isMesh || object.isLine || object.isPoints) {\n\t\t\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\t\t\t// update skeleton only once in a frame\n\t\t\t\t\t\tif (object.skeleton.frame !== info.render.frame) {\n\t\t\t\t\t\t\tobject.skeleton.update();\n\t\t\t\t\t\t\tobject.skeleton.frame = info.render.frame;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (!object.frustumCulled || _frustum.intersectsObject(object)) {\n\t\t\t\t\t\tif (sortObjects) {\n\t\t\t\t\t\t\t_vector3.setFromMatrixPosition(object.matrixWorld).applyMatrix4(_projScreenMatrix);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst geometry = objects.update(object);\n\t\t\t\t\t\tconst material = object.material;\n\n\t\t\t\t\t\tif (Array.isArray(material)) {\n\t\t\t\t\t\t\tconst groups = geometry.groups;\n\n\t\t\t\t\t\t\tfor (let i = 0, l = groups.length; i < l; i++) {\n\t\t\t\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\t\t\t\tconst groupMaterial = material[group.materialIndex];\n\n\t\t\t\t\t\t\t\tif (groupMaterial && groupMaterial.visible) {\n\t\t\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, groupMaterial, groupOrder, _vector3.z, group);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else if (material.visible) {\n\t\t\t\t\t\t\tcurrentRenderList.push(object, geometry, material, groupOrder, _vector3.z, null);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tprojectObject(children[i], camera, groupOrder, sortObjects);\n\t\t\t}\n\t\t}\n\n\t\tfunction renderTransmissiveObjects(opaqueObjects, transmissiveObjects, scene, camera) {\n\t\t\tif (_transmissionRenderTarget === null) {\n\t\t\t\t_transmissionRenderTarget = new WebGLRenderTarget(1024, 1024, {\n\t\t\t\t\tgenerateMipmaps: true,\n\t\t\t\t\tminFilter: LinearMipmapLinearFilter,\n\t\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\t\twrapS: ClampToEdgeWrapping,\n\t\t\t\t\twrapT: ClampToEdgeWrapping\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tconst currentRenderTarget = _this.getRenderTarget();\n\n\t\t\t_this.setRenderTarget(_transmissionRenderTarget);\n\n\t\t\t_this.clear();\n\n\t\t\trenderObjects(opaqueObjects, scene, camera);\n\t\t\ttextures.updateRenderTargetMipmap(_transmissionRenderTarget);\n\n\t\t\t_this.setRenderTarget(currentRenderTarget);\n\n\t\t\trenderObjects(transmissiveObjects, scene, camera);\n\t\t}\n\n\t\tfunction renderObjects(renderList, scene, camera) {\n\t\t\tconst overrideMaterial = scene.isScene === true ? scene.overrideMaterial : null;\n\n\t\t\tfor (let i = 0, l = renderList.length; i < l; i++) {\n\t\t\t\tconst renderItem = renderList[i];\n\t\t\t\tconst object = renderItem.object;\n\t\t\t\tconst geometry = renderItem.geometry;\n\t\t\t\tconst material = overrideMaterial === null ? renderItem.material : overrideMaterial;\n\t\t\t\tconst group = renderItem.group;\n\n\t\t\t\tif (camera.isArrayCamera) {\n\t\t\t\t\tconst cameras = camera.cameras;\n\n\t\t\t\t\tfor (let j = 0, jl = cameras.length; j < jl; j++) {\n\t\t\t\t\t\tconst camera2 = cameras[j];\n\n\t\t\t\t\t\tif (object.layers.test(camera2.layers)) {\n\t\t\t\t\t\t\tstate.viewport(_currentViewport.copy(camera2.viewport));\n\t\t\t\t\t\t\tcurrentRenderState.setupLightsView(camera2);\n\t\t\t\t\t\t\trenderObject(object, scene, camera2, geometry, material, group);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\trenderObject(object, scene, camera, geometry, material, group);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tfunction renderObject(object, scene, camera, geometry, material, group) {\n\t\t\tobject.onBeforeRender(_this, scene, camera, geometry, material, group);\n\t\t\tobject.modelViewMatrix.multiplyMatrices(camera.matrixWorldInverse, object.matrixWorld);\n\t\t\tobject.normalMatrix.getNormalMatrix(object.modelViewMatrix);\n\n\t\t\tif (object.isImmediateRenderObject) {\n\t\t\t\tconst program = setProgram(camera, scene, material, object);\n\t\t\t\tstate.setMaterial(material);\n\t\t\t\tbindingStates.reset();\n\t\t\t\trenderObjectImmediate(object, program);\n\t\t\t} else {\n\t\t\t\t_this.renderBufferDirect(camera, scene, geometry, material, object, group);\n\t\t\t}\n\n\t\t\tobject.onAfterRender(_this, scene, camera, geometry, material, group);\n\t\t}\n\n\t\tfunction getProgram(material, scene, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\t\t\tconst shadowsArray = currentRenderState.state.shadowsArray;\n\t\t\tconst lightsStateVersion = lights.state.version;\n\t\t\tconst parameters = programCache.getParameters(material, lights.state, shadowsArray, scene, object);\n\t\t\tconst programCacheKey = programCache.getProgramCacheKey(parameters);\n\t\t\tlet programs = materialProperties.programs; // always update environment and fog - changing these trigger an getProgram call, but it's possible that the program doesn't change\n\n\t\t\tmaterialProperties.environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tmaterialProperties.fog = scene.fog;\n\t\t\tmaterialProperties.envMap = cubemaps.get(material.envMap || materialProperties.environment);\n\n\t\t\tif (programs === undefined) {\n\t\t\t\t// new material\n\t\t\t\tmaterial.addEventListener('dispose', onMaterialDispose);\n\t\t\t\tprograms = new Map();\n\t\t\t\tmaterialProperties.programs = programs;\n\t\t\t}\n\n\t\t\tlet program = programs.get(programCacheKey);\n\n\t\t\tif (program !== undefined) {\n\t\t\t\t// early out if program and light state is identical\n\t\t\t\tif (materialProperties.currentProgram === program && materialProperties.lightsStateVersion === lightsStateVersion) {\n\t\t\t\t\tupdateCommonMaterialProperties(material, parameters);\n\t\t\t\t\treturn program;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tparameters.uniforms = programCache.getUniforms(material);\n\t\t\t\tmaterial.onBuild(parameters, _this);\n\t\t\t\tmaterial.onBeforeCompile(parameters, _this);\n\t\t\t\tprogram = programCache.acquireProgram(parameters, programCacheKey);\n\t\t\t\tprograms.set(programCacheKey, program);\n\t\t\t\tmaterialProperties.uniforms = parameters.uniforms;\n\t\t\t}\n\n\t\t\tconst uniforms = materialProperties.uniforms;\n\n\t\t\tif (!material.isShaderMaterial && !material.isRawShaderMaterial || material.clipping === true) {\n\t\t\t\tuniforms.clippingPlanes = clipping.uniform;\n\t\t\t}\n\n\t\t\tupdateCommonMaterialProperties(material, parameters); // store the light setup it was created for\n\n\t\t\tmaterialProperties.needsLights = materialNeedsLights(material);\n\t\t\tmaterialProperties.lightsStateVersion = lightsStateVersion;\n\n\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t// wire up the material to this renderer's lighting state\n\t\t\t\tuniforms.ambientLightColor.value = lights.state.ambient;\n\t\t\t\tuniforms.lightProbe.value = lights.state.probe;\n\t\t\t\tuniforms.directionalLights.value = lights.state.directional;\n\t\t\t\tuniforms.directionalLightShadows.value = lights.state.directionalShadow;\n\t\t\t\tuniforms.spotLights.value = lights.state.spot;\n\t\t\t\tuniforms.spotLightShadows.value = lights.state.spotShadow;\n\t\t\t\tuniforms.rectAreaLights.value = lights.state.rectArea;\n\t\t\t\tuniforms.ltc_1.value = lights.state.rectAreaLTC1;\n\t\t\t\tuniforms.ltc_2.value = lights.state.rectAreaLTC2;\n\t\t\t\tuniforms.pointLights.value = lights.state.point;\n\t\t\t\tuniforms.pointLightShadows.value = lights.state.pointShadow;\n\t\t\t\tuniforms.hemisphereLights.value = lights.state.hemi;\n\t\t\t\tuniforms.directionalShadowMap.value = lights.state.directionalShadowMap;\n\t\t\t\tuniforms.directionalShadowMatrix.value = lights.state.directionalShadowMatrix;\n\t\t\t\tuniforms.spotShadowMap.value = lights.state.spotShadowMap;\n\t\t\t\tuniforms.spotShadowMatrix.value = lights.state.spotShadowMatrix;\n\t\t\t\tuniforms.pointShadowMap.value = lights.state.pointShadowMap;\n\t\t\t\tuniforms.pointShadowMatrix.value = lights.state.pointShadowMatrix; // TODO (abelnation): add area lights shadow info to uniforms\n\t\t\t}\n\n\t\t\tconst progUniforms = program.getUniforms();\n\t\t\tconst uniformsList = WebGLUniforms.seqWithValue(progUniforms.seq, uniforms);\n\t\t\tmaterialProperties.currentProgram = program;\n\t\t\tmaterialProperties.uniformsList = uniformsList;\n\t\t\treturn program;\n\t\t}\n\n\t\tfunction updateCommonMaterialProperties(material, parameters) {\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tmaterialProperties.outputEncoding = parameters.outputEncoding;\n\t\t\tmaterialProperties.instancing = parameters.instancing;\n\t\t\tmaterialProperties.skinning = parameters.skinning;\n\t\t\tmaterialProperties.numClippingPlanes = parameters.numClippingPlanes;\n\t\t\tmaterialProperties.numIntersection = parameters.numClipIntersection;\n\t\t\tmaterialProperties.vertexAlphas = parameters.vertexAlphas;\n\t\t}\n\n\t\tfunction setProgram(camera, scene, material, object) {\n\t\t\tif (scene.isScene !== true) scene = _emptyScene; // scene could be a Mesh, Line, Points, ...\n\n\t\t\ttextures.resetTextureUnits();\n\t\t\tconst fog = scene.fog;\n\t\t\tconst environment = material.isMeshStandardMaterial ? scene.environment : null;\n\t\t\tconst encoding = _currentRenderTarget === null ? _this.outputEncoding : _currentRenderTarget.texture.encoding;\n\t\t\tconst envMap = cubemaps.get(material.envMap || environment);\n\t\t\tconst vertexAlphas = material.vertexColors === true && object.geometry && object.geometry.attributes.color && object.geometry.attributes.color.itemSize === 4;\n\t\t\tconst materialProperties = properties.get(material);\n\t\t\tconst lights = currentRenderState.state.lights;\n\n\t\t\tif (_clippingEnabled === true) {\n\t\t\t\tif (_localClippingEnabled === true || camera !== _currentCamera) {\n\t\t\t\t\tconst useCache = camera === _currentCamera && material.id === _currentMaterialId; // we might want to call this function with some ClippingGroup\n\t\t\t\t\t// object instead of the material, once it becomes feasible\n\t\t\t\t\t// (#8465, #8379)\n\n\t\t\t\t\tclipping.setState(material, camera, useCache);\n\t\t\t\t}\n\t\t\t} //\n\n\n\t\t\tlet needsProgramChange = false;\n\n\t\t\tif (material.version === materialProperties.__version) {\n\t\t\t\tif (materialProperties.needsLights && materialProperties.lightsStateVersion !== lights.state.version) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.outputEncoding !== encoding) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isInstancedMesh && materialProperties.instancing === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isInstancedMesh && materialProperties.instancing === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (object.isSkinnedMesh && materialProperties.skinning === false) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (!object.isSkinnedMesh && materialProperties.skinning === true) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.envMap !== envMap) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (material.fog && materialProperties.fog !== fog) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.numClippingPlanes !== undefined && (materialProperties.numClippingPlanes !== clipping.numPlanes || materialProperties.numIntersection !== clipping.numIntersection)) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t} else if (materialProperties.vertexAlphas !== vertexAlphas) {\n\t\t\t\t\tneedsProgramChange = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tneedsProgramChange = true;\n\t\t\t\tmaterialProperties.__version = material.version;\n\t\t\t} //\n\n\n\t\t\tlet program = materialProperties.currentProgram;\n\n\t\t\tif (needsProgramChange === true) {\n\t\t\t\tprogram = getProgram(material, scene, object);\n\t\t\t}\n\n\t\t\tlet refreshProgram = false;\n\t\t\tlet refreshMaterial = false;\n\t\t\tlet refreshLights = false;\n\t\t\tconst p_uniforms = program.getUniforms(),\n\t\t\t\t\t\tm_uniforms = materialProperties.uniforms;\n\n\t\t\tif (state.useProgram(program.program)) {\n\t\t\t\trefreshProgram = true;\n\t\t\t\trefreshMaterial = true;\n\t\t\t\trefreshLights = true;\n\t\t\t}\n\n\t\t\tif (material.id !== _currentMaterialId) {\n\t\t\t\t_currentMaterialId = material.id;\n\t\t\t\trefreshMaterial = true;\n\t\t\t}\n\n\t\t\tif (refreshProgram || _currentCamera !== camera) {\n\t\t\t\tp_uniforms.setValue(_gl, 'projectionMatrix', camera.projectionMatrix);\n\n\t\t\t\tif (capabilities.logarithmicDepthBuffer) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'logDepthBufFC', 2.0 / (Math.log(camera.far + 1.0) / Math.LN2));\n\t\t\t\t}\n\n\t\t\t\tif (_currentCamera !== camera) {\n\t\t\t\t\t_currentCamera = camera; // lighting uniforms depend on the camera so enforce an update\n\t\t\t\t\t// now, in case this material supports lights - or later, when\n\t\t\t\t\t// the next material that does gets activated:\n\n\t\t\t\t\trefreshMaterial = true; // set to true on material change\n\n\t\t\t\t\trefreshLights = true; // remains set until update done\n\t\t\t\t} // load material specific uniforms\n\t\t\t\t// (shader material also gets them for the sake of genericity)\n\n\n\t\t\t\tif (material.isShaderMaterial || material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshStandardMaterial || material.envMap) {\n\t\t\t\t\tconst uCamPos = p_uniforms.map.cameraPosition;\n\n\t\t\t\t\tif (uCamPos !== undefined) {\n\t\t\t\t\t\tuCamPos.setValue(_gl, _vector3.setFromMatrixPosition(camera.matrixWorld));\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'isOrthographic', camera.isOrthographicCamera === true);\n\t\t\t\t}\n\n\t\t\t\tif (material.isMeshPhongMaterial || material.isMeshToonMaterial || material.isMeshLambertMaterial || material.isMeshBasicMaterial || material.isMeshStandardMaterial || material.isShaderMaterial || material.isShadowMaterial || object.isSkinnedMesh) {\n\t\t\t\t\tp_uniforms.setValue(_gl, 'viewMatrix', camera.matrixWorldInverse);\n\t\t\t\t}\n\t\t\t} // skinning uniforms must be set even if material didn't change\n\t\t\t// auto-setting of texture unit for bone texture must go before other textures\n\t\t\t// otherwise textures used for skinning can take over texture units reserved for other material textures\n\n\n\t\t\tif (object.isSkinnedMesh) {\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrix');\n\t\t\t\tp_uniforms.setOptional(_gl, object, 'bindMatrixInverse');\n\t\t\t\tconst skeleton = object.skeleton;\n\n\t\t\t\tif (skeleton) {\n\t\t\t\t\tif (capabilities.floatVertexTextures) {\n\t\t\t\t\t\tif (skeleton.boneTexture === null) skeleton.computeBoneTexture();\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTexture', skeleton.boneTexture, textures);\n\t\t\t\t\t\tp_uniforms.setValue(_gl, 'boneTextureSize', skeleton.boneTextureSize);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tp_uniforms.setOptional(_gl, skeleton, 'boneMatrices');\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (refreshMaterial || materialProperties.receiveShadow !== object.receiveShadow) {\n\t\t\t\tmaterialProperties.receiveShadow = object.receiveShadow;\n\t\t\t\tp_uniforms.setValue(_gl, 'receiveShadow', object.receiveShadow);\n\t\t\t}\n\n\t\t\tif (refreshMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'toneMappingExposure', _this.toneMappingExposure);\n\n\t\t\t\tif (materialProperties.needsLights) {\n\t\t\t\t\t// the current material requires lighting info\n\t\t\t\t\t// note: all lighting uniforms are always set correctly\n\t\t\t\t\t// they simply reference the renderer's state for their\n\t\t\t\t\t// values\n\t\t\t\t\t//\n\t\t\t\t\t// use the current material's .needsUpdate flags to set\n\t\t\t\t\t// the GL state when required\n\t\t\t\t\tmarkUniformsLightsNeedsUpdate(m_uniforms, refreshLights);\n\t\t\t\t} // refresh uniforms common to several materials\n\n\n\t\t\t\tif (fog && material.fog) {\n\t\t\t\t\tmaterials.refreshFogUniforms(m_uniforms, fog);\n\t\t\t\t}\n\n\t\t\t\tmaterials.refreshMaterialUniforms(m_uniforms, material, _pixelRatio, _height, _transmissionRenderTarget);\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t}\n\n\t\t\tif (material.isShaderMaterial && material.uniformsNeedUpdate === true) {\n\t\t\t\tWebGLUniforms.upload(_gl, materialProperties.uniformsList, m_uniforms, textures);\n\t\t\t\tmaterial.uniformsNeedUpdate = false;\n\t\t\t}\n\n\t\t\tif (material.isSpriteMaterial) {\n\t\t\t\tp_uniforms.setValue(_gl, 'center', object.center);\n\t\t\t} // common matrices\n\n\n\t\t\tp_uniforms.setValue(_gl, 'modelViewMatrix', object.modelViewMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'normalMatrix', object.normalMatrix);\n\t\t\tp_uniforms.setValue(_gl, 'modelMatrix', object.matrixWorld);\n\t\t\treturn program;\n\t\t} // If uniforms are marked as clean, they don't need to be loaded to the GPU.\n\n\n\t\tfunction markUniformsLightsNeedsUpdate(uniforms, value) {\n\t\t\tuniforms.ambientLightColor.needsUpdate = value;\n\t\t\tuniforms.lightProbe.needsUpdate = value;\n\t\t\tuniforms.directionalLights.needsUpdate = value;\n\t\t\tuniforms.directionalLightShadows.needsUpdate = value;\n\t\t\tuniforms.pointLights.needsUpdate = value;\n\t\t\tuniforms.pointLightShadows.needsUpdate = value;\n\t\t\tuniforms.spotLights.needsUpdate = value;\n\t\t\tuniforms.spotLightShadows.needsUpdate = value;\n\t\t\tuniforms.rectAreaLights.needsUpdate = value;\n\t\t\tuniforms.hemisphereLights.needsUpdate = value;\n\t\t}\n\n\t\tfunction materialNeedsLights(material) {\n\t\t\treturn material.isMeshLambertMaterial || material.isMeshToonMaterial || material.isMeshPhongMaterial || material.isMeshStandardMaterial || material.isShadowMaterial || material.isShaderMaterial && material.lights === true;\n\t\t}\n\n\t\tthis.getActiveCubeFace = function () {\n\t\t\treturn _currentActiveCubeFace;\n\t\t};\n\n\t\tthis.getActiveMipmapLevel = function () {\n\t\t\treturn _currentActiveMipmapLevel;\n\t\t};\n\n\t\tthis.getRenderTarget = function () {\n\t\t\treturn _currentRenderTarget;\n\t\t};\n\n\t\tthis.setRenderTarget = function (renderTarget, activeCubeFace = 0, activeMipmapLevel = 0) {\n\t\t\t_currentRenderTarget = renderTarget;\n\t\t\t_currentActiveCubeFace = activeCubeFace;\n\t\t\t_currentActiveMipmapLevel = activeMipmapLevel;\n\n\t\t\tif (renderTarget && properties.get(renderTarget).__webglFramebuffer === undefined) {\n\t\t\t\ttextures.setupRenderTarget(renderTarget);\n\t\t\t}\n\n\t\t\tlet framebuffer = null;\n\t\t\tlet isCube = false;\n\t\t\tlet isRenderTarget3D = false;\n\n\t\t\tif (renderTarget) {\n\t\t\t\tconst texture = renderTarget.texture;\n\n\t\t\t\tif (texture.isDataTexture3D || texture.isDataTexture2DArray) {\n\t\t\t\t\tisRenderTarget3D = true;\n\t\t\t\t}\n\n\t\t\t\tconst __webglFramebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\t\tif (renderTarget.isWebGLCubeRenderTarget) {\n\t\t\t\t\tframebuffer = __webglFramebuffer[activeCubeFace];\n\t\t\t\t\tisCube = true;\n\t\t\t\t} else if (renderTarget.isWebGLMultisampleRenderTarget) {\n\t\t\t\t\tframebuffer = properties.get(renderTarget).__webglMultisampledFramebuffer;\n\t\t\t\t} else {\n\t\t\t\t\tframebuffer = __webglFramebuffer;\n\t\t\t\t}\n\n\t\t\t\t_currentViewport.copy(renderTarget.viewport);\n\n\t\t\t\t_currentScissor.copy(renderTarget.scissor);\n\n\t\t\t\t_currentScissorTest = renderTarget.scissorTest;\n\t\t\t} else {\n\t\t\t\t_currentViewport.copy(_viewport).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissor.copy(_scissor).multiplyScalar(_pixelRatio).floor();\n\n\t\t\t\t_currentScissorTest = _scissorTest;\n\t\t\t}\n\n\t\t\tconst framebufferBound = state.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\tif (framebufferBound && capabilities.drawBuffers) {\n\t\t\t\tlet needsUpdate = false;\n\n\t\t\t\tif (renderTarget) {\n\t\t\t\t\tif (renderTarget.isWebGLMultipleRenderTargets) {\n\t\t\t\t\t\tconst textures = renderTarget.texture;\n\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== textures.length || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\tfor (let i = 0, il = textures.length; i < il; i++) {\n\t\t\t\t\t\t\t\t_currentDrawBuffers[i] = _gl.COLOR_ATTACHMENT0 + i;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t_currentDrawBuffers.length = textures.length;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.COLOR_ATTACHMENT0) {\n\t\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.COLOR_ATTACHMENT0;\n\t\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tif (_currentDrawBuffers.length !== 1 || _currentDrawBuffers[0] !== _gl.BACK) {\n\t\t\t\t\t\t_currentDrawBuffers[0] = _gl.BACK;\n\t\t\t\t\t\t_currentDrawBuffers.length = 1;\n\t\t\t\t\t\tneedsUpdate = true;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (needsUpdate) {\n\t\t\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t\t\t_gl.drawBuffers(_currentDrawBuffers);\n\t\t\t\t\t} else {\n\t\t\t\t\t\textensions.get('WEBGL_draw_buffers').drawBuffersWEBGL(_currentDrawBuffers);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tstate.viewport(_currentViewport);\n\t\t\tstate.scissor(_currentScissor);\n\t\t\tstate.setScissorTest(_currentScissorTest);\n\n\t\t\tif (isCube) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\n\t\t\t\t_gl.framebufferTexture2D(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, _gl.TEXTURE_CUBE_MAP_POSITIVE_X + activeCubeFace, textureProperties.__webglTexture, activeMipmapLevel);\n\t\t\t} else if (isRenderTarget3D) {\n\t\t\t\tconst textureProperties = properties.get(renderTarget.texture);\n\t\t\t\tconst layer = activeCubeFace || 0;\n\n\t\t\t\t_gl.framebufferTextureLayer(_gl.FRAMEBUFFER, _gl.COLOR_ATTACHMENT0, textureProperties.__webglTexture, activeMipmapLevel || 0, layer);\n\t\t\t}\n\t\t};\n\n\t\tthis.readRenderTargetPixels = function (renderTarget, x, y, width, height, buffer, activeCubeFaceIndex) {\n\t\t\tif (!(renderTarget && renderTarget.isWebGLRenderTarget)) {\n\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not THREE.WebGLRenderTarget.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tlet framebuffer = properties.get(renderTarget).__webglFramebuffer;\n\n\t\t\tif (renderTarget.isWebGLCubeRenderTarget && activeCubeFaceIndex !== undefined) {\n\t\t\t\tframebuffer = framebuffer[activeCubeFaceIndex];\n\t\t\t}\n\n\t\t\tif (framebuffer) {\n\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\n\t\t\t\ttry {\n\t\t\t\t\tconst texture = renderTarget.texture;\n\t\t\t\t\tconst textureFormat = texture.format;\n\t\t\t\t\tconst textureType = texture.type;\n\n\t\t\t\t\tif (textureFormat !== RGBAFormat && utils.convert(textureFormat) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_FORMAT)) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in RGBA or implementation defined format.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst halfFloatSupportedByExt = textureType === HalfFloatType && (extensions.has('EXT_color_buffer_half_float') || capabilities.isWebGL2 && extensions.has('EXT_color_buffer_float'));\n\n\t\t\t\t\tif (textureType !== UnsignedByteType && utils.convert(textureType) !== _gl.getParameter(_gl.IMPLEMENTATION_COLOR_READ_TYPE) && // Edge and Chrome Mac < 52 (#9513)\n\t\t\t\t\t!(textureType === FloatType && (capabilities.isWebGL2 || extensions.has('OES_texture_float') || extensions.has('WEBGL_color_buffer_float'))) && // Chrome Mac >= 52 and Firefox\n\t\t\t\t\t!halfFloatSupportedByExt) {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: renderTarget is not in UnsignedByteType or implementation defined type.');\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (_gl.checkFramebufferStatus(_gl.FRAMEBUFFER) === _gl.FRAMEBUFFER_COMPLETE) {\n\t\t\t\t\t\t// the following if statement ensures valid read requests (no out-of-bounds pixels, see #8604)\n\t\t\t\t\t\tif (x >= 0 && x <= renderTarget.width - width && y >= 0 && y <= renderTarget.height - height) {\n\t\t\t\t\t\t\t_gl.readPixels(x, y, width, height, utils.convert(textureFormat), utils.convert(textureType), buffer);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.WebGLRenderer.readRenderTargetPixels: readPixels from renderTarget failed. Framebuffer not complete.');\n\t\t\t\t\t}\n\t\t\t\t} finally {\n\t\t\t\t\t// restore framebuffer of current render target if necessary\n\t\t\t\t\tconst framebuffer = _currentRenderTarget !== null ? properties.get(_currentRenderTarget).__webglFramebuffer : null;\n\t\t\t\t\tstate.bindFramebuffer(_gl.FRAMEBUFFER, framebuffer);\n\t\t\t\t}\n\t\t\t}\n\t\t};\n\n\t\tthis.copyFramebufferToTexture = function (position, texture, level = 0) {\n\t\t\tconst levelScale = Math.pow(2, -level);\n\t\t\tconst width = Math.floor(texture.image.width * levelScale);\n\t\t\tconst height = Math.floor(texture.image.height * levelScale);\n\t\t\tlet glFormat = utils.convert(texture.format);\n\n\t\t\tif (capabilities.isWebGL2) {\n\t\t\t\t// Workaround for https://bugs.chromium.org/p/chromium/issues/detail?id=1120100\n\t\t\t\tif (glFormat === _gl.RGB) glFormat = _gl.RGB8;\n\t\t\t\tif (glFormat === _gl.RGBA) glFormat = _gl.RGBA8;\n\t\t\t}\n\n\t\t\ttextures.setTexture2D(texture, 0);\n\n\t\t\t_gl.copyTexImage2D(_gl.TEXTURE_2D, level, glFormat, position.x, position.y, width, height, 0);\n\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture = function (position, srcTexture, dstTexture, level = 0) {\n\t\t\tconst width = srcTexture.image.width;\n\t\t\tconst height = srcTexture.image.height;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\ttextures.setTexture2D(dstTexture, 0); // As another texture upload may have changed pixelStorei\n\t\t\t// parameters, make sure they are correct for the dstTexture\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tif (srcTexture.isDataTexture) {\n\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, width, height, glFormat, glType, srcTexture.image.data);\n\t\t\t} else {\n\t\t\t\tif (srcTexture.isCompressedTexture) {\n\t\t\t\t\t_gl.compressedTexSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, srcTexture.mipmaps[0].width, srcTexture.mipmaps[0].height, glFormat, srcTexture.mipmaps[0].data);\n\t\t\t\t} else {\n\t\t\t\t\t_gl.texSubImage2D(_gl.TEXTURE_2D, level, position.x, position.y, glFormat, glType, srcTexture.image);\n\t\t\t\t}\n\t\t\t} // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(_gl.TEXTURE_2D);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.copyTextureToTexture3D = function (sourceBox, position, srcTexture, dstTexture, level = 0) {\n\t\t\tif (_this.isWebGL1Renderer) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: can only be used with WebGL2.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst {\n\t\t\t\twidth,\n\t\t\t\theight,\n\t\t\t\tdata\n\t\t\t} = srcTexture.image;\n\t\t\tconst glFormat = utils.convert(dstTexture.format);\n\t\t\tconst glType = utils.convert(dstTexture.type);\n\t\t\tlet glTarget;\n\n\t\t\tif (dstTexture.isDataTexture3D) {\n\t\t\t\ttextures.setTexture3D(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_3D;\n\t\t\t} else if (dstTexture.isDataTexture2DArray) {\n\t\t\t\ttextures.setTexture2DArray(dstTexture, 0);\n\t\t\t\tglTarget = _gl.TEXTURE_2D_ARRAY;\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer.copyTextureToTexture3D: only supports THREE.DataTexture3D and THREE.DataTexture2DArray.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_FLIP_Y_WEBGL, dstTexture.flipY);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, dstTexture.premultiplyAlpha);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ALIGNMENT, dstTexture.unpackAlignment);\n\n\t\t\tconst unpackRowLen = _gl.getParameter(_gl.UNPACK_ROW_LENGTH);\n\n\t\t\tconst unpackImageHeight = _gl.getParameter(_gl.UNPACK_IMAGE_HEIGHT);\n\n\t\t\tconst unpackSkipPixels = _gl.getParameter(_gl.UNPACK_SKIP_PIXELS);\n\n\t\t\tconst unpackSkipRows = _gl.getParameter(_gl.UNPACK_SKIP_ROWS);\n\n\t\t\tconst unpackSkipImages = _gl.getParameter(_gl.UNPACK_SKIP_IMAGES);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, width);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, height);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, sourceBox.min.x);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, sourceBox.min.y);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, sourceBox.min.z);\n\n\t\t\t_gl.texSubImage3D(glTarget, level, position.x, position.y, position.z, sourceBox.max.x - sourceBox.min.x + 1, sourceBox.max.y - sourceBox.min.y + 1, sourceBox.max.z - sourceBox.min.z + 1, glFormat, glType, data);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_ROW_LENGTH, unpackRowLen);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_IMAGE_HEIGHT, unpackImageHeight);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_PIXELS, unpackSkipPixels);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_ROWS, unpackSkipRows);\n\n\t\t\t_gl.pixelStorei(_gl.UNPACK_SKIP_IMAGES, unpackSkipImages); // Generate mipmaps only when copying level 0\n\n\n\t\t\tif (level === 0 && dstTexture.generateMipmaps) _gl.generateMipmap(glTarget);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.initTexture = function (texture) {\n\t\t\ttextures.setTexture2D(texture, 0);\n\t\t\tstate.unbindTexture();\n\t\t};\n\n\t\tthis.resetState = function () {\n\t\t\t_currentActiveCubeFace = 0;\n\t\t\t_currentActiveMipmapLevel = 0;\n\t\t\t_currentRenderTarget = null;\n\t\t\tstate.reset();\n\t\t\tbindingStates.reset();\n\t\t};\n\n\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\tdetail: this\n\t\t\t})); // eslint-disable-line no-undef\n\n\t\t}\n\t}\n\n\tclass WebGL1Renderer extends WebGLRenderer {}\n\n\tWebGL1Renderer.prototype.isWebGL1Renderer = true;\n\n\tclass FogExp2 {\n\t\tconstructor(color, density = 0.00025) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.density = density;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new FogExp2(this.color, this.density);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'FogExp2',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tdensity: this.density\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFogExp2.prototype.isFogExp2 = true;\n\n\tclass Fog {\n\t\tconstructor(color, near = 1, far = 1000) {\n\t\t\tthis.name = '';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Fog(this.color, this.near, this.far);\n\t\t}\n\n\t\ttoJSON()\n\t\t/* meta */\n\t\t{\n\t\t\treturn {\n\t\t\t\ttype: 'Fog',\n\t\t\t\tcolor: this.color.getHex(),\n\t\t\t\tnear: this.near,\n\t\t\t\tfar: this.far\n\t\t\t};\n\t\t}\n\n\t}\n\n\tFog.prototype.isFog = true;\n\n\tclass Scene extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Scene';\n\t\t\tthis.background = null;\n\t\t\tthis.environment = null;\n\t\t\tthis.fog = null;\n\t\t\tthis.overrideMaterial = null;\n\t\t\tthis.autoUpdate = true; // checked by the renderer\n\n\t\t\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('observe', {\n\t\t\t\t\tdetail: this\n\t\t\t\t})); // eslint-disable-line no-undef\n\n\t\t\t}\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tif (source.background !== null) this.background = source.background.clone();\n\t\t\tif (source.environment !== null) this.environment = source.environment.clone();\n\t\t\tif (source.fog !== null) this.fog = source.fog.clone();\n\t\t\tif (source.overrideMaterial !== null) this.overrideMaterial = source.overrideMaterial.clone();\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\tthis.matrixAutoUpdate = source.matrixAutoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.background !== null) data.object.background = this.background.toJSON(meta);\n\t\t\tif (this.environment !== null) data.object.environment = this.environment.toJSON(meta);\n\t\t\tif (this.fog !== null) data.object.fog = this.fog.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tScene.prototype.isScene = true;\n\n\tclass InterleavedBuffer {\n\t\tconstructor(array, stride) {\n\t\t\tthis.array = array;\n\t\t\tthis.stride = stride;\n\t\t\tthis.count = array !== undefined ? array.length / stride : 0;\n\t\t\tthis.usage = StaticDrawUsage;\n\t\t\tthis.updateRange = {\n\t\t\t\toffset: 0,\n\t\t\t\tcount: -1\n\t\t\t};\n\t\t\tthis.version = 0;\n\t\t\tthis.uuid = generateUUID();\n\t\t}\n\n\t\tonUploadCallback() {}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetUsage(value) {\n\t\t\tthis.usage = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.array = new source.array.constructor(source.array);\n\t\t\tthis.count = source.count;\n\t\t\tthis.stride = source.stride;\n\t\t\tthis.usage = source.usage;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopyAt(index1, attribute, index2) {\n\t\t\tindex1 *= this.stride;\n\t\t\tindex2 *= attribute.stride;\n\n\t\t\tfor (let i = 0, l = this.stride; i < l; i++) {\n\t\t\t\tthis.array[index1 + i] = attribute.array[index2 + i];\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(value, offset = 0) {\n\t\t\tthis.array.set(value, offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t}\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = this.array.slice(0).buffer;\n\t\t\t}\n\n\t\t\tconst array = new this.array.constructor(data.arrayBuffers[this.array.buffer._uuid]);\n\t\t\tconst ib = new this.constructor(array, this.stride);\n\t\t\tib.setUsage(this.usage);\n\t\t\treturn ib;\n\t\t}\n\n\t\tonUpload(callback) {\n\t\t\tthis.onUploadCallback = callback;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data.arrayBuffers === undefined) {\n\t\t\t\tdata.arrayBuffers = {};\n\t\t\t} // generate UUID for array buffer if necessary\n\n\n\t\t\tif (this.array.buffer._uuid === undefined) {\n\t\t\t\tthis.array.buffer._uuid = generateUUID();\n\t\t\t}\n\n\t\t\tif (data.arrayBuffers[this.array.buffer._uuid] === undefined) {\n\t\t\t\tdata.arrayBuffers[this.array.buffer._uuid] = Array.prototype.slice.call(new Uint32Array(this.array.buffer));\n\t\t\t} //\n\n\n\t\t\treturn {\n\t\t\t\tuuid: this.uuid,\n\t\t\t\tbuffer: this.array.buffer._uuid,\n\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\tstride: this.stride\n\t\t\t};\n\t\t}\n\n\t}\n\n\tInterleavedBuffer.prototype.isInterleavedBuffer = true;\n\n\tconst _vector$6 = /*@__PURE__*/new Vector3();\n\n\tclass InterleavedBufferAttribute {\n\t\tconstructor(interleavedBuffer, itemSize, offset, normalized) {\n\t\t\tthis.name = '';\n\t\t\tthis.data = interleavedBuffer;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.offset = offset;\n\t\t\tthis.normalized = normalized === true;\n\t\t}\n\n\t\tget count() {\n\t\t\treturn this.data.count;\n\t\t}\n\n\t\tget array() {\n\t\t\treturn this.data.array;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tthis.data.needsUpdate = value;\n\t\t}\n\n\t\tapplyMatrix4(m) {\n\t\t\tfor (let i = 0, l = this.data.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyMatrix4(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tapplyNormalMatrix(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.applyNormalMatrix(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttransformDirection(m) {\n\t\t\tfor (let i = 0, l = this.count; i < l; i++) {\n\t\t\t\t_vector$6.x = this.getX(i);\n\t\t\t\t_vector$6.y = this.getY(i);\n\t\t\t\t_vector$6.z = this.getZ(i);\n\n\t\t\t\t_vector$6.transformDirection(m);\n\n\t\t\t\tthis.setXYZ(i, _vector$6.x, _vector$6.y, _vector$6.z);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetX(index, x) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset] = x;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetY(index, y) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetZ(index, z) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetW(index, w) {\n\t\t\tthis.data.array[index * this.data.stride + this.offset + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetX(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset];\n\t\t}\n\n\t\tgetY(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 1];\n\t\t}\n\n\t\tgetZ(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 2];\n\t\t}\n\n\t\tgetW(index) {\n\t\t\treturn this.data.array[index * this.data.stride + this.offset + 3];\n\t\t}\n\n\t\tsetXY(index, x, y) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZ(index, x, y, z) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetXYZW(index, x, y, z, w) {\n\t\t\tindex = index * this.data.stride + this.offset;\n\t\t\tthis.data.array[index + 0] = x;\n\t\t\tthis.data.array[index + 1] = y;\n\t\t\tthis.data.array[index + 2] = z;\n\t\t\tthis.data.array[index + 3] = w;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.clone(): Cloning an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn new BufferAttribute(new this.array.constructor(array), this.itemSize, this.normalized);\n\t\t\t} else {\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.clone(data);\n\t\t\t\t}\n\n\t\t\t\treturn new InterleavedBufferAttribute(data.interleavedBuffers[this.data.uuid], this.itemSize, this.offset, this.normalized);\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tif (data === undefined) {\n\t\t\t\tconsole.log('THREE.InterleavedBufferAttribute.toJSON(): Serializing an interlaved buffer attribute will deinterleave buffer data.');\n\t\t\t\tconst array = [];\n\n\t\t\t\tfor (let i = 0; i < this.count; i++) {\n\t\t\t\t\tconst index = i * this.data.stride + this.offset;\n\n\t\t\t\t\tfor (let j = 0; j < this.itemSize; j++) {\n\t\t\t\t\t\tarray.push(this.data.array[index + j]);\n\t\t\t\t\t}\n\t\t\t\t} // deinterleave data and save it as an ordinary buffer attribute for now\n\n\n\t\t\t\treturn {\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\ttype: this.array.constructor.name,\n\t\t\t\t\tarray: array,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t} else {\n\t\t\t\t// save as true interlaved attribtue\n\t\t\t\tif (data.interleavedBuffers === undefined) {\n\t\t\t\t\tdata.interleavedBuffers = {};\n\t\t\t\t}\n\n\t\t\t\tif (data.interleavedBuffers[this.data.uuid] === undefined) {\n\t\t\t\t\tdata.interleavedBuffers[this.data.uuid] = this.data.toJSON(data);\n\t\t\t\t}\n\n\t\t\t\treturn {\n\t\t\t\t\tisInterleavedBufferAttribute: true,\n\t\t\t\t\titemSize: this.itemSize,\n\t\t\t\t\tdata: this.data.uuid,\n\t\t\t\t\toffset: this.offset,\n\t\t\t\t\tnormalized: this.normalized\n\t\t\t\t};\n\t\t\t}\n\t\t}\n\n\t}\n\n\tInterleavedBufferAttribute.prototype.isInterleavedBufferAttribute = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\trotation: <float>,\n\t *\tsizeAttenuation: <bool>\n\t * }\n\t */\n\n\tclass SpriteMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SpriteMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.rotation = 0;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.rotation = source.rotation;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpriteMaterial.prototype.isSpriteMaterial = true;\n\n\tlet _geometry;\n\n\tconst _intersectPoint = /*@__PURE__*/new Vector3();\n\n\tconst _worldScale = /*@__PURE__*/new Vector3();\n\n\tconst _mvPosition = /*@__PURE__*/new Vector3();\n\n\tconst _alignedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _rotatedPosition = /*@__PURE__*/new Vector2();\n\n\tconst _viewWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _vA = /*@__PURE__*/new Vector3();\n\n\tconst _vB = /*@__PURE__*/new Vector3();\n\n\tconst _vC = /*@__PURE__*/new Vector3();\n\n\tconst _uvA = /*@__PURE__*/new Vector2();\n\n\tconst _uvB = /*@__PURE__*/new Vector2();\n\n\tconst _uvC = /*@__PURE__*/new Vector2();\n\n\tclass Sprite extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Sprite';\n\n\t\t\tif (_geometry === undefined) {\n\t\t\t\t_geometry = new BufferGeometry();\n\t\t\t\tconst float32Array = new Float32Array([-0.5, -0.5, 0, 0, 0, 0.5, -0.5, 0, 1, 0, 0.5, 0.5, 0, 1, 1, -0.5, 0.5, 0, 0, 1]);\n\t\t\t\tconst interleavedBuffer = new InterleavedBuffer(float32Array, 5);\n\n\t\t\t\t_geometry.setIndex([0, 1, 2, 0, 2, 3]);\n\n\t\t\t\t_geometry.setAttribute('position', new InterleavedBufferAttribute(interleavedBuffer, 3, 0, false));\n\n\t\t\t\t_geometry.setAttribute('uv', new InterleavedBufferAttribute(interleavedBuffer, 2, 3, false));\n\t\t\t}\n\n\t\t\tthis.geometry = _geometry;\n\t\t\tthis.material = material !== undefined ? material : new SpriteMaterial();\n\t\t\tthis.center = new Vector2(0.5, 0.5);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tif (raycaster.camera === null) {\n\t\t\t\tconsole.error('THREE.Sprite: \"Raycaster.camera\" needs to be set in order to raycast against sprites.');\n\t\t\t}\n\n\t\t\t_worldScale.setFromMatrixScale(this.matrixWorld);\n\n\t\t\t_viewWorldMatrix.copy(raycaster.camera.matrixWorld);\n\n\t\t\tthis.modelViewMatrix.multiplyMatrices(raycaster.camera.matrixWorldInverse, this.matrixWorld);\n\n\t\t\t_mvPosition.setFromMatrixPosition(this.modelViewMatrix);\n\n\t\t\tif (raycaster.camera.isPerspectiveCamera && this.material.sizeAttenuation === false) {\n\t\t\t\t_worldScale.multiplyScalar(-_mvPosition.z);\n\t\t\t}\n\n\t\t\tconst rotation = this.material.rotation;\n\t\t\tlet sin, cos;\n\n\t\t\tif (rotation !== 0) {\n\t\t\t\tcos = Math.cos(rotation);\n\t\t\t\tsin = Math.sin(rotation);\n\t\t\t}\n\n\t\t\tconst center = this.center;\n\t\t\ttransformVertex(_vA.set(-0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vB.set(0.5, -0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\t\t\ttransformVertex(_vC.set(0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t_uvA.set(0, 0);\n\n\t\t\t_uvB.set(1, 0);\n\n\t\t\t_uvC.set(1, 1); // check first triangle\n\n\n\t\t\tlet intersect = raycaster.ray.intersectTriangle(_vA, _vB, _vC, false, _intersectPoint);\n\n\t\t\tif (intersect === null) {\n\t\t\t\t// check second triangle\n\t\t\t\ttransformVertex(_vB.set(-0.5, 0.5, 0), _mvPosition, center, _worldScale, sin, cos);\n\n\t\t\t\t_uvB.set(0, 1);\n\n\t\t\t\tintersect = raycaster.ray.intersectTriangle(_vA, _vC, _vB, false, _intersectPoint);\n\n\t\t\t\tif (intersect === null) {\n\t\t\t\t\treturn;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(_intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tpoint: _intersectPoint.clone(),\n\t\t\t\tuv: Triangle.getUV(_intersectPoint, _vA, _vB, _vC, _uvA, _uvB, _uvC, new Vector2()),\n\t\t\t\tface: null,\n\t\t\t\tobject: this\n\t\t\t});\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tif (source.center !== undefined) this.center.copy(source.center);\n\t\t\tthis.material = source.material;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSprite.prototype.isSprite = true;\n\n\tfunction transformVertex(vertexPosition, mvPosition, center, scale, sin, cos) {\n\t\t// compute position in camera space\n\t\t_alignedPosition.subVectors(vertexPosition, center).addScalar(0.5).multiply(scale); // to check if rotation is not zero\n\n\n\t\tif (sin !== undefined) {\n\t\t\t_rotatedPosition.x = cos * _alignedPosition.x - sin * _alignedPosition.y;\n\t\t\t_rotatedPosition.y = sin * _alignedPosition.x + cos * _alignedPosition.y;\n\t\t} else {\n\t\t\t_rotatedPosition.copy(_alignedPosition);\n\t\t}\n\n\t\tvertexPosition.copy(mvPosition);\n\t\tvertexPosition.x += _rotatedPosition.x;\n\t\tvertexPosition.y += _rotatedPosition.y; // transform to world space\n\n\t\tvertexPosition.applyMatrix4(_viewWorldMatrix);\n\t}\n\n\tconst _v1$2 = /*@__PURE__*/new Vector3();\n\n\tconst _v2$1 = /*@__PURE__*/new Vector3();\n\n\tclass LOD extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis._currentLevel = 0;\n\t\t\tthis.type = 'LOD';\n\t\t\tObject.defineProperties(this, {\n\t\t\t\tlevels: {\n\t\t\t\t\tenumerable: true,\n\t\t\t\t\tvalue: []\n\t\t\t\t},\n\t\t\t\tisLOD: {\n\t\t\t\t\tvalue: true\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.autoUpdate = true;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tconst levels = source.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tthis.addLevel(level.object.clone(), level.distance);\n\t\t\t}\n\n\t\t\tthis.autoUpdate = source.autoUpdate;\n\t\t\treturn this;\n\t\t}\n\n\t\taddLevel(object, distance = 0) {\n\t\t\tdistance = Math.abs(distance);\n\t\t\tconst levels = this.levels;\n\t\t\tlet l;\n\n\t\t\tfor (l = 0; l < levels.length; l++) {\n\t\t\t\tif (distance < levels[l].distance) {\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlevels.splice(l, 0, {\n\t\t\t\tdistance: distance,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t\tthis.add(object);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCurrentLevel() {\n\t\t\treturn this._currentLevel;\n\t\t}\n\n\t\tgetObjectForDistance(distance) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance < levels[i].distance) {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn levels[i - 1].object;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 0) {\n\t\t\t\t_v1$2.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(_v1$2);\n\t\t\t\tthis.getObjectForDistance(distance).raycast(raycaster, intersects);\n\t\t\t}\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst levels = this.levels;\n\n\t\t\tif (levels.length > 1) {\n\t\t\t\t_v1$2.setFromMatrixPosition(camera.matrixWorld);\n\n\t\t\t\t_v2$1.setFromMatrixPosition(this.matrixWorld);\n\n\t\t\t\tconst distance = _v1$2.distanceTo(_v2$1) / camera.zoom;\n\t\t\t\tlevels[0].object.visible = true;\n\t\t\t\tlet i, l;\n\n\t\t\t\tfor (i = 1, l = levels.length; i < l; i++) {\n\t\t\t\t\tif (distance >= levels[i].distance) {\n\t\t\t\t\t\tlevels[i - 1].object.visible = false;\n\t\t\t\t\t\tlevels[i].object.visible = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._currentLevel = i - 1;\n\n\t\t\t\tfor (; i < l; i++) {\n\t\t\t\t\tlevels[i].object.visible = false;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tif (this.autoUpdate === false) data.object.autoUpdate = false;\n\t\t\tdata.object.levels = [];\n\t\t\tconst levels = this.levels;\n\n\t\t\tfor (let i = 0, l = levels.length; i < l; i++) {\n\t\t\t\tconst level = levels[i];\n\t\t\t\tdata.object.levels.push({\n\t\t\t\t\tobject: level.object.uuid,\n\t\t\t\t\tdistance: level.distance\n\t\t\t\t});\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _basePosition = /*@__PURE__*/new Vector3();\n\n\tconst _skinIndex = /*@__PURE__*/new Vector4();\n\n\tconst _skinWeight = /*@__PURE__*/new Vector4();\n\n\tconst _vector$5 = /*@__PURE__*/new Vector3();\n\n\tconst _matrix = /*@__PURE__*/new Matrix4();\n\n\tclass SkinnedMesh extends Mesh {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkinnedMesh';\n\t\t\tthis.bindMode = 'attached';\n\t\t\tthis.bindMatrix = new Matrix4();\n\t\t\tthis.bindMatrixInverse = new Matrix4();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bindMode = source.bindMode;\n\t\t\tthis.bindMatrix.copy(source.bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(source.bindMatrixInverse);\n\t\t\tthis.skeleton = source.skeleton;\n\t\t\treturn this;\n\t\t}\n\n\t\tbind(skeleton, bindMatrix) {\n\t\t\tthis.skeleton = skeleton;\n\n\t\t\tif (bindMatrix === undefined) {\n\t\t\t\tthis.updateMatrixWorld(true);\n\t\t\t\tthis.skeleton.calculateInverses();\n\t\t\t\tbindMatrix = this.matrixWorld;\n\t\t\t}\n\n\t\t\tthis.bindMatrix.copy(bindMatrix);\n\t\t\tthis.bindMatrixInverse.copy(bindMatrix).invert();\n\t\t}\n\n\t\tpose() {\n\t\t\tthis.skeleton.pose();\n\t\t}\n\n\t\tnormalizeSkinWeights() {\n\t\t\tconst vector = new Vector4();\n\t\t\tconst skinWeight = this.geometry.attributes.skinWeight;\n\n\t\t\tfor (let i = 0, l = skinWeight.count; i < l; i++) {\n\t\t\t\tvector.x = skinWeight.getX(i);\n\t\t\t\tvector.y = skinWeight.getY(i);\n\t\t\t\tvector.z = skinWeight.getZ(i);\n\t\t\t\tvector.w = skinWeight.getW(i);\n\t\t\t\tconst scale = 1.0 / vector.manhattanLength();\n\n\t\t\t\tif (scale !== Infinity) {\n\t\t\t\t\tvector.multiplyScalar(scale);\n\t\t\t\t} else {\n\t\t\t\t\tvector.set(1, 0, 0, 0); // do something reasonable\n\t\t\t\t}\n\n\t\t\t\tskinWeight.setXYZW(i, vector.x, vector.y, vector.z, vector.w);\n\t\t\t}\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\n\t\t\tif (this.bindMode === 'attached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.matrixWorld).invert();\n\t\t\t} else if (this.bindMode === 'detached') {\n\t\t\t\tthis.bindMatrixInverse.copy(this.bindMatrix).invert();\n\t\t\t} else {\n\t\t\t\tconsole.warn('THREE.SkinnedMesh: Unrecognized bindMode: ' + this.bindMode);\n\t\t\t}\n\t\t}\n\n\t\tboneTransform(index, target) {\n\t\t\tconst skeleton = this.skeleton;\n\t\t\tconst geometry = this.geometry;\n\n\t\t\t_skinIndex.fromBufferAttribute(geometry.attributes.skinIndex, index);\n\n\t\t\t_skinWeight.fromBufferAttribute(geometry.attributes.skinWeight, index);\n\n\t\t\t_basePosition.fromBufferAttribute(geometry.attributes.position, index).applyMatrix4(this.bindMatrix);\n\n\t\t\ttarget.set(0, 0, 0);\n\n\t\t\tfor (let i = 0; i < 4; i++) {\n\t\t\t\tconst weight = _skinWeight.getComponent(i);\n\n\t\t\t\tif (weight !== 0) {\n\t\t\t\t\tconst boneIndex = _skinIndex.getComponent(i);\n\n\t\t\t\t\t_matrix.multiplyMatrices(skeleton.bones[boneIndex].matrixWorld, skeleton.boneInverses[boneIndex]);\n\n\t\t\t\t\ttarget.addScaledVector(_vector$5.copy(_basePosition).applyMatrix4(_matrix), weight);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn target.applyMatrix4(this.bindMatrixInverse);\n\t\t}\n\n\t}\n\n\tSkinnedMesh.prototype.isSkinnedMesh = true;\n\n\tclass Bone extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'Bone';\n\t\t}\n\n\t}\n\n\tBone.prototype.isBone = true;\n\n\tclass DataTexture extends Texture {\n\t\tconstructor(data, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\tdata: data || null,\n\t\t\t\twidth: width || 1,\n\t\t\t\theight: height || 1\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tthis.flipY = false;\n\t\t\tthis.unpackAlignment = 1;\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tDataTexture.prototype.isDataTexture = true;\n\n\tconst _offsetMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _identityMatrix = /*@__PURE__*/new Matrix4();\n\n\tclass Skeleton {\n\t\tconstructor(bones = [], boneInverses = []) {\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.bones = bones.slice(0);\n\t\t\tthis.boneInverses = boneInverses;\n\t\t\tthis.boneMatrices = null;\n\t\t\tthis.boneTexture = null;\n\t\t\tthis.boneTextureSize = 0;\n\t\t\tthis.frame = -1;\n\t\t\tthis.init();\n\t\t}\n\n\t\tinit() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tthis.boneMatrices = new Float32Array(bones.length * 16); // calculate inverse bone matrices if necessary\n\n\t\t\tif (boneInverses.length === 0) {\n\t\t\t\tthis.calculateInverses();\n\t\t\t} else {\n\t\t\t\t// handle special case\n\t\t\t\tif (bones.length !== boneInverses.length) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: Number of inverse bone matrices does not match amount of bones.');\n\t\t\t\t\tthis.boneInverses = [];\n\n\t\t\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\t\t\tthis.boneInverses.push(new Matrix4());\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tcalculateInverses() {\n\t\t\tthis.boneInverses.length = 0;\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst inverse = new Matrix4();\n\n\t\t\t\tif (this.bones[i]) {\n\t\t\t\t\tinverse.copy(this.bones[i].matrixWorld).invert();\n\t\t\t\t}\n\n\t\t\t\tthis.boneInverses.push(inverse);\n\t\t\t}\n\t\t}\n\n\t\tpose() {\n\t\t\t// recover the bind-time world matrices\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tbone.matrixWorld.copy(this.boneInverses[i]).invert();\n\t\t\t\t}\n\t\t\t} // compute the local matrices, positions, rotations and scales\n\n\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone) {\n\t\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t\tbone.matrix.copy(bone.parent.matrixWorld).invert();\n\t\t\t\t\t\tbone.matrix.multiply(bone.matrixWorld);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tbone.matrix.copy(bone.matrixWorld);\n\t\t\t\t\t}\n\n\t\t\t\t\tbone.matrix.decompose(bone.position, bone.quaternion, bone.scale);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\t\t\tconst boneMatrices = this.boneMatrices;\n\t\t\tconst boneTexture = this.boneTexture; // flatten bone matrices to array\n\n\t\t\tfor (let i = 0, il = bones.length; i < il; i++) {\n\t\t\t\t// compute the offset between the current and the original transform\n\t\t\t\tconst matrix = bones[i] ? bones[i].matrixWorld : _identityMatrix;\n\n\t\t\t\t_offsetMatrix.multiplyMatrices(matrix, boneInverses[i]);\n\n\t\t\t\t_offsetMatrix.toArray(boneMatrices, i * 16);\n\t\t\t}\n\n\t\t\tif (boneTexture !== null) {\n\t\t\t\tboneTexture.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Skeleton(this.bones, this.boneInverses);\n\t\t}\n\n\t\tcomputeBoneTexture() {\n\t\t\t// layout (1 matrix = 4 pixels)\n\t\t\t//\t\t\tRGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\n\t\t\t//\twith\t8x8\tpixel texture max\t 16 bones * 4 pixels =\t(8 * 8)\n\t\t\t//\t\t\t 16x16 pixel texture max\t 64 bones * 4 pixels = (16 * 16)\n\t\t\t//\t\t\t 32x32 pixel texture max\t256 bones * 4 pixels = (32 * 32)\n\t\t\t//\t\t\t 64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\n\t\t\tlet size = Math.sqrt(this.bones.length * 4); // 4 pixels needed for 1 matrix\n\n\t\t\tsize = ceilPowerOfTwo(size);\n\t\t\tsize = Math.max(size, 4);\n\t\t\tconst boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\n\n\t\t\tboneMatrices.set(this.boneMatrices); // copy current values\n\n\t\t\tconst boneTexture = new DataTexture(boneMatrices, size, size, RGBAFormat, FloatType);\n\t\t\tthis.boneMatrices = boneMatrices;\n\t\t\tthis.boneTexture = boneTexture;\n\t\t\tthis.boneTextureSize = size;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetBoneByName(name) {\n\t\t\tfor (let i = 0, il = this.bones.length; i < il; i++) {\n\t\t\t\tconst bone = this.bones[i];\n\n\t\t\t\tif (bone.name === name) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn undefined;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.boneTexture !== null) {\n\t\t\t\tthis.boneTexture.dispose();\n\t\t\t\tthis.boneTexture = null;\n\t\t\t}\n\t\t}\n\n\t\tfromJSON(json, bones) {\n\t\t\tthis.uuid = json.uuid;\n\n\t\t\tfor (let i = 0, l = json.bones.length; i < l; i++) {\n\t\t\t\tconst uuid = json.bones[i];\n\t\t\t\tlet bone = bones[uuid];\n\n\t\t\t\tif (bone === undefined) {\n\t\t\t\t\tconsole.warn('THREE.Skeleton: No bone found with UUID:', uuid);\n\t\t\t\t\tbone = new Bone();\n\t\t\t\t}\n\n\t\t\t\tthis.bones.push(bone);\n\t\t\t\tthis.boneInverses.push(new Matrix4().fromArray(json.boneInverses[i]));\n\t\t\t}\n\n\t\t\tthis.init();\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Skeleton',\n\t\t\t\t\tgenerator: 'Skeleton.toJSON'\n\t\t\t\t},\n\t\t\t\tbones: [],\n\t\t\t\tboneInverses: []\n\t\t\t};\n\t\t\tdata.uuid = this.uuid;\n\t\t\tconst bones = this.bones;\n\t\t\tconst boneInverses = this.boneInverses;\n\n\t\t\tfor (let i = 0, l = bones.length; i < l; i++) {\n\t\t\t\tconst bone = bones[i];\n\t\t\t\tdata.bones.push(bone.uuid);\n\t\t\t\tconst boneInverse = boneInverses[i];\n\t\t\t\tdata.boneInverses.push(boneInverse.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tconst _instanceLocalMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceWorldMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _instanceIntersects = [];\n\n\tconst _mesh = /*@__PURE__*/new Mesh();\n\n\tclass InstancedMesh extends Mesh {\n\t\tconstructor(geometry, material, count) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.instanceMatrix = new BufferAttribute(new Float32Array(count * 16), 16);\n\t\t\tthis.instanceColor = null;\n\t\t\tthis.count = count;\n\t\t\tthis.frustumCulled = false;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceMatrix.copy(source.instanceMatrix);\n\t\t\tif (source.instanceColor !== null) this.instanceColor = source.instanceColor.clone();\n\t\t\tthis.count = source.count;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetColorAt(index, color) {\n\t\t\tcolor.fromArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tgetMatrixAt(index, matrix) {\n\t\t\tmatrix.fromArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst raycastTimes = this.count;\n\t\t\t_mesh.geometry = this.geometry;\n\t\t\t_mesh.material = this.material;\n\t\t\tif (_mesh.material === undefined) return;\n\n\t\t\tfor (let instanceId = 0; instanceId < raycastTimes; instanceId++) {\n\t\t\t\t// calculate the world matrix for each instance\n\t\t\t\tthis.getMatrixAt(instanceId, _instanceLocalMatrix);\n\n\t\t\t\t_instanceWorldMatrix.multiplyMatrices(matrixWorld, _instanceLocalMatrix); // the mesh represents this single instance\n\n\n\t\t\t\t_mesh.matrixWorld = _instanceWorldMatrix;\n\n\t\t\t\t_mesh.raycast(raycaster, _instanceIntersects); // process the result of raycast\n\n\n\t\t\t\tfor (let i = 0, l = _instanceIntersects.length; i < l; i++) {\n\t\t\t\t\tconst intersect = _instanceIntersects[i];\n\t\t\t\t\tintersect.instanceId = instanceId;\n\t\t\t\t\tintersect.object = this;\n\t\t\t\t\tintersects.push(intersect);\n\t\t\t\t}\n\n\t\t\t\t_instanceIntersects.length = 0;\n\t\t\t}\n\t\t}\n\n\t\tsetColorAt(index, color) {\n\t\t\tif (this.instanceColor === null) {\n\t\t\t\tthis.instanceColor = new BufferAttribute(new Float32Array(this.count * 3), 3);\n\t\t\t}\n\n\t\t\tcolor.toArray(this.instanceColor.array, index * 3);\n\t\t}\n\n\t\tsetMatrixAt(index, matrix) {\n\t\t\tmatrix.toArray(this.instanceMatrix.array, index * 16);\n\t\t}\n\n\t\tupdateMorphTargets() {}\n\n\t\tdispose() {\n\t\t\tthis.dispatchEvent({\n\t\t\t\ttype: 'dispose'\n\t\t\t});\n\t\t}\n\n\t}\n\n\tInstancedMesh.prototype.isInstancedMesh = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\tlinecap: \"round\",\n\t *\tlinejoin: \"round\"\n\t * }\n\t */\n\n\tclass LineBasicMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineBasicMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.linewidth = 1;\n\t\t\tthis.linecap = 'round';\n\t\t\tthis.linejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.linewidth = source.linewidth;\n\t\t\tthis.linecap = source.linecap;\n\t\t\tthis.linejoin = source.linejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineBasicMaterial.prototype.isLineBasicMaterial = true;\n\n\tconst _start$1 = /*@__PURE__*/new Vector3();\n\n\tconst _end$1 = /*@__PURE__*/new Vector3();\n\n\tconst _inverseMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _ray$1 = /*@__PURE__*/new Ray();\n\n\tconst _sphere$1 = /*@__PURE__*/new Sphere();\n\n\tclass Line extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new LineBasicMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Line';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [0];\n\n\t\t\t\t\tfor (let i = 1, l = positionAttribute.count; i < l; i++) {\n\t\t\t\t\t\t_start$1.fromBufferAttribute(positionAttribute, i - 1);\n\n\t\t\t\t\t\t_end$1.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\tlineDistances[i] = lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i] += _start$1.distanceTo(_end$1);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.Line.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Line.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere$1.copy(geometry.boundingSphere);\n\n\t\t\t_sphere$1.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere$1.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere$1) === false) return; //\n\n\t\t\t_inverseMatrix$1.copy(matrixWorld).invert();\n\n\t\t\t_ray$1.copy(raycaster.ray).applyMatrix4(_inverseMatrix$1);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\t\t\tconst vStart = new Vector3();\n\t\t\tconst vEnd = new Vector3();\n\t\t\tconst interSegment = new Vector3();\n\t\t\tconst interRay = new Vector3();\n\t\t\tconst step = this.isLineSegments ? 2 : 1;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\t\t\t\t\t\tconst b = index.getX(i + 1);\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, a);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, b);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end - 1; i < l; i += step) {\n\t\t\t\t\t\tvStart.fromBufferAttribute(positionAttribute, i);\n\t\t\t\t\t\tvEnd.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tconst distSq = _ray$1.distanceSqToSegment(vStart, vEnd, interRay, interSegment);\n\n\t\t\t\t\t\tif (distSq > localThresholdSq) continue;\n\t\t\t\t\t\tinterRay.applyMatrix4(this.matrixWorld); //Move back to world space for distance calculation\n\n\t\t\t\t\t\tconst distance = raycaster.ray.origin.distanceTo(interRay);\n\t\t\t\t\t\tif (distance < raycaster.near || distance > raycaster.far) continue;\n\t\t\t\t\t\tintersects.push({\n\t\t\t\t\t\t\tdistance: distance,\n\t\t\t\t\t\t\t// What do we want? intersection point on the ray or on the segment??\n\t\t\t\t\t\t\t// point: raycaster.ray.at( distance ),\n\t\t\t\t\t\t\tpoint: interSegment.clone().applyMatrix4(this.matrixWorld),\n\t\t\t\t\t\t\tindex: i,\n\t\t\t\t\t\t\tface: null,\n\t\t\t\t\t\t\tfaceIndex: null,\n\t\t\t\t\t\t\tobject: this\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.Line.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Line.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tLine.prototype.isLine = true;\n\n\tconst _start = /*@__PURE__*/new Vector3();\n\n\tconst _end = /*@__PURE__*/new Vector3();\n\n\tclass LineSegments extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineSegments';\n\t\t}\n\n\t\tcomputeLineDistances() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\t// we assume non-indexed geometry\n\t\t\t\tif (geometry.index === null) {\n\t\t\t\t\tconst positionAttribute = geometry.attributes.position;\n\t\t\t\t\tconst lineDistances = [];\n\n\t\t\t\t\tfor (let i = 0, l = positionAttribute.count; i < l; i += 2) {\n\t\t\t\t\t\t_start.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\t_end.fromBufferAttribute(positionAttribute, i + 1);\n\n\t\t\t\t\t\tlineDistances[i] = i === 0 ? 0 : lineDistances[i - 1];\n\t\t\t\t\t\tlineDistances[i + 1] = lineDistances[i] + _start.distanceTo(_end);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.setAttribute('lineDistance', new Float32BufferAttribute(lineDistances, 1));\n\t\t\t\t} else {\n\t\t\t\t\tconsole.warn('THREE.LineSegments.computeLineDistances(): Computation only possible with non-indexed BufferGeometry.');\n\t\t\t\t}\n\t\t\t} else if (geometry.isGeometry) {\n\t\t\t\tconsole.error('THREE.LineSegments.computeLineDistances() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineSegments.prototype.isLineSegments = true;\n\n\tclass LineLoop extends Line {\n\t\tconstructor(geometry, material) {\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'LineLoop';\n\t\t}\n\n\t}\n\n\tLineLoop.prototype.isLineLoop = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tsize: <float>,\n\t *\tsizeAttenuation: <bool>\n\t *\n\t *\tmorphTargets: <bool>\n\t * }\n\t */\n\n\tclass PointsMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PointsMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.size = 1;\n\t\t\tthis.sizeAttenuation = true;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.size = source.size;\n\t\t\tthis.sizeAttenuation = source.sizeAttenuation;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointsMaterial.prototype.isPointsMaterial = true;\n\n\tconst _inverseMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _ray = /*@__PURE__*/new Ray();\n\n\tconst _sphere = /*@__PURE__*/new Sphere();\n\n\tconst _position$2 = /*@__PURE__*/new Vector3();\n\n\tclass Points extends Object3D {\n\t\tconstructor(geometry = new BufferGeometry(), material = new PointsMaterial()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Points';\n\t\t\tthis.geometry = geometry;\n\t\t\tthis.material = material;\n\t\t\tthis.updateMorphTargets();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.material = source.material;\n\t\t\tthis.geometry = source.geometry;\n\t\t\treturn this;\n\t\t}\n\n\t\traycast(raycaster, intersects) {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst matrixWorld = this.matrixWorld;\n\t\t\tconst threshold = raycaster.params.Points.threshold;\n\t\t\tconst drawRange = geometry.drawRange; // Checking boundingSphere distance to ray\n\n\t\t\tif (geometry.boundingSphere === null) geometry.computeBoundingSphere();\n\n\t\t\t_sphere.copy(geometry.boundingSphere);\n\n\t\t\t_sphere.applyMatrix4(matrixWorld);\n\n\t\t\t_sphere.radius += threshold;\n\t\t\tif (raycaster.ray.intersectsSphere(_sphere) === false) return; //\n\n\t\t\t_inverseMatrix.copy(matrixWorld).invert();\n\n\t\t\t_ray.copy(raycaster.ray).applyMatrix4(_inverseMatrix);\n\n\t\t\tconst localThreshold = threshold / ((this.scale.x + this.scale.y + this.scale.z) / 3);\n\t\t\tconst localThresholdSq = localThreshold * localThreshold;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst index = geometry.index;\n\t\t\t\tconst attributes = geometry.attributes;\n\t\t\t\tconst positionAttribute = attributes.position;\n\n\t\t\t\tif (index !== null) {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(index.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, il = end; i < il; i++) {\n\t\t\t\t\t\tconst a = index.getX(i);\n\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, a);\n\n\t\t\t\t\t\ttestPoint(_position$2, a, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tconst start = Math.max(0, drawRange.start);\n\t\t\t\t\tconst end = Math.min(positionAttribute.count, drawRange.start + drawRange.count);\n\n\t\t\t\t\tfor (let i = start, l = end; i < l; i++) {\n\t\t\t\t\t\t_position$2.fromBufferAttribute(positionAttribute, i);\n\n\t\t\t\t\t\ttestPoint(_position$2, i, localThresholdSq, matrixWorld, raycaster, intersects, this);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Points.raycast() no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t}\n\t\t}\n\n\t\tupdateMorphTargets() {\n\t\t\tconst geometry = this.geometry;\n\n\t\t\tif (geometry.isBufferGeometry) {\n\t\t\t\tconst morphAttributes = geometry.morphAttributes;\n\t\t\t\tconst keys = Object.keys(morphAttributes);\n\n\t\t\t\tif (keys.length > 0) {\n\t\t\t\t\tconst morphAttribute = morphAttributes[keys[0]];\n\n\t\t\t\t\tif (morphAttribute !== undefined) {\n\t\t\t\t\t\tthis.morphTargetInfluences = [];\n\t\t\t\t\t\tthis.morphTargetDictionary = {};\n\n\t\t\t\t\t\tfor (let m = 0, ml = morphAttribute.length; m < ml; m++) {\n\t\t\t\t\t\t\tconst name = morphAttribute[m].name || String(m);\n\t\t\t\t\t\t\tthis.morphTargetInfluences.push(0);\n\t\t\t\t\t\t\tthis.morphTargetDictionary[name] = m;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tconst morphTargets = geometry.morphTargets;\n\n\t\t\t\tif (morphTargets !== undefined && morphTargets.length > 0) {\n\t\t\t\t\tconsole.error('THREE.Points.updateMorphTargets() does not support THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tPoints.prototype.isPoints = true;\n\n\tfunction testPoint(point, index, localThresholdSq, matrixWorld, raycaster, intersects, object) {\n\t\tconst rayPointDistanceSq = _ray.distanceSqToPoint(point);\n\n\t\tif (rayPointDistanceSq < localThresholdSq) {\n\t\t\tconst intersectPoint = new Vector3();\n\n\t\t\t_ray.closestPointToPoint(point, intersectPoint);\n\n\t\t\tintersectPoint.applyMatrix4(matrixWorld);\n\t\t\tconst distance = raycaster.ray.origin.distanceTo(intersectPoint);\n\t\t\tif (distance < raycaster.near || distance > raycaster.far) return;\n\t\t\tintersects.push({\n\t\t\t\tdistance: distance,\n\t\t\t\tdistanceToRay: Math.sqrt(rayPointDistanceSq),\n\t\t\t\tpoint: intersectPoint,\n\t\t\t\tindex: index,\n\t\t\t\tface: null,\n\t\t\t\tobject: object\n\t\t\t});\n\t\t}\n\t}\n\n\tclass VideoTexture extends Texture {\n\t\tconstructor(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(video, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.format = format !== undefined ? format : RGBFormat;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : LinearFilter;\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : LinearFilter;\n\t\t\tthis.generateMipmaps = false;\n\t\t\tconst scope = this;\n\n\t\t\tfunction updateVideo() {\n\t\t\t\tscope.needsUpdate = true;\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\n\t\t\tif ('requestVideoFrameCallback' in video) {\n\t\t\t\tvideo.requestVideoFrameCallback(updateVideo);\n\t\t\t}\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor(this.image).copy(this);\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst video = this.image;\n\t\t\tconst hasVideoFrameCallback = ('requestVideoFrameCallback' in video);\n\n\t\t\tif (hasVideoFrameCallback === false && video.readyState >= video.HAVE_CURRENT_DATA) {\n\t\t\t\tthis.needsUpdate = true;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tVideoTexture.prototype.isVideoTexture = true;\n\n\tclass CompressedTexture extends Texture {\n\t\tconstructor(mipmaps, width, height, format, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, encoding) {\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy, encoding);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.mipmaps = mipmaps; // no flipping for cube textures\n\t\t\t// (also flipping doesn't work for compressed textures )\n\n\t\t\tthis.flipY = false; // can't generate mipmaps for compressed textures\n\t\t\t// mips must be embedded in DDS files\n\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tCompressedTexture.prototype.isCompressedTexture = true;\n\n\tclass CanvasTexture extends Texture {\n\t\tconstructor(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy) {\n\t\t\tsuper(canvas, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.needsUpdate = true;\n\t\t}\n\n\t}\n\n\tCanvasTexture.prototype.isCanvasTexture = true;\n\n\tclass DepthTexture extends Texture {\n\t\tconstructor(width, height, type, mapping, wrapS, wrapT, magFilter, minFilter, anisotropy, format) {\n\t\t\tformat = format !== undefined ? format : DepthFormat;\n\n\t\t\tif (format !== DepthFormat && format !== DepthStencilFormat) {\n\t\t\t\tthrow new Error('DepthTexture format must be either THREE.DepthFormat or THREE.DepthStencilFormat');\n\t\t\t}\n\n\t\t\tif (type === undefined && format === DepthFormat) type = UnsignedShortType;\n\t\t\tif (type === undefined && format === DepthStencilFormat) type = UnsignedInt248Type;\n\t\t\tsuper(null, mapping, wrapS, wrapT, magFilter, minFilter, format, type, anisotropy);\n\t\t\tthis.image = {\n\t\t\t\twidth: width,\n\t\t\t\theight: height\n\t\t\t};\n\t\t\tthis.magFilter = magFilter !== undefined ? magFilter : NearestFilter;\n\t\t\tthis.minFilter = minFilter !== undefined ? minFilter : NearestFilter;\n\t\t\tthis.flipY = false;\n\t\t\tthis.generateMipmaps = false;\n\t\t}\n\n\t}\n\n\tDepthTexture.prototype.isDepthTexture = true;\n\n\tclass CircleGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, segments = 8, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CircleGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tsegments: segments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tsegments = Math.max(3, segments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // center point\n\n\t\t\tvertices.push(0, 0, 0);\n\t\t\tnormals.push(0, 0, 1);\n\t\t\tuvs.push(0.5, 0.5);\n\n\t\t\tfor (let s = 0, i = 3; s <= segments; s++, i += 3) {\n\t\t\t\tconst segment = thetaStart + s / segments * thetaLength; // vertex\n\n\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\tnormals.push(0, 0, 1); // uvs\n\n\t\t\t\tuv.x = (vertices[i] / radius + 1) / 2;\n\t\t\t\tuv.y = (vertices[i + 1] / radius + 1) / 2;\n\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tindices.push(i, i + 1, 0);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass CylinderGeometry extends BufferGeometry {\n\t\tconstructor(radiusTop = 1, radiusBottom = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CylinderGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradiusTop: radiusTop,\n\t\t\t\tradiusBottom: radiusBottom,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tconst scope = this;\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\theightSegments = Math.floor(heightSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet index = 0;\n\t\t\tconst indexArray = [];\n\t\t\tconst halfHeight = height / 2;\n\t\t\tlet groupStart = 0; // generate geometry\n\n\t\t\tgenerateTorso();\n\n\t\t\tif (openEnded === false) {\n\t\t\t\tif (radiusTop > 0) generateCap(true);\n\t\t\t\tif (radiusBottom > 0) generateCap(false);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\n\t\t\tfunction generateTorso() {\n\t\t\t\tconst normal = new Vector3();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0; // this will be used to calculate the normal\n\n\t\t\t\tconst slope = (radiusBottom - radiusTop) / height; // generate vertices, normals and uvs\n\n\t\t\t\tfor (let y = 0; y <= heightSegments; y++) {\n\t\t\t\t\tconst indexRow = [];\n\t\t\t\t\tconst v = y / heightSegments; // calculate the radius of the current row\n\n\t\t\t\t\tconst radius = v * (radiusBottom - radiusTop) + radiusTop;\n\n\t\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\t\tconst sinTheta = Math.sin(theta);\n\t\t\t\t\t\tconst cosTheta = Math.cos(theta); // vertex\n\n\t\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\t\tvertex.y = -v * height + halfHeight;\n\t\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\t\tnormal.set(sinTheta, slope, cosTheta).normalize();\n\t\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\t\tuvs.push(u, 1 - v); // save index of vertex in respective row\n\n\t\t\t\t\t\tindexRow.push(index++);\n\t\t\t\t\t} // now save vertices of the row in our index array\n\n\n\t\t\t\t\tindexArray.push(indexRow);\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tfor (let y = 0; y < heightSegments; y++) {\n\t\t\t\t\t\t// we use the index array to access the correct indices\n\t\t\t\t\t\tconst a = indexArray[y][x];\n\t\t\t\t\t\tconst b = indexArray[y + 1][x];\n\t\t\t\t\t\tconst c = indexArray[y + 1][x + 1];\n\t\t\t\t\t\tconst d = indexArray[y][x + 1]; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d); // update group counter\n\n\t\t\t\t\t\tgroupCount += 6;\n\t\t\t\t\t}\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, 0); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\n\t\t\tfunction generateCap(top) {\n\t\t\t\t// save the index of the first center vertex\n\t\t\t\tconst centerIndexStart = index;\n\t\t\t\tconst uv = new Vector2();\n\t\t\t\tconst vertex = new Vector3();\n\t\t\t\tlet groupCount = 0;\n\t\t\t\tconst radius = top === true ? radiusTop : radiusBottom;\n\t\t\t\tconst sign = top === true ? 1 : -1; // first we generate the center vertex data of the cap.\n\t\t\t\t// because the geometry needs one set of uvs per face,\n\t\t\t\t// we must generate a center vertex per face/segment\n\n\t\t\t\tfor (let x = 1; x <= radialSegments; x++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertices.push(0, halfHeight * sign, 0); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuvs.push(0.5, 0.5); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // save the index of the last center vertex\n\n\n\t\t\t\tconst centerIndexEnd = index; // now we generate the surrounding vertices, normals and uvs\n\n\t\t\t\tfor (let x = 0; x <= radialSegments; x++) {\n\t\t\t\t\tconst u = x / radialSegments;\n\t\t\t\t\tconst theta = u * thetaLength + thetaStart;\n\t\t\t\t\tconst cosTheta = Math.cos(theta);\n\t\t\t\t\tconst sinTheta = Math.sin(theta); // vertex\n\n\t\t\t\t\tvertex.x = radius * sinTheta;\n\t\t\t\t\tvertex.y = halfHeight * sign;\n\t\t\t\t\tvertex.z = radius * cosTheta;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, sign, 0); // uv\n\n\t\t\t\t\tuv.x = cosTheta * 0.5 + 0.5;\n\t\t\t\t\tuv.y = sinTheta * 0.5 * sign + 0.5;\n\t\t\t\t\tuvs.push(uv.x, uv.y); // increase index\n\n\t\t\t\t\tindex++;\n\t\t\t\t} // generate indices\n\n\n\t\t\t\tfor (let x = 0; x < radialSegments; x++) {\n\t\t\t\t\tconst c = centerIndexStart + x;\n\t\t\t\t\tconst i = centerIndexEnd + x;\n\n\t\t\t\t\tif (top === true) {\n\t\t\t\t\t\t// face top\n\t\t\t\t\t\tindices.push(i, i + 1, c);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// face bottom\n\t\t\t\t\t\tindices.push(i + 1, i, c);\n\t\t\t\t\t}\n\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t} // add a group to the geometry. this will ensure multi material support\n\n\n\t\t\t\tscope.addGroup(groupStart, groupCount, top === true ? 1 : 2); // calculate new start value for groups\n\n\t\t\t\tgroupStart += groupCount;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass ConeGeometry extends CylinderGeometry {\n\t\tconstructor(radius = 1, height = 1, radialSegments = 8, heightSegments = 1, openEnded = false, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper(0, radius, height, radialSegments, heightSegments, openEnded, thetaStart, thetaLength);\n\t\t\tthis.type = 'ConeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\theight: height,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\topenEnded: openEnded,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t}\n\n\t}\n\n\tclass PolyhedronGeometry extends BufferGeometry {\n\t\tconstructor(vertices, indices, radius = 1, detail = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'PolyhedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tvertices: vertices,\n\t\t\t\tindices: indices,\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t}; // default buffer data\n\n\t\t\tconst vertexBuffer = [];\n\t\t\tconst uvBuffer = []; // the subdivision creates the vertex buffer data\n\n\t\t\tsubdivide(detail); // all vertices should lie on a conceptual sphere with a given radius\n\n\t\t\tapplyRadius(radius); // finally, create the uv data\n\n\t\t\tgenerateUVs(); // build non-indexed geometry\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertexBuffer, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(vertexBuffer.slice(), 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvBuffer, 2));\n\n\t\t\tif (detail === 0) {\n\t\t\t\tthis.computeVertexNormals(); // flat normals\n\t\t\t} else {\n\t\t\t\tthis.normalizeNormals(); // smooth normals\n\t\t\t} // helper functions\n\n\n\t\t\tfunction subdivide(detail) {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3(); // iterate over all faces and apply a subdivison with the given detail value\n\n\t\t\t\tfor (let i = 0; i < indices.length; i += 3) {\n\t\t\t\t\t// get the vertices of the face\n\t\t\t\t\tgetVertexByIndex(indices[i + 0], a);\n\t\t\t\t\tgetVertexByIndex(indices[i + 1], b);\n\t\t\t\t\tgetVertexByIndex(indices[i + 2], c); // perform subdivision\n\n\t\t\t\t\tsubdivideFace(a, b, c, detail);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction subdivideFace(a, b, c, detail) {\n\t\t\t\tconst cols = detail + 1; // we use this multidimensional array as a data structure for creating the subdivision\n\n\t\t\t\tconst v = []; // construct all of the vertices for this subdivision\n\n\t\t\t\tfor (let i = 0; i <= cols; i++) {\n\t\t\t\t\tv[i] = [];\n\t\t\t\t\tconst aj = a.clone().lerp(c, i / cols);\n\t\t\t\t\tconst bj = b.clone().lerp(c, i / cols);\n\t\t\t\t\tconst rows = cols - i;\n\n\t\t\t\t\tfor (let j = 0; j <= rows; j++) {\n\t\t\t\t\t\tif (j === 0 && i === cols) {\n\t\t\t\t\t\t\tv[i][j] = aj;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tv[i][j] = aj.clone().lerp(bj, j / rows);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // construct all of the faces\n\n\n\t\t\t\tfor (let i = 0; i < cols; i++) {\n\t\t\t\t\tfor (let j = 0; j < 2 * (cols - i) - 1; j++) {\n\t\t\t\t\t\tconst k = Math.floor(j / 2);\n\n\t\t\t\t\t\tif (j % 2 === 0) {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t\tpushVertex(v[i][k]);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tpushVertex(v[i][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k + 1]);\n\t\t\t\t\t\t\tpushVertex(v[i + 1][k]);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction applyRadius(radius) {\n\t\t\t\tconst vertex = new Vector3(); // iterate over the entire buffer and apply the radius to each vertex\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tvertex.normalize().multiplyScalar(radius);\n\t\t\t\t\tvertexBuffer[i + 0] = vertex.x;\n\t\t\t\t\tvertexBuffer[i + 1] = vertex.y;\n\t\t\t\t\tvertexBuffer[i + 2] = vertex.z;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tconst vertex = new Vector3();\n\n\t\t\t\tfor (let i = 0; i < vertexBuffer.length; i += 3) {\n\t\t\t\t\tvertex.x = vertexBuffer[i + 0];\n\t\t\t\t\tvertex.y = vertexBuffer[i + 1];\n\t\t\t\t\tvertex.z = vertexBuffer[i + 2];\n\t\t\t\t\tconst u = azimuth(vertex) / 2 / Math.PI + 0.5;\n\t\t\t\t\tconst v = inclination(vertex) / Math.PI + 0.5;\n\t\t\t\t\tuvBuffer.push(u, 1 - v);\n\t\t\t\t}\n\n\t\t\t\tcorrectUVs();\n\t\t\t\tcorrectSeam();\n\t\t\t}\n\n\t\t\tfunction correctSeam() {\n\t\t\t\t// handle case when face straddles the seam, see #3269\n\t\t\t\tfor (let i = 0; i < uvBuffer.length; i += 6) {\n\t\t\t\t\t// uv data of a single face\n\t\t\t\t\tconst x0 = uvBuffer[i + 0];\n\t\t\t\t\tconst x1 = uvBuffer[i + 2];\n\t\t\t\t\tconst x2 = uvBuffer[i + 4];\n\t\t\t\t\tconst max = Math.max(x0, x1, x2);\n\t\t\t\t\tconst min = Math.min(x0, x1, x2); // 0.9 is somewhat arbitrary\n\n\t\t\t\t\tif (max > 0.9 && min < 0.1) {\n\t\t\t\t\t\tif (x0 < 0.2) uvBuffer[i + 0] += 1;\n\t\t\t\t\t\tif (x1 < 0.2) uvBuffer[i + 2] += 1;\n\t\t\t\t\t\tif (x2 < 0.2) uvBuffer[i + 4] += 1;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction pushVertex(vertex) {\n\t\t\t\tvertexBuffer.push(vertex.x, vertex.y, vertex.z);\n\t\t\t}\n\n\t\t\tfunction getVertexByIndex(index, vertex) {\n\t\t\t\tconst stride = index * 3;\n\t\t\t\tvertex.x = vertices[stride + 0];\n\t\t\t\tvertex.y = vertices[stride + 1];\n\t\t\t\tvertex.z = vertices[stride + 2];\n\t\t\t}\n\n\t\t\tfunction correctUVs() {\n\t\t\t\tconst a = new Vector3();\n\t\t\t\tconst b = new Vector3();\n\t\t\t\tconst c = new Vector3();\n\t\t\t\tconst centroid = new Vector3();\n\t\t\t\tconst uvA = new Vector2();\n\t\t\t\tconst uvB = new Vector2();\n\t\t\t\tconst uvC = new Vector2();\n\n\t\t\t\tfor (let i = 0, j = 0; i < vertexBuffer.length; i += 9, j += 6) {\n\t\t\t\t\ta.set(vertexBuffer[i + 0], vertexBuffer[i + 1], vertexBuffer[i + 2]);\n\t\t\t\t\tb.set(vertexBuffer[i + 3], vertexBuffer[i + 4], vertexBuffer[i + 5]);\n\t\t\t\t\tc.set(vertexBuffer[i + 6], vertexBuffer[i + 7], vertexBuffer[i + 8]);\n\t\t\t\t\tuvA.set(uvBuffer[j + 0], uvBuffer[j + 1]);\n\t\t\t\t\tuvB.set(uvBuffer[j + 2], uvBuffer[j + 3]);\n\t\t\t\t\tuvC.set(uvBuffer[j + 4], uvBuffer[j + 5]);\n\t\t\t\t\tcentroid.copy(a).add(b).add(c).divideScalar(3);\n\t\t\t\t\tconst azi = azimuth(centroid);\n\t\t\t\t\tcorrectUV(uvA, j + 0, a, azi);\n\t\t\t\t\tcorrectUV(uvB, j + 2, b, azi);\n\t\t\t\t\tcorrectUV(uvC, j + 4, c, azi);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction correctUV(uv, stride, vector, azimuth) {\n\t\t\t\tif (azimuth < 0 && uv.x === 1) {\n\t\t\t\t\tuvBuffer[stride] = uv.x - 1;\n\t\t\t\t}\n\n\t\t\t\tif (vector.x === 0 && vector.z === 0) {\n\t\t\t\t\tuvBuffer[stride] = azimuth / 2 / Math.PI + 0.5;\n\t\t\t\t}\n\t\t\t} // Angle around the Y axis, counter-clockwise when looking from above.\n\n\n\t\t\tfunction azimuth(vector) {\n\t\t\t\treturn Math.atan2(vector.z, -vector.x);\n\t\t\t} // Angle above the XZ plane.\n\n\n\t\t\tfunction inclination(vector) {\n\t\t\t\treturn Math.atan2(-vector.y, Math.sqrt(vector.x * vector.x + vector.z * vector.z));\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass DodecahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst r = 1 / t;\n\t\t\tconst vertices = [// (±1, ±1, ±1)\n\t\t\t-1, -1, -1, -1, -1, 1, -1, 1, -1, -1, 1, 1, 1, -1, -1, 1, -1, 1, 1, 1, -1, 1, 1, 1, // (0, ±1/φ, ±φ)\n\t\t\t0, -r, -t, 0, -r, t, 0, r, -t, 0, r, t, // (±1/φ, ±φ, 0)\n\t\t\t-r, -t, 0, -r, t, 0, r, -t, 0, r, t, 0, // (±φ, 0, ±1/φ)\n\t\t\t-t, 0, -r, t, 0, -r, -t, 0, r, t, 0, r];\n\t\t\tconst indices = [3, 11, 7, 3, 7, 15, 3, 15, 13, 7, 19, 17, 7, 17, 6, 7, 6, 15, 17, 4, 8, 17, 8, 10, 17, 10, 6, 8, 0, 16, 8, 16, 2, 8, 2, 10, 0, 12, 1, 0, 1, 18, 0, 18, 16, 6, 10, 2, 6, 2, 13, 6, 13, 15, 2, 16, 18, 2, 18, 3, 2, 3, 13, 18, 1, 9, 18, 9, 11, 18, 11, 3, 4, 14, 12, 4, 12, 0, 4, 0, 8, 11, 9, 5, 11, 5, 19, 11, 19, 7, 19, 5, 14, 19, 14, 4, 19, 4, 17, 1, 12, 14, 1, 14, 5, 1, 5, 9];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'DodecahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst _v0 = new Vector3();\n\n\tconst _v1$1 = new Vector3();\n\n\tconst _normal = new Vector3();\n\n\tconst _triangle = new Triangle();\n\n\tclass EdgesGeometry extends BufferGeometry {\n\t\tconstructor(geometry, thresholdAngle) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EdgesGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tthresholdAngle: thresholdAngle\n\t\t\t};\n\t\t\tthresholdAngle = thresholdAngle !== undefined ? thresholdAngle : 1;\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.EdgesGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst precisionPoints = 4;\n\t\t\tconst precision = Math.pow(10, precisionPoints);\n\t\t\tconst thresholdDot = Math.cos(DEG2RAD * thresholdAngle);\n\t\t\tconst indexAttr = geometry.getIndex();\n\t\t\tconst positionAttr = geometry.getAttribute('position');\n\t\t\tconst indexCount = indexAttr ? indexAttr.count : positionAttr.count;\n\t\t\tconst indexArr = [0, 0, 0];\n\t\t\tconst vertKeys = ['a', 'b', 'c'];\n\t\t\tconst hashes = new Array(3);\n\t\t\tconst edgeData = {};\n\t\t\tconst vertices = [];\n\n\t\t\tfor (let i = 0; i < indexCount; i += 3) {\n\t\t\t\tif (indexAttr) {\n\t\t\t\t\tindexArr[0] = indexAttr.getX(i);\n\t\t\t\t\tindexArr[1] = indexAttr.getX(i + 1);\n\t\t\t\t\tindexArr[2] = indexAttr.getX(i + 2);\n\t\t\t\t} else {\n\t\t\t\t\tindexArr[0] = i;\n\t\t\t\t\tindexArr[1] = i + 1;\n\t\t\t\t\tindexArr[2] = i + 2;\n\t\t\t\t}\n\n\t\t\t\tconst {\n\t\t\t\t\ta,\n\t\t\t\t\tb,\n\t\t\t\t\tc\n\t\t\t\t} = _triangle;\n\t\t\t\ta.fromBufferAttribute(positionAttr, indexArr[0]);\n\t\t\t\tb.fromBufferAttribute(positionAttr, indexArr[1]);\n\t\t\t\tc.fromBufferAttribute(positionAttr, indexArr[2]);\n\n\t\t\t\t_triangle.getNormal(_normal); // create hashes for the edge from the vertices\n\n\n\t\t\t\thashes[0] = `${Math.round(a.x * precision)},${Math.round(a.y * precision)},${Math.round(a.z * precision)}`;\n\t\t\t\thashes[1] = `${Math.round(b.x * precision)},${Math.round(b.y * precision)},${Math.round(b.z * precision)}`;\n\t\t\t\thashes[2] = `${Math.round(c.x * precision)},${Math.round(c.y * precision)},${Math.round(c.z * precision)}`; // skip degenerate triangles\n\n\t\t\t\tif (hashes[0] === hashes[1] || hashes[1] === hashes[2] || hashes[2] === hashes[0]) {\n\t\t\t\t\tcontinue;\n\t\t\t\t} // iterate over every edge\n\n\n\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t// get the first and next vertex making up the edge\n\t\t\t\t\tconst jNext = (j + 1) % 3;\n\t\t\t\t\tconst vecHash0 = hashes[j];\n\t\t\t\t\tconst vecHash1 = hashes[jNext];\n\t\t\t\t\tconst v0 = _triangle[vertKeys[j]];\n\t\t\t\t\tconst v1 = _triangle[vertKeys[jNext]];\n\t\t\t\t\tconst hash = `${vecHash0}_${vecHash1}`;\n\t\t\t\t\tconst reverseHash = `${vecHash1}_${vecHash0}`;\n\n\t\t\t\t\tif (reverseHash in edgeData && edgeData[reverseHash]) {\n\t\t\t\t\t\t// if we found a sibling edge add it into the vertex array if\n\t\t\t\t\t\t// it meets the angle threshold and delete the edge from the map.\n\t\t\t\t\t\tif (_normal.dot(edgeData[reverseHash].normal) <= thresholdDot) {\n\t\t\t\t\t\t\tvertices.push(v0.x, v0.y, v0.z);\n\t\t\t\t\t\t\tvertices.push(v1.x, v1.y, v1.z);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tedgeData[reverseHash] = null;\n\t\t\t\t\t} else if (!(hash in edgeData)) {\n\t\t\t\t\t\t// if we've already got an edge here then skip adding a new one\n\t\t\t\t\t\tedgeData[hash] = {\n\t\t\t\t\t\t\tindex0: indexArr[j],\n\t\t\t\t\t\t\tindex1: indexArr[jNext],\n\t\t\t\t\t\t\tnormal: _normal.clone()\n\t\t\t\t\t\t};\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // iterate over all remaining, unmatched edges and add them to the vertex array\n\n\n\t\t\tfor (const key in edgeData) {\n\t\t\t\tif (edgeData[key]) {\n\t\t\t\t\tconst {\n\t\t\t\t\t\tindex0,\n\t\t\t\t\t\tindex1\n\t\t\t\t\t} = edgeData[key];\n\n\t\t\t\t\t_v0.fromBufferAttribute(positionAttr, index0);\n\n\t\t\t\t\t_v1$1.fromBufferAttribute(positionAttr, index1);\n\n\t\t\t\t\tvertices.push(_v0.x, _v0.y, _v0.z);\n\t\t\t\t\tvertices.push(_v1$1.x, _v1$1.y, _v1$1.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\t/**\n\t * Port from https://github.com/mapbox/earcut (v2.2.2)\n\t */\n\tconst Earcut = {\n\t\ttriangulate: function (data, holeIndices, dim) {\n\t\t\tdim = dim || 2;\n\t\t\tconst hasHoles = holeIndices && holeIndices.length;\n\t\t\tconst outerLen = hasHoles ? holeIndices[0] * dim : data.length;\n\t\t\tlet outerNode = linkedList(data, 0, outerLen, dim, true);\n\t\t\tconst triangles = [];\n\t\t\tif (!outerNode || outerNode.next === outerNode.prev) return triangles;\n\t\t\tlet minX, minY, maxX, maxY, x, y, invSize;\n\t\t\tif (hasHoles) outerNode = eliminateHoles(data, holeIndices, outerNode, dim); // if the shape is not too simple, we'll use z-order curve hash later; calculate polygon bbox\n\n\t\t\tif (data.length > 80 * dim) {\n\t\t\t\tminX = maxX = data[0];\n\t\t\t\tminY = maxY = data[1];\n\n\t\t\t\tfor (let i = dim; i < outerLen; i += dim) {\n\t\t\t\t\tx = data[i];\n\t\t\t\t\ty = data[i + 1];\n\t\t\t\t\tif (x < minX) minX = x;\n\t\t\t\t\tif (y < minY) minY = y;\n\t\t\t\t\tif (x > maxX) maxX = x;\n\t\t\t\t\tif (y > maxY) maxY = y;\n\t\t\t\t} // minX, minY and invSize are later used to transform coords into integers for z-order calculation\n\n\n\t\t\t\tinvSize = Math.max(maxX - minX, maxY - minY);\n\t\t\t\tinvSize = invSize !== 0 ? 1 / invSize : 0;\n\t\t\t}\n\n\t\t\tearcutLinked(outerNode, triangles, dim, minX, minY, invSize);\n\t\t\treturn triangles;\n\t\t}\n\t}; // create a circular doubly linked list from polygon points in the specified winding order\n\n\tfunction linkedList(data, start, end, dim, clockwise) {\n\t\tlet i, last;\n\n\t\tif (clockwise === signedArea(data, start, end, dim) > 0) {\n\t\t\tfor (i = start; i < end; i += dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t} else {\n\t\t\tfor (i = end - dim; i >= start; i -= dim) last = insertNode(i, data[i], data[i + 1], last);\n\t\t}\n\n\t\tif (last && equals(last, last.next)) {\n\t\t\tremoveNode(last);\n\t\t\tlast = last.next;\n\t\t}\n\n\t\treturn last;\n\t} // eliminate colinear or duplicate points\n\n\n\tfunction filterPoints(start, end) {\n\t\tif (!start) return start;\n\t\tif (!end) end = start;\n\t\tlet p = start,\n\t\t\t\tagain;\n\n\t\tdo {\n\t\t\tagain = false;\n\n\t\t\tif (!p.steiner && (equals(p, p.next) || area(p.prev, p, p.next) === 0)) {\n\t\t\t\tremoveNode(p);\n\t\t\t\tp = end = p.prev;\n\t\t\t\tif (p === p.next) break;\n\t\t\t\tagain = true;\n\t\t\t} else {\n\t\t\t\tp = p.next;\n\t\t\t}\n\t\t} while (again || p !== end);\n\n\t\treturn end;\n\t} // main ear slicing loop which triangulates a polygon (given as a linked list)\n\n\n\tfunction earcutLinked(ear, triangles, dim, minX, minY, invSize, pass) {\n\t\tif (!ear) return; // interlink polygon nodes in z-order\n\n\t\tif (!pass && invSize) indexCurve(ear, minX, minY, invSize);\n\t\tlet stop = ear,\n\t\t\t\tprev,\n\t\t\t\tnext; // iterate through ears, slicing them one by one\n\n\t\twhile (ear.prev !== ear.next) {\n\t\t\tprev = ear.prev;\n\t\t\tnext = ear.next;\n\n\t\t\tif (invSize ? isEarHashed(ear, minX, minY, invSize) : isEar(ear)) {\n\t\t\t\t// cut off the triangle\n\t\t\t\ttriangles.push(prev.i / dim);\n\t\t\t\ttriangles.push(ear.i / dim);\n\t\t\t\ttriangles.push(next.i / dim);\n\t\t\t\tremoveNode(ear); // skipping the next vertex leads to less sliver triangles\n\n\t\t\t\tear = next.next;\n\t\t\t\tstop = next.next;\n\t\t\t\tcontinue;\n\t\t\t}\n\n\t\t\tear = next; // if we looped through the whole remaining polygon and can't find any more ears\n\n\t\t\tif (ear === stop) {\n\t\t\t\t// try filtering points and slicing again\n\t\t\t\tif (!pass) {\n\t\t\t\t\tearcutLinked(filterPoints(ear), triangles, dim, minX, minY, invSize, 1); // if this didn't work, try curing all small self-intersections locally\n\t\t\t\t} else if (pass === 1) {\n\t\t\t\t\tear = cureLocalIntersections(filterPoints(ear), triangles, dim);\n\t\t\t\t\tearcutLinked(ear, triangles, dim, minX, minY, invSize, 2); // as a last resort, try splitting the remaining polygon into two\n\t\t\t\t} else if (pass === 2) {\n\t\t\t\t\tsplitEarcut(ear, triangles, dim, minX, minY, invSize);\n\t\t\t\t}\n\n\t\t\t\tbreak;\n\t\t\t}\n\t\t}\n\t} // check whether a polygon node forms a valid ear with adjacent nodes\n\n\n\tfunction isEar(ear) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// now make sure we don't have other points inside the potential ear\n\n\t\tlet p = ear.next.next;\n\n\t\twhile (p !== ear.prev) {\n\t\t\tif (pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.next;\n\t\t}\n\n\t\treturn true;\n\t}\n\n\tfunction isEarHashed(ear, minX, minY, invSize) {\n\t\tconst a = ear.prev,\n\t\t\t\t\tb = ear,\n\t\t\t\t\tc = ear.next;\n\t\tif (area(a, b, c) >= 0) return false; // reflex, can't be an ear\n\t\t// triangle bbox; min & max are calculated like this for speed\n\n\t\tconst minTX = a.x < b.x ? a.x < c.x ? a.x : c.x : b.x < c.x ? b.x : c.x,\n\t\t\t\t\tminTY = a.y < b.y ? a.y < c.y ? a.y : c.y : b.y < c.y ? b.y : c.y,\n\t\t\t\t\tmaxTX = a.x > b.x ? a.x > c.x ? a.x : c.x : b.x > c.x ? b.x : c.x,\n\t\t\t\t\tmaxTY = a.y > b.y ? a.y > c.y ? a.y : c.y : b.y > c.y ? b.y : c.y; // z-order range for the current triangle bbox;\n\n\t\tconst minZ = zOrder(minTX, minTY, minX, minY, invSize),\n\t\t\t\t\tmaxZ = zOrder(maxTX, maxTY, minX, minY, invSize);\n\t\tlet p = ear.prevZ,\n\t\t\t\tn = ear.nextZ; // look for points inside the triangle in both directions\n\n\t\twhile (p && p.z >= minZ && n && n.z <= maxZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t} // look for remaining points in decreasing z-order\n\n\n\t\twhile (p && p.z >= minZ) {\n\t\t\tif (p !== ear.prev && p !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, p.x, p.y) && area(p.prev, p, p.next) >= 0) return false;\n\t\t\tp = p.prevZ;\n\t\t} // look for remaining points in increasing z-order\n\n\n\t\twhile (n && n.z <= maxZ) {\n\t\t\tif (n !== ear.prev && n !== ear.next && pointInTriangle(a.x, a.y, b.x, b.y, c.x, c.y, n.x, n.y) && area(n.prev, n, n.next) >= 0) return false;\n\t\t\tn = n.nextZ;\n\t\t}\n\n\t\treturn true;\n\t} // go through all polygon nodes and cure small local self-intersections\n\n\n\tfunction cureLocalIntersections(start, triangles, dim) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tconst a = p.prev,\n\t\t\t\t\t\tb = p.next.next;\n\n\t\t\tif (!equals(a, b) && intersects(a, p, p.next, b) && locallyInside(a, b) && locallyInside(b, a)) {\n\t\t\t\ttriangles.push(a.i / dim);\n\t\t\t\ttriangles.push(p.i / dim);\n\t\t\t\ttriangles.push(b.i / dim); // remove two nodes involved\n\n\t\t\t\tremoveNode(p);\n\t\t\t\tremoveNode(p.next);\n\t\t\t\tp = start = b;\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn filterPoints(p);\n\t} // try splitting polygon into two and triangulate them independently\n\n\n\tfunction splitEarcut(start, triangles, dim, minX, minY, invSize) {\n\t\t// look for a valid diagonal that divides the polygon into two\n\t\tlet a = start;\n\n\t\tdo {\n\t\t\tlet b = a.next.next;\n\n\t\t\twhile (b !== a.prev) {\n\t\t\t\tif (a.i !== b.i && isValidDiagonal(a, b)) {\n\t\t\t\t\t// split the polygon in two by the diagonal\n\t\t\t\t\tlet c = splitPolygon(a, b); // filter colinear points around the cuts\n\n\t\t\t\t\ta = filterPoints(a, a.next);\n\t\t\t\t\tc = filterPoints(c, c.next); // run earcut on each half\n\n\t\t\t\t\tearcutLinked(a, triangles, dim, minX, minY, invSize);\n\t\t\t\t\tearcutLinked(c, triangles, dim, minX, minY, invSize);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tb = b.next;\n\t\t\t}\n\n\t\t\ta = a.next;\n\t\t} while (a !== start);\n\t} // link every hole into the outer loop, producing a single-ring polygon without holes\n\n\n\tfunction eliminateHoles(data, holeIndices, outerNode, dim) {\n\t\tconst queue = [];\n\t\tlet i, len, start, end, list;\n\n\t\tfor (i = 0, len = holeIndices.length; i < len; i++) {\n\t\t\tstart = holeIndices[i] * dim;\n\t\t\tend = i < len - 1 ? holeIndices[i + 1] * dim : data.length;\n\t\t\tlist = linkedList(data, start, end, dim, false);\n\t\t\tif (list === list.next) list.steiner = true;\n\t\t\tqueue.push(getLeftmost(list));\n\t\t}\n\n\t\tqueue.sort(compareX); // process holes from left to right\n\n\t\tfor (i = 0; i < queue.length; i++) {\n\t\t\teliminateHole(queue[i], outerNode);\n\t\t\touterNode = filterPoints(outerNode, outerNode.next);\n\t\t}\n\n\t\treturn outerNode;\n\t}\n\n\tfunction compareX(a, b) {\n\t\treturn a.x - b.x;\n\t} // find a bridge between vertices that connects hole with an outer ring and and link it\n\n\n\tfunction eliminateHole(hole, outerNode) {\n\t\touterNode = findHoleBridge(hole, outerNode);\n\n\t\tif (outerNode) {\n\t\t\tconst b = splitPolygon(outerNode, hole); // filter collinear points around the cuts\n\n\t\t\tfilterPoints(outerNode, outerNode.next);\n\t\t\tfilterPoints(b, b.next);\n\t\t}\n\t} // David Eberly's algorithm for finding a bridge between hole and outer polygon\n\n\n\tfunction findHoleBridge(hole, outerNode) {\n\t\tlet p = outerNode;\n\t\tconst hx = hole.x;\n\t\tconst hy = hole.y;\n\t\tlet qx = -Infinity,\n\t\t\t\tm; // find a segment intersected by a ray from the hole's leftmost point to the left;\n\t\t// segment's endpoint with lesser x will be potential connection point\n\n\t\tdo {\n\t\t\tif (hy <= p.y && hy >= p.next.y && p.next.y !== p.y) {\n\t\t\t\tconst x = p.x + (hy - p.y) * (p.next.x - p.x) / (p.next.y - p.y);\n\n\t\t\t\tif (x <= hx && x > qx) {\n\t\t\t\t\tqx = x;\n\n\t\t\t\t\tif (x === hx) {\n\t\t\t\t\t\tif (hy === p.y) return p;\n\t\t\t\t\t\tif (hy === p.next.y) return p.next;\n\t\t\t\t\t}\n\n\t\t\t\t\tm = p.x < p.next.x ? p : p.next;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== outerNode);\n\n\t\tif (!m) return null;\n\t\tif (hx === qx) return m; // hole touches outer segment; pick leftmost endpoint\n\t\t// look for points inside the triangle of hole point, segment intersection and endpoint;\n\t\t// if there are no points found, we have a valid connection;\n\t\t// otherwise choose the point of the minimum angle with the ray as connection point\n\n\t\tconst stop = m,\n\t\t\t\t\tmx = m.x,\n\t\t\t\t\tmy = m.y;\n\t\tlet tanMin = Infinity,\n\t\t\t\ttan;\n\t\tp = m;\n\n\t\tdo {\n\t\t\tif (hx >= p.x && p.x >= mx && hx !== p.x && pointInTriangle(hy < my ? hx : qx, hy, mx, my, hy < my ? qx : hx, hy, p.x, p.y)) {\n\t\t\t\ttan = Math.abs(hy - p.y) / (hx - p.x); // tangential\n\n\t\t\t\tif (locallyInside(p, hole) && (tan < tanMin || tan === tanMin && (p.x > m.x || p.x === m.x && sectorContainsSector(m, p)))) {\n\t\t\t\t\tm = p;\n\t\t\t\t\ttanMin = tan;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tp = p.next;\n\t\t} while (p !== stop);\n\n\t\treturn m;\n\t} // whether sector in vertex m contains sector in vertex p in the same coordinates\n\n\n\tfunction sectorContainsSector(m, p) {\n\t\treturn area(m.prev, m, p.prev) < 0 && area(p.next, m, m.next) < 0;\n\t} // interlink polygon nodes in z-order\n\n\n\tfunction indexCurve(start, minX, minY, invSize) {\n\t\tlet p = start;\n\n\t\tdo {\n\t\t\tif (p.z === null) p.z = zOrder(p.x, p.y, minX, minY, invSize);\n\t\t\tp.prevZ = p.prev;\n\t\t\tp.nextZ = p.next;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\tp.prevZ.nextZ = null;\n\t\tp.prevZ = null;\n\t\tsortLinked(p);\n\t} // Simon Tatham's linked list merge sort algorithm\n\t// http://www.chiark.greenend.org.uk/~sgtatham/algorithms/listsort.html\n\n\n\tfunction sortLinked(list) {\n\t\tlet i,\n\t\t\t\tp,\n\t\t\t\tq,\n\t\t\t\te,\n\t\t\t\ttail,\n\t\t\t\tnumMerges,\n\t\t\t\tpSize,\n\t\t\t\tqSize,\n\t\t\t\tinSize = 1;\n\n\t\tdo {\n\t\t\tp = list;\n\t\t\tlist = null;\n\t\t\ttail = null;\n\t\t\tnumMerges = 0;\n\n\t\t\twhile (p) {\n\t\t\t\tnumMerges++;\n\t\t\t\tq = p;\n\t\t\t\tpSize = 0;\n\n\t\t\t\tfor (i = 0; i < inSize; i++) {\n\t\t\t\t\tpSize++;\n\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\tif (!q) break;\n\t\t\t\t}\n\n\t\t\t\tqSize = inSize;\n\n\t\t\t\twhile (pSize > 0 || qSize > 0 && q) {\n\t\t\t\t\tif (pSize !== 0 && (qSize === 0 || !q || p.z <= q.z)) {\n\t\t\t\t\t\te = p;\n\t\t\t\t\t\tp = p.nextZ;\n\t\t\t\t\t\tpSize--;\n\t\t\t\t\t} else {\n\t\t\t\t\t\te = q;\n\t\t\t\t\t\tq = q.nextZ;\n\t\t\t\t\t\tqSize--;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (tail) tail.nextZ = e;else list = e;\n\t\t\t\t\te.prevZ = tail;\n\t\t\t\t\ttail = e;\n\t\t\t\t}\n\n\t\t\t\tp = q;\n\t\t\t}\n\n\t\t\ttail.nextZ = null;\n\t\t\tinSize *= 2;\n\t\t} while (numMerges > 1);\n\n\t\treturn list;\n\t} // z-order of a point given coords and inverse of the longer side of data bbox\n\n\n\tfunction zOrder(x, y, minX, minY, invSize) {\n\t\t// coords are transformed into non-negative 15-bit integer range\n\t\tx = 32767 * (x - minX) * invSize;\n\t\ty = 32767 * (y - minY) * invSize;\n\t\tx = (x | x << 8) & 0x00FF00FF;\n\t\tx = (x | x << 4) & 0x0F0F0F0F;\n\t\tx = (x | x << 2) & 0x33333333;\n\t\tx = (x | x << 1) & 0x55555555;\n\t\ty = (y | y << 8) & 0x00FF00FF;\n\t\ty = (y | y << 4) & 0x0F0F0F0F;\n\t\ty = (y | y << 2) & 0x33333333;\n\t\ty = (y | y << 1) & 0x55555555;\n\t\treturn x | y << 1;\n\t} // find the leftmost node of a polygon ring\n\n\n\tfunction getLeftmost(start) {\n\t\tlet p = start,\n\t\t\t\tleftmost = start;\n\n\t\tdo {\n\t\t\tif (p.x < leftmost.x || p.x === leftmost.x && p.y < leftmost.y) leftmost = p;\n\t\t\tp = p.next;\n\t\t} while (p !== start);\n\n\t\treturn leftmost;\n\t} // check if a point lies within a convex triangle\n\n\n\tfunction pointInTriangle(ax, ay, bx, by, cx, cy, px, py) {\n\t\treturn (cx - px) * (ay - py) - (ax - px) * (cy - py) >= 0 && (ax - px) * (by - py) - (bx - px) * (ay - py) >= 0 && (bx - px) * (cy - py) - (cx - px) * (by - py) >= 0;\n\t} // check if a diagonal between two polygon nodes is valid (lies in polygon interior)\n\n\n\tfunction isValidDiagonal(a, b) {\n\t\treturn a.next.i !== b.i && a.prev.i !== b.i && !intersectsPolygon(a, b) && ( // dones't intersect other edges\n\t\tlocallyInside(a, b) && locallyInside(b, a) && middleInside(a, b) && ( // locally visible\n\t\tarea(a.prev, a, b.prev) || area(a, b.prev, b)) || // does not create opposite-facing sectors\n\t\tequals(a, b) && area(a.prev, a, a.next) > 0 && area(b.prev, b, b.next) > 0); // special zero-length case\n\t} // signed area of a triangle\n\n\n\tfunction area(p, q, r) {\n\t\treturn (q.y - p.y) * (r.x - q.x) - (q.x - p.x) * (r.y - q.y);\n\t} // check if two points are equal\n\n\n\tfunction equals(p1, p2) {\n\t\treturn p1.x === p2.x && p1.y === p2.y;\n\t} // check if two segments intersect\n\n\n\tfunction intersects(p1, q1, p2, q2) {\n\t\tconst o1 = sign(area(p1, q1, p2));\n\t\tconst o2 = sign(area(p1, q1, q2));\n\t\tconst o3 = sign(area(p2, q2, p1));\n\t\tconst o4 = sign(area(p2, q2, q1));\n\t\tif (o1 !== o2 && o3 !== o4) return true; // general case\n\n\t\tif (o1 === 0 && onSegment(p1, p2, q1)) return true; // p1, q1 and p2 are collinear and p2 lies on p1q1\n\n\t\tif (o2 === 0 && onSegment(p1, q2, q1)) return true; // p1, q1 and q2 are collinear and q2 lies on p1q1\n\n\t\tif (o3 === 0 && onSegment(p2, p1, q2)) return true; // p2, q2 and p1 are collinear and p1 lies on p2q2\n\n\t\tif (o4 === 0 && onSegment(p2, q1, q2)) return true; // p2, q2 and q1 are collinear and q1 lies on p2q2\n\n\t\treturn false;\n\t} // for collinear points p, q, r, check if point q lies on segment pr\n\n\n\tfunction onSegment(p, q, r) {\n\t\treturn q.x <= Math.max(p.x, r.x) && q.x >= Math.min(p.x, r.x) && q.y <= Math.max(p.y, r.y) && q.y >= Math.min(p.y, r.y);\n\t}\n\n\tfunction sign(num) {\n\t\treturn num > 0 ? 1 : num < 0 ? -1 : 0;\n\t} // check if a polygon diagonal intersects any polygon segments\n\n\n\tfunction intersectsPolygon(a, b) {\n\t\tlet p = a;\n\n\t\tdo {\n\t\t\tif (p.i !== a.i && p.next.i !== a.i && p.i !== b.i && p.next.i !== b.i && intersects(p, p.next, a, b)) return true;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn false;\n\t} // check if a polygon diagonal is locally inside the polygon\n\n\n\tfunction locallyInside(a, b) {\n\t\treturn area(a.prev, a, a.next) < 0 ? area(a, b, a.next) >= 0 && area(a, a.prev, b) >= 0 : area(a, b, a.prev) < 0 || area(a, a.next, b) < 0;\n\t} // check if the middle point of a polygon diagonal is inside the polygon\n\n\n\tfunction middleInside(a, b) {\n\t\tlet p = a,\n\t\t\t\tinside = false;\n\t\tconst px = (a.x + b.x) / 2,\n\t\t\t\t\tpy = (a.y + b.y) / 2;\n\n\t\tdo {\n\t\t\tif (p.y > py !== p.next.y > py && p.next.y !== p.y && px < (p.next.x - p.x) * (py - p.y) / (p.next.y - p.y) + p.x) inside = !inside;\n\t\t\tp = p.next;\n\t\t} while (p !== a);\n\n\t\treturn inside;\n\t} // link two polygon vertices with a bridge; if the vertices belong to the same ring, it splits polygon into two;\n\t// if one belongs to the outer ring and another to a hole, it merges it into a single ring\n\n\n\tfunction splitPolygon(a, b) {\n\t\tconst a2 = new Node(a.i, a.x, a.y),\n\t\t\t\t\tb2 = new Node(b.i, b.x, b.y),\n\t\t\t\t\tan = a.next,\n\t\t\t\t\tbp = b.prev;\n\t\ta.next = b;\n\t\tb.prev = a;\n\t\ta2.next = an;\n\t\tan.prev = a2;\n\t\tb2.next = a2;\n\t\ta2.prev = b2;\n\t\tbp.next = b2;\n\t\tb2.prev = bp;\n\t\treturn b2;\n\t} // create a node and optionally link it with previous one (in a circular doubly linked list)\n\n\n\tfunction insertNode(i, x, y, last) {\n\t\tconst p = new Node(i, x, y);\n\n\t\tif (!last) {\n\t\t\tp.prev = p;\n\t\t\tp.next = p;\n\t\t} else {\n\t\t\tp.next = last.next;\n\t\t\tp.prev = last;\n\t\t\tlast.next.prev = p;\n\t\t\tlast.next = p;\n\t\t}\n\n\t\treturn p;\n\t}\n\n\tfunction removeNode(p) {\n\t\tp.next.prev = p.prev;\n\t\tp.prev.next = p.next;\n\t\tif (p.prevZ) p.prevZ.nextZ = p.nextZ;\n\t\tif (p.nextZ) p.nextZ.prevZ = p.prevZ;\n\t}\n\n\tfunction Node(i, x, y) {\n\t\t// vertex index in coordinates array\n\t\tthis.i = i; // vertex coordinates\n\n\t\tthis.x = x;\n\t\tthis.y = y; // previous and next vertex nodes in a polygon ring\n\n\t\tthis.prev = null;\n\t\tthis.next = null; // z-order curve value\n\n\t\tthis.z = null; // previous and next nodes in z-order\n\n\t\tthis.prevZ = null;\n\t\tthis.nextZ = null; // indicates whether this is a steiner point\n\n\t\tthis.steiner = false;\n\t}\n\n\tfunction signedArea(data, start, end, dim) {\n\t\tlet sum = 0;\n\n\t\tfor (let i = start, j = end - dim; i < end; i += dim) {\n\t\t\tsum += (data[j] - data[i]) * (data[i + 1] + data[j + 1]);\n\t\t\tj = i;\n\t\t}\n\n\t\treturn sum;\n\t}\n\n\tclass ShapeUtils {\n\t\t// calculate area of the contour polygon\n\t\tstatic area(contour) {\n\t\t\tconst n = contour.length;\n\t\t\tlet a = 0.0;\n\n\t\t\tfor (let p = n - 1, q = 0; q < n; p = q++) {\n\t\t\t\ta += contour[p].x * contour[q].y - contour[q].x * contour[p].y;\n\t\t\t}\n\n\t\t\treturn a * 0.5;\n\t\t}\n\n\t\tstatic isClockWise(pts) {\n\t\t\treturn ShapeUtils.area(pts) < 0;\n\t\t}\n\n\t\tstatic triangulateShape(contour, holes) {\n\t\t\tconst vertices = []; // flat array of vertices like [ x0,y0, x1,y1, x2,y2, ... ]\n\n\t\t\tconst holeIndices = []; // array of hole indices\n\n\t\t\tconst faces = []; // final array of vertex indices like [ [ a,b,d ], [ b,c,d ] ]\n\n\t\t\tremoveDupEndPts(contour);\n\t\t\taddContour(vertices, contour); //\n\n\t\t\tlet holeIndex = contour.length;\n\t\t\tholes.forEach(removeDupEndPts);\n\n\t\t\tfor (let i = 0; i < holes.length; i++) {\n\t\t\t\tholeIndices.push(holeIndex);\n\t\t\t\tholeIndex += holes[i].length;\n\t\t\t\taddContour(vertices, holes[i]);\n\t\t\t} //\n\n\n\t\t\tconst triangles = Earcut.triangulate(vertices, holeIndices); //\n\n\t\t\tfor (let i = 0; i < triangles.length; i += 3) {\n\t\t\t\tfaces.push(triangles.slice(i, i + 3));\n\t\t\t}\n\n\t\t\treturn faces;\n\t\t}\n\n\t}\n\n\tfunction removeDupEndPts(points) {\n\t\tconst l = points.length;\n\n\t\tif (l > 2 && points[l - 1].equals(points[0])) {\n\t\t\tpoints.pop();\n\t\t}\n\t}\n\n\tfunction addContour(vertices, contour) {\n\t\tfor (let i = 0; i < contour.length; i++) {\n\t\t\tvertices.push(contour[i].x);\n\t\t\tvertices.push(contour[i].y);\n\t\t}\n\t}\n\n\t/**\n\t * Creates extruded geometry from a path shape.\n\t *\n\t * parameters = {\n\t *\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\tsteps: <int>, // number of points for z-side extrusions / used for subdividing segments of extrude spline too\n\t *\tdepth: <float>, // Depth to extrude the shape\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into the original shape bevel goes\n\t *\tbevelSize: <float>, // how far from shape outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float>, // how far from shape outline does bevel start\n\t *\tbevelSegments: <int>, // number of bevel layers\n\t *\n\t *\textrudePath: <THREE.Curve> // curve to extrude shape along\n\t *\n\t *\tUVGenerator: <Object> // object that provides UV generator functions\n\t *\n\t * }\n\t */\n\n\tclass ExtrudeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, options) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ExtrudeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\toptions: options\n\t\t\t};\n\t\t\tshapes = Array.isArray(shapes) ? shapes : [shapes];\n\t\t\tconst scope = this;\n\t\t\tconst verticesArray = [];\n\t\t\tconst uvArray = [];\n\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\taddShape(shape);\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(verticesArray, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvArray, 2));\n\t\t\tthis.computeVertexNormals(); // functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst placeholder = []; // options\n\n\t\t\t\tconst curveSegments = options.curveSegments !== undefined ? options.curveSegments : 12;\n\t\t\t\tconst steps = options.steps !== undefined ? options.steps : 1;\n\t\t\t\tlet depth = options.depth !== undefined ? options.depth : 100;\n\t\t\t\tlet bevelEnabled = options.bevelEnabled !== undefined ? options.bevelEnabled : true;\n\t\t\t\tlet bevelThickness = options.bevelThickness !== undefined ? options.bevelThickness : 6;\n\t\t\t\tlet bevelSize = options.bevelSize !== undefined ? options.bevelSize : bevelThickness - 2;\n\t\t\t\tlet bevelOffset = options.bevelOffset !== undefined ? options.bevelOffset : 0;\n\t\t\t\tlet bevelSegments = options.bevelSegments !== undefined ? options.bevelSegments : 3;\n\t\t\t\tconst extrudePath = options.extrudePath;\n\t\t\t\tconst uvgen = options.UVGenerator !== undefined ? options.UVGenerator : WorldUVGenerator; // deprecated options\n\n\t\t\t\tif (options.amount !== undefined) {\n\t\t\t\t\tconsole.warn('THREE.ExtrudeBufferGeometry: amount has been renamed to depth.');\n\t\t\t\t\tdepth = options.amount;\n\t\t\t\t} //\n\n\n\t\t\t\tlet extrudePts,\n\t\t\t\t\t\textrudeByPath = false;\n\t\t\t\tlet splineTube, binormal, normal, position2;\n\n\t\t\t\tif (extrudePath) {\n\t\t\t\t\textrudePts = extrudePath.getSpacedPoints(steps);\n\t\t\t\t\textrudeByPath = true;\n\t\t\t\t\tbevelEnabled = false; // bevels not supported for path extrusion\n\t\t\t\t\t// SETUP TNB variables\n\t\t\t\t\t// TODO1 - have a .isClosed in spline?\n\n\t\t\t\t\tsplineTube = extrudePath.computeFrenetFrames(steps, false); // console.log(splineTube, 'splineTube', splineTube.normals.length, 'steps', steps, 'extrudePts', extrudePts.length);\n\n\t\t\t\t\tbinormal = new Vector3();\n\t\t\t\t\tnormal = new Vector3();\n\t\t\t\t\tposition2 = new Vector3();\n\t\t\t\t} // Safeguards if bevels are not enabled\n\n\n\t\t\t\tif (!bevelEnabled) {\n\t\t\t\t\tbevelSegments = 0;\n\t\t\t\t\tbevelThickness = 0;\n\t\t\t\t\tbevelSize = 0;\n\t\t\t\t\tbevelOffset = 0;\n\t\t\t\t} // Variables initialization\n\n\n\t\t\t\tconst shapePoints = shape.extractPoints(curveSegments);\n\t\t\t\tlet vertices = shapePoints.shape;\n\t\t\t\tconst holes = shapePoints.holes;\n\t\t\t\tconst reverse = !ShapeUtils.isClockWise(vertices);\n\n\t\t\t\tif (reverse) {\n\t\t\t\t\tvertices = vertices.reverse(); // Maybe we should also check if holes are in the opposite direction, just to be safe ...\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\n\t\t\t\t\t\tif (ShapeUtils.isClockWise(ahole)) {\n\t\t\t\t\t\t\tholes[h] = ahole.reverse();\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(vertices, holes);\n\t\t\t\t/* Vertices */\n\n\t\t\t\tconst contour = vertices; // vertices has all points but contour has only points of circumference\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\tvertices = vertices.concat(ahole);\n\t\t\t\t}\n\n\t\t\t\tfunction scalePt2(pt, vec, size) {\n\t\t\t\t\tif (!vec) console.error('THREE.ExtrudeGeometry: vec does not exist');\n\t\t\t\t\treturn vec.clone().multiplyScalar(size).add(pt);\n\t\t\t\t}\n\n\t\t\t\tconst vlen = vertices.length,\n\t\t\t\t\t\t\tflen = faces.length; // Find directions for point movement\n\n\t\t\t\tfunction getBevelVec(inPt, inPrev, inNext) {\n\t\t\t\t\t// computes for inPt the corresponding point inPt' on a new contour\n\t\t\t\t\t//\t shifted by 1 unit (length of normalized vector) to the left\n\t\t\t\t\t// if we walk along contour clockwise, this new contour is outside the old one\n\t\t\t\t\t//\n\t\t\t\t\t// inPt' is the intersection of the two lines parallel to the two\n\t\t\t\t\t//\tadjacent edges of inPt at a distance of 1 unit on the left side.\n\t\t\t\t\tlet v_trans_x, v_trans_y, shrink_by; // resulting translation vector for inPt\n\t\t\t\t\t// good reading for geometry algorithms (here: line-line intersection)\n\t\t\t\t\t// http://geomalgorithms.com/a05-_intersect-1.html\n\n\t\t\t\t\tconst v_prev_x = inPt.x - inPrev.x,\n\t\t\t\t\t\t\t\tv_prev_y = inPt.y - inPrev.y;\n\t\t\t\t\tconst v_next_x = inNext.x - inPt.x,\n\t\t\t\t\t\t\t\tv_next_y = inNext.y - inPt.y;\n\t\t\t\t\tconst v_prev_lensq = v_prev_x * v_prev_x + v_prev_y * v_prev_y; // check for collinear edges\n\n\t\t\t\t\tconst collinear0 = v_prev_x * v_next_y - v_prev_y * v_next_x;\n\n\t\t\t\t\tif (Math.abs(collinear0) > Number.EPSILON) {\n\t\t\t\t\t\t// not collinear\n\t\t\t\t\t\t// length of vectors for normalizing\n\t\t\t\t\t\tconst v_prev_len = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\tconst v_next_len = Math.sqrt(v_next_x * v_next_x + v_next_y * v_next_y); // shift adjacent points by unit vectors to the left\n\n\t\t\t\t\t\tconst ptPrevShift_x = inPrev.x - v_prev_y / v_prev_len;\n\t\t\t\t\t\tconst ptPrevShift_y = inPrev.y + v_prev_x / v_prev_len;\n\t\t\t\t\t\tconst ptNextShift_x = inNext.x - v_next_y / v_next_len;\n\t\t\t\t\t\tconst ptNextShift_y = inNext.y + v_next_x / v_next_len; // scaling factor for v_prev to intersection point\n\n\t\t\t\t\t\tconst sf = ((ptNextShift_x - ptPrevShift_x) * v_next_y - (ptNextShift_y - ptPrevShift_y) * v_next_x) / (v_prev_x * v_next_y - v_prev_y * v_next_x); // vector from inPt to intersection point\n\n\t\t\t\t\t\tv_trans_x = ptPrevShift_x + v_prev_x * sf - inPt.x;\n\t\t\t\t\t\tv_trans_y = ptPrevShift_y + v_prev_y * sf - inPt.y; // Don't normalize!, otherwise sharp corners become ugly\n\t\t\t\t\t\t//\tbut prevent crazy spikes\n\n\t\t\t\t\t\tconst v_trans_lensq = v_trans_x * v_trans_x + v_trans_y * v_trans_y;\n\n\t\t\t\t\t\tif (v_trans_lensq <= 2) {\n\t\t\t\t\t\t\treturn new Vector2(v_trans_x, v_trans_y);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_trans_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// handle special case of collinear edges\n\t\t\t\t\t\tlet direction_eq = false; // assumes: opposite\n\n\t\t\t\t\t\tif (v_prev_x > Number.EPSILON) {\n\t\t\t\t\t\t\tif (v_next_x > Number.EPSILON) {\n\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tif (v_prev_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\tif (v_next_x < -Number.EPSILON) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tif (Math.sign(v_prev_y) === Math.sign(v_next_y)) {\n\t\t\t\t\t\t\t\t\tdirection_eq = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (direction_eq) {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight sequence\");\n\t\t\t\t\t\t\tv_trans_x = -v_prev_y;\n\t\t\t\t\t\t\tv_trans_y = v_prev_x;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// console.log(\"Warning: lines are a straight spike\");\n\t\t\t\t\t\t\tv_trans_x = v_prev_x;\n\t\t\t\t\t\t\tv_trans_y = v_prev_y;\n\t\t\t\t\t\t\tshrink_by = Math.sqrt(v_prev_lensq / 2);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\treturn new Vector2(v_trans_x / shrink_by, v_trans_y / shrink_by);\n\t\t\t\t}\n\n\t\t\t\tconst contourMovements = [];\n\n\t\t\t\tfor (let i = 0, il = contour.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\t\t\t\t\t// console.log('i,j,k', i, j , k)\n\n\t\t\t\t\tcontourMovements[i] = getBevelVec(contour[i], contour[j], contour[k]);\n\t\t\t\t}\n\n\t\t\t\tconst holesMovements = [];\n\t\t\t\tlet oneHoleMovements,\n\t\t\t\t\t\tverticesMovements = contourMovements.concat();\n\n\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\toneHoleMovements = [];\n\n\t\t\t\t\tfor (let i = 0, il = ahole.length, j = il - 1, k = i + 1; i < il; i++, j++, k++) {\n\t\t\t\t\t\tif (j === il) j = 0;\n\t\t\t\t\t\tif (k === il) k = 0; //\t(j)---(i)---(k)\n\n\t\t\t\t\t\toneHoleMovements[i] = getBevelVec(ahole[i], ahole[j], ahole[k]);\n\t\t\t\t\t}\n\n\t\t\t\t\tholesMovements.push(oneHoleMovements);\n\t\t\t\t\tverticesMovements = verticesMovements.concat(oneHoleMovements);\n\t\t\t\t} // Loop bevelSegments, 1 for the front, 1 for the back\n\n\n\t\t\t\tfor (let b = 0; b < bevelSegments; b++) {\n\t\t\t\t\t//for ( b = bevelSegments; b > 0; b -- ) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\t\t\t\t\t\t\tv(vert.x, vert.y, -z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst bs = bevelSize + bevelOffset; // Back facing vertices\n\n\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\tv(vert.x, vert.y, 0);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ 0 ].y, extrudePts[ 0 ].x );\n\t\t\t\t\t\tnormal.copy(splineTube.normals[0]).multiplyScalar(vert.x);\n\t\t\t\t\t\tbinormal.copy(splineTube.binormals[0]).multiplyScalar(vert.y);\n\t\t\t\t\t\tposition2.copy(extrudePts[0]).add(normal).add(binormal);\n\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t}\n\t\t\t\t} // Add stepped vertices...\n\t\t\t\t// Including front facing vertices\n\n\n\t\t\t\tfor (let s = 1; s <= steps; s++) {\n\t\t\t\t\tfor (let i = 0; i < vlen; i++) {\n\t\t\t\t\t\tconst vert = bevelEnabled ? scalePt2(vertices[i], verticesMovements[i], bs) : vertices[i];\n\n\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\tv(vert.x, vert.y, depth / steps * s);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// v( vert.x, vert.y + extrudePts[ s - 1 ].y, extrudePts[ s - 1 ].x );\n\t\t\t\t\t\t\tnormal.copy(splineTube.normals[s]).multiplyScalar(vert.x);\n\t\t\t\t\t\t\tbinormal.copy(splineTube.binormals[s]).multiplyScalar(vert.y);\n\t\t\t\t\t\t\tposition2.copy(extrudePts[s]).add(normal).add(binormal);\n\t\t\t\t\t\t\tv(position2.x, position2.y, position2.z);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // Add bevel segments planes\n\t\t\t\t//for ( b = 1; b <= bevelSegments; b ++ ) {\n\n\n\t\t\t\tfor (let b = bevelSegments - 1; b >= 0; b--) {\n\t\t\t\t\tconst t = b / bevelSegments;\n\t\t\t\t\tconst z = bevelThickness * Math.cos(t * Math.PI / 2);\n\t\t\t\t\tconst bs = bevelSize * Math.sin(t * Math.PI / 2) + bevelOffset; // contract shape\n\n\t\t\t\t\tfor (let i = 0, il = contour.length; i < il; i++) {\n\t\t\t\t\t\tconst vert = scalePt2(contour[i], contourMovements[i], bs);\n\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t} // expand holes\n\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\toneHoleMovements = holesMovements[h];\n\n\t\t\t\t\t\tfor (let i = 0, il = ahole.length; i < il; i++) {\n\t\t\t\t\t\t\tconst vert = scalePt2(ahole[i], oneHoleMovements[i], bs);\n\n\t\t\t\t\t\t\tif (!extrudeByPath) {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y, depth + z);\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tv(vert.x, vert.y + extrudePts[steps - 1].y, extrudePts[steps - 1].x + z);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t\t/* Faces */\n\t\t\t\t// Top and bottom faces\n\n\n\t\t\t\tbuildLidFaces(); // Sides faces\n\n\t\t\t\tbuildSideFaces(); /////\tInternal functions\n\n\t\t\t\tfunction buildLidFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\n\t\t\t\t\tif (bevelEnabled) {\n\t\t\t\t\t\tlet layer = 0; // steps + 1\n\n\t\t\t\t\t\tlet offset = vlen * layer; // Bottom faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2] + offset, face[1] + offset, face[0] + offset);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tlayer = steps + bevelSegments * 2;\n\t\t\t\t\t\toffset = vlen * layer; // Top faces\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + offset, face[1] + offset, face[2] + offset);\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// Bottom faces\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[2], face[1], face[0]);\n\t\t\t\t\t\t} // Top faces\n\n\n\t\t\t\t\t\tfor (let i = 0; i < flen; i++) {\n\t\t\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\t\t\tf3(face[0] + vlen * steps, face[1] + vlen * steps, face[2] + vlen * steps);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 0);\n\t\t\t\t} // Create faces for the z-sides of the shape\n\n\n\t\t\t\tfunction buildSideFaces() {\n\t\t\t\t\tconst start = verticesArray.length / 3;\n\t\t\t\t\tlet layeroffset = 0;\n\t\t\t\t\tsidewalls(contour, layeroffset);\n\t\t\t\t\tlayeroffset += contour.length;\n\n\t\t\t\t\tfor (let h = 0, hl = holes.length; h < hl; h++) {\n\t\t\t\t\t\tconst ahole = holes[h];\n\t\t\t\t\t\tsidewalls(ahole, layeroffset); //, true\n\n\t\t\t\t\t\tlayeroffset += ahole.length;\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.addGroup(start, verticesArray.length / 3 - start, 1);\n\t\t\t\t}\n\n\t\t\t\tfunction sidewalls(contour, layeroffset) {\n\t\t\t\t\tlet i = contour.length;\n\n\t\t\t\t\twhile (--i >= 0) {\n\t\t\t\t\t\tconst j = i;\n\t\t\t\t\t\tlet k = i - 1;\n\t\t\t\t\t\tif (k < 0) k = contour.length - 1; //console.log('b', i,j, i-1, k,vertices.length);\n\n\t\t\t\t\t\tfor (let s = 0, sl = steps + bevelSegments * 2; s < sl; s++) {\n\t\t\t\t\t\t\tconst slen1 = vlen * s;\n\t\t\t\t\t\t\tconst slen2 = vlen * (s + 1);\n\t\t\t\t\t\t\tconst a = layeroffset + j + slen1,\n\t\t\t\t\t\t\t\t\t\tb = layeroffset + k + slen1,\n\t\t\t\t\t\t\t\t\t\tc = layeroffset + k + slen2,\n\t\t\t\t\t\t\t\t\t\td = layeroffset + j + slen2;\n\t\t\t\t\t\t\tf4(a, b, c, d);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tfunction v(x, y, z) {\n\t\t\t\t\tplaceholder.push(x);\n\t\t\t\t\tplaceholder.push(y);\n\t\t\t\t\tplaceholder.push(z);\n\t\t\t\t}\n\n\t\t\t\tfunction f3(a, b, c) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateTopUV(scope, verticesArray, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t}\n\n\t\t\t\tfunction f4(a, b, c, d) {\n\t\t\t\t\taddVertex(a);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\taddVertex(b);\n\t\t\t\t\taddVertex(c);\n\t\t\t\t\taddVertex(d);\n\t\t\t\t\tconst nextIndex = verticesArray.length / 3;\n\t\t\t\t\tconst uvs = uvgen.generateSideWallUV(scope, verticesArray, nextIndex - 6, nextIndex - 3, nextIndex - 2, nextIndex - 1);\n\t\t\t\t\taddUV(uvs[0]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t\taddUV(uvs[1]);\n\t\t\t\t\taddUV(uvs[2]);\n\t\t\t\t\taddUV(uvs[3]);\n\t\t\t\t}\n\n\t\t\t\tfunction addVertex(index) {\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 0]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 1]);\n\t\t\t\t\tverticesArray.push(placeholder[index * 3 + 2]);\n\t\t\t\t}\n\n\t\t\t\tfunction addUV(vector2) {\n\t\t\t\t\tuvArray.push(vector2.x);\n\t\t\t\t\tuvArray.push(vector2.y);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\tconst options = this.parameters.options;\n\t\t\treturn toJSON$1(shapes, options, data);\n\t\t}\n\n\t}\n\n\tconst WorldUVGenerator = {\n\t\tgenerateTopUV: function (geometry, vertices, indexA, indexB, indexC) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\treturn [new Vector2(a_x, a_y), new Vector2(b_x, b_y), new Vector2(c_x, c_y)];\n\t\t},\n\t\tgenerateSideWallUV: function (geometry, vertices, indexA, indexB, indexC, indexD) {\n\t\t\tconst a_x = vertices[indexA * 3];\n\t\t\tconst a_y = vertices[indexA * 3 + 1];\n\t\t\tconst a_z = vertices[indexA * 3 + 2];\n\t\t\tconst b_x = vertices[indexB * 3];\n\t\t\tconst b_y = vertices[indexB * 3 + 1];\n\t\t\tconst b_z = vertices[indexB * 3 + 2];\n\t\t\tconst c_x = vertices[indexC * 3];\n\t\t\tconst c_y = vertices[indexC * 3 + 1];\n\t\t\tconst c_z = vertices[indexC * 3 + 2];\n\t\t\tconst d_x = vertices[indexD * 3];\n\t\t\tconst d_y = vertices[indexD * 3 + 1];\n\t\t\tconst d_z = vertices[indexD * 3 + 2];\n\n\t\t\tif (Math.abs(a_y - b_y) < Math.abs(a_x - b_x)) {\n\t\t\t\treturn [new Vector2(a_x, 1 - a_z), new Vector2(b_x, 1 - b_z), new Vector2(c_x, 1 - c_z), new Vector2(d_x, 1 - d_z)];\n\t\t\t} else {\n\t\t\t\treturn [new Vector2(a_y, 1 - a_z), new Vector2(b_y, 1 - b_z), new Vector2(c_y, 1 - c_z), new Vector2(d_y, 1 - d_z)];\n\t\t\t}\n\t\t}\n\t};\n\n\tfunction toJSON$1(shapes, options, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\tif (options.extrudePath !== undefined) data.options.extrudePath = options.extrudePath.toJSON();\n\t\treturn data;\n\t}\n\n\tclass IcosahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst t = (1 + Math.sqrt(5)) / 2;\n\t\t\tconst vertices = [-1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, 0, 0, -1, t, 0, 1, t, 0, -1, -t, 0, 1, -t, t, 0, -1, t, 0, 1, -t, 0, -1, -t, 0, 1];\n\t\t\tconst indices = [0, 11, 5, 0, 5, 1, 0, 1, 7, 0, 7, 10, 0, 10, 11, 1, 5, 9, 5, 11, 4, 11, 10, 2, 10, 7, 6, 7, 1, 8, 3, 9, 4, 3, 4, 2, 3, 2, 6, 3, 6, 8, 3, 8, 9, 4, 9, 5, 2, 4, 11, 6, 2, 10, 8, 6, 7, 9, 8, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'IcosahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t}\n\n\tclass LatheGeometry extends BufferGeometry {\n\t\tconstructor(points, segments = 12, phiStart = 0, phiLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LatheGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpoints: points,\n\t\t\t\tsegments: segments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength\n\t\t\t};\n\t\t\tsegments = Math.floor(segments); // clamp phiLength so it's in range of [ 0, 2PI ]\n\n\t\t\tphiLength = clamp(phiLength, 0, Math.PI * 2); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst inverseSegments = 1.0 / segments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices and uvs\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst phi = phiStart + i * inverseSegments * phiLength;\n\t\t\t\tconst sin = Math.sin(phi);\n\t\t\t\tconst cos = Math.cos(phi);\n\n\t\t\t\tfor (let j = 0; j <= points.length - 1; j++) {\n\t\t\t\t\t// vertex\n\t\t\t\t\tvertex.x = points[j].x * sin;\n\t\t\t\t\tvertex.y = points[j].y;\n\t\t\t\t\tvertex.z = points[j].x * cos;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // uv\n\n\t\t\t\t\tuv.x = i / segments;\n\t\t\t\t\tuv.y = j / (points.length - 1);\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t}\n\t\t\t} // indices\n\n\n\t\t\tfor (let i = 0; i < segments; i++) {\n\t\t\t\tfor (let j = 0; j < points.length - 1; j++) {\n\t\t\t\t\tconst base = j + i * points.length;\n\t\t\t\t\tconst a = base;\n\t\t\t\t\tconst b = base + points.length;\n\t\t\t\t\tconst c = base + points.length + 1;\n\t\t\t\t\tconst d = base + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // generate normals\n\n\t\t\tthis.computeVertexNormals(); // if the geometry is closed, we need to average the normals along the seam.\n\t\t\t// because the corresponding vertices are identical (but still have different UVs).\n\n\t\t\tif (phiLength === Math.PI * 2) {\n\t\t\t\tconst normals = this.attributes.normal.array;\n\t\t\t\tconst n1 = new Vector3();\n\t\t\t\tconst n2 = new Vector3();\n\t\t\t\tconst n = new Vector3(); // this is the buffer offset for the last line of vertices\n\n\t\t\t\tconst base = segments * points.length * 3;\n\n\t\t\t\tfor (let i = 0, j = 0; i < points.length; i++, j += 3) {\n\t\t\t\t\t// select the normal of the vertex in the first line\n\t\t\t\t\tn1.x = normals[j + 0];\n\t\t\t\t\tn1.y = normals[j + 1];\n\t\t\t\t\tn1.z = normals[j + 2]; // select the normal of the vertex in the last line\n\n\t\t\t\t\tn2.x = normals[base + j + 0];\n\t\t\t\t\tn2.y = normals[base + j + 1];\n\t\t\t\t\tn2.z = normals[base + j + 2]; // average normals\n\n\t\t\t\t\tn.addVectors(n1, n2).normalize(); // assign the new values to both normals\n\n\t\t\t\t\tnormals[j + 0] = normals[base + j + 0] = n.x;\n\t\t\t\t\tnormals[j + 1] = normals[base + j + 1] = n.y;\n\t\t\t\t\tnormals[j + 2] = normals[base + j + 2] = n.z;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass OctahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1, 0, 0, 0, 1, 0, 0, -1];\n\t\t\tconst indices = [0, 2, 4, 0, 4, 3, 0, 3, 5, 0, 5, 2, 1, 2, 5, 1, 5, 3, 1, 3, 4, 1, 4, 2];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'OctahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Parametric Surfaces Geometry\n\t * based on the brilliant article by @prideout https://prideout.net/blog/old/blog/index.html@p=44.html\n\t */\n\n\tclass ParametricGeometry extends BufferGeometry {\n\t\tconstructor(func, slices, stacks) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ParametricGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tfunc: func,\n\t\t\t\tslices: slices,\n\t\t\t\tstacks: stacks\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst EPS = 0.00001;\n\t\t\tconst normal = new Vector3();\n\t\t\tconst p0 = new Vector3(),\n\t\t\t\t\t\tp1 = new Vector3();\n\t\t\tconst pu = new Vector3(),\n\t\t\t\t\t\tpv = new Vector3();\n\n\t\t\tif (func.length < 3) {\n\t\t\t\tconsole.error('THREE.ParametricGeometry: Function must now modify a Vector3 as third parameter.');\n\t\t\t} // generate vertices, normals and uvs\n\n\n\t\t\tconst sliceCount = slices + 1;\n\n\t\t\tfor (let i = 0; i <= stacks; i++) {\n\t\t\t\tconst v = i / stacks;\n\n\t\t\t\tfor (let j = 0; j <= slices; j++) {\n\t\t\t\t\tconst u = j / slices; // vertex\n\n\t\t\t\t\tfunc(u, v, p0);\n\t\t\t\t\tvertices.push(p0.x, p0.y, p0.z); // normal\n\t\t\t\t\t// approximate tangent vectors via finite differences\n\n\t\t\t\t\tif (u - EPS >= 0) {\n\t\t\t\t\t\tfunc(u - EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u + EPS, v, p1);\n\t\t\t\t\t\tpu.subVectors(p1, p0);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (v - EPS >= 0) {\n\t\t\t\t\t\tfunc(u, v - EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p0, p1);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfunc(u, v + EPS, p1);\n\t\t\t\t\t\tpv.subVectors(p1, p0);\n\t\t\t\t\t} // cross product of tangent vectors returns surface normal\n\n\n\t\t\t\t\tnormal.crossVectors(pu, pv).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u, v);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let i = 0; i < stacks; i++) {\n\t\t\t\tfor (let j = 0; j < slices; j++) {\n\t\t\t\t\tconst a = i * sliceCount + j;\n\t\t\t\t\tconst b = i * sliceCount + j + 1;\n\t\t\t\t\tconst c = (i + 1) * sliceCount + j + 1;\n\t\t\t\t\tconst d = (i + 1) * sliceCount + j; // faces one and two\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass RingGeometry extends BufferGeometry {\n\t\tconstructor(innerRadius = 0.5, outerRadius = 1, thetaSegments = 8, phiSegments = 1, thetaStart = 0, thetaLength = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'RingGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tinnerRadius: innerRadius,\n\t\t\t\touterRadius: outerRadius,\n\t\t\t\tthetaSegments: thetaSegments,\n\t\t\t\tphiSegments: phiSegments,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\tthetaSegments = Math.max(3, thetaSegments);\n\t\t\tphiSegments = Math.max(1, phiSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // some helper variables\n\n\t\t\tlet radius = innerRadius;\n\t\t\tconst radiusStep = (outerRadius - innerRadius) / phiSegments;\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst uv = new Vector2(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= phiSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= thetaSegments; i++) {\n\t\t\t\t\t// values are generate from the inside of the ring to the outside\n\t\t\t\t\tconst segment = thetaStart + i / thetaSegments * thetaLength; // vertex\n\n\t\t\t\t\tvertex.x = radius * Math.cos(segment);\n\t\t\t\t\tvertex.y = radius * Math.sin(segment);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormals.push(0, 0, 1); // uv\n\n\t\t\t\t\tuv.x = (vertex.x / outerRadius + 1) / 2;\n\t\t\t\t\tuv.y = (vertex.y / outerRadius + 1) / 2;\n\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t} // increase the radius for next row of vertices\n\n\n\t\t\t\tradius += radiusStep;\n\t\t\t} // indices\n\n\n\t\t\tfor (let j = 0; j < phiSegments; j++) {\n\t\t\t\tconst thetaSegmentLevel = j * (thetaSegments + 1);\n\n\t\t\t\tfor (let i = 0; i < thetaSegments; i++) {\n\t\t\t\t\tconst segment = i + thetaSegmentLevel;\n\t\t\t\t\tconst a = segment;\n\t\t\t\t\tconst b = segment + thetaSegments + 1;\n\t\t\t\t\tconst c = segment + thetaSegments + 2;\n\t\t\t\t\tconst d = segment + 1; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass ShapeGeometry extends BufferGeometry {\n\t\tconstructor(shapes, curveSegments = 12) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShapeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tshapes: shapes,\n\t\t\t\tcurveSegments: curveSegments\n\t\t\t}; // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tlet groupStart = 0;\n\t\t\tlet groupCount = 0; // allow single and array values for \"shapes\" parameter\n\n\t\t\tif (Array.isArray(shapes) === false) {\n\t\t\t\taddShape(shapes);\n\t\t\t} else {\n\t\t\t\tfor (let i = 0; i < shapes.length; i++) {\n\t\t\t\t\taddShape(shapes[i]);\n\t\t\t\t\tthis.addGroup(groupStart, groupCount, i); // enables MultiMaterial support\n\n\t\t\t\t\tgroupStart += groupCount;\n\t\t\t\t\tgroupCount = 0;\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // helper functions\n\n\t\t\tfunction addShape(shape) {\n\t\t\t\tconst indexOffset = vertices.length / 3;\n\t\t\t\tconst points = shape.extractPoints(curveSegments);\n\t\t\t\tlet shapeVertices = points.shape;\n\t\t\t\tconst shapeHoles = points.holes; // check direction of vertices\n\n\t\t\t\tif (ShapeUtils.isClockWise(shapeVertices) === false) {\n\t\t\t\t\tshapeVertices = shapeVertices.reverse();\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\n\t\t\t\t\tif (ShapeUtils.isClockWise(shapeHole) === true) {\n\t\t\t\t\t\tshapeHoles[i] = shapeHole.reverse();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconst faces = ShapeUtils.triangulateShape(shapeVertices, shapeHoles); // join vertices of inner and outer paths to a single array\n\n\t\t\t\tfor (let i = 0, l = shapeHoles.length; i < l; i++) {\n\t\t\t\t\tconst shapeHole = shapeHoles[i];\n\t\t\t\t\tshapeVertices = shapeVertices.concat(shapeHole);\n\t\t\t\t} // vertices, normals, uvs\n\n\n\t\t\t\tfor (let i = 0, l = shapeVertices.length; i < l; i++) {\n\t\t\t\t\tconst vertex = shapeVertices[i];\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, 0);\n\t\t\t\t\tnormals.push(0, 0, 1);\n\t\t\t\t\tuvs.push(vertex.x, vertex.y); // world uvs\n\t\t\t\t} // incides\n\n\n\t\t\t\tfor (let i = 0, l = faces.length; i < l; i++) {\n\t\t\t\t\tconst face = faces[i];\n\t\t\t\t\tconst a = face[0] + indexOffset;\n\t\t\t\t\tconst b = face[1] + indexOffset;\n\t\t\t\t\tconst c = face[2] + indexOffset;\n\t\t\t\t\tindices.push(a, b, c);\n\t\t\t\t\tgroupCount += 3;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tconst shapes = this.parameters.shapes;\n\t\t\treturn toJSON(shapes, data);\n\t\t}\n\n\t}\n\n\tfunction toJSON(shapes, data) {\n\t\tdata.shapes = [];\n\n\t\tif (Array.isArray(shapes)) {\n\t\t\tfor (let i = 0, l = shapes.length; i < l; i++) {\n\t\t\t\tconst shape = shapes[i];\n\t\t\t\tdata.shapes.push(shape.uuid);\n\t\t\t}\n\t\t} else {\n\t\t\tdata.shapes.push(shapes.uuid);\n\t\t}\n\n\t\treturn data;\n\t}\n\n\tclass SphereGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, widthSegments = 8, heightSegments = 6, phiStart = 0, phiLength = Math.PI * 2, thetaStart = 0, thetaLength = Math.PI) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SphereGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\twidthSegments: widthSegments,\n\t\t\t\theightSegments: heightSegments,\n\t\t\t\tphiStart: phiStart,\n\t\t\t\tphiLength: phiLength,\n\t\t\t\tthetaStart: thetaStart,\n\t\t\t\tthetaLength: thetaLength\n\t\t\t};\n\t\t\twidthSegments = Math.max(3, Math.floor(widthSegments));\n\t\t\theightSegments = Math.max(2, Math.floor(heightSegments));\n\t\t\tconst thetaEnd = Math.min(thetaStart + thetaLength, Math.PI);\n\t\t\tlet index = 0;\n\t\t\tconst grid = [];\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // generate vertices, normals and uvs\n\n\t\t\tfor (let iy = 0; iy <= heightSegments; iy++) {\n\t\t\t\tconst verticesRow = [];\n\t\t\t\tconst v = iy / heightSegments; // special case for the poles\n\n\t\t\t\tlet uOffset = 0;\n\n\t\t\t\tif (iy == 0 && thetaStart == 0) {\n\t\t\t\t\tuOffset = 0.5 / widthSegments;\n\t\t\t\t} else if (iy == heightSegments && thetaEnd == Math.PI) {\n\t\t\t\t\tuOffset = -0.5 / widthSegments;\n\t\t\t\t}\n\n\t\t\t\tfor (let ix = 0; ix <= widthSegments; ix++) {\n\t\t\t\t\tconst u = ix / widthSegments; // vertex\n\n\t\t\t\t\tvertex.x = -radius * Math.cos(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.y = radius * Math.cos(thetaStart + v * thetaLength);\n\t\t\t\t\tvertex.z = radius * Math.sin(phiStart + u * phiLength) * Math.sin(thetaStart + v * thetaLength);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tnormal.copy(vertex).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(u + uOffset, 1 - v);\n\t\t\t\t\tverticesRow.push(index++);\n\t\t\t\t}\n\n\t\t\t\tgrid.push(verticesRow);\n\t\t\t} // indices\n\n\n\t\t\tfor (let iy = 0; iy < heightSegments; iy++) {\n\t\t\t\tfor (let ix = 0; ix < widthSegments; ix++) {\n\t\t\t\t\tconst a = grid[iy][ix + 1];\n\t\t\t\t\tconst b = grid[iy][ix];\n\t\t\t\t\tconst c = grid[iy + 1][ix];\n\t\t\t\t\tconst d = grid[iy + 1][ix + 1];\n\t\t\t\t\tif (iy !== 0 || thetaStart > 0) indices.push(a, b, d);\n\t\t\t\t\tif (iy !== heightSegments - 1 || thetaEnd < Math.PI) indices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass TetrahedronGeometry extends PolyhedronGeometry {\n\t\tconstructor(radius = 1, detail = 0) {\n\t\t\tconst vertices = [1, 1, 1, -1, -1, 1, -1, 1, -1, 1, -1, -1];\n\t\t\tconst indices = [2, 1, 0, 0, 3, 2, 1, 3, 0, 2, 3, 1];\n\t\t\tsuper(vertices, indices, radius, detail);\n\t\t\tthis.type = 'TetrahedronGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\tdetail: detail\n\t\t\t};\n\t\t}\n\n\t}\n\n\t/**\n\t * Text = 3D Text\n\t *\n\t * parameters = {\n\t *\tfont: <THREE.Font>, // font\n\t *\n\t *\tsize: <float>, // size of the text\n\t *\theight: <float>, // thickness to extrude text\n\t *\tcurveSegments: <int>, // number of points on the curves\n\t *\n\t *\tbevelEnabled: <bool>, // turn on bevel\n\t *\tbevelThickness: <float>, // how deep into text bevel goes\n\t *\tbevelSize: <float>, // how far from text outline (including bevelOffset) is bevel\n\t *\tbevelOffset: <float> // how far from text outline does bevel start\n\t * }\n\t */\n\n\tclass TextGeometry extends ExtrudeGeometry {\n\t\tconstructor(text, parameters = {}) {\n\t\t\tconst font = parameters.font;\n\n\t\t\tif (!(font && font.isFont)) {\n\t\t\t\tconsole.error('THREE.TextGeometry: font parameter is not an instance of THREE.Font.');\n\t\t\t\treturn new BufferGeometry();\n\t\t\t}\n\n\t\t\tconst shapes = font.generateShapes(text, parameters.size); // translate parameters to ExtrudeGeometry API\n\n\t\t\tparameters.depth = parameters.height !== undefined ? parameters.height : 50; // defaults\n\n\t\t\tif (parameters.bevelThickness === undefined) parameters.bevelThickness = 10;\n\t\t\tif (parameters.bevelSize === undefined) parameters.bevelSize = 8;\n\t\t\tif (parameters.bevelEnabled === undefined) parameters.bevelEnabled = false;\n\t\t\tsuper(shapes, parameters);\n\t\t\tthis.type = 'TextGeometry';\n\t\t}\n\n\t}\n\n\tclass TorusGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, radialSegments = 8, tubularSegments = 6, arc = Math.PI * 2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tarc: arc\n\t\t\t};\n\t\t\tradialSegments = Math.floor(radialSegments);\n\t\t\ttubularSegments = Math.floor(tubularSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst center = new Vector3();\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tconst u = i / tubularSegments * arc;\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2; // vertex\n\n\t\t\t\t\tvertex.x = (radius + tube * Math.cos(v)) * Math.cos(u);\n\t\t\t\t\tvertex.y = (radius + tube * Math.cos(v)) * Math.sin(u);\n\t\t\t\t\tvertex.z = tube * Math.sin(v);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal\n\n\t\t\t\t\tcenter.x = radius * Math.cos(u);\n\t\t\t\t\tcenter.y = radius * Math.sin(u);\n\t\t\t\t\tnormal.subVectors(vertex, center).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= radialSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= tubularSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (tubularSegments + 1) * j + i - 1;\n\t\t\t\t\tconst b = (tubularSegments + 1) * (j - 1) + i - 1;\n\t\t\t\t\tconst c = (tubularSegments + 1) * (j - 1) + i;\n\t\t\t\t\tconst d = (tubularSegments + 1) * j + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2));\n\t\t}\n\n\t}\n\n\tclass TorusKnotGeometry extends BufferGeometry {\n\t\tconstructor(radius = 1, tube = 0.4, tubularSegments = 64, radialSegments = 8, p = 2, q = 3) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TorusKnotGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tradius: radius,\n\t\t\t\ttube: tube,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tp: p,\n\t\t\t\tq: q\n\t\t\t};\n\t\t\ttubularSegments = Math.floor(tubularSegments);\n\t\t\tradialSegments = Math.floor(radialSegments); // buffers\n\n\t\t\tconst indices = [];\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = []; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst P1 = new Vector3();\n\t\t\tconst P2 = new Vector3();\n\t\t\tconst B = new Vector3();\n\t\t\tconst T = new Vector3();\n\t\t\tconst N = new Vector3(); // generate vertices, normals and uvs\n\n\t\t\tfor (let i = 0; i <= tubularSegments; ++i) {\n\t\t\t\t// the radian \"u\" is used to calculate the position on the torus curve of the current tubular segement\n\t\t\t\tconst u = i / tubularSegments * p * Math.PI * 2; // now we calculate two points. P1 is our current position on the curve, P2 is a little farther ahead.\n\t\t\t\t// these points are used to create a special \"coordinate space\", which is necessary to calculate the correct vertex positions\n\n\t\t\t\tcalculatePositionOnCurve(u, p, q, radius, P1);\n\t\t\t\tcalculatePositionOnCurve(u + 0.01, p, q, radius, P2); // calculate orthonormal basis\n\n\t\t\t\tT.subVectors(P2, P1);\n\t\t\t\tN.addVectors(P2, P1);\n\t\t\t\tB.crossVectors(T, N);\n\t\t\t\tN.crossVectors(B, T); // normalize B, N. T can be ignored, we don't use it\n\n\t\t\t\tB.normalize();\n\t\t\t\tN.normalize();\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; ++j) {\n\t\t\t\t\t// now calculate the vertices. they are nothing more than an extrusion of the torus curve.\n\t\t\t\t\t// because we extrude a shape in the xy-plane, there is no need to calculate a z-value.\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst cx = -tube * Math.cos(v);\n\t\t\t\t\tconst cy = tube * Math.sin(v); // now calculate the final vertex position.\n\t\t\t\t\t// first we orient the extrusion with our basis vectos, then we add it to the current position on the curve\n\n\t\t\t\t\tvertex.x = P1.x + (cx * N.x + cy * B.x);\n\t\t\t\t\tvertex.y = P1.y + (cx * N.y + cy * B.y);\n\t\t\t\t\tvertex.z = P1.z + (cx * N.z + cy * B.z);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z); // normal (P1 is always the center/origin of the extrusion, thus we can use it to calculate the normal)\n\n\t\t\t\t\tnormal.subVectors(vertex, P1).normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // uv\n\n\t\t\t\t\tuvs.push(i / tubularSegments);\n\t\t\t\t\tuvs.push(j / radialSegments);\n\t\t\t\t}\n\t\t\t} // generate indices\n\n\n\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t// indices\n\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // this function calculates the current position on the torus curve\n\n\t\t\tfunction calculatePositionOnCurve(u, p, q, radius, position) {\n\t\t\t\tconst cu = Math.cos(u);\n\t\t\t\tconst su = Math.sin(u);\n\t\t\t\tconst quOverP = q / p * u;\n\t\t\t\tconst cs = Math.cos(quOverP);\n\t\t\t\tposition.x = radius * (2 + cs) * 0.5 * cu;\n\t\t\t\tposition.y = radius * (2 + cs) * su * 0.5;\n\t\t\t\tposition.z = radius * Math.sin(quOverP) * 0.5;\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass TubeGeometry extends BufferGeometry {\n\t\tconstructor(path, tubularSegments = 64, radius = 1, radialSegments = 8, closed = false) {\n\t\t\tsuper();\n\t\t\tthis.type = 'TubeGeometry';\n\t\t\tthis.parameters = {\n\t\t\t\tpath: path,\n\t\t\t\ttubularSegments: tubularSegments,\n\t\t\t\tradius: radius,\n\t\t\t\tradialSegments: radialSegments,\n\t\t\t\tclosed: closed\n\t\t\t};\n\t\t\tconst frames = path.computeFrenetFrames(tubularSegments, closed); // expose internals\n\n\t\t\tthis.tangents = frames.tangents;\n\t\t\tthis.normals = frames.normals;\n\t\t\tthis.binormals = frames.binormals; // helper variables\n\n\t\t\tconst vertex = new Vector3();\n\t\t\tconst normal = new Vector3();\n\t\t\tconst uv = new Vector2();\n\t\t\tlet P = new Vector3(); // buffer\n\n\t\t\tconst vertices = [];\n\t\t\tconst normals = [];\n\t\t\tconst uvs = [];\n\t\t\tconst indices = []; // create buffer data\n\n\t\t\tgenerateBufferData(); // build geometry\n\n\t\t\tthis.setIndex(indices);\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tthis.setAttribute('normal', new Float32BufferAttribute(normals, 3));\n\t\t\tthis.setAttribute('uv', new Float32BufferAttribute(uvs, 2)); // functions\n\n\t\t\tfunction generateBufferData() {\n\t\t\t\tfor (let i = 0; i < tubularSegments; i++) {\n\t\t\t\t\tgenerateSegment(i);\n\t\t\t\t} // if the geometry is not closed, generate the last row of vertices and normals\n\t\t\t\t// at the regular position on the given path\n\t\t\t\t//\n\t\t\t\t// if the geometry is closed, duplicate the first row of vertices and normals (uvs will differ)\n\n\n\t\t\t\tgenerateSegment(closed === false ? tubularSegments : 0); // uvs are generated in a separate function.\n\t\t\t\t// this makes it easy compute correct values for closed geometries\n\n\t\t\t\tgenerateUVs(); // finally create faces\n\n\t\t\t\tgenerateIndices();\n\t\t\t}\n\n\t\t\tfunction generateSegment(i) {\n\t\t\t\t// we use getPointAt to sample evenly distributed points from the given path\n\t\t\t\tP = path.getPointAt(i / tubularSegments, P); // retrieve corresponding normal and binormal\n\n\t\t\t\tconst N = frames.normals[i];\n\t\t\t\tconst B = frames.binormals[i]; // generate normals and vertices for the current segment\n\n\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\tconst v = j / radialSegments * Math.PI * 2;\n\t\t\t\t\tconst sin = Math.sin(v);\n\t\t\t\t\tconst cos = -Math.cos(v); // normal\n\n\t\t\t\t\tnormal.x = cos * N.x + sin * B.x;\n\t\t\t\t\tnormal.y = cos * N.y + sin * B.y;\n\t\t\t\t\tnormal.z = cos * N.z + sin * B.z;\n\t\t\t\t\tnormal.normalize();\n\t\t\t\t\tnormals.push(normal.x, normal.y, normal.z); // vertex\n\n\t\t\t\t\tvertex.x = P.x + radius * normal.x;\n\t\t\t\t\tvertex.y = P.y + radius * normal.y;\n\t\t\t\t\tvertex.z = P.z + radius * normal.z;\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateIndices() {\n\t\t\t\tfor (let j = 1; j <= tubularSegments; j++) {\n\t\t\t\t\tfor (let i = 1; i <= radialSegments; i++) {\n\t\t\t\t\t\tconst a = (radialSegments + 1) * (j - 1) + (i - 1);\n\t\t\t\t\t\tconst b = (radialSegments + 1) * j + (i - 1);\n\t\t\t\t\t\tconst c = (radialSegments + 1) * j + i;\n\t\t\t\t\t\tconst d = (radialSegments + 1) * (j - 1) + i; // faces\n\n\t\t\t\t\t\tindices.push(a, b, d);\n\t\t\t\t\t\tindices.push(b, c, d);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfunction generateUVs() {\n\t\t\t\tfor (let i = 0; i <= tubularSegments; i++) {\n\t\t\t\t\tfor (let j = 0; j <= radialSegments; j++) {\n\t\t\t\t\t\tuv.x = i / tubularSegments;\n\t\t\t\t\t\tuv.y = j / radialSegments;\n\t\t\t\t\t\tuvs.push(uv.x, uv.y);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.path = this.parameters.path.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tclass WireframeGeometry extends BufferGeometry {\n\t\tconstructor(geometry) {\n\t\t\tsuper();\n\t\t\tthis.type = 'WireframeGeometry';\n\n\t\t\tif (geometry.isGeometry === true) {\n\t\t\t\tconsole.error('THREE.WireframeGeometry no longer supports THREE.Geometry. Use THREE.BufferGeometry instead.');\n\t\t\t\treturn;\n\t\t\t} // buffer\n\n\n\t\t\tconst vertices = []; // helper variables\n\n\t\t\tconst edge = [0, 0],\n\t\t\t\t\t\tedges = {};\n\t\t\tconst vertex = new Vector3();\n\n\t\t\tif (geometry.index !== null) {\n\t\t\t\t// indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\t\t\t\tconst indices = geometry.index;\n\t\t\t\tlet groups = geometry.groups;\n\n\t\t\t\tif (groups.length === 0) {\n\t\t\t\t\tgroups = [{\n\t\t\t\t\t\tstart: 0,\n\t\t\t\t\t\tcount: indices.count,\n\t\t\t\t\t\tmaterialIndex: 0\n\t\t\t\t\t}];\n\t\t\t\t} // create a data structure that contains all eges without duplicates\n\n\n\t\t\t\tfor (let o = 0, ol = groups.length; o < ol; ++o) {\n\t\t\t\t\tconst group = groups[o];\n\t\t\t\t\tconst start = group.start;\n\t\t\t\t\tconst count = group.count;\n\n\t\t\t\t\tfor (let i = start, l = start + count; i < l; i += 3) {\n\t\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t\tconst edge1 = indices.getX(i + j);\n\t\t\t\t\t\t\tconst edge2 = indices.getX(i + (j + 1) % 3);\n\t\t\t\t\t\t\tedge[0] = Math.min(edge1, edge2); // sorting prevents duplicates\n\n\t\t\t\t\t\t\tedge[1] = Math.max(edge1, edge2);\n\t\t\t\t\t\t\tconst key = edge[0] + ',' + edge[1];\n\n\t\t\t\t\t\t\tif (edges[key] === undefined) {\n\t\t\t\t\t\t\t\tedges[key] = {\n\t\t\t\t\t\t\t\t\tindex1: edge[0],\n\t\t\t\t\t\t\t\t\tindex2: edge[1]\n\t\t\t\t\t\t\t\t};\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // generate vertices\n\n\n\t\t\t\tfor (const key in edges) {\n\t\t\t\t\tconst e = edges[key];\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index1);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\tvertex.fromBufferAttribute(position, e.index2);\n\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// non-indexed BufferGeometry\n\t\t\t\tconst position = geometry.attributes.position;\n\n\t\t\t\tfor (let i = 0, l = position.count / 3; i < l; i++) {\n\t\t\t\t\tfor (let j = 0; j < 3; j++) {\n\t\t\t\t\t\t// three edges per triangle, an edge is represented as (index1, index2)\n\t\t\t\t\t\t// e.g. the first triangle has the following edges: (0,1),(1,2),(2,0)\n\t\t\t\t\t\tconst index1 = 3 * i + j;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index1);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t\tconst index2 = 3 * i + (j + 1) % 3;\n\t\t\t\t\t\tvertex.fromBufferAttribute(position, index2);\n\t\t\t\t\t\tvertices.push(vertex.x, vertex.y, vertex.z);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // build geometry\n\n\n\t\t\tthis.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t}\n\n\t}\n\n\tvar Geometries = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tBoxGeometry: BoxGeometry,\n\t\tBoxBufferGeometry: BoxGeometry,\n\t\tCircleGeometry: CircleGeometry,\n\t\tCircleBufferGeometry: CircleGeometry,\n\t\tConeGeometry: ConeGeometry,\n\t\tConeBufferGeometry: ConeGeometry,\n\t\tCylinderGeometry: CylinderGeometry,\n\t\tCylinderBufferGeometry: CylinderGeometry,\n\t\tDodecahedronGeometry: DodecahedronGeometry,\n\t\tDodecahedronBufferGeometry: DodecahedronGeometry,\n\t\tEdgesGeometry: EdgesGeometry,\n\t\tExtrudeGeometry: ExtrudeGeometry,\n\t\tExtrudeBufferGeometry: ExtrudeGeometry,\n\t\tIcosahedronGeometry: IcosahedronGeometry,\n\t\tIcosahedronBufferGeometry: IcosahedronGeometry,\n\t\tLatheGeometry: LatheGeometry,\n\t\tLatheBufferGeometry: LatheGeometry,\n\t\tOctahedronGeometry: OctahedronGeometry,\n\t\tOctahedronBufferGeometry: OctahedronGeometry,\n\t\tParametricGeometry: ParametricGeometry,\n\t\tParametricBufferGeometry: ParametricGeometry,\n\t\tPlaneGeometry: PlaneGeometry,\n\t\tPlaneBufferGeometry: PlaneGeometry,\n\t\tPolyhedronGeometry: PolyhedronGeometry,\n\t\tPolyhedronBufferGeometry: PolyhedronGeometry,\n\t\tRingGeometry: RingGeometry,\n\t\tRingBufferGeometry: RingGeometry,\n\t\tShapeGeometry: ShapeGeometry,\n\t\tShapeBufferGeometry: ShapeGeometry,\n\t\tSphereGeometry: SphereGeometry,\n\t\tSphereBufferGeometry: SphereGeometry,\n\t\tTetrahedronGeometry: TetrahedronGeometry,\n\t\tTetrahedronBufferGeometry: TetrahedronGeometry,\n\t\tTextGeometry: TextGeometry,\n\t\tTextBufferGeometry: TextGeometry,\n\t\tTorusGeometry: TorusGeometry,\n\t\tTorusBufferGeometry: TorusGeometry,\n\t\tTorusKnotGeometry: TorusKnotGeometry,\n\t\tTorusKnotBufferGeometry: TorusKnotGeometry,\n\t\tTubeGeometry: TubeGeometry,\n\t\tTubeBufferGeometry: TubeGeometry,\n\t\tWireframeGeometry: WireframeGeometry\n\t});\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <THREE.Color>\n\t * }\n\t */\n\n\tclass ShadowMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ShadowMaterial';\n\t\t\tthis.color = new Color(0x000000);\n\t\t\tthis.transparent = true;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tShadowMaterial.prototype.isShadowMaterial = true;\n\n\tclass RawShaderMaterial extends ShaderMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper(parameters);\n\t\t\tthis.type = 'RawShaderMaterial';\n\t\t}\n\n\t}\n\n\tRawShaderMaterial.prototype.isRawShaderMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\troughness: <float>,\n\t *\tmetalness: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\troughnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmetalnessMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tenvMapIntensity: <float>\n\t *\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshStandardMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshStandardMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.roughness = 1.0;\n\t\t\tthis.metalness = 0.0;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.roughnessMap = null;\n\t\t\tthis.metalnessMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.envMapIntensity = 1.0;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.vertexTangents = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.roughness = source.roughness;\n\t\t\tthis.metalness = source.metalness;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.roughnessMap = source.roughnessMap;\n\t\t\tthis.metalnessMap = source.metalnessMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.envMapIntensity = source.envMapIntensity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\tthis.vertexTangents = source.vertexTangents;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshStandardMaterial.prototype.isMeshStandardMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tclearcoat: <float>,\n\t *\tclearcoatMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatRoughness: <float>,\n\t *\tclearcoatRoughnessMap: new THREE.Texture( <Image> ),\n\t *\tclearcoatNormalScale: <Vector2>,\n\t *\tclearcoatNormalMap: new THREE.Texture( <Image> ),\n\t *\n\t *\treflectivity: <float>,\n\t *\tior: <float>,\n\t *\n\t *\tsheen: <Color>,\n\t *\n\t *\ttransmission: <float>,\n\t *\ttransmissionMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tthickness: <float>,\n\t *\tthicknessMap: new THREE.Texture( <Image> ),\n\t *\tattenuationDistance: <float>,\n\t *\tattenuationColor: <Color>\n\t * }\n\t */\n\n\tclass MeshPhysicalMaterial extends MeshStandardMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshPhysicalMaterial';\n\t\t\tthis.clearcoat = 0.0;\n\t\t\tthis.clearcoatMap = null;\n\t\t\tthis.clearcoatRoughness = 0.0;\n\t\t\tthis.clearcoatRoughnessMap = null;\n\t\t\tthis.clearcoatNormalScale = new Vector2(1, 1);\n\t\t\tthis.clearcoatNormalMap = null;\n\t\t\tthis.reflectivity = 0.5; // maps to F0 = 0.04\n\n\t\t\tObject.defineProperty(this, 'ior', {\n\t\t\t\tget: function () {\n\t\t\t\t\treturn (1 + 0.4 * this.reflectivity) / (1 - 0.4 * this.reflectivity);\n\t\t\t\t},\n\t\t\t\tset: function (ior) {\n\t\t\t\t\tthis.reflectivity = clamp(2.5 * (ior - 1) / (ior + 1), 0, 1);\n\t\t\t\t}\n\t\t\t});\n\t\t\tthis.sheen = null; // null will disable sheen bsdf\n\n\t\t\tthis.transmission = 0.0;\n\t\t\tthis.transmissionMap = null;\n\t\t\tthis.thickness = 0.01;\n\t\t\tthis.thicknessMap = null;\n\t\t\tthis.attenuationDistance = 0.0;\n\t\t\tthis.attenuationColor = new Color(1, 1, 1);\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'STANDARD': '',\n\t\t\t\t'PHYSICAL': ''\n\t\t\t};\n\t\t\tthis.clearcoat = source.clearcoat;\n\t\t\tthis.clearcoatMap = source.clearcoatMap;\n\t\t\tthis.clearcoatRoughness = source.clearcoatRoughness;\n\t\t\tthis.clearcoatRoughnessMap = source.clearcoatRoughnessMap;\n\t\t\tthis.clearcoatNormalMap = source.clearcoatNormalMap;\n\t\t\tthis.clearcoatNormalScale.copy(source.clearcoatNormalScale);\n\t\t\tthis.reflectivity = source.reflectivity;\n\n\t\t\tif (source.sheen) {\n\t\t\t\tthis.sheen = (this.sheen || new Color()).copy(source.sheen);\n\t\t\t} else {\n\t\t\t\tthis.sheen = null;\n\t\t\t}\n\n\t\t\tthis.transmission = source.transmission;\n\t\t\tthis.transmissionMap = source.transmissionMap;\n\t\t\tthis.thickness = source.thickness;\n\t\t\tthis.thicknessMap = source.thicknessMap;\n\t\t\tthis.attenuationDistance = source.attenuationDistance;\n\t\t\tthis.attenuationColor.copy(source.attenuationColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhysicalMaterial.prototype.isMeshPhysicalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\tspecular: <hex>,\n\t *\tshininess: <float>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.MultiplyOperation,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshPhongMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshPhongMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.specular = new Color(0x111111);\n\t\t\tthis.shininess = 30;\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.specular.copy(source.specular);\n\t\t\tthis.shininess = source.shininess;\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshPhongMaterial.prototype.isMeshPhongMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\tgradientMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshToonMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'TOON': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshToonMaterial';\n\t\t\tthis.color = new Color(0xffffff);\n\t\t\tthis.map = null;\n\t\t\tthis.gradientMap = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.gradientMap = source.gradientMap;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshToonMaterial.prototype.isMeshToonMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\topacity: <float>,\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>,\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshNormalMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshNormalMaterial';\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.fog = false;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshNormalMaterial.prototype.isMeshNormalMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tlightMap: new THREE.Texture( <Image> ),\n\t *\tlightMapIntensity: <float>\n\t *\n\t *\taoMap: new THREE.Texture( <Image> ),\n\t *\taoMapIntensity: <float>\n\t *\n\t *\temissive: <hex>,\n\t *\temissiveIntensity: <float>\n\t *\temissiveMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tspecularMap: new THREE.Texture( <Image> ),\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tenvMap: new THREE.CubeTexture( [posx, negx, posy, negy, posz, negz] ),\n\t *\tcombine: THREE.Multiply,\n\t *\treflectivity: <float>,\n\t *\trefractionRatio: <float>,\n\t *\n\t *\twireframe: <boolean>,\n\t *\twireframeLinewidth: <float>,\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t * }\n\t */\n\n\tclass MeshLambertMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'MeshLambertMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.map = null;\n\t\t\tthis.lightMap = null;\n\t\t\tthis.lightMapIntensity = 1.0;\n\t\t\tthis.aoMap = null;\n\t\t\tthis.aoMapIntensity = 1.0;\n\t\t\tthis.emissive = new Color(0x000000);\n\t\t\tthis.emissiveIntensity = 1.0;\n\t\t\tthis.emissiveMap = null;\n\t\t\tthis.specularMap = null;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.envMap = null;\n\t\t\tthis.combine = MultiplyOperation;\n\t\t\tthis.reflectivity = 1;\n\t\t\tthis.refractionRatio = 0.98;\n\t\t\tthis.wireframe = false;\n\t\t\tthis.wireframeLinewidth = 1;\n\t\t\tthis.wireframeLinecap = 'round';\n\t\t\tthis.wireframeLinejoin = 'round';\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.map = source.map;\n\t\t\tthis.lightMap = source.lightMap;\n\t\t\tthis.lightMapIntensity = source.lightMapIntensity;\n\t\t\tthis.aoMap = source.aoMap;\n\t\t\tthis.aoMapIntensity = source.aoMapIntensity;\n\t\t\tthis.emissive.copy(source.emissive);\n\t\t\tthis.emissiveMap = source.emissiveMap;\n\t\t\tthis.emissiveIntensity = source.emissiveIntensity;\n\t\t\tthis.specularMap = source.specularMap;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.envMap = source.envMap;\n\t\t\tthis.combine = source.combine;\n\t\t\tthis.reflectivity = source.reflectivity;\n\t\t\tthis.refractionRatio = source.refractionRatio;\n\t\t\tthis.wireframe = source.wireframe;\n\t\t\tthis.wireframeLinewidth = source.wireframeLinewidth;\n\t\t\tthis.wireframeLinecap = source.wireframeLinecap;\n\t\t\tthis.wireframeLinejoin = source.wireframeLinejoin;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshLambertMaterial.prototype.isMeshLambertMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tmatcap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmap: new THREE.Texture( <Image> ),\n\t *\n\t *\tbumpMap: new THREE.Texture( <Image> ),\n\t *\tbumpScale: <float>,\n\t *\n\t *\tnormalMap: new THREE.Texture( <Image> ),\n\t *\tnormalMapType: THREE.TangentSpaceNormalMap,\n\t *\tnormalScale: <Vector2>,\n\t *\n\t *\tdisplacementMap: new THREE.Texture( <Image> ),\n\t *\tdisplacementScale: <float>,\n\t *\tdisplacementBias: <float>,\n\t *\n\t *\talphaMap: new THREE.Texture( <Image> ),\n\t *\n\t *\tmorphTargets: <bool>,\n\t *\tmorphNormals: <bool>\n\t *\n\t *\tflatShading: <bool>\n\t * }\n\t */\n\n\tclass MeshMatcapMaterial extends Material {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.type = 'MeshMatcapMaterial';\n\t\t\tthis.color = new Color(0xffffff); // diffuse\n\n\t\t\tthis.matcap = null;\n\t\t\tthis.map = null;\n\t\t\tthis.bumpMap = null;\n\t\t\tthis.bumpScale = 1;\n\t\t\tthis.normalMap = null;\n\t\t\tthis.normalMapType = TangentSpaceNormalMap;\n\t\t\tthis.normalScale = new Vector2(1, 1);\n\t\t\tthis.displacementMap = null;\n\t\t\tthis.displacementScale = 1;\n\t\t\tthis.displacementBias = 0;\n\t\t\tthis.alphaMap = null;\n\t\t\tthis.morphTargets = false;\n\t\t\tthis.morphNormals = false;\n\t\t\tthis.flatShading = false;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.defines = {\n\t\t\t\t'MATCAP': ''\n\t\t\t};\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.matcap = source.matcap;\n\t\t\tthis.map = source.map;\n\t\t\tthis.bumpMap = source.bumpMap;\n\t\t\tthis.bumpScale = source.bumpScale;\n\t\t\tthis.normalMap = source.normalMap;\n\t\t\tthis.normalMapType = source.normalMapType;\n\t\t\tthis.normalScale.copy(source.normalScale);\n\t\t\tthis.displacementMap = source.displacementMap;\n\t\t\tthis.displacementScale = source.displacementScale;\n\t\t\tthis.displacementBias = source.displacementBias;\n\t\t\tthis.alphaMap = source.alphaMap;\n\t\t\tthis.morphTargets = source.morphTargets;\n\t\t\tthis.morphNormals = source.morphNormals;\n\t\t\tthis.flatShading = source.flatShading;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tMeshMatcapMaterial.prototype.isMeshMatcapMaterial = true;\n\n\t/**\n\t * parameters = {\n\t *\tcolor: <hex>,\n\t *\topacity: <float>,\n\t *\n\t *\tlinewidth: <float>,\n\t *\n\t *\tscale: <float>,\n\t *\tdashSize: <float>,\n\t *\tgapSize: <float>\n\t * }\n\t */\n\n\tclass LineDashedMaterial extends LineBasicMaterial {\n\t\tconstructor(parameters) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineDashedMaterial';\n\t\t\tthis.scale = 1;\n\t\t\tthis.dashSize = 3;\n\t\t\tthis.gapSize = 1;\n\t\t\tthis.setValues(parameters);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.scale = source.scale;\n\t\t\tthis.dashSize = source.dashSize;\n\t\t\tthis.gapSize = source.gapSize;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineDashedMaterial.prototype.isLineDashedMaterial = true;\n\n\tvar Materials = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tShadowMaterial: ShadowMaterial,\n\t\tSpriteMaterial: SpriteMaterial,\n\t\tRawShaderMaterial: RawShaderMaterial,\n\t\tShaderMaterial: ShaderMaterial,\n\t\tPointsMaterial: PointsMaterial,\n\t\tMeshPhysicalMaterial: MeshPhysicalMaterial,\n\t\tMeshStandardMaterial: MeshStandardMaterial,\n\t\tMeshPhongMaterial: MeshPhongMaterial,\n\t\tMeshToonMaterial: MeshToonMaterial,\n\t\tMeshNormalMaterial: MeshNormalMaterial,\n\t\tMeshLambertMaterial: MeshLambertMaterial,\n\t\tMeshDepthMaterial: MeshDepthMaterial,\n\t\tMeshDistanceMaterial: MeshDistanceMaterial,\n\t\tMeshBasicMaterial: MeshBasicMaterial,\n\t\tMeshMatcapMaterial: MeshMatcapMaterial,\n\t\tLineDashedMaterial: LineDashedMaterial,\n\t\tLineBasicMaterial: LineBasicMaterial,\n\t\tMaterial: Material\n\t});\n\n\tconst AnimationUtils = {\n\t\t// same as Array.prototype.slice, but also works on typed arrays\n\t\tarraySlice: function (array, from, to) {\n\t\t\tif (AnimationUtils.isTypedArray(array)) {\n\t\t\t\t// in ios9 array.subarray(from, undefined) will return empty array\n\t\t\t\t// but array.subarray(from) or array.subarray(from, len) is correct\n\t\t\t\treturn new array.constructor(array.subarray(from, to !== undefined ? to : array.length));\n\t\t\t}\n\n\t\t\treturn array.slice(from, to);\n\t\t},\n\t\t// converts an array to a specific type\n\t\tconvertArray: function (array, type, forceClone) {\n\t\t\tif (!array || // let 'undefined' and 'null' pass\n\t\t\t!forceClone && array.constructor === type) return array;\n\n\t\t\tif (typeof type.BYTES_PER_ELEMENT === 'number') {\n\t\t\t\treturn new type(array); // create typed array\n\t\t\t}\n\n\t\t\treturn Array.prototype.slice.call(array); // create Array\n\t\t},\n\t\tisTypedArray: function (object) {\n\t\t\treturn ArrayBuffer.isView(object) && !(object instanceof DataView);\n\t\t},\n\t\t// returns an array by which times and values can be sorted\n\t\tgetKeyframeOrder: function (times) {\n\t\t\tfunction compareTime(i, j) {\n\t\t\t\treturn times[i] - times[j];\n\t\t\t}\n\n\t\t\tconst n = times.length;\n\t\t\tconst result = new Array(n);\n\n\t\t\tfor (let i = 0; i !== n; ++i) result[i] = i;\n\n\t\t\tresult.sort(compareTime);\n\t\t\treturn result;\n\t\t},\n\t\t// uses the array previously returned by 'getKeyframeOrder' to sort data\n\t\tsortedArray: function (values, stride, order) {\n\t\t\tconst nValues = values.length;\n\t\t\tconst result = new values.constructor(nValues);\n\n\t\t\tfor (let i = 0, dstOffset = 0; dstOffset !== nValues; ++i) {\n\t\t\t\tconst srcOffset = order[i] * stride;\n\n\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\tresult[dstOffset++] = values[srcOffset + j];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn result;\n\t\t},\n\t\t// function for parsing AOS keyframe formats\n\t\tflattenJSON: function (jsonKeys, times, values, valuePropertyName) {\n\t\t\tlet i = 1,\n\t\t\t\t\tkey = jsonKeys[0];\n\n\t\t\twhile (key !== undefined && key[valuePropertyName] === undefined) {\n\t\t\t\tkey = jsonKeys[i++];\n\t\t\t}\n\n\t\t\tif (key === undefined) return; // no data\n\n\t\t\tlet value = key[valuePropertyName];\n\t\t\tif (value === undefined) return; // no data\n\n\t\t\tif (Array.isArray(value)) {\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push.apply(values, value); // push all elements\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else if (value.toArray !== undefined) {\n\t\t\t\t// ...assume THREE.Math-ish\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalue.toArray(values, values.length);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t} else {\n\t\t\t\t// otherwise push as-is\n\t\t\t\tdo {\n\t\t\t\t\tvalue = key[valuePropertyName];\n\n\t\t\t\t\tif (value !== undefined) {\n\t\t\t\t\t\ttimes.push(key.time);\n\t\t\t\t\t\tvalues.push(value);\n\t\t\t\t\t}\n\n\t\t\t\t\tkey = jsonKeys[i++];\n\t\t\t\t} while (key !== undefined);\n\t\t\t}\n\t\t},\n\t\tsubclip: function (sourceClip, name, startFrame, endFrame, fps = 30) {\n\t\t\tconst clip = sourceClip.clone();\n\t\t\tclip.name = name;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tconst track = clip.tracks[i];\n\t\t\t\tconst valueSize = track.getValueSize();\n\t\t\t\tconst times = [];\n\t\t\t\tconst values = [];\n\n\t\t\t\tfor (let j = 0; j < track.times.length; ++j) {\n\t\t\t\t\tconst frame = track.times[j] * fps;\n\t\t\t\t\tif (frame < startFrame || frame >= endFrame) continue;\n\t\t\t\t\ttimes.push(track.times[j]);\n\n\t\t\t\t\tfor (let k = 0; k < valueSize; ++k) {\n\t\t\t\t\t\tvalues.push(track.values[j * valueSize + k]);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (times.length === 0) continue;\n\t\t\t\ttrack.times = AnimationUtils.convertArray(times, track.times.constructor);\n\t\t\t\ttrack.values = AnimationUtils.convertArray(values, track.values.constructor);\n\t\t\t\ttracks.push(track);\n\t\t\t}\n\n\t\t\tclip.tracks = tracks; // find minimum .times value across all tracks in the trimmed clip\n\n\t\t\tlet minStartTime = Infinity;\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tif (minStartTime > clip.tracks[i].times[0]) {\n\t\t\t\t\tminStartTime = clip.tracks[i].times[0];\n\t\t\t\t}\n\t\t\t} // shift all tracks such that clip begins at t=0\n\n\n\t\t\tfor (let i = 0; i < clip.tracks.length; ++i) {\n\t\t\t\tclip.tracks[i].shift(-1 * minStartTime);\n\t\t\t}\n\n\t\t\tclip.resetDuration();\n\t\t\treturn clip;\n\t\t},\n\t\tmakeClipAdditive: function (targetClip, referenceFrame = 0, referenceClip = targetClip, fps = 30) {\n\t\t\tif (fps <= 0) fps = 30;\n\t\t\tconst numTracks = referenceClip.tracks.length;\n\t\t\tconst referenceTime = referenceFrame / fps; // Make each track's values relative to the values at the reference frame\n\n\t\t\tfor (let i = 0; i < numTracks; ++i) {\n\t\t\t\tconst referenceTrack = referenceClip.tracks[i];\n\t\t\t\tconst referenceTrackType = referenceTrack.ValueTypeName; // Skip this track if it's non-numeric\n\n\t\t\t\tif (referenceTrackType === 'bool' || referenceTrackType === 'string') continue; // Find the track in the target clip whose name and type matches the reference track\n\n\t\t\t\tconst targetTrack = targetClip.tracks.find(function (track) {\n\t\t\t\t\treturn track.name === referenceTrack.name && track.ValueTypeName === referenceTrackType;\n\t\t\t\t});\n\t\t\t\tif (targetTrack === undefined) continue;\n\t\t\t\tlet referenceOffset = 0;\n\t\t\t\tconst referenceValueSize = referenceTrack.getValueSize();\n\n\t\t\t\tif (referenceTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\treferenceOffset = referenceValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tlet targetOffset = 0;\n\t\t\t\tconst targetValueSize = targetTrack.getValueSize();\n\n\t\t\t\tif (targetTrack.createInterpolant.isInterpolantFactoryMethodGLTFCubicSpline) {\n\t\t\t\t\ttargetOffset = targetValueSize / 3;\n\t\t\t\t}\n\n\t\t\t\tconst lastIndex = referenceTrack.times.length - 1;\n\t\t\t\tlet referenceValue; // Find the value to subtract out of the track\n\n\t\t\t\tif (referenceTime <= referenceTrack.times[0]) {\n\t\t\t\t\t// Reference frame is earlier than the first keyframe, so just use the first keyframe\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else if (referenceTime >= referenceTrack.times[lastIndex]) {\n\t\t\t\t\t// Reference frame is after the last keyframe, so just use the last keyframe\n\t\t\t\t\tconst startIndex = lastIndex * referenceValueSize + referenceOffset;\n\t\t\t\t\tconst endIndex = startIndex + referenceValueSize - referenceOffset;\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(referenceTrack.values, startIndex, endIndex);\n\t\t\t\t} else {\n\t\t\t\t\t// Interpolate to the reference value\n\t\t\t\t\tconst interpolant = referenceTrack.createInterpolant();\n\t\t\t\t\tconst startIndex = referenceOffset;\n\t\t\t\t\tconst endIndex = referenceValueSize - referenceOffset;\n\t\t\t\t\tinterpolant.evaluate(referenceTime);\n\t\t\t\t\treferenceValue = AnimationUtils.arraySlice(interpolant.resultBuffer, startIndex, endIndex);\n\t\t\t\t} // Conjugate the quaternion\n\n\n\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\tconst referenceQuat = new Quaternion().fromArray(referenceValue).normalize().conjugate();\n\t\t\t\t\treferenceQuat.toArray(referenceValue);\n\t\t\t\t} // Subtract the reference value from all of the track values\n\n\n\t\t\t\tconst numTimes = targetTrack.times.length;\n\n\t\t\t\tfor (let j = 0; j < numTimes; ++j) {\n\t\t\t\t\tconst valueStart = j * targetValueSize + targetOffset;\n\n\t\t\t\t\tif (referenceTrackType === 'quaternion') {\n\t\t\t\t\t\t// Multiply the conjugate for quaternion track types\n\t\t\t\t\t\tQuaternion.multiplyQuaternionsFlat(targetTrack.values, valueStart, referenceValue, 0, targetTrack.values, valueStart);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconst valueEnd = targetValueSize - targetOffset * 2; // Subtract each value for all other numeric track types\n\n\t\t\t\t\t\tfor (let k = 0; k < valueEnd; ++k) {\n\t\t\t\t\t\t\ttargetTrack.values[valueStart + k] -= referenceValue[k];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ttargetClip.blendMode = AdditiveAnimationBlendMode;\n\t\t\treturn targetClip;\n\t\t}\n\t};\n\n\t/**\n\t * Abstract base class of interpolants over parametric samples.\n\t *\n\t * The parameter domain is one dimensional, typically the time or a path\n\t * along a curve defined by the data.\n\t *\n\t * The sample values can have any dimensionality and derived classes may\n\t * apply special interpretations to the data.\n\t *\n\t * This class provides the interval seek in a Template Method, deferring\n\t * the actual interpolation to derived classes.\n\t *\n\t * Time complexity is O(1) for linear access crossing at most two points\n\t * and O(log N) for random access, where N is the number of positions.\n\t *\n\t * References:\n\t *\n\t * \t\thttp://www.oodesign.com/template-method-pattern.html\n\t *\n\t */\n\tclass Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tthis.parameterPositions = parameterPositions;\n\t\t\tthis._cachedIndex = 0;\n\t\t\tthis.resultBuffer = resultBuffer !== undefined ? resultBuffer : new sampleValues.constructor(sampleSize);\n\t\t\tthis.sampleValues = sampleValues;\n\t\t\tthis.valueSize = sampleSize;\n\t\t\tthis.settings = null;\n\t\t\tthis.DefaultSettings_ = {};\n\t\t}\n\n\t\tevaluate(t) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet i1 = this._cachedIndex,\n\t\t\t\t\tt1 = pp[i1],\n\t\t\t\t\tt0 = pp[i1 - 1];\n\n\t\t\tvalidate_interval: {\n\t\t\t\tseek: {\n\t\t\t\t\tlet right;\n\n\t\t\t\t\tlinear_scan: {\n\t\t\t\t\t\t//- See http://jsperf.com/comparison-to-undefined/3\n\t\t\t\t\t\t//- slower code:\n\t\t\t\t\t\t//-\n\t\t\t\t\t\t//- \t\t\t\tif ( t >= t1 || t1 === undefined ) {\n\t\t\t\t\t\tforward_scan: if (!(t < t1)) {\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 + 2;;) {\n\t\t\t\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\t\t\t\tif (t < t0) break forward_scan; // after end\n\n\t\t\t\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t, t0);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt0 = t1;\n\t\t\t\t\t\t\t\tt1 = pp[++i1];\n\n\t\t\t\t\t\t\t\tif (t < t1) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the right side of the index\n\n\n\t\t\t\t\t\t\tright = pp.length;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} //- slower code:\n\t\t\t\t\t\t//-\t\t\t\t\tif ( t < t0 || t0 === undefined ) {\n\n\n\t\t\t\t\t\tif (!(t >= t0)) {\n\t\t\t\t\t\t\t// looping?\n\t\t\t\t\t\t\tconst t1global = pp[1];\n\n\t\t\t\t\t\t\tif (t < t1global) {\n\t\t\t\t\t\t\t\ti1 = 2; // + 1, using the scan for the details\n\n\t\t\t\t\t\t\t\tt0 = t1global;\n\t\t\t\t\t\t\t} // linear reverse scan\n\n\n\t\t\t\t\t\t\tfor (let giveUpAt = i1 - 2;;) {\n\t\t\t\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\t\t\t\t// before start\n\t\t\t\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\t\tif (i1 === giveUpAt) break; // this loop\n\n\t\t\t\t\t\t\t\tt1 = t0;\n\t\t\t\t\t\t\t\tt0 = pp[--i1 - 1];\n\n\t\t\t\t\t\t\t\tif (t >= t0) {\n\t\t\t\t\t\t\t\t\t// we have arrived at the sought interval\n\t\t\t\t\t\t\t\t\tbreak seek;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t} // prepare binary search on the left side of the index\n\n\n\t\t\t\t\t\t\tright = i1;\n\t\t\t\t\t\t\ti1 = 0;\n\t\t\t\t\t\t\tbreak linear_scan;\n\t\t\t\t\t\t} // the interval is valid\n\n\n\t\t\t\t\t\tbreak validate_interval;\n\t\t\t\t\t} // linear scan\n\t\t\t\t\t// binary search\n\n\n\t\t\t\t\twhile (i1 < right) {\n\t\t\t\t\t\tconst mid = i1 + right >>> 1;\n\n\t\t\t\t\t\tif (t < pp[mid]) {\n\t\t\t\t\t\t\tright = mid;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ti1 = mid + 1;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tt1 = pp[i1];\n\t\t\t\t\tt0 = pp[i1 - 1]; // check boundary cases, again\n\n\t\t\t\t\tif (t0 === undefined) {\n\t\t\t\t\t\tthis._cachedIndex = 0;\n\t\t\t\t\t\treturn this.beforeStart_(0, t, t1);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (t1 === undefined) {\n\t\t\t\t\t\ti1 = pp.length;\n\t\t\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\t\t\treturn this.afterEnd_(i1 - 1, t0, t);\n\t\t\t\t\t}\n\t\t\t\t} // seek\n\n\n\t\t\t\tthis._cachedIndex = i1;\n\t\t\t\tthis.intervalChanged_(i1, t0, t1);\n\t\t\t} // validate_interval\n\n\n\t\t\treturn this.interpolate_(i1, t0, t, t1);\n\t\t}\n\n\t\tgetSettings_() {\n\t\t\treturn this.settings || this.DefaultSettings_;\n\t\t}\n\n\t\tcopySampleValue_(index) {\n\t\t\t// copies a sample value to the result buffer\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = index * stride;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t} // Template methods for derived classes:\n\n\n\t\tinterpolate_()\n\t\t/* i1, t0, t, t1 */\n\t\t{\n\t\t\tthrow new Error('call to abstract method'); // implementations shall return this.resultBuffer\n\t\t}\n\n\t\tintervalChanged_()\n\t\t/* i1, t0, t1 */\n\t\t{// empty\n\t\t}\n\n\t} // ALIAS DEFINITIONS\n\n\n\tInterpolant.prototype.beforeStart_ = Interpolant.prototype.copySampleValue_;\n\tInterpolant.prototype.afterEnd_ = Interpolant.prototype.copySampleValue_;\n\n\t/**\n\t * Fast and simple cubic spline interpolant.\n\t *\n\t * It was derived from a Hermitian construction setting the first derivative\n\t * at each sample position to the linear slope between neighboring positions\n\t * over their parameter interval.\n\t */\n\n\tclass CubicInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t\tthis._weightPrev = -0;\n\t\t\tthis._offsetPrev = -0;\n\t\t\tthis._weightNext = -0;\n\t\t\tthis._offsetNext = -0;\n\t\t\tthis.DefaultSettings_ = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\t\t}\n\n\t\tintervalChanged_(i1, t0, t1) {\n\t\t\tconst pp = this.parameterPositions;\n\t\t\tlet iPrev = i1 - 2,\n\t\t\t\t\tiNext = i1 + 1,\n\t\t\t\t\ttPrev = pp[iPrev],\n\t\t\t\t\ttNext = pp[iNext];\n\n\t\t\tif (tPrev === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingStart) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(t0) = 0\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = 2 * t0 - t1;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiPrev = pp.length - 2;\n\t\t\t\t\t\ttPrev = t0 + pp[iPrev] - pp[iPrev + 1];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(t0) = 0 a.k.a. Natural Spline\n\t\t\t\t\t\tiPrev = i1;\n\t\t\t\t\t\ttPrev = t1;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tNext === undefined) {\n\t\t\t\tswitch (this.getSettings_().endingEnd) {\n\t\t\t\t\tcase ZeroSlopeEnding:\n\t\t\t\t\t\t// f'(tN) = 0\n\t\t\t\t\t\tiNext = i1;\n\t\t\t\t\t\ttNext = 2 * t1 - t0;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase WrapAroundEnding:\n\t\t\t\t\t\t// use the other end of the curve\n\t\t\t\t\t\tiNext = 1;\n\t\t\t\t\t\ttNext = t1 + pp[1] - pp[0];\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\t// ZeroCurvatureEnding\n\t\t\t\t\t\t// f''(tN) = 0, a.k.a. Natural Spline\n\t\t\t\t\t\tiNext = i1 - 1;\n\t\t\t\t\t\ttNext = t0;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst halfDt = (t1 - t0) * 0.5,\n\t\t\t\t\t\tstride = this.valueSize;\n\t\t\tthis._weightPrev = halfDt / (t0 - tPrev);\n\t\t\tthis._weightNext = halfDt / (tNext - t1);\n\t\t\tthis._offsetPrev = iPrev * stride;\n\t\t\tthis._offsetNext = iNext * stride;\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\to1 = i1 * stride,\n\t\t\t\t\t\to0 = o1 - stride,\n\t\t\t\t\t\toP = this._offsetPrev,\n\t\t\t\t\t\toN = this._offsetNext,\n\t\t\t\t\t\twP = this._weightPrev,\n\t\t\t\t\t\twN = this._weightNext,\n\t\t\t\t\t\tp = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tpp = p * p,\n\t\t\t\t\t\tppp = pp * p; // evaluate polynomials\n\n\t\t\tconst sP = -wP * ppp + 2 * wP * pp - wP * p;\n\t\t\tconst s0 = (1 + wP) * ppp + (-1.5 - 2 * wP) * pp + (-0.5 + wP) * p + 1;\n\t\t\tconst s1 = (-1 - wN) * ppp + (1.5 + wN) * pp + 0.5 * p;\n\t\t\tconst sN = wN * ppp - wN * pp; // combine data linearly\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = sP * values[oP + i] + s0 * values[o0 + i] + s1 * values[o1 + i] + sN * values[oN + i];\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\tclass LinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset1 = i1 * stride,\n\t\t\t\t\t\toffset0 = offset1 - stride,\n\t\t\t\t\t\tweight1 = (t - t0) / (t1 - t0),\n\t\t\t\t\t\tweight0 = 1 - weight1;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tresult[i] = values[offset0 + i] * weight0 + values[offset1 + i] * weight1;\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t *\n\t * Interpolant that evaluates to the sample value at the position preceeding\n\t * the parameter.\n\t */\n\n\tclass DiscreteInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1\n\t\t/*, t0, t, t1 */\n\t\t) {\n\t\t\treturn this.copySampleValue_(i1 - 1);\n\t\t}\n\n\t}\n\n\tclass KeyframeTrack {\n\t\tconstructor(name, times, values, interpolation) {\n\t\t\tif (name === undefined) throw new Error('THREE.KeyframeTrack: track name is undefined');\n\t\t\tif (times === undefined || times.length === 0) throw new Error('THREE.KeyframeTrack: no keyframes in track named ' + name);\n\t\t\tthis.name = name;\n\t\t\tthis.times = AnimationUtils.convertArray(times, this.TimeBufferType);\n\t\t\tthis.values = AnimationUtils.convertArray(values, this.ValueBufferType);\n\t\t\tthis.setInterpolation(interpolation || this.DefaultInterpolation);\n\t\t} // Serialization (in static context, because of constructor invocation\n\t\t// and automatic invocation of .toJSON):\n\n\n\t\tstatic toJSON(track) {\n\t\t\tconst trackType = track.constructor;\n\t\t\tlet json; // derived classes can define a static toJSON method\n\n\t\t\tif (trackType.toJSON !== this.toJSON) {\n\t\t\t\tjson = trackType.toJSON(track);\n\t\t\t} else {\n\t\t\t\t// by default, we assume the data can be serialized as-is\n\t\t\t\tjson = {\n\t\t\t\t\t'name': track.name,\n\t\t\t\t\t'times': AnimationUtils.convertArray(track.times, Array),\n\t\t\t\t\t'values': AnimationUtils.convertArray(track.values, Array)\n\t\t\t\t};\n\t\t\t\tconst interpolation = track.getInterpolation();\n\n\t\t\t\tif (interpolation !== track.DefaultInterpolation) {\n\t\t\t\t\tjson.interpolation = interpolation;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tjson.type = track.ValueTypeName; // mandatory\n\n\t\t\treturn json;\n\t\t}\n\n\t\tInterpolantFactoryMethodDiscrete(result) {\n\t\t\treturn new DiscreteInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new LinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tInterpolantFactoryMethodSmooth(result) {\n\t\t\treturn new CubicInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t\tsetInterpolation(interpolation) {\n\t\t\tlet factoryMethod;\n\n\t\t\tswitch (interpolation) {\n\t\t\t\tcase InterpolateDiscrete:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodDiscrete;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateLinear:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodLinear;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase InterpolateSmooth:\n\t\t\t\t\tfactoryMethod = this.InterpolantFactoryMethodSmooth;\n\t\t\t\t\tbreak;\n\t\t\t}\n\n\t\t\tif (factoryMethod === undefined) {\n\t\t\t\tconst message = 'unsupported interpolation for ' + this.ValueTypeName + ' keyframe track named ' + this.name;\n\n\t\t\t\tif (this.createInterpolant === undefined) {\n\t\t\t\t\t// fall back to default, unless the default itself is messed up\n\t\t\t\t\tif (interpolation !== this.DefaultInterpolation) {\n\t\t\t\t\t\tthis.setInterpolation(this.DefaultInterpolation);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthrow new Error(message); // fatal, in this case\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tconsole.warn('THREE.KeyframeTrack:', message);\n\t\t\t\treturn this;\n\t\t\t}\n\n\t\t\tthis.createInterpolant = factoryMethod;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetInterpolation() {\n\t\t\tswitch (this.createInterpolant) {\n\t\t\t\tcase this.InterpolantFactoryMethodDiscrete:\n\t\t\t\t\treturn InterpolateDiscrete;\n\n\t\t\t\tcase this.InterpolantFactoryMethodLinear:\n\t\t\t\t\treturn InterpolateLinear;\n\n\t\t\t\tcase this.InterpolantFactoryMethodSmooth:\n\t\t\t\t\treturn InterpolateSmooth;\n\t\t\t}\n\t\t}\n\n\t\tgetValueSize() {\n\t\t\treturn this.values.length / this.times.length;\n\t\t} // move all keyframes either forwards or backwards in time\n\n\n\t\tshift(timeOffset) {\n\t\t\tif (timeOffset !== 0.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] += timeOffset;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // scale all keyframe times by a factor (useful for frame <-> seconds conversions)\n\n\n\t\tscale(timeScale) {\n\t\t\tif (timeScale !== 1.0) {\n\t\t\t\tconst times = this.times;\n\n\t\t\t\tfor (let i = 0, n = times.length; i !== n; ++i) {\n\t\t\t\t\ttimes[i] *= timeScale;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // removes keyframes before and after animation without changing any values within the range [startTime, endTime].\n\t\t// IMPORTANT: We do not shift around keys to the start of the track time, because for interpolated keys this will change their values\n\n\n\t\ttrim(startTime, endTime) {\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tnKeys = times.length;\n\t\t\tlet from = 0,\n\t\t\t\t\tto = nKeys - 1;\n\n\t\t\twhile (from !== nKeys && times[from] < startTime) {\n\t\t\t\t++from;\n\t\t\t}\n\n\t\t\twhile (to !== -1 && times[to] > endTime) {\n\t\t\t\t--to;\n\t\t\t}\n\n\t\t\t++to; // inclusive -> exclusive bound\n\n\t\t\tif (from !== 0 || to !== nKeys) {\n\t\t\t\t// empty tracks are forbidden, so keep at least one keyframe\n\t\t\t\tif (from >= to) {\n\t\t\t\t\tto = Math.max(to, 1);\n\t\t\t\t\tfrom = to - 1;\n\t\t\t\t}\n\n\t\t\t\tconst stride = this.getValueSize();\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, from, to);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(this.values, from * stride, to * stride);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // ensure we do not get a GarbageInGarbageOut situation, make sure tracks are at least minimally viable\n\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\t\t\tconst valueSize = this.getValueSize();\n\n\t\t\tif (valueSize - Math.floor(valueSize) !== 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Invalid value size in track.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tconst times = this.times,\n\t\t\t\t\t\tvalues = this.values,\n\t\t\t\t\t\tnKeys = times.length;\n\n\t\t\tif (nKeys === 0) {\n\t\t\t\tconsole.error('THREE.KeyframeTrack: Track is empty.', this);\n\t\t\t\tvalid = false;\n\t\t\t}\n\n\t\t\tlet prevTime = null;\n\n\t\t\tfor (let i = 0; i !== nKeys; i++) {\n\t\t\t\tconst currTime = times[i];\n\n\t\t\t\tif (typeof currTime === 'number' && isNaN(currTime)) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Time is not a valid number.', this, i, currTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tif (prevTime !== null && prevTime > currTime) {\n\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Out of order keys.', this, i, currTime, prevTime);\n\t\t\t\t\tvalid = false;\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\n\t\t\t\tprevTime = currTime;\n\t\t\t}\n\n\t\t\tif (values !== undefined) {\n\t\t\t\tif (AnimationUtils.isTypedArray(values)) {\n\t\t\t\t\tfor (let i = 0, n = values.length; i !== n; ++i) {\n\t\t\t\t\t\tconst value = values[i];\n\n\t\t\t\t\t\tif (isNaN(value)) {\n\t\t\t\t\t\t\tconsole.error('THREE.KeyframeTrack: Value is not a valid number.', this, i, value);\n\t\t\t\t\t\t\tvalid = false;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t} // removes equivalent sequential keys as common in morph target sequences\n\t\t// (0,0,0,0,1,1,1,0,0,0,0,0,0,0) --> (0,0,1,1,0,0)\n\n\n\t\toptimize() {\n\t\t\t// times or values may be shared with other tracks, so overwriting is unsafe\n\t\t\tconst times = AnimationUtils.arraySlice(this.times),\n\t\t\t\t\t\tvalues = AnimationUtils.arraySlice(this.values),\n\t\t\t\t\t\tstride = this.getValueSize(),\n\t\t\t\t\t\tsmoothInterpolation = this.getInterpolation() === InterpolateSmooth,\n\t\t\t\t\t\tlastIndex = times.length - 1;\n\t\t\tlet writeIndex = 1;\n\n\t\t\tfor (let i = 1; i < lastIndex; ++i) {\n\t\t\t\tlet keep = false;\n\t\t\t\tconst time = times[i];\n\t\t\t\tconst timeNext = times[i + 1]; // remove adjacent keyframes scheduled at the same time\n\n\t\t\t\tif (time !== timeNext && (i !== 1 || time !== times[0])) {\n\t\t\t\t\tif (!smoothInterpolation) {\n\t\t\t\t\t\t// remove unnecessary keyframes same as their neighbors\n\t\t\t\t\t\tconst offset = i * stride,\n\t\t\t\t\t\t\t\t\toffsetP = offset - stride,\n\t\t\t\t\t\t\t\t\toffsetN = offset + stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tconst value = values[offset + j];\n\n\t\t\t\t\t\t\tif (value !== values[offsetP + j] || value !== values[offsetN + j]) {\n\t\t\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tkeep = true;\n\t\t\t\t\t}\n\t\t\t\t} // in-place compaction\n\n\n\t\t\t\tif (keep) {\n\t\t\t\t\tif (i !== writeIndex) {\n\t\t\t\t\t\ttimes[writeIndex] = times[i];\n\t\t\t\t\t\tconst readOffset = i * stride,\n\t\t\t\t\t\t\t\t\twriteOffset = writeIndex * stride;\n\n\t\t\t\t\t\tfor (let j = 0; j !== stride; ++j) {\n\t\t\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\t++writeIndex;\n\t\t\t\t}\n\t\t\t} // flush last keyframe (compaction looks ahead)\n\n\n\t\t\tif (lastIndex > 0) {\n\t\t\t\ttimes[writeIndex] = times[lastIndex];\n\n\t\t\t\tfor (let readOffset = lastIndex * stride, writeOffset = writeIndex * stride, j = 0; j !== stride; ++j) {\n\t\t\t\t\tvalues[writeOffset + j] = values[readOffset + j];\n\t\t\t\t}\n\n\t\t\t\t++writeIndex;\n\t\t\t}\n\n\t\t\tif (writeIndex !== times.length) {\n\t\t\t\tthis.times = AnimationUtils.arraySlice(times, 0, writeIndex);\n\t\t\t\tthis.values = AnimationUtils.arraySlice(values, 0, writeIndex * stride);\n\t\t\t} else {\n\t\t\t\tthis.times = times;\n\t\t\t\tthis.values = values;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst times = AnimationUtils.arraySlice(this.times, 0);\n\t\t\tconst values = AnimationUtils.arraySlice(this.values, 0);\n\t\t\tconst TypedKeyframeTrack = this.constructor;\n\t\t\tconst track = new TypedKeyframeTrack(this.name, times, values); // Interpolant argument to constructor is not saved, so copy the factory method directly.\n\n\t\t\ttrack.createInterpolant = this.createInterpolant;\n\t\t\treturn track;\n\t\t}\n\n\t}\n\n\tKeyframeTrack.prototype.TimeBufferType = Float32Array;\n\tKeyframeTrack.prototype.ValueBufferType = Float32Array;\n\tKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\n\t/**\n\t * A Track of Boolean keyframe values.\n\t */\n\n\tclass BooleanKeyframeTrack extends KeyframeTrack {}\n\n\tBooleanKeyframeTrack.prototype.ValueTypeName = 'bool';\n\tBooleanKeyframeTrack.prototype.ValueBufferType = Array;\n\tBooleanKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tBooleanKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined; // Note: Actually this track could have a optimized / compressed\n\n\t/**\n\t * A Track of keyframe values that represent color.\n\t */\n\n\tclass ColorKeyframeTrack extends KeyframeTrack {}\n\n\tColorKeyframeTrack.prototype.ValueTypeName = 'color'; // ValueBufferType is inherited\n\n\t/**\n\t * A Track of numeric keyframe values.\n\t */\n\n\tclass NumberKeyframeTrack extends KeyframeTrack {}\n\n\tNumberKeyframeTrack.prototype.ValueTypeName = 'number'; // ValueBufferType is inherited\n\n\t/**\n\t * Spherical linear unit quaternion interpolant.\n\t */\n\n\tclass QuaternionLinearInterpolant extends Interpolant {\n\t\tconstructor(parameterPositions, sampleValues, sampleSize, resultBuffer) {\n\t\t\tsuper(parameterPositions, sampleValues, sampleSize, resultBuffer);\n\t\t}\n\n\t\tinterpolate_(i1, t0, t, t1) {\n\t\t\tconst result = this.resultBuffer,\n\t\t\t\t\t\tvalues = this.sampleValues,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\talpha = (t - t0) / (t1 - t0);\n\t\t\tlet offset = i1 * stride;\n\n\t\t\tfor (let end = offset + stride; offset !== end; offset += 4) {\n\t\t\t\tQuaternion.slerpFlat(result, 0, values, offset - stride, values, offset, alpha);\n\t\t\t}\n\n\t\t\treturn result;\n\t\t}\n\n\t}\n\n\t/**\n\t * A Track of quaternion keyframe values.\n\t */\n\n\tclass QuaternionKeyframeTrack extends KeyframeTrack {\n\t\tInterpolantFactoryMethodLinear(result) {\n\t\t\treturn new QuaternionLinearInterpolant(this.times, this.values, this.getValueSize(), result);\n\t\t}\n\n\t}\n\n\tQuaternionKeyframeTrack.prototype.ValueTypeName = 'quaternion'; // ValueBufferType is inherited\n\n\tQuaternionKeyframeTrack.prototype.DefaultInterpolation = InterpolateLinear;\n\tQuaternionKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track that interpolates Strings\n\t */\n\n\tclass StringKeyframeTrack extends KeyframeTrack {}\n\n\tStringKeyframeTrack.prototype.ValueTypeName = 'string';\n\tStringKeyframeTrack.prototype.ValueBufferType = Array;\n\tStringKeyframeTrack.prototype.DefaultInterpolation = InterpolateDiscrete;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodLinear = undefined;\n\tStringKeyframeTrack.prototype.InterpolantFactoryMethodSmooth = undefined;\n\n\t/**\n\t * A Track of vectored keyframe values.\n\t */\n\n\tclass VectorKeyframeTrack extends KeyframeTrack {}\n\n\tVectorKeyframeTrack.prototype.ValueTypeName = 'vector'; // ValueBufferType is inherited\n\n\tclass AnimationClip {\n\t\tconstructor(name, duration = -1, tracks, blendMode = NormalAnimationBlendMode) {\n\t\t\tthis.name = name;\n\t\t\tthis.tracks = tracks;\n\t\t\tthis.duration = duration;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tthis.uuid = generateUUID(); // this means it should figure out its duration by scanning the tracks\n\n\t\t\tif (this.duration < 0) {\n\t\t\t\tthis.resetDuration();\n\t\t\t}\n\t\t}\n\n\t\tstatic parse(json) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tjsonTracks = json.tracks,\n\t\t\t\t\t\tframeTime = 1.0 / (json.fps || 1.0);\n\n\t\t\tfor (let i = 0, n = jsonTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(parseKeyframeTrack(jsonTracks[i]).scale(frameTime));\n\t\t\t}\n\n\t\t\tconst clip = new this(json.name, json.duration, tracks, json.blendMode);\n\t\t\tclip.uuid = json.uuid;\n\t\t\treturn clip;\n\t\t}\n\n\t\tstatic toJSON(clip) {\n\t\t\tconst tracks = [],\n\t\t\t\t\t\tclipTracks = clip.tracks;\n\t\t\tconst json = {\n\t\t\t\t'name': clip.name,\n\t\t\t\t'duration': clip.duration,\n\t\t\t\t'tracks': tracks,\n\t\t\t\t'uuid': clip.uuid,\n\t\t\t\t'blendMode': clip.blendMode\n\t\t\t};\n\n\t\t\tfor (let i = 0, n = clipTracks.length; i !== n; ++i) {\n\t\t\t\ttracks.push(KeyframeTrack.toJSON(clipTracks[i]));\n\t\t\t}\n\n\t\t\treturn json;\n\t\t}\n\n\t\tstatic CreateFromMorphTargetSequence(name, morphTargetSequence, fps, noLoop) {\n\t\t\tconst numMorphTargets = morphTargetSequence.length;\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < numMorphTargets; i++) {\n\t\t\t\tlet times = [];\n\t\t\t\tlet values = [];\n\t\t\t\ttimes.push((i + numMorphTargets - 1) % numMorphTargets, i, (i + 1) % numMorphTargets);\n\t\t\t\tvalues.push(0, 1, 0);\n\t\t\t\tconst order = AnimationUtils.getKeyframeOrder(times);\n\t\t\t\ttimes = AnimationUtils.sortedArray(times, 1, order);\n\t\t\t\tvalues = AnimationUtils.sortedArray(values, 1, order); // if there is a key at the first frame, duplicate it as the\n\t\t\t\t// last frame as well for perfect loop.\n\n\t\t\t\tif (!noLoop && times[0] === 0) {\n\t\t\t\t\ttimes.push(numMorphTargets);\n\t\t\t\t\tvalues.push(values[0]);\n\t\t\t\t}\n\n\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluences[' + morphTargetSequence[i].name + ']', times, values).scale(1.0 / fps));\n\t\t\t}\n\n\t\t\treturn new this(name, -1, tracks);\n\t\t}\n\n\t\tstatic findByName(objectOrClipArray, name) {\n\t\t\tlet clipArray = objectOrClipArray;\n\n\t\t\tif (!Array.isArray(objectOrClipArray)) {\n\t\t\t\tconst o = objectOrClipArray;\n\t\t\t\tclipArray = o.geometry && o.geometry.animations || o.animations;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < clipArray.length; i++) {\n\t\t\t\tif (clipArray[i].name === name) {\n\t\t\t\t\treturn clipArray[i];\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t}\n\n\t\tstatic CreateClipsFromMorphTargetSequences(morphTargets, fps, noLoop) {\n\t\t\tconst animationToMorphTargets = {}; // tested with https://regex101.com/ on trick sequences\n\t\t\t// such flamingo_flyA_003, flamingo_run1_003, crdeath0059\n\n\t\t\tconst pattern = /^([\\w-]*?)([\\d]+)$/; // sort morph target names into animation groups based\n\t\t\t// patterns like Walk_001, Walk_002, Run_001, Run_002\n\n\t\t\tfor (let i = 0, il = morphTargets.length; i < il; i++) {\n\t\t\t\tconst morphTarget = morphTargets[i];\n\t\t\t\tconst parts = morphTarget.name.match(pattern);\n\n\t\t\t\tif (parts && parts.length > 1) {\n\t\t\t\t\tconst name = parts[1];\n\t\t\t\t\tlet animationMorphTargets = animationToMorphTargets[name];\n\n\t\t\t\t\tif (!animationMorphTargets) {\n\t\t\t\t\t\tanimationToMorphTargets[name] = animationMorphTargets = [];\n\t\t\t\t\t}\n\n\t\t\t\t\tanimationMorphTargets.push(morphTarget);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst clips = [];\n\n\t\t\tfor (const name in animationToMorphTargets) {\n\t\t\t\tclips.push(this.CreateFromMorphTargetSequence(name, animationToMorphTargets[name], fps, noLoop));\n\t\t\t}\n\n\t\t\treturn clips;\n\t\t} // parse the animation.hierarchy format\n\n\n\t\tstatic parseAnimation(animation, bones) {\n\t\t\tif (!animation) {\n\t\t\t\tconsole.error('THREE.AnimationClip: No animation in JSONLoader data.');\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst addNonemptyTrack = function (trackType, trackName, animationKeys, propertyName, destTracks) {\n\t\t\t\t// only return track if there are actually keys.\n\t\t\t\tif (animationKeys.length !== 0) {\n\t\t\t\t\tconst times = [];\n\t\t\t\t\tconst values = [];\n\t\t\t\t\tAnimationUtils.flattenJSON(animationKeys, times, values, propertyName); // empty keys are filtered out, so check again\n\n\t\t\t\t\tif (times.length !== 0) {\n\t\t\t\t\t\tdestTracks.push(new trackType(trackName, times, values));\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tconst tracks = [];\n\t\t\tconst clipName = animation.name || 'default';\n\t\t\tconst fps = animation.fps || 30;\n\t\t\tconst blendMode = animation.blendMode; // automatic length determination in AnimationClip.\n\n\t\t\tlet duration = animation.length || -1;\n\t\t\tconst hierarchyTracks = animation.hierarchy || [];\n\n\t\t\tfor (let h = 0; h < hierarchyTracks.length; h++) {\n\t\t\t\tconst animationKeys = hierarchyTracks[h].keys; // skip empty tracks\n\n\t\t\t\tif (!animationKeys || animationKeys.length === 0) continue; // process morph targets\n\n\t\t\t\tif (animationKeys[0].morphTargets) {\n\t\t\t\t\t// figure out all morph targets used in this track\n\t\t\t\t\tconst morphTargetNames = {};\n\t\t\t\t\tlet k;\n\n\t\t\t\t\tfor (k = 0; k < animationKeys.length; k++) {\n\t\t\t\t\t\tif (animationKeys[k].morphTargets) {\n\t\t\t\t\t\t\tfor (let m = 0; m < animationKeys[k].morphTargets.length; m++) {\n\t\t\t\t\t\t\t\tmorphTargetNames[animationKeys[k].morphTargets[m]] = -1;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} // create a track for each morph target with all zero\n\t\t\t\t\t// morphTargetInfluences except for the keys in which\n\t\t\t\t\t// the morphTarget is named.\n\n\n\t\t\t\t\tfor (const morphTargetName in morphTargetNames) {\n\t\t\t\t\t\tconst times = [];\n\t\t\t\t\t\tconst values = [];\n\n\t\t\t\t\t\tfor (let m = 0; m !== animationKeys[k].morphTargets.length; ++m) {\n\t\t\t\t\t\t\tconst animationKey = animationKeys[k];\n\t\t\t\t\t\t\ttimes.push(animationKey.time);\n\t\t\t\t\t\t\tvalues.push(animationKey.morphTarget === morphTargetName ? 1 : 0);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttracks.push(new NumberKeyframeTrack('.morphTargetInfluence[' + morphTargetName + ']', times, values));\n\t\t\t\t\t}\n\n\t\t\t\t\tduration = morphTargetNames.length * (fps || 1.0);\n\t\t\t\t} else {\n\t\t\t\t\t// ...assume skeletal animation\n\t\t\t\t\tconst boneName = '.bones[' + bones[h].name + ']';\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.position', animationKeys, 'pos', tracks);\n\t\t\t\t\taddNonemptyTrack(QuaternionKeyframeTrack, boneName + '.quaternion', animationKeys, 'rot', tracks);\n\t\t\t\t\taddNonemptyTrack(VectorKeyframeTrack, boneName + '.scale', animationKeys, 'scl', tracks);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (tracks.length === 0) {\n\t\t\t\treturn null;\n\t\t\t}\n\n\t\t\tconst clip = new this(clipName, duration, tracks, blendMode);\n\t\t\treturn clip;\n\t\t}\n\n\t\tresetDuration() {\n\t\t\tconst tracks = this.tracks;\n\t\t\tlet duration = 0;\n\n\t\t\tfor (let i = 0, n = tracks.length; i !== n; ++i) {\n\t\t\t\tconst track = this.tracks[i];\n\t\t\t\tduration = Math.max(duration, track.times[track.times.length - 1]);\n\t\t\t}\n\n\t\t\tthis.duration = duration;\n\t\t\treturn this;\n\t\t}\n\n\t\ttrim() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].trim(0, this.duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tvalidate() {\n\t\t\tlet valid = true;\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tvalid = valid && this.tracks[i].validate();\n\t\t\t}\n\n\t\t\treturn valid;\n\t\t}\n\n\t\toptimize() {\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\tthis.tracks[i].optimize();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\tconst tracks = [];\n\n\t\t\tfor (let i = 0; i < this.tracks.length; i++) {\n\t\t\t\ttracks.push(this.tracks[i].clone());\n\t\t\t}\n\n\t\t\treturn new this.constructor(this.name, this.duration, tracks, this.blendMode);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\treturn this.constructor.toJSON(this);\n\t\t}\n\n\t}\n\n\tfunction getTrackTypeForValueTypeName(typeName) {\n\t\tswitch (typeName.toLowerCase()) {\n\t\t\tcase 'scalar':\n\t\t\tcase 'double':\n\t\t\tcase 'float':\n\t\t\tcase 'number':\n\t\t\tcase 'integer':\n\t\t\t\treturn NumberKeyframeTrack;\n\n\t\t\tcase 'vector':\n\t\t\tcase 'vector2':\n\t\t\tcase 'vector3':\n\t\t\tcase 'vector4':\n\t\t\t\treturn VectorKeyframeTrack;\n\n\t\t\tcase 'color':\n\t\t\t\treturn ColorKeyframeTrack;\n\n\t\t\tcase 'quaternion':\n\t\t\t\treturn QuaternionKeyframeTrack;\n\n\t\t\tcase 'bool':\n\t\t\tcase 'boolean':\n\t\t\t\treturn BooleanKeyframeTrack;\n\n\t\t\tcase 'string':\n\t\t\t\treturn StringKeyframeTrack;\n\t\t}\n\n\t\tthrow new Error('THREE.KeyframeTrack: Unsupported typeName: ' + typeName);\n\t}\n\n\tfunction parseKeyframeTrack(json) {\n\t\tif (json.type === undefined) {\n\t\t\tthrow new Error('THREE.KeyframeTrack: track type undefined, can not parse');\n\t\t}\n\n\t\tconst trackType = getTrackTypeForValueTypeName(json.type);\n\n\t\tif (json.times === undefined) {\n\t\t\tconst times = [],\n\t\t\t\t\t\tvalues = [];\n\t\t\tAnimationUtils.flattenJSON(json.keys, times, values, 'value');\n\t\t\tjson.times = times;\n\t\t\tjson.values = values;\n\t\t} // derived classes can define a static parse method\n\n\n\t\tif (trackType.parse !== undefined) {\n\t\t\treturn trackType.parse(json);\n\t\t} else {\n\t\t\t// by default, we assume a constructor compatible with the base\n\t\t\treturn new trackType(json.name, json.times, json.values, json.interpolation);\n\t\t}\n\t}\n\n\tconst Cache = {\n\t\tenabled: false,\n\t\tfiles: {},\n\t\tadd: function (key, file) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Adding key:', key );\n\n\t\t\tthis.files[key] = file;\n\t\t},\n\t\tget: function (key) {\n\t\t\tif (this.enabled === false) return; // console.log( 'THREE.Cache', 'Checking key:', key );\n\n\t\t\treturn this.files[key];\n\t\t},\n\t\tremove: function (key) {\n\t\t\tdelete this.files[key];\n\t\t},\n\t\tclear: function () {\n\t\t\tthis.files = {};\n\t\t}\n\t};\n\n\tclass LoadingManager {\n\t\tconstructor(onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tlet isLoading = false;\n\t\t\tlet itemsLoaded = 0;\n\t\t\tlet itemsTotal = 0;\n\t\t\tlet urlModifier = undefined;\n\t\t\tconst handlers = []; // Refer to #5689 for the reason why we don't set .onStart\n\t\t\t// in the constructor\n\n\t\t\tthis.onStart = undefined;\n\t\t\tthis.onLoad = onLoad;\n\t\t\tthis.onProgress = onProgress;\n\t\t\tthis.onError = onError;\n\n\t\t\tthis.itemStart = function (url) {\n\t\t\t\titemsTotal++;\n\n\t\t\t\tif (isLoading === false) {\n\t\t\t\t\tif (scope.onStart !== undefined) {\n\t\t\t\t\t\tscope.onStart(url, itemsLoaded, itemsTotal);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tisLoading = true;\n\t\t\t};\n\n\t\t\tthis.itemEnd = function (url) {\n\t\t\t\titemsLoaded++;\n\n\t\t\t\tif (scope.onProgress !== undefined) {\n\t\t\t\t\tscope.onProgress(url, itemsLoaded, itemsTotal);\n\t\t\t\t}\n\n\t\t\t\tif (itemsLoaded === itemsTotal) {\n\t\t\t\t\tisLoading = false;\n\n\t\t\t\t\tif (scope.onLoad !== undefined) {\n\t\t\t\t\t\tscope.onLoad();\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.itemError = function (url) {\n\t\t\t\tif (scope.onError !== undefined) {\n\t\t\t\t\tscope.onError(url);\n\t\t\t\t}\n\t\t\t};\n\n\t\t\tthis.resolveURL = function (url) {\n\t\t\t\tif (urlModifier) {\n\t\t\t\t\treturn urlModifier(url);\n\t\t\t\t}\n\n\t\t\t\treturn url;\n\t\t\t};\n\n\t\t\tthis.setURLModifier = function (transform) {\n\t\t\t\turlModifier = transform;\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.addHandler = function (regex, loader) {\n\t\t\t\thandlers.push(regex, loader);\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.removeHandler = function (regex) {\n\t\t\t\tconst index = handlers.indexOf(regex);\n\n\t\t\t\tif (index !== -1) {\n\t\t\t\t\thandlers.splice(index, 2);\n\t\t\t\t}\n\n\t\t\t\treturn this;\n\t\t\t};\n\n\t\t\tthis.getHandler = function (file) {\n\t\t\t\tfor (let i = 0, l = handlers.length; i < l; i += 2) {\n\t\t\t\t\tconst regex = handlers[i];\n\t\t\t\t\tconst loader = handlers[i + 1];\n\t\t\t\t\tif (regex.global) regex.lastIndex = 0; // see #17920\n\n\t\t\t\t\tif (regex.test(file)) {\n\t\t\t\t\t\treturn loader;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn null;\n\t\t\t};\n\t\t}\n\n\t}\n\n\tconst DefaultLoadingManager = new LoadingManager();\n\n\tclass Loader {\n\t\tconstructor(manager) {\n\t\t\tthis.manager = manager !== undefined ? manager : DefaultLoadingManager;\n\t\t\tthis.crossOrigin = 'anonymous';\n\t\t\tthis.withCredentials = false;\n\t\t\tthis.path = '';\n\t\t\tthis.resourcePath = '';\n\t\t\tthis.requestHeader = {};\n\t\t}\n\n\t\tload()\n\t\t/* url, onLoad, onProgress, onError */\n\t\t{}\n\n\t\tloadAsync(url, onProgress) {\n\t\t\tconst scope = this;\n\t\t\treturn new Promise(function (resolve, reject) {\n\t\t\t\tscope.load(url, resolve, onProgress, reject);\n\t\t\t});\n\t\t}\n\n\t\tparse()\n\t\t/* data */\n\t\t{}\n\n\t\tsetCrossOrigin(crossOrigin) {\n\t\t\tthis.crossOrigin = crossOrigin;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetWithCredentials(value) {\n\t\t\tthis.withCredentials = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetPath(path) {\n\t\t\tthis.path = path;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetResourcePath(resourcePath) {\n\t\t\tthis.resourcePath = resourcePath;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetRequestHeader(requestHeader) {\n\t\t\tthis.requestHeader = requestHeader;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst loading = {};\n\n\tclass FileLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t} // Check if request is duplicate\n\n\n\t\t\tif (loading[url] !== undefined) {\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\treturn;\n\t\t\t} // Check for data: URI\n\n\n\t\t\tconst dataUriRegex = /^data:(.*?)(;base64)?,(.*)$/;\n\t\t\tconst dataUriRegexResult = url.match(dataUriRegex);\n\t\t\tlet request; // Safari can not handle Data URIs through XMLHttpRequest so process manually\n\n\t\t\tif (dataUriRegexResult) {\n\t\t\t\tconst mimeType = dataUriRegexResult[1];\n\t\t\t\tconst isBase64 = !!dataUriRegexResult[2];\n\t\t\t\tlet data = dataUriRegexResult[3];\n\t\t\t\tdata = decodeURIComponent(data);\n\t\t\t\tif (isBase64) data = atob(data);\n\n\t\t\t\ttry {\n\t\t\t\t\tlet response;\n\t\t\t\t\tconst responseType = (this.responseType || '').toLowerCase();\n\n\t\t\t\t\tswitch (responseType) {\n\t\t\t\t\t\tcase 'arraybuffer':\n\t\t\t\t\t\tcase 'blob':\n\t\t\t\t\t\t\tconst view = new Uint8Array(data.length);\n\n\t\t\t\t\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\t\t\t\t\tview[i] = data.charCodeAt(i);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tif (responseType === 'blob') {\n\t\t\t\t\t\t\t\tresponse = new Blob([view.buffer], {\n\t\t\t\t\t\t\t\t\ttype: mimeType\n\t\t\t\t\t\t\t\t});\n\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\tresponse = view.buffer;\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'document':\n\t\t\t\t\t\t\tconst parser = new DOMParser();\n\t\t\t\t\t\t\tresponse = parser.parseFromString(data, mimeType);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'json':\n\t\t\t\t\t\t\tresponse = JSON.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\t// 'text' or other\n\t\t\t\t\t\t\tresponse = data;\n\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t} // Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\n\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onLoad) onLoad(response);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t} catch (error) {\n\t\t\t\t\t// Wait for next browser tick like standard XMLHttpRequest event dispatching does\n\t\t\t\t\tsetTimeout(function () {\n\t\t\t\t\t\tif (onError) onError(error);\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}, 0);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// Initialise array for duplicate requests\n\t\t\t\tloading[url] = [];\n\t\t\t\tloading[url].push({\n\t\t\t\t\tonLoad: onLoad,\n\t\t\t\t\tonProgress: onProgress,\n\t\t\t\t\tonError: onError\n\t\t\t\t});\n\t\t\t\trequest = new XMLHttpRequest();\n\t\t\t\trequest.open('GET', url, true);\n\t\t\t\trequest.addEventListener('load', function (event) {\n\t\t\t\t\tconst response = this.response;\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tif (this.status === 200 || this.status === 0) {\n\t\t\t\t\t\t// Some browsers return HTTP Status 0 when using non-http protocol\n\t\t\t\t\t\t// e.g. 'file://' or 'data://'. Handle as success.\n\t\t\t\t\t\tif (this.status === 0) console.warn('THREE.FileLoader: HTTP Status 0 received.'); // Add to cache only on HTTP success, so that we do not cache\n\t\t\t\t\t\t// error response bodies as proper responses to requests.\n\n\t\t\t\t\t\tCache.add(url, response);\n\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onLoad) callback.onLoad(response);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('progress', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onProgress) callback.onProgress(event);\n\t\t\t\t\t}\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('error', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\trequest.addEventListener('abort', function (event) {\n\t\t\t\t\tconst callbacks = loading[url];\n\t\t\t\t\tdelete loading[url];\n\n\t\t\t\t\tfor (let i = 0, il = callbacks.length; i < il; i++) {\n\t\t\t\t\t\tconst callback = callbacks[i];\n\t\t\t\t\t\tif (callback.onError) callback.onError(event);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, false);\n\t\t\t\tif (this.responseType !== undefined) request.responseType = this.responseType;\n\t\t\t\tif (this.withCredentials !== undefined) request.withCredentials = this.withCredentials;\n\t\t\t\tif (request.overrideMimeType) request.overrideMimeType(this.mimeType !== undefined ? this.mimeType : 'text/plain');\n\n\t\t\t\tfor (const header in this.requestHeader) {\n\t\t\t\t\trequest.setRequestHeader(header, this.requestHeader[header]);\n\t\t\t\t}\n\n\t\t\t\trequest.send(null);\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\treturn request;\n\t\t}\n\n\t\tsetResponseType(value) {\n\t\t\tthis.responseType = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMimeType(value) {\n\t\t\tthis.mimeType = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst animations = [];\n\n\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\tconst clip = AnimationClip.parse(json[i]);\n\t\t\t\tanimations.push(clip);\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to block based textures loader (dds, pvr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass CompressedTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst images = [];\n\t\t\tconst texture = new CompressedTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(url[i], function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\t\t\t\t\timages[i] = {\n\t\t\t\t\t\twidth: texDatas.width,\n\t\t\t\t\t\theight: texDatas.height,\n\t\t\t\t\t\tformat: texDatas.format,\n\t\t\t\t\t\tmipmaps: texDatas.mipmaps\n\t\t\t\t\t};\n\t\t\t\t\tloaded += 1;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\tif (texDatas.mipmapCount === 1) texture.minFilter = LinearFilter;\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\tif (Array.isArray(url)) {\n\t\t\t\tfor (let i = 0, il = url.length; i < il; ++i) {\n\t\t\t\t\tloadTexture(i);\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// compressed cubemap texture stored in a single DDS file\n\t\t\t\tloader.load(url, function (buffer) {\n\t\t\t\t\tconst texDatas = scope.parse(buffer, true);\n\n\t\t\t\t\tif (texDatas.isCubemap) {\n\t\t\t\t\t\tconst faces = texDatas.mipmaps.length / texDatas.mipmapCount;\n\n\t\t\t\t\t\tfor (let f = 0; f < faces; f++) {\n\t\t\t\t\t\t\timages[f] = {\n\t\t\t\t\t\t\t\tmipmaps: []\n\t\t\t\t\t\t\t};\n\n\t\t\t\t\t\t\tfor (let i = 0; i < texDatas.mipmapCount; i++) {\n\t\t\t\t\t\t\t\timages[f].mipmaps.push(texDatas.mipmaps[f * texDatas.mipmapCount + i]);\n\t\t\t\t\t\t\t\timages[f].format = texDatas.format;\n\t\t\t\t\t\t\t\timages[f].width = texDatas.width;\n\t\t\t\t\t\t\t\timages[f].height = texDatas.height;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttexture.image = images;\n\t\t\t\t\t} else {\n\t\t\t\t\t\ttexture.image.width = texDatas.width;\n\t\t\t\t\t\ttexture.image.height = texDatas.height;\n\t\t\t\t\t\ttexture.mipmaps = texDatas.mipmaps;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (texDatas.mipmapCount === 1) {\n\t\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.format = texDatas.format;\n\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t}, onProgress, onError);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass ImageLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst image = document.createElementNS('http://www.w3.org/1999/xhtml', 'img');\n\n\t\t\tfunction onImageLoad() {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tCache.add(url, this);\n\t\t\t\tif (onLoad) onLoad(this);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\tfunction onImageError(event) {\n\t\t\t\timage.removeEventListener('load', onImageLoad, false);\n\t\t\t\timage.removeEventListener('error', onImageError, false);\n\t\t\t\tif (onError) onError(event);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}\n\n\t\t\timage.addEventListener('load', onImageLoad, false);\n\t\t\timage.addEventListener('error', onImageError, false);\n\n\t\t\tif (url.substr(0, 5) !== 'data:') {\n\t\t\t\tif (this.crossOrigin !== undefined) image.crossOrigin = this.crossOrigin;\n\t\t\t}\n\n\t\t\tscope.manager.itemStart(url);\n\t\t\timage.src = url;\n\t\t\treturn image;\n\t\t}\n\n\t}\n\n\tclass CubeTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(urls, onLoad, onProgress, onError) {\n\t\t\tconst texture = new CubeTexture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tlet loaded = 0;\n\n\t\t\tfunction loadTexture(i) {\n\t\t\t\tloader.load(urls[i], function (image) {\n\t\t\t\t\ttexture.images[i] = image;\n\t\t\t\t\tloaded++;\n\n\t\t\t\t\tif (loaded === 6) {\n\t\t\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\t\t\tif (onLoad) onLoad(texture);\n\t\t\t\t\t}\n\t\t\t\t}, undefined, onError);\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < urls.length; ++i) {\n\t\t\t\tloadTexture(i);\n\t\t\t}\n\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Abstract Base class to load generic binary textures formats (rgbe, hdr, ...)\n\t *\n\t * Sub classes have to implement the parse() method which will be used in load().\n\t */\n\n\tclass DataTextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst texture = new DataTexture();\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\tconst texData = scope.parse(buffer);\n\t\t\t\tif (!texData) return;\n\n\t\t\t\tif (texData.image !== undefined) {\n\t\t\t\t\ttexture.image = texData.image;\n\t\t\t\t} else if (texData.data !== undefined) {\n\t\t\t\t\ttexture.image.width = texData.width;\n\t\t\t\t\ttexture.image.height = texData.height;\n\t\t\t\t\ttexture.image.data = texData.data;\n\t\t\t\t}\n\n\t\t\t\ttexture.wrapS = texData.wrapS !== undefined ? texData.wrapS : ClampToEdgeWrapping;\n\t\t\t\ttexture.wrapT = texData.wrapT !== undefined ? texData.wrapT : ClampToEdgeWrapping;\n\t\t\t\ttexture.magFilter = texData.magFilter !== undefined ? texData.magFilter : LinearFilter;\n\t\t\t\ttexture.minFilter = texData.minFilter !== undefined ? texData.minFilter : LinearFilter;\n\t\t\t\ttexture.anisotropy = texData.anisotropy !== undefined ? texData.anisotropy : 1;\n\n\t\t\t\tif (texData.encoding !== undefined) {\n\t\t\t\t\ttexture.encoding = texData.encoding;\n\t\t\t\t}\n\n\t\t\t\tif (texData.flipY !== undefined) {\n\t\t\t\t\ttexture.flipY = texData.flipY;\n\t\t\t\t}\n\n\t\t\t\tif (texData.format !== undefined) {\n\t\t\t\t\ttexture.format = texData.format;\n\t\t\t\t}\n\n\t\t\t\tif (texData.type !== undefined) {\n\t\t\t\t\ttexture.type = texData.type;\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmaps !== undefined) {\n\t\t\t\t\ttexture.mipmaps = texData.mipmaps;\n\t\t\t\t\ttexture.minFilter = LinearMipmapLinearFilter; // presumably...\n\t\t\t\t}\n\n\t\t\t\tif (texData.mipmapCount === 1) {\n\t\t\t\t\ttexture.minFilter = LinearFilter;\n\t\t\t\t}\n\n\t\t\t\tif (texData.generateMipmaps !== undefined) {\n\t\t\t\t\ttexture.generateMipmaps = texData.generateMipmaps;\n\t\t\t\t}\n\n\t\t\t\ttexture.needsUpdate = true;\n\t\t\t\tif (onLoad) onLoad(texture, texData);\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\tclass TextureLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst texture = new Texture();\n\t\t\tconst loader = new ImageLoader(this.manager);\n\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.load(url, function (image) {\n\t\t\t\ttexture.image = image; // JPEGs can't have an alpha channel, so memory can be saved by storing them as RGB.\n\n\t\t\t\tconst isJPEG = url.search(/\\.jpe?g($|\\?)/i) > 0 || url.search(/^data\\:image\\/jpeg/) === 0;\n\t\t\t\ttexture.format = isJPEG ? RGBFormat : RGBAFormat;\n\t\t\t\ttexture.needsUpdate = true;\n\n\t\t\t\tif (onLoad !== undefined) {\n\t\t\t\t\tonLoad(texture);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t\treturn texture;\n\t\t}\n\n\t}\n\n\t/**\n\t * Extensible curve object.\n\t *\n\t * Some common of curve methods:\n\t * .getPoint( t, optionalTarget ), .getTangent( t, optionalTarget )\n\t * .getPointAt( u, optionalTarget ), .getTangentAt( u, optionalTarget )\n\t * .getPoints(), .getSpacedPoints()\n\t * .getLength()\n\t * .updateArcLengths()\n\t *\n\t * This following curves inherit from THREE.Curve:\n\t *\n\t * -- 2D curves --\n\t * THREE.ArcCurve\n\t * THREE.CubicBezierCurve\n\t * THREE.EllipseCurve\n\t * THREE.LineCurve\n\t * THREE.QuadraticBezierCurve\n\t * THREE.SplineCurve\n\t *\n\t * -- 3D curves --\n\t * THREE.CatmullRomCurve3\n\t * THREE.CubicBezierCurve3\n\t * THREE.LineCurve3\n\t * THREE.QuadraticBezierCurve3\n\t *\n\t * A series of curves can be represented as a THREE.CurvePath.\n\t *\n\t **/\n\n\tclass Curve {\n\t\tconstructor() {\n\t\t\tthis.type = 'Curve';\n\t\t\tthis.arcLengthDivisions = 200;\n\t\t} // Virtual base class method to overwrite and implement in subclasses\n\t\t//\t- t [0 .. 1]\n\n\n\t\tgetPoint()\n\t\t/* t, optionalTarget */\n\t\t{\n\t\t\tconsole.warn('THREE.Curve: .getPoint() not implemented.');\n\t\t\treturn null;\n\t\t} // Get point at relative position in curve according to arc length\n\t\t// - u [0 .. 1]\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getPoint(t, optionalTarget);\n\t\t} // Get sequence of points using getPoint( t )\n\n\n\t\tgetPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPoint(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get sequence of points using getPointAt( u )\n\n\n\t\tgetSpacedPoints(divisions = 5) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let d = 0; d <= divisions; d++) {\n\t\t\t\tpoints.push(this.getPointAt(d / divisions));\n\t\t\t}\n\n\t\t\treturn points;\n\t\t} // Get total curve arc length\n\n\n\t\tgetLength() {\n\t\t\tconst lengths = this.getLengths();\n\t\t\treturn lengths[lengths.length - 1];\n\t\t} // Get list of cumulative segment lengths\n\n\n\t\tgetLengths(divisions = this.arcLengthDivisions) {\n\t\t\tif (this.cacheArcLengths && this.cacheArcLengths.length === divisions + 1 && !this.needsUpdate) {\n\t\t\t\treturn this.cacheArcLengths;\n\t\t\t}\n\n\t\t\tthis.needsUpdate = false;\n\t\t\tconst cache = [];\n\t\t\tlet current,\n\t\t\t\t\tlast = this.getPoint(0);\n\t\t\tlet sum = 0;\n\t\t\tcache.push(0);\n\n\t\t\tfor (let p = 1; p <= divisions; p++) {\n\t\t\t\tcurrent = this.getPoint(p / divisions);\n\t\t\t\tsum += current.distanceTo(last);\n\t\t\t\tcache.push(sum);\n\t\t\t\tlast = current;\n\t\t\t}\n\n\t\t\tthis.cacheArcLengths = cache;\n\t\t\treturn cache; // { sums: cache, sum: sum }; Sum is in the last element.\n\t\t}\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.getLengths();\n\t\t} // Given u ( 0 .. 1 ), get a t to find p. This gives you points which are equidistant\n\n\n\t\tgetUtoTmapping(u, distance) {\n\t\t\tconst arcLengths = this.getLengths();\n\t\t\tlet i = 0;\n\t\t\tconst il = arcLengths.length;\n\t\t\tlet targetArcLength; // The targeted u distance value to get\n\n\t\t\tif (distance) {\n\t\t\t\ttargetArcLength = distance;\n\t\t\t} else {\n\t\t\t\ttargetArcLength = u * arcLengths[il - 1];\n\t\t\t} // binary search for the index with largest value smaller than target u distance\n\n\n\t\t\tlet low = 0,\n\t\t\t\t\thigh = il - 1,\n\t\t\t\t\tcomparison;\n\n\t\t\twhile (low <= high) {\n\t\t\t\ti = Math.floor(low + (high - low) / 2); // less likely to overflow, though probably not issue here, JS doesn't really have integers, all numbers are floats\n\n\t\t\t\tcomparison = arcLengths[i] - targetArcLength;\n\n\t\t\t\tif (comparison < 0) {\n\t\t\t\t\tlow = i + 1;\n\t\t\t\t} else if (comparison > 0) {\n\t\t\t\t\thigh = i - 1;\n\t\t\t\t} else {\n\t\t\t\t\thigh = i;\n\t\t\t\t\tbreak; // DONE\n\t\t\t\t}\n\t\t\t}\n\n\t\t\ti = high;\n\n\t\t\tif (arcLengths[i] === targetArcLength) {\n\t\t\t\treturn i / (il - 1);\n\t\t\t} // we could get finer grain at lengths, or use simple interpolation between two points\n\n\n\t\t\tconst lengthBefore = arcLengths[i];\n\t\t\tconst lengthAfter = arcLengths[i + 1];\n\t\t\tconst segmentLength = lengthAfter - lengthBefore; // determine where we are between the 'before' and 'after' points\n\n\t\t\tconst segmentFraction = (targetArcLength - lengthBefore) / segmentLength; // add that fractional amount to t\n\n\t\t\tconst t = (i + segmentFraction) / (il - 1);\n\t\t\treturn t;\n\t\t} // Returns a unit vector tangent at t\n\t\t// In case any sub curve does not implement its tangent derivation,\n\t\t// 2 points a small delta apart will be used to find its gradient\n\t\t// which seems to give a reasonable approximation\n\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst delta = 0.0001;\n\t\t\tlet t1 = t - delta;\n\t\t\tlet t2 = t + delta; // Capping in case of danger\n\n\t\t\tif (t1 < 0) t1 = 0;\n\t\t\tif (t2 > 1) t2 = 1;\n\t\t\tconst pt1 = this.getPoint(t1);\n\t\t\tconst pt2 = this.getPoint(t2);\n\t\t\tconst tangent = optionalTarget || (pt1.isVector2 ? new Vector2() : new Vector3());\n\t\t\ttangent.copy(pt2).sub(pt1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tgetTangentAt(u, optionalTarget) {\n\t\t\tconst t = this.getUtoTmapping(u);\n\t\t\treturn this.getTangent(t, optionalTarget);\n\t\t}\n\n\t\tcomputeFrenetFrames(segments, closed) {\n\t\t\t// see http://www.cs.indiana.edu/pub/techreports/TR425.pdf\n\t\t\tconst normal = new Vector3();\n\t\t\tconst tangents = [];\n\t\t\tconst normals = [];\n\t\t\tconst binormals = [];\n\t\t\tconst vec = new Vector3();\n\t\t\tconst mat = new Matrix4(); // compute the tangent vectors for each segment on the curve\n\n\t\t\tfor (let i = 0; i <= segments; i++) {\n\t\t\t\tconst u = i / segments;\n\t\t\t\ttangents[i] = this.getTangentAt(u, new Vector3());\n\t\t\t\ttangents[i].normalize();\n\t\t\t} // select an initial normal vector perpendicular to the first tangent vector,\n\t\t\t// and in the direction of the minimum tangent xyz component\n\n\n\t\t\tnormals[0] = new Vector3();\n\t\t\tbinormals[0] = new Vector3();\n\t\t\tlet min = Number.MAX_VALUE;\n\t\t\tconst tx = Math.abs(tangents[0].x);\n\t\t\tconst ty = Math.abs(tangents[0].y);\n\t\t\tconst tz = Math.abs(tangents[0].z);\n\n\t\t\tif (tx <= min) {\n\t\t\t\tmin = tx;\n\t\t\t\tnormal.set(1, 0, 0);\n\t\t\t}\n\n\t\t\tif (ty <= min) {\n\t\t\t\tmin = ty;\n\t\t\t\tnormal.set(0, 1, 0);\n\t\t\t}\n\n\t\t\tif (tz <= min) {\n\t\t\t\tnormal.set(0, 0, 1);\n\t\t\t}\n\n\t\t\tvec.crossVectors(tangents[0], normal).normalize();\n\t\t\tnormals[0].crossVectors(tangents[0], vec);\n\t\t\tbinormals[0].crossVectors(tangents[0], normals[0]); // compute the slowly-varying normal and binormal vectors for each segment on the curve\n\n\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\tnormals[i] = normals[i - 1].clone();\n\t\t\t\tbinormals[i] = binormals[i - 1].clone();\n\t\t\t\tvec.crossVectors(tangents[i - 1], tangents[i]);\n\n\t\t\t\tif (vec.length() > Number.EPSILON) {\n\t\t\t\t\tvec.normalize();\n\t\t\t\t\tconst theta = Math.acos(clamp(tangents[i - 1].dot(tangents[i]), -1, 1)); // clamp for floating pt errors\n\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(vec, theta));\n\t\t\t\t}\n\n\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t} // if the curve is closed, postprocess the vectors so the first and last normal vectors are the same\n\n\n\t\t\tif (closed === true) {\n\t\t\t\tlet theta = Math.acos(clamp(normals[0].dot(normals[segments]), -1, 1));\n\t\t\t\ttheta /= segments;\n\n\t\t\t\tif (tangents[0].dot(vec.crossVectors(normals[0], normals[segments])) > 0) {\n\t\t\t\t\ttheta = -theta;\n\t\t\t\t}\n\n\t\t\t\tfor (let i = 1; i <= segments; i++) {\n\t\t\t\t\t// twist a little...\n\t\t\t\t\tnormals[i].applyMatrix4(mat.makeRotationAxis(tangents[i], theta * i));\n\t\t\t\t\tbinormals[i].crossVectors(tangents[i], normals[i]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn {\n\t\t\t\ttangents: tangents,\n\t\t\t\tnormals: normals,\n\t\t\t\tbinormals: binormals\n\t\t\t};\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.arcLengthDivisions = source.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = {\n\t\t\t\tmetadata: {\n\t\t\t\t\tversion: 4.5,\n\t\t\t\t\ttype: 'Curve',\n\t\t\t\t\tgenerator: 'Curve.toJSON'\n\t\t\t\t}\n\t\t\t};\n\t\t\tdata.arcLengthDivisions = this.arcLengthDivisions;\n\t\t\tdata.type = this.type;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.arcLengthDivisions = json.arcLengthDivisions;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass EllipseCurve extends Curve {\n\t\tconstructor(aX = 0, aY = 0, xRadius = 1, yRadius = 1, aStartAngle = 0, aEndAngle = Math.PI * 2, aClockwise = false, aRotation = 0) {\n\t\t\tsuper();\n\t\t\tthis.type = 'EllipseCurve';\n\t\t\tthis.aX = aX;\n\t\t\tthis.aY = aY;\n\t\t\tthis.xRadius = xRadius;\n\t\t\tthis.yRadius = yRadius;\n\t\t\tthis.aStartAngle = aStartAngle;\n\t\t\tthis.aEndAngle = aEndAngle;\n\t\t\tthis.aClockwise = aClockwise;\n\t\t\tthis.aRotation = aRotation;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget) {\n\t\t\tconst point = optionalTarget || new Vector2();\n\t\t\tconst twoPi = Math.PI * 2;\n\t\t\tlet deltaAngle = this.aEndAngle - this.aStartAngle;\n\t\t\tconst samePoints = Math.abs(deltaAngle) < Number.EPSILON; // ensures that deltaAngle is 0 .. 2 PI\n\n\t\t\twhile (deltaAngle < 0) deltaAngle += twoPi;\n\n\t\t\twhile (deltaAngle > twoPi) deltaAngle -= twoPi;\n\n\t\t\tif (deltaAngle < Number.EPSILON) {\n\t\t\t\tif (samePoints) {\n\t\t\t\t\tdeltaAngle = 0;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.aClockwise === true && !samePoints) {\n\t\t\t\tif (deltaAngle === twoPi) {\n\t\t\t\t\tdeltaAngle = -twoPi;\n\t\t\t\t} else {\n\t\t\t\t\tdeltaAngle = deltaAngle - twoPi;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst angle = this.aStartAngle + t * deltaAngle;\n\t\t\tlet x = this.aX + this.xRadius * Math.cos(angle);\n\t\t\tlet y = this.aY + this.yRadius * Math.sin(angle);\n\n\t\t\tif (this.aRotation !== 0) {\n\t\t\t\tconst cos = Math.cos(this.aRotation);\n\t\t\t\tconst sin = Math.sin(this.aRotation);\n\t\t\t\tconst tx = x - this.aX;\n\t\t\t\tconst ty = y - this.aY; // Rotate the point about the center of the ellipse.\n\n\t\t\t\tx = tx * cos - ty * sin + this.aX;\n\t\t\t\ty = tx * sin + ty * cos + this.aY;\n\t\t\t}\n\n\t\t\treturn point.set(x, y);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.aX = source.aX;\n\t\t\tthis.aY = source.aY;\n\t\t\tthis.xRadius = source.xRadius;\n\t\t\tthis.yRadius = source.yRadius;\n\t\t\tthis.aStartAngle = source.aStartAngle;\n\t\t\tthis.aEndAngle = source.aEndAngle;\n\t\t\tthis.aClockwise = source.aClockwise;\n\t\t\tthis.aRotation = source.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.aX = this.aX;\n\t\t\tdata.aY = this.aY;\n\t\t\tdata.xRadius = this.xRadius;\n\t\t\tdata.yRadius = this.yRadius;\n\t\t\tdata.aStartAngle = this.aStartAngle;\n\t\t\tdata.aEndAngle = this.aEndAngle;\n\t\t\tdata.aClockwise = this.aClockwise;\n\t\t\tdata.aRotation = this.aRotation;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.aX = json.aX;\n\t\t\tthis.aY = json.aY;\n\t\t\tthis.xRadius = json.xRadius;\n\t\t\tthis.yRadius = json.yRadius;\n\t\t\tthis.aStartAngle = json.aStartAngle;\n\t\t\tthis.aEndAngle = json.aEndAngle;\n\t\t\tthis.aClockwise = json.aClockwise;\n\t\t\tthis.aRotation = json.aRotation;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tEllipseCurve.prototype.isEllipseCurve = true;\n\n\tclass ArcCurve extends EllipseCurve {\n\t\tconstructor(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tsuper(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\tthis.type = 'ArcCurve';\n\t\t}\n\n\t}\n\n\tArcCurve.prototype.isArcCurve = true;\n\n\t/**\n\t * Centripetal CatmullRom Curve - which is useful for avoiding\n\t * cusps and self-intersections in non-uniform catmull rom curves.\n\t * http://www.cemyuksel.com/research/catmullrom_param/catmullrom.pdf\n\t *\n\t * curve.type accepts centripetal(default), chordal and catmullrom\n\t * curve.tension is used for catmullrom which defaults to 0.5\n\t */\n\n\t/*\n\tBased on an optimized c++ solution in\n\t - http://stackoverflow.com/questions/9489736/catmull-rom-curve-with-no-cusps-and-no-self-intersections/\n\t - http://ideone.com/NoEbVM\n\n\tThis CubicPoly class could be used for reusing some variables and calculations,\n\tbut for three.js curve use, it could be possible inlined and flatten into a single function call\n\twhich can be placed in CurveUtils.\n\t*/\n\n\tfunction CubicPoly() {\n\t\tlet c0 = 0,\n\t\t\t\tc1 = 0,\n\t\t\t\tc2 = 0,\n\t\t\t\tc3 = 0;\n\t\t/*\n\t\t * Compute coefficients for a cubic polynomial\n\t\t *\t p(s) = c0 + c1*s + c2*s^2 + c3*s^3\n\t\t * such that\n\t\t *\t p(0) = x0, p(1) = x1\n\t\t *\tand\n\t\t *\t p'(0) = t0, p'(1) = t1.\n\t\t */\n\n\t\tfunction init(x0, x1, t0, t1) {\n\t\t\tc0 = x0;\n\t\t\tc1 = t0;\n\t\t\tc2 = -3 * x0 + 3 * x1 - 2 * t0 - t1;\n\t\t\tc3 = 2 * x0 - 2 * x1 + t0 + t1;\n\t\t}\n\n\t\treturn {\n\t\t\tinitCatmullRom: function (x0, x1, x2, x3, tension) {\n\t\t\t\tinit(x1, x2, tension * (x2 - x0), tension * (x3 - x1));\n\t\t\t},\n\t\t\tinitNonuniformCatmullRom: function (x0, x1, x2, x3, dt0, dt1, dt2) {\n\t\t\t\t// compute tangents when parameterized in [t1,t2]\n\t\t\t\tlet t1 = (x1 - x0) / dt0 - (x2 - x0) / (dt0 + dt1) + (x2 - x1) / dt1;\n\t\t\t\tlet t2 = (x2 - x1) / dt1 - (x3 - x1) / (dt1 + dt2) + (x3 - x2) / dt2; // rescale tangents for parametrization in [0,1]\n\n\t\t\t\tt1 *= dt1;\n\t\t\t\tt2 *= dt1;\n\t\t\t\tinit(x1, x2, t1, t2);\n\t\t\t},\n\t\t\tcalc: function (t) {\n\t\t\t\tconst t2 = t * t;\n\t\t\t\tconst t3 = t2 * t;\n\t\t\t\treturn c0 + c1 * t + c2 * t2 + c3 * t3;\n\t\t\t}\n\t\t};\n\t} //\n\n\n\tconst tmp = new Vector3();\n\tconst px = new CubicPoly(),\n\t\t\t\tpy = new CubicPoly(),\n\t\t\t\tpz = new CubicPoly();\n\n\tclass CatmullRomCurve3 extends Curve {\n\t\tconstructor(points = [], closed = false, curveType = 'centripetal', tension = 0.5) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CatmullRomCurve3';\n\t\t\tthis.points = points;\n\t\t\tthis.closed = closed;\n\t\t\tthis.curveType = curveType;\n\t\t\tthis.tension = tension;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst l = points.length;\n\t\t\tconst p = (l - (this.closed ? 0 : 1)) * t;\n\t\t\tlet intPoint = Math.floor(p);\n\t\t\tlet weight = p - intPoint;\n\n\t\t\tif (this.closed) {\n\t\t\t\tintPoint += intPoint > 0 ? 0 : (Math.floor(Math.abs(intPoint) / l) + 1) * l;\n\t\t\t} else if (weight === 0 && intPoint === l - 1) {\n\t\t\t\tintPoint = l - 2;\n\t\t\t\tweight = 1;\n\t\t\t}\n\n\t\t\tlet p0, p3; // 4 points (p1 & p2 defined below)\n\n\t\t\tif (this.closed || intPoint > 0) {\n\t\t\t\tp0 = points[(intPoint - 1) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate first point\n\t\t\t\ttmp.subVectors(points[0], points[1]).add(points[0]);\n\t\t\t\tp0 = tmp;\n\t\t\t}\n\n\t\t\tconst p1 = points[intPoint % l];\n\t\t\tconst p2 = points[(intPoint + 1) % l];\n\n\t\t\tif (this.closed || intPoint + 2 < l) {\n\t\t\t\tp3 = points[(intPoint + 2) % l];\n\t\t\t} else {\n\t\t\t\t// extrapolate last point\n\t\t\t\ttmp.subVectors(points[l - 1], points[l - 2]).add(points[l - 1]);\n\t\t\t\tp3 = tmp;\n\t\t\t}\n\n\t\t\tif (this.curveType === 'centripetal' || this.curveType === 'chordal') {\n\t\t\t\t// init Centripetal / Chordal Catmull-Rom\n\t\t\t\tconst pow = this.curveType === 'chordal' ? 0.5 : 0.25;\n\t\t\t\tlet dt0 = Math.pow(p0.distanceToSquared(p1), pow);\n\t\t\t\tlet dt1 = Math.pow(p1.distanceToSquared(p2), pow);\n\t\t\t\tlet dt2 = Math.pow(p2.distanceToSquared(p3), pow); // safety check for repeated points\n\n\t\t\t\tif (dt1 < 1e-4) dt1 = 1.0;\n\t\t\t\tif (dt0 < 1e-4) dt0 = dt1;\n\t\t\t\tif (dt2 < 1e-4) dt2 = dt1;\n\t\t\t\tpx.initNonuniformCatmullRom(p0.x, p1.x, p2.x, p3.x, dt0, dt1, dt2);\n\t\t\t\tpy.initNonuniformCatmullRom(p0.y, p1.y, p2.y, p3.y, dt0, dt1, dt2);\n\t\t\t\tpz.initNonuniformCatmullRom(p0.z, p1.z, p2.z, p3.z, dt0, dt1, dt2);\n\t\t\t} else if (this.curveType === 'catmullrom') {\n\t\t\t\tpx.initCatmullRom(p0.x, p1.x, p2.x, p3.x, this.tension);\n\t\t\t\tpy.initCatmullRom(p0.y, p1.y, p2.y, p3.y, this.tension);\n\t\t\t\tpz.initCatmullRom(p0.z, p1.z, p2.z, p3.z, this.tension);\n\t\t\t}\n\n\t\t\tpoint.set(px.calc(weight), py.calc(weight), pz.calc(weight));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\tthis.closed = source.closed;\n\t\t\tthis.curveType = source.curveType;\n\t\t\tthis.tension = source.tension;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\tdata.closed = this.closed;\n\t\t\tdata.curveType = this.curveType;\n\t\t\tdata.tension = this.tension;\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector3().fromArray(point));\n\t\t\t}\n\n\t\t\tthis.closed = json.closed;\n\t\t\tthis.curveType = json.curveType;\n\t\t\tthis.tension = json.tension;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCatmullRomCurve3.prototype.isCatmullRomCurve3 = true;\n\n\t/**\n\t * Bezier Curves formulas obtained from\n\t * http://en.wikipedia.org/wiki/Bézier_curve\n\t */\n\tfunction CatmullRom(t, p0, p1, p2, p3) {\n\t\tconst v0 = (p2 - p0) * 0.5;\n\t\tconst v1 = (p3 - p1) * 0.5;\n\t\tconst t2 = t * t;\n\t\tconst t3 = t * t2;\n\t\treturn (2 * p1 - 2 * p2 + v0 + v1) * t3 + (-3 * p1 + 3 * p2 - 2 * v0 - v1) * t2 + v0 * t + p1;\n\t} //\n\n\n\tfunction QuadraticBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * p;\n\t}\n\n\tfunction QuadraticBezierP1(t, p) {\n\t\treturn 2 * (1 - t) * t * p;\n\t}\n\n\tfunction QuadraticBezierP2(t, p) {\n\t\treturn t * t * p;\n\t}\n\n\tfunction QuadraticBezier(t, p0, p1, p2) {\n\t\treturn QuadraticBezierP0(t, p0) + QuadraticBezierP1(t, p1) + QuadraticBezierP2(t, p2);\n\t} //\n\n\n\tfunction CubicBezierP0(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn k * k * k * p;\n\t}\n\n\tfunction CubicBezierP1(t, p) {\n\t\tconst k = 1 - t;\n\t\treturn 3 * k * k * t * p;\n\t}\n\n\tfunction CubicBezierP2(t, p) {\n\t\treturn 3 * (1 - t) * t * t * p;\n\t}\n\n\tfunction CubicBezierP3(t, p) {\n\t\treturn t * t * t * p;\n\t}\n\n\tfunction CubicBezier(t, p0, p1, p2, p3) {\n\t\treturn CubicBezierP0(t, p0) + CubicBezierP1(t, p1) + CubicBezierP2(t, p2) + CubicBezierP3(t, p3);\n\t}\n\n\tclass CubicBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2(), v3 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve.prototype.isCubicBezierCurve = true;\n\n\tclass CubicBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3(), v3 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'CubicBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t\tthis.v3 = v3;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2,\n\t\t\t\t\t\tv3 = this.v3;\n\t\t\tpoint.set(CubicBezier(t, v0.x, v1.x, v2.x, v3.x), CubicBezier(t, v0.y, v1.y, v2.y, v3.y), CubicBezier(t, v0.z, v1.z, v2.z, v3.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\tthis.v3.copy(source.v3);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\tdata.v3 = this.v3.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\tthis.v3.fromArray(json.v3);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tCubicBezierCurve3.prototype.isCubicBezierCurve3 = true;\n\n\tclass LineCurve extends Curve {\n\t\tconstructor(v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve';\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tgetTangent(t, optionalTarget) {\n\t\t\tconst tangent = optionalTarget || new Vector2();\n\t\t\ttangent.copy(this.v2).sub(this.v1).normalize();\n\t\t\treturn tangent;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tLineCurve.prototype.isLineCurve = true;\n\n\tclass LineCurve3 extends Curve {\n\t\tconstructor(v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'LineCurve3';\n\t\t\tthis.isLineCurve3 = true;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\n\t\t\tif (t === 1) {\n\t\t\t\tpoint.copy(this.v2);\n\t\t\t} else {\n\t\t\t\tpoint.copy(this.v2).sub(this.v1);\n\t\t\t\tpoint.multiplyScalar(t).add(this.v1);\n\t\t\t}\n\n\t\t\treturn point;\n\t\t} // Line curve is linear, so we can overwrite default getPointAt\n\n\n\t\tgetPointAt(u, optionalTarget) {\n\t\t\treturn this.getPoint(u, optionalTarget);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass QuadraticBezierCurve extends Curve {\n\t\tconstructor(v0 = new Vector2(), v1 = new Vector2(), v2 = new Vector2()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve.prototype.isQuadraticBezierCurve = true;\n\n\tclass QuadraticBezierCurve3 extends Curve {\n\t\tconstructor(v0 = new Vector3(), v1 = new Vector3(), v2 = new Vector3()) {\n\t\t\tsuper();\n\t\t\tthis.type = 'QuadraticBezierCurve3';\n\t\t\tthis.v0 = v0;\n\t\t\tthis.v1 = v1;\n\t\t\tthis.v2 = v2;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector3()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst v0 = this.v0,\n\t\t\t\t\t\tv1 = this.v1,\n\t\t\t\t\t\tv2 = this.v2;\n\t\t\tpoint.set(QuadraticBezier(t, v0.x, v1.x, v2.x), QuadraticBezier(t, v0.y, v1.y, v2.y), QuadraticBezier(t, v0.z, v1.z, v2.z));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.v0.copy(source.v0);\n\t\t\tthis.v1.copy(source.v1);\n\t\t\tthis.v2.copy(source.v2);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.v0 = this.v0.toArray();\n\t\t\tdata.v1 = this.v1.toArray();\n\t\t\tdata.v2 = this.v2.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.v0.fromArray(json.v0);\n\t\t\tthis.v1.fromArray(json.v1);\n\t\t\tthis.v2.fromArray(json.v2);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tQuadraticBezierCurve3.prototype.isQuadraticBezierCurve3 = true;\n\n\tclass SplineCurve extends Curve {\n\t\tconstructor(points = []) {\n\t\t\tsuper();\n\t\t\tthis.type = 'SplineCurve';\n\t\t\tthis.points = points;\n\t\t}\n\n\t\tgetPoint(t, optionalTarget = new Vector2()) {\n\t\t\tconst point = optionalTarget;\n\t\t\tconst points = this.points;\n\t\t\tconst p = (points.length - 1) * t;\n\t\t\tconst intPoint = Math.floor(p);\n\t\t\tconst weight = p - intPoint;\n\t\t\tconst p0 = points[intPoint === 0 ? intPoint : intPoint - 1];\n\t\t\tconst p1 = points[intPoint];\n\t\t\tconst p2 = points[intPoint > points.length - 2 ? points.length - 1 : intPoint + 1];\n\t\t\tconst p3 = points[intPoint > points.length - 3 ? points.length - 1 : intPoint + 2];\n\t\t\tpoint.set(CatmullRom(weight, p0.x, p1.x, p2.x, p3.x), CatmullRom(weight, p0.y, p1.y, p2.y, p3.y));\n\t\t\treturn point;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = source.points.length; i < l; i++) {\n\t\t\t\tconst point = source.points[i];\n\t\t\t\tthis.points.push(point.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.points = [];\n\n\t\t\tfor (let i = 0, l = this.points.length; i < l; i++) {\n\t\t\t\tconst point = this.points[i];\n\t\t\t\tdata.points.push(point.toArray());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.points = [];\n\n\t\t\tfor (let i = 0, l = json.points.length; i < l; i++) {\n\t\t\t\tconst point = json.points[i];\n\t\t\t\tthis.points.push(new Vector2().fromArray(point));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSplineCurve.prototype.isSplineCurve = true;\n\n\tvar Curves = /*#__PURE__*/Object.freeze({\n\t\t__proto__: null,\n\t\tArcCurve: ArcCurve,\n\t\tCatmullRomCurve3: CatmullRomCurve3,\n\t\tCubicBezierCurve: CubicBezierCurve,\n\t\tCubicBezierCurve3: CubicBezierCurve3,\n\t\tEllipseCurve: EllipseCurve,\n\t\tLineCurve: LineCurve,\n\t\tLineCurve3: LineCurve3,\n\t\tQuadraticBezierCurve: QuadraticBezierCurve,\n\t\tQuadraticBezierCurve3: QuadraticBezierCurve3,\n\t\tSplineCurve: SplineCurve\n\t});\n\n\t/**************************************************************\n\t *\tCurved Path - a curve path is simply a array of connected\n\t *\tcurves, but retains the api of a curve\n\t **************************************************************/\n\n\tclass CurvePath extends Curve {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'CurvePath';\n\t\t\tthis.curves = [];\n\t\t\tthis.autoClose = false; // Automatically closes the path\n\t\t}\n\n\t\tadd(curve) {\n\t\t\tthis.curves.push(curve);\n\t\t}\n\n\t\tclosePath() {\n\t\t\t// Add a line curve if start and end of lines are not connected\n\t\t\tconst startPoint = this.curves[0].getPoint(0);\n\t\t\tconst endPoint = this.curves[this.curves.length - 1].getPoint(1);\n\n\t\t\tif (!startPoint.equals(endPoint)) {\n\t\t\t\tthis.curves.push(new LineCurve(endPoint, startPoint));\n\t\t\t}\n\t\t} // To get accurate point with reference to\n\t\t// entire path distance at time t,\n\t\t// following has to be done:\n\t\t// 1. Length of each sub path have to be known\n\t\t// 2. Locate and identify type of curve\n\t\t// 3. Get t for the curve\n\t\t// 4. Return curve.getPointAt(t')\n\n\n\t\tgetPoint(t) {\n\t\t\tconst d = t * this.getLength();\n\t\t\tconst curveLengths = this.getCurveLengths();\n\t\t\tlet i = 0; // To think about boundaries points.\n\n\t\t\twhile (i < curveLengths.length) {\n\t\t\t\tif (curveLengths[i] >= d) {\n\t\t\t\t\tconst diff = curveLengths[i] - d;\n\t\t\t\t\tconst curve = this.curves[i];\n\t\t\t\t\tconst segmentLength = curve.getLength();\n\t\t\t\t\tconst u = segmentLength === 0 ? 0 : 1 - diff / segmentLength;\n\t\t\t\t\treturn curve.getPointAt(u);\n\t\t\t\t}\n\n\t\t\t\ti++;\n\t\t\t}\n\n\t\t\treturn null; // loop where sum != 0, sum > d , sum+1 <d\n\t\t} // We cannot use the default THREE.Curve getPoint() with getLength() because in\n\t\t// THREE.Curve, getLength() depends on getPoint() but in THREE.CurvePath\n\t\t// getPoint() depends on getLength\n\n\n\t\tgetLength() {\n\t\t\tconst lens = this.getCurveLengths();\n\t\t\treturn lens[lens.length - 1];\n\t\t} // cacheLengths must be recalculated.\n\n\n\t\tupdateArcLengths() {\n\t\t\tthis.needsUpdate = true;\n\t\t\tthis.cacheLengths = null;\n\t\t\tthis.getCurveLengths();\n\t\t} // Compute lengths and cache them\n\t\t// We cannot overwrite getLengths() because UtoT mapping uses it.\n\n\n\t\tgetCurveLengths() {\n\t\t\t// We use cache values if curves and cache array are same length\n\t\t\tif (this.cacheLengths && this.cacheLengths.length === this.curves.length) {\n\t\t\t\treturn this.cacheLengths;\n\t\t\t} // Get length of sub-curve\n\t\t\t// Push sums into cached array\n\n\n\t\t\tconst lengths = [];\n\t\t\tlet sums = 0;\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tsums += this.curves[i].getLength();\n\t\t\t\tlengths.push(sums);\n\t\t\t}\n\n\t\t\tthis.cacheLengths = lengths;\n\t\t\treturn lengths;\n\t\t}\n\n\t\tgetSpacedPoints(divisions = 40) {\n\t\t\tconst points = [];\n\n\t\t\tfor (let i = 0; i <= divisions; i++) {\n\t\t\t\tpoints.push(this.getPoint(i / divisions));\n\t\t\t}\n\n\t\t\tif (this.autoClose) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tgetPoints(divisions = 12) {\n\t\t\tconst points = [];\n\t\t\tlet last;\n\n\t\t\tfor (let i = 0, curves = this.curves; i < curves.length; i++) {\n\t\t\t\tconst curve = curves[i];\n\t\t\t\tconst resolution = curve && curve.isEllipseCurve ? divisions * 2 : curve && (curve.isLineCurve || curve.isLineCurve3) ? 1 : curve && curve.isSplineCurve ? divisions * curve.points.length : divisions;\n\t\t\t\tconst pts = curve.getPoints(resolution);\n\n\t\t\t\tfor (let j = 0; j < pts.length; j++) {\n\t\t\t\t\tconst point = pts[j];\n\t\t\t\t\tif (last && last.equals(point)) continue; // ensures no consecutive points are duplicates\n\n\t\t\t\t\tpoints.push(point);\n\t\t\t\t\tlast = point;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (this.autoClose && points.length > 1 && !points[points.length - 1].equals(points[0])) {\n\t\t\t\tpoints.push(points[0]);\n\t\t\t}\n\n\t\t\treturn points;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = source.curves.length; i < l; i++) {\n\t\t\t\tconst curve = source.curves[i];\n\t\t\t\tthis.curves.push(curve.clone());\n\t\t\t}\n\n\t\t\tthis.autoClose = source.autoClose;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.autoClose = this.autoClose;\n\t\t\tdata.curves = [];\n\n\t\t\tfor (let i = 0, l = this.curves.length; i < l; i++) {\n\t\t\t\tconst curve = this.curves[i];\n\t\t\t\tdata.curves.push(curve.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.autoClose = json.autoClose;\n\t\t\tthis.curves = [];\n\n\t\t\tfor (let i = 0, l = json.curves.length; i < l; i++) {\n\t\t\t\tconst curve = json.curves[i];\n\t\t\t\tthis.curves.push(new Curves[curve.type]().fromJSON(curve));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Path extends CurvePath {\n\t\tconstructor(points) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Path';\n\t\t\tthis.currentPoint = new Vector2();\n\n\t\t\tif (points) {\n\t\t\t\tthis.setFromPoints(points);\n\t\t\t}\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.moveTo(points[0].x, points[0].y);\n\n\t\t\tfor (let i = 1, l = points.length; i < l; i++) {\n\t\t\t\tthis.lineTo(points[i].x, points[i].y);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPoint.set(x, y); // TODO consider referencing vectors instead of copying?\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tconst curve = new LineCurve(this.currentPoint.clone(), new Vector2(x, y));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tconst curve = new QuadraticBezierCurve(this.currentPoint.clone(), new Vector2(aCPx, aCPy), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tconst curve = new CubicBezierCurve(this.currentPoint.clone(), new Vector2(aCP1x, aCP1y), new Vector2(aCP2x, aCP2y), new Vector2(aX, aY));\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.set(aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts\n\t\t/*Array of Vector*/\n\t\t) {\n\t\t\tconst npts = [this.currentPoint.clone()].concat(pts);\n\t\t\tconst curve = new SplineCurve(npts);\n\t\t\tthis.curves.push(curve);\n\t\t\tthis.currentPoint.copy(pts[pts.length - 1]);\n\t\t\treturn this;\n\t\t}\n\n\t\tarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absarc(aX + x0, aY + y0, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsarc(aX, aY, aRadius, aStartAngle, aEndAngle, aClockwise) {\n\t\t\tthis.absellipse(aX, aY, aRadius, aRadius, aStartAngle, aEndAngle, aClockwise);\n\t\t\treturn this;\n\t\t}\n\n\t\tellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst x0 = this.currentPoint.x;\n\t\t\tconst y0 = this.currentPoint.y;\n\t\t\tthis.absellipse(aX + x0, aY + y0, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\t\t\treturn this;\n\t\t}\n\n\t\tabsellipse(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation) {\n\t\t\tconst curve = new EllipseCurve(aX, aY, xRadius, yRadius, aStartAngle, aEndAngle, aClockwise, aRotation);\n\n\t\t\tif (this.curves.length > 0) {\n\t\t\t\t// if a previous curve is present, attempt to join\n\t\t\t\tconst firstPoint = curve.getPoint(0);\n\n\t\t\t\tif (!firstPoint.equals(this.currentPoint)) {\n\t\t\t\t\tthis.lineTo(firstPoint.x, firstPoint.y);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis.curves.push(curve);\n\t\t\tconst lastPoint = curve.getPoint(1);\n\t\t\tthis.currentPoint.copy(lastPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.currentPoint.copy(source.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.currentPoint = this.currentPoint.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.currentPoint.fromArray(json.currentPoint);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Shape extends Path {\n\t\tconstructor(points) {\n\t\t\tsuper(points);\n\t\t\tthis.uuid = generateUUID();\n\t\t\tthis.type = 'Shape';\n\t\t\tthis.holes = [];\n\t\t}\n\n\t\tgetPointsHoles(divisions) {\n\t\t\tconst holesPts = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tholesPts[i] = this.holes[i].getPoints(divisions);\n\t\t\t}\n\n\t\t\treturn holesPts;\n\t\t} // get points of shape and holes (keypoints based on segments parameter)\n\n\n\t\textractPoints(divisions) {\n\t\t\treturn {\n\t\t\t\tshape: this.getPoints(divisions),\n\t\t\t\tholes: this.getPointsHoles(divisions)\n\t\t\t};\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = source.holes.length; i < l; i++) {\n\t\t\t\tconst hole = source.holes[i];\n\t\t\t\tthis.holes.push(hole.clone());\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.uuid = this.uuid;\n\t\t\tdata.holes = [];\n\n\t\t\tfor (let i = 0, l = this.holes.length; i < l; i++) {\n\t\t\t\tconst hole = this.holes[i];\n\t\t\t\tdata.holes.push(hole.toJSON());\n\t\t\t}\n\n\t\t\treturn data;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tsuper.fromJSON(json);\n\t\t\tthis.uuid = json.uuid;\n\t\t\tthis.holes = [];\n\n\t\t\tfor (let i = 0, l = json.holes.length; i < l; i++) {\n\t\t\t\tconst hole = json.holes[i];\n\t\t\t\tthis.holes.push(new Path().fromJSON(hole));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Light extends Object3D {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Light';\n\t\t\tthis.color = new Color(color);\n\t\t\tthis.intensity = intensity;\n\t\t}\n\n\t\tdispose() {// Empty here in base class; some subclasses override.\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.color.copy(source.color);\n\t\t\tthis.intensity = source.intensity;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.color = this.color.getHex();\n\t\t\tdata.object.intensity = this.intensity;\n\t\t\tif (this.groundColor !== undefined) data.object.groundColor = this.groundColor.getHex();\n\t\t\tif (this.distance !== undefined) data.object.distance = this.distance;\n\t\t\tif (this.angle !== undefined) data.object.angle = this.angle;\n\t\t\tif (this.decay !== undefined) data.object.decay = this.decay;\n\t\t\tif (this.penumbra !== undefined) data.object.penumbra = this.penumbra;\n\t\t\tif (this.shadow !== undefined) data.object.shadow = this.shadow.toJSON();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLight.prototype.isLight = true;\n\n\tclass HemisphereLight extends Light {\n\t\tconstructor(skyColor, groundColor, intensity) {\n\t\t\tsuper(skyColor, intensity);\n\t\t\tthis.type = 'HemisphereLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.groundColor = new Color(groundColor);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLight.prototype.copy.call(this, source);\n\t\t\tthis.groundColor.copy(source.groundColor);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tHemisphereLight.prototype.isHemisphereLight = true;\n\n\tconst _projScreenMatrix$1 = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld$1 = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget$1 = /*@__PURE__*/new Vector3();\n\n\tclass LightShadow {\n\t\tconstructor(camera) {\n\t\t\tthis.camera = camera;\n\t\t\tthis.bias = 0;\n\t\t\tthis.normalBias = 0;\n\t\t\tthis.radius = 1;\n\t\t\tthis.mapSize = new Vector2(512, 512);\n\t\t\tthis.map = null;\n\t\t\tthis.mapPass = null;\n\t\t\tthis.matrix = new Matrix4();\n\t\t\tthis.autoUpdate = true;\n\t\t\tthis.needsUpdate = false;\n\t\t\tthis._frustum = new Frustum();\n\t\t\tthis._frameExtents = new Vector2(1, 1);\n\t\t\tthis._viewportCount = 1;\n\t\t\tthis._viewports = [new Vector4(0, 0, 1, 1)];\n\t\t}\n\n\t\tgetViewportCount() {\n\t\t\treturn this._viewportCount;\n\t\t}\n\n\t\tgetFrustum() {\n\t\t\treturn this._frustum;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst shadowCamera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\n\t\t\t_lightPositionWorld$1.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tshadowCamera.position.copy(_lightPositionWorld$1);\n\n\t\t\t_lookTarget$1.setFromMatrixPosition(light.target.matrixWorld);\n\n\t\t\tshadowCamera.lookAt(_lookTarget$1);\n\t\t\tshadowCamera.updateMatrixWorld();\n\n\t\t\t_projScreenMatrix$1.multiplyMatrices(shadowCamera.projectionMatrix, shadowCamera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix$1);\n\n\t\t\tshadowMatrix.set(0.5, 0.0, 0.0, 0.5, 0.0, 0.5, 0.0, 0.5, 0.0, 0.0, 0.5, 0.5, 0.0, 0.0, 0.0, 1.0);\n\t\t\tshadowMatrix.multiply(shadowCamera.projectionMatrix);\n\t\t\tshadowMatrix.multiply(shadowCamera.matrixWorldInverse);\n\t\t}\n\n\t\tgetViewport(viewportIndex) {\n\t\t\treturn this._viewports[viewportIndex];\n\t\t}\n\n\t\tgetFrameExtents() {\n\t\t\treturn this._frameExtents;\n\t\t}\n\n\t\tdispose() {\n\t\t\tif (this.map) {\n\t\t\t\tthis.map.dispose();\n\t\t\t}\n\n\t\t\tif (this.mapPass) {\n\t\t\t\tthis.mapPass.dispose();\n\t\t\t}\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tthis.camera = source.camera.clone();\n\t\t\tthis.bias = source.bias;\n\t\t\tthis.radius = source.radius;\n\t\t\tthis.mapSize.copy(source.mapSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst object = {};\n\t\t\tif (this.bias !== 0) object.bias = this.bias;\n\t\t\tif (this.normalBias !== 0) object.normalBias = this.normalBias;\n\t\t\tif (this.radius !== 1) object.radius = this.radius;\n\t\t\tif (this.mapSize.x !== 512 || this.mapSize.y !== 512) object.mapSize = this.mapSize.toArray();\n\t\t\tobject.camera = this.camera.toJSON(false).object;\n\t\t\tdelete object.camera.matrix;\n\t\t\treturn object;\n\t\t}\n\n\t}\n\n\tclass SpotLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(50, 1, 0.5, 500));\n\t\t\tthis.focus = 1;\n\t\t}\n\n\t\tupdateMatrices(light) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst fov = RAD2DEG * 2 * light.angle * this.focus;\n\t\t\tconst aspect = this.mapSize.width / this.mapSize.height;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (fov !== camera.fov || aspect !== camera.aspect || far !== camera.far) {\n\t\t\t\tcamera.fov = fov;\n\t\t\t\tcamera.aspect = aspect;\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\tsuper.updateMatrices(light);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.focus = source.focus;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLightShadow.prototype.isSpotLightShadow = true;\n\n\tclass SpotLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, angle = Math.PI / 3, penumbra = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'SpotLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.distance = distance;\n\t\t\tthis.angle = angle;\n\t\t\tthis.penumbra = penumbra;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new SpotLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (17) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / Math.PI;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.angle = source.angle;\n\t\t\tthis.penumbra = source.penumbra;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tSpotLight.prototype.isSpotLight = true;\n\n\tconst _projScreenMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _lightPositionWorld = /*@__PURE__*/new Vector3();\n\n\tconst _lookTarget = /*@__PURE__*/new Vector3();\n\n\tclass PointLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new PerspectiveCamera(90, 1, 0.5, 500));\n\t\t\tthis._frameExtents = new Vector2(4, 2);\n\t\t\tthis._viewportCount = 6;\n\t\t\tthis._viewports = [// These viewports map a cube-map onto a 2D texture with the\n\t\t\t// following orientation:\n\t\t\t//\n\t\t\t//\txzXZ\n\t\t\t//\t y Y\n\t\t\t//\n\t\t\t// X - Positive x direction\n\t\t\t// x - Negative x direction\n\t\t\t// Y - Positive y direction\n\t\t\t// y - Negative y direction\n\t\t\t// Z - Positive z direction\n\t\t\t// z - Negative z direction\n\t\t\t// positive X\n\t\t\tnew Vector4(2, 1, 1, 1), // negative X\n\t\t\tnew Vector4(0, 1, 1, 1), // positive Z\n\t\t\tnew Vector4(3, 1, 1, 1), // negative Z\n\t\t\tnew Vector4(1, 1, 1, 1), // positive Y\n\t\t\tnew Vector4(3, 0, 1, 1), // negative Y\n\t\t\tnew Vector4(1, 0, 1, 1)];\n\t\t\tthis._cubeDirections = [new Vector3(1, 0, 0), new Vector3(-1, 0, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1), new Vector3(0, 1, 0), new Vector3(0, -1, 0)];\n\t\t\tthis._cubeUps = [new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 1, 0), new Vector3(0, 0, 1), new Vector3(0, 0, -1)];\n\t\t}\n\n\t\tupdateMatrices(light, viewportIndex = 0) {\n\t\t\tconst camera = this.camera;\n\t\t\tconst shadowMatrix = this.matrix;\n\t\t\tconst far = light.distance || camera.far;\n\n\t\t\tif (far !== camera.far) {\n\t\t\t\tcamera.far = far;\n\t\t\t\tcamera.updateProjectionMatrix();\n\t\t\t}\n\n\t\t\t_lightPositionWorld.setFromMatrixPosition(light.matrixWorld);\n\n\t\t\tcamera.position.copy(_lightPositionWorld);\n\n\t\t\t_lookTarget.copy(camera.position);\n\n\t\t\t_lookTarget.add(this._cubeDirections[viewportIndex]);\n\n\t\t\tcamera.up.copy(this._cubeUps[viewportIndex]);\n\t\t\tcamera.lookAt(_lookTarget);\n\t\t\tcamera.updateMatrixWorld();\n\t\t\tshadowMatrix.makeTranslation(-_lightPositionWorld.x, -_lightPositionWorld.y, -_lightPositionWorld.z);\n\n\t\t\t_projScreenMatrix.multiplyMatrices(camera.projectionMatrix, camera.matrixWorldInverse);\n\n\t\t\tthis._frustum.setFromProjectionMatrix(_projScreenMatrix);\n\t\t}\n\n\t}\n\n\tPointLightShadow.prototype.isPointLightShadow = true;\n\n\tclass PointLight extends Light {\n\t\tconstructor(color, intensity, distance = 0, decay = 1) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'PointLight';\n\t\t\tthis.distance = distance;\n\t\t\tthis.decay = decay; // for physically correct lights, should be 2.\n\n\t\t\tthis.shadow = new PointLightShadow();\n\t\t}\n\n\t\tget power() {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\treturn this.intensity * 4 * Math.PI;\n\t\t}\n\n\t\tset power(power) {\n\t\t\t// intensity = power per solid angle.\n\t\t\t// ref: equation (15) from https://seblagarde.files.wordpress.com/2015/07/course_notes_moving_frostbite_to_pbr_v32.pdf\n\t\t\tthis.intensity = power / (4 * Math.PI);\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.distance = source.distance;\n\t\t\tthis.decay = source.decay;\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tPointLight.prototype.isPointLight = true;\n\n\tclass OrthographicCamera extends Camera {\n\t\tconstructor(left = -1, right = 1, top = 1, bottom = -1, near = 0.1, far = 2000) {\n\t\t\tsuper();\n\t\t\tthis.type = 'OrthographicCamera';\n\t\t\tthis.zoom = 1;\n\t\t\tthis.view = null;\n\t\t\tthis.left = left;\n\t\t\tthis.right = right;\n\t\t\tthis.top = top;\n\t\t\tthis.bottom = bottom;\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tcopy(source, recursive) {\n\t\t\tsuper.copy(source, recursive);\n\t\t\tthis.left = source.left;\n\t\t\tthis.right = source.right;\n\t\t\tthis.top = source.top;\n\t\t\tthis.bottom = source.bottom;\n\t\t\tthis.near = source.near;\n\t\t\tthis.far = source.far;\n\t\t\tthis.zoom = source.zoom;\n\t\t\tthis.view = source.view === null ? null : Object.assign({}, source.view);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetViewOffset(fullWidth, fullHeight, x, y, width, height) {\n\t\t\tif (this.view === null) {\n\t\t\t\tthis.view = {\n\t\t\t\t\tenabled: true,\n\t\t\t\t\tfullWidth: 1,\n\t\t\t\t\tfullHeight: 1,\n\t\t\t\t\toffsetX: 0,\n\t\t\t\t\toffsetY: 0,\n\t\t\t\t\twidth: 1,\n\t\t\t\t\theight: 1\n\t\t\t\t};\n\t\t\t}\n\n\t\t\tthis.view.enabled = true;\n\t\t\tthis.view.fullWidth = fullWidth;\n\t\t\tthis.view.fullHeight = fullHeight;\n\t\t\tthis.view.offsetX = x;\n\t\t\tthis.view.offsetY = y;\n\t\t\tthis.view.width = width;\n\t\t\tthis.view.height = height;\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tclearViewOffset() {\n\t\t\tif (this.view !== null) {\n\t\t\t\tthis.view.enabled = false;\n\t\t\t}\n\n\t\t\tthis.updateProjectionMatrix();\n\t\t}\n\n\t\tupdateProjectionMatrix() {\n\t\t\tconst dx = (this.right - this.left) / (2 * this.zoom);\n\t\t\tconst dy = (this.top - this.bottom) / (2 * this.zoom);\n\t\t\tconst cx = (this.right + this.left) / 2;\n\t\t\tconst cy = (this.top + this.bottom) / 2;\n\t\t\tlet left = cx - dx;\n\t\t\tlet right = cx + dx;\n\t\t\tlet top = cy + dy;\n\t\t\tlet bottom = cy - dy;\n\n\t\t\tif (this.view !== null && this.view.enabled) {\n\t\t\t\tconst scaleW = (this.right - this.left) / this.view.fullWidth / this.zoom;\n\t\t\t\tconst scaleH = (this.top - this.bottom) / this.view.fullHeight / this.zoom;\n\t\t\t\tleft += scaleW * this.view.offsetX;\n\t\t\t\tright = left + scaleW * this.view.width;\n\t\t\t\ttop -= scaleH * this.view.offsetY;\n\t\t\t\tbottom = top - scaleH * this.view.height;\n\t\t\t}\n\n\t\t\tthis.projectionMatrix.makeOrthographic(left, right, top, bottom, this.near, this.far);\n\t\t\tthis.projectionMatrixInverse.copy(this.projectionMatrix).invert();\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.zoom = this.zoom;\n\t\t\tdata.object.left = this.left;\n\t\t\tdata.object.right = this.right;\n\t\t\tdata.object.top = this.top;\n\t\t\tdata.object.bottom = this.bottom;\n\t\t\tdata.object.near = this.near;\n\t\t\tdata.object.far = this.far;\n\t\t\tif (this.view !== null) data.object.view = Object.assign({}, this.view);\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tOrthographicCamera.prototype.isOrthographicCamera = true;\n\n\tclass DirectionalLightShadow extends LightShadow {\n\t\tconstructor() {\n\t\t\tsuper(new OrthographicCamera(-5, 5, 5, -5, 0.5, 500));\n\t\t}\n\n\t}\n\n\tDirectionalLightShadow.prototype.isDirectionalLightShadow = true;\n\n\tclass DirectionalLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'DirectionalLight';\n\t\t\tthis.position.copy(Object3D.DefaultUp);\n\t\t\tthis.updateMatrix();\n\t\t\tthis.target = new Object3D();\n\t\t\tthis.shadow = new DirectionalLightShadow();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.shadow.dispose();\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.target = source.target.clone();\n\t\t\tthis.shadow = source.shadow.clone();\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tDirectionalLight.prototype.isDirectionalLight = true;\n\n\tclass AmbientLight extends Light {\n\t\tconstructor(color, intensity) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'AmbientLight';\n\t\t}\n\n\t}\n\n\tAmbientLight.prototype.isAmbientLight = true;\n\n\tclass RectAreaLight extends Light {\n\t\tconstructor(color, intensity, width = 10, height = 10) {\n\t\t\tsuper(color, intensity);\n\t\t\tthis.type = 'RectAreaLight';\n\t\t\tthis.width = width;\n\t\t\tthis.height = height;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.width = source.width;\n\t\t\tthis.height = source.height;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.width = this.width;\n\t\t\tdata.object.height = this.height;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tRectAreaLight.prototype.isRectAreaLight = true;\n\n\t/**\n\t * Primary reference:\n\t *\t https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\t *\n\t * Secondary reference:\n\t *\t https://www.ppsloan.org/publications/StupidSH36.pdf\n\t */\n\t// 3-band SH defined by 9 coefficients\n\n\tclass SphericalHarmonics3 {\n\t\tconstructor() {\n\t\t\tthis.coefficients = [];\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients.push(new Vector3());\n\t\t\t}\n\t\t}\n\n\t\tset(coefficients) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].copy(coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tzero() {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].set(0, 0, 0);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // get the radiance in the direction of the normal\n\t\t// target is a Vector3\n\n\n\t\tgetAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.282095); // band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 0.488603 * y);\n\t\t\ttarget.addScaledVector(coeff[2], 0.488603 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 0.488603 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 1.092548 * (x * y));\n\t\t\ttarget.addScaledVector(coeff[5], 1.092548 * (y * z));\n\t\t\ttarget.addScaledVector(coeff[6], 0.315392 * (3.0 * z * z - 1.0));\n\t\t\ttarget.addScaledVector(coeff[7], 1.092548 * (x * z));\n\t\t\ttarget.addScaledVector(coeff[8], 0.546274 * (x * x - y * y));\n\t\t\treturn target;\n\t\t} // get the irradiance (radiance convolved with cosine lobe) in the direction of the normal\n\t\t// target is a Vector3\n\t\t// https://graphics.stanford.edu/papers/envmap/envmap.pdf\n\n\n\t\tgetIrradianceAt(normal, target) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z;\n\t\t\tconst coeff = this.coefficients; // band 0\n\n\t\t\ttarget.copy(coeff[0]).multiplyScalar(0.886227); // π * 0.282095\n\t\t\t// band 1\n\n\t\t\ttarget.addScaledVector(coeff[1], 2.0 * 0.511664 * y); // ( 2 * π / 3 ) * 0.488603\n\n\t\t\ttarget.addScaledVector(coeff[2], 2.0 * 0.511664 * z);\n\t\t\ttarget.addScaledVector(coeff[3], 2.0 * 0.511664 * x); // band 2\n\n\t\t\ttarget.addScaledVector(coeff[4], 2.0 * 0.429043 * x * y); // ( π / 4 ) * 1.092548\n\n\t\t\ttarget.addScaledVector(coeff[5], 2.0 * 0.429043 * y * z);\n\t\t\ttarget.addScaledVector(coeff[6], 0.743125 * z * z - 0.247708); // ( π / 4 ) * 0.315392 * 3\n\n\t\t\ttarget.addScaledVector(coeff[7], 2.0 * 0.429043 * x * z);\n\t\t\ttarget.addScaledVector(coeff[8], 0.429043 * (x * x - y * y)); // ( π / 4 ) * 0.546274\n\n\t\t\treturn target;\n\t\t}\n\n\t\tadd(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].add(sh.coefficients[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\taddScaledSH(sh, s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].addScaledVector(sh.coefficients[i], s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tscale(s) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].multiplyScalar(s);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tlerp(sh, alpha) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tthis.coefficients[i].lerp(sh.coefficients[i], alpha);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(sh) {\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tif (!this.coefficients[i].equals(sh.coefficients[i])) {\n\t\t\t\t\treturn false;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn true;\n\t\t}\n\n\t\tcopy(sh) {\n\t\t\treturn this.set(sh.coefficients);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tfromArray(array, offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].fromArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\ttoArray(array = [], offset = 0) {\n\t\t\tconst coefficients = this.coefficients;\n\n\t\t\tfor (let i = 0; i < 9; i++) {\n\t\t\t\tcoefficients[i].toArray(array, offset + i * 3);\n\t\t\t}\n\n\t\t\treturn array;\n\t\t} // evaluate the basis functions\n\t\t// shBasis is an Array[ 9 ]\n\n\n\t\tstatic getBasisAt(normal, shBasis) {\n\t\t\t// normal is assumed to be unit length\n\t\t\tconst x = normal.x,\n\t\t\t\t\t\ty = normal.y,\n\t\t\t\t\t\tz = normal.z; // band 0\n\n\t\t\tshBasis[0] = 0.282095; // band 1\n\n\t\t\tshBasis[1] = 0.488603 * y;\n\t\t\tshBasis[2] = 0.488603 * z;\n\t\t\tshBasis[3] = 0.488603 * x; // band 2\n\n\t\t\tshBasis[4] = 1.092548 * x * y;\n\t\t\tshBasis[5] = 1.092548 * y * z;\n\t\t\tshBasis[6] = 0.315392 * (3 * z * z - 1);\n\t\t\tshBasis[7] = 1.092548 * x * z;\n\t\t\tshBasis[8] = 0.546274 * (x * x - y * y);\n\t\t}\n\n\t}\n\n\tSphericalHarmonics3.prototype.isSphericalHarmonics3 = true;\n\n\tclass LightProbe extends Light {\n\t\tconstructor(sh = new SphericalHarmonics3(), intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tthis.sh = sh;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.sh.copy(source.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\tfromJSON(json) {\n\t\t\tthis.intensity = json.intensity; // TODO: Move this bit to Light.fromJSON();\n\n\t\t\tthis.sh.fromArray(json.sh);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON(meta) {\n\t\t\tconst data = super.toJSON(meta);\n\t\t\tdata.object.sh = this.sh.toArray();\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tLightProbe.prototype.isLightProbe = true;\n\n\tclass MaterialLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t\tthis.textures = {};\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst textures = this.textures;\n\n\t\t\tfunction getTexture(name) {\n\t\t\t\tif (textures[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.MaterialLoader: Undefined texture', name);\n\t\t\t\t}\n\n\t\t\t\treturn textures[name];\n\t\t\t}\n\n\t\t\tconst material = new Materials[json.type]();\n\t\t\tif (json.uuid !== undefined) material.uuid = json.uuid;\n\t\t\tif (json.name !== undefined) material.name = json.name;\n\t\t\tif (json.color !== undefined && material.color !== undefined) material.color.setHex(json.color);\n\t\t\tif (json.roughness !== undefined) material.roughness = json.roughness;\n\t\t\tif (json.metalness !== undefined) material.metalness = json.metalness;\n\t\t\tif (json.sheen !== undefined) material.sheen = new Color().setHex(json.sheen);\n\t\t\tif (json.emissive !== undefined && material.emissive !== undefined) material.emissive.setHex(json.emissive);\n\t\t\tif (json.specular !== undefined && material.specular !== undefined) material.specular.setHex(json.specular);\n\t\t\tif (json.shininess !== undefined) material.shininess = json.shininess;\n\t\t\tif (json.clearcoat !== undefined) material.clearcoat = json.clearcoat;\n\t\t\tif (json.clearcoatRoughness !== undefined) material.clearcoatRoughness = json.clearcoatRoughness;\n\t\t\tif (json.transmission !== undefined) material.transmission = json.transmission;\n\t\t\tif (json.thickness !== undefined) material.thickness = json.thickness;\n\t\t\tif (json.attenuationDistance !== undefined) material.attenuationDistance = json.attenuationDistance;\n\t\t\tif (json.attenuationColor !== undefined && material.attenuationColor !== undefined) material.attenuationColor.setHex(json.attenuationColor);\n\t\t\tif (json.fog !== undefined) material.fog = json.fog;\n\t\t\tif (json.flatShading !== undefined) material.flatShading = json.flatShading;\n\t\t\tif (json.blending !== undefined) material.blending = json.blending;\n\t\t\tif (json.combine !== undefined) material.combine = json.combine;\n\t\t\tif (json.side !== undefined) material.side = json.side;\n\t\t\tif (json.shadowSide !== undefined) material.shadowSide = json.shadowSide;\n\t\t\tif (json.opacity !== undefined) material.opacity = json.opacity;\n\t\t\tif (json.transparent !== undefined) material.transparent = json.transparent;\n\t\t\tif (json.alphaTest !== undefined) material.alphaTest = json.alphaTest;\n\t\t\tif (json.depthTest !== undefined) material.depthTest = json.depthTest;\n\t\t\tif (json.depthWrite !== undefined) material.depthWrite = json.depthWrite;\n\t\t\tif (json.colorWrite !== undefined) material.colorWrite = json.colorWrite;\n\t\t\tif (json.stencilWrite !== undefined) material.stencilWrite = json.stencilWrite;\n\t\t\tif (json.stencilWriteMask !== undefined) material.stencilWriteMask = json.stencilWriteMask;\n\t\t\tif (json.stencilFunc !== undefined) material.stencilFunc = json.stencilFunc;\n\t\t\tif (json.stencilRef !== undefined) material.stencilRef = json.stencilRef;\n\t\t\tif (json.stencilFuncMask !== undefined) material.stencilFuncMask = json.stencilFuncMask;\n\t\t\tif (json.stencilFail !== undefined) material.stencilFail = json.stencilFail;\n\t\t\tif (json.stencilZFail !== undefined) material.stencilZFail = json.stencilZFail;\n\t\t\tif (json.stencilZPass !== undefined) material.stencilZPass = json.stencilZPass;\n\t\t\tif (json.wireframe !== undefined) material.wireframe = json.wireframe;\n\t\t\tif (json.wireframeLinewidth !== undefined) material.wireframeLinewidth = json.wireframeLinewidth;\n\t\t\tif (json.wireframeLinecap !== undefined) material.wireframeLinecap = json.wireframeLinecap;\n\t\t\tif (json.wireframeLinejoin !== undefined) material.wireframeLinejoin = json.wireframeLinejoin;\n\t\t\tif (json.rotation !== undefined) material.rotation = json.rotation;\n\t\t\tif (json.linewidth !== 1) material.linewidth = json.linewidth;\n\t\t\tif (json.dashSize !== undefined) material.dashSize = json.dashSize;\n\t\t\tif (json.gapSize !== undefined) material.gapSize = json.gapSize;\n\t\t\tif (json.scale !== undefined) material.scale = json.scale;\n\t\t\tif (json.polygonOffset !== undefined) material.polygonOffset = json.polygonOffset;\n\t\t\tif (json.polygonOffsetFactor !== undefined) material.polygonOffsetFactor = json.polygonOffsetFactor;\n\t\t\tif (json.polygonOffsetUnits !== undefined) material.polygonOffsetUnits = json.polygonOffsetUnits;\n\t\t\tif (json.morphTargets !== undefined) material.morphTargets = json.morphTargets;\n\t\t\tif (json.morphNormals !== undefined) material.morphNormals = json.morphNormals;\n\t\t\tif (json.dithering !== undefined) material.dithering = json.dithering;\n\t\t\tif (json.alphaToCoverage !== undefined) material.alphaToCoverage = json.alphaToCoverage;\n\t\t\tif (json.premultipliedAlpha !== undefined) material.premultipliedAlpha = json.premultipliedAlpha;\n\t\t\tif (json.vertexTangents !== undefined) material.vertexTangents = json.vertexTangents;\n\t\t\tif (json.visible !== undefined) material.visible = json.visible;\n\t\t\tif (json.toneMapped !== undefined) material.toneMapped = json.toneMapped;\n\t\t\tif (json.userData !== undefined) material.userData = json.userData;\n\n\t\t\tif (json.vertexColors !== undefined) {\n\t\t\t\tif (typeof json.vertexColors === 'number') {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors > 0 ? true : false;\n\t\t\t\t} else {\n\t\t\t\t\tmaterial.vertexColors = json.vertexColors;\n\t\t\t\t}\n\t\t\t} // Shader Material\n\n\n\t\t\tif (json.uniforms !== undefined) {\n\t\t\t\tfor (const name in json.uniforms) {\n\t\t\t\t\tconst uniform = json.uniforms[name];\n\t\t\t\t\tmaterial.uniforms[name] = {};\n\n\t\t\t\t\tswitch (uniform.type) {\n\t\t\t\t\t\tcase 't':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = getTexture(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'c':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Color().setHex(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v2':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector2().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'v4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Vector4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm3':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix3().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'm4':\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = new Matrix4().fromArray(uniform.value);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tmaterial.uniforms[name].value = uniform.value;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json.defines !== undefined) material.defines = json.defines;\n\t\t\tif (json.vertexShader !== undefined) material.vertexShader = json.vertexShader;\n\t\t\tif (json.fragmentShader !== undefined) material.fragmentShader = json.fragmentShader;\n\n\t\t\tif (json.extensions !== undefined) {\n\t\t\t\tfor (const key in json.extensions) {\n\t\t\t\t\tmaterial.extensions[key] = json.extensions[key];\n\t\t\t\t}\n\t\t\t} // Deprecated\n\n\n\t\t\tif (json.shading !== undefined) material.flatShading = json.shading === 1; // THREE.FlatShading\n\t\t\t// for PointsMaterial\n\n\t\t\tif (json.size !== undefined) material.size = json.size;\n\t\t\tif (json.sizeAttenuation !== undefined) material.sizeAttenuation = json.sizeAttenuation; // maps\n\n\t\t\tif (json.map !== undefined) material.map = getTexture(json.map);\n\t\t\tif (json.matcap !== undefined) material.matcap = getTexture(json.matcap);\n\t\t\tif (json.alphaMap !== undefined) material.alphaMap = getTexture(json.alphaMap);\n\t\t\tif (json.bumpMap !== undefined) material.bumpMap = getTexture(json.bumpMap);\n\t\t\tif (json.bumpScale !== undefined) material.bumpScale = json.bumpScale;\n\t\t\tif (json.normalMap !== undefined) material.normalMap = getTexture(json.normalMap);\n\t\t\tif (json.normalMapType !== undefined) material.normalMapType = json.normalMapType;\n\n\t\t\tif (json.normalScale !== undefined) {\n\t\t\t\tlet normalScale = json.normalScale;\n\n\t\t\t\tif (Array.isArray(normalScale) === false) {\n\t\t\t\t\t// Blender exporter used to export a scalar. See #7459\n\t\t\t\t\tnormalScale = [normalScale, normalScale];\n\t\t\t\t}\n\n\t\t\t\tmaterial.normalScale = new Vector2().fromArray(normalScale);\n\t\t\t}\n\n\t\t\tif (json.displacementMap !== undefined) material.displacementMap = getTexture(json.displacementMap);\n\t\t\tif (json.displacementScale !== undefined) material.displacementScale = json.displacementScale;\n\t\t\tif (json.displacementBias !== undefined) material.displacementBias = json.displacementBias;\n\t\t\tif (json.roughnessMap !== undefined) material.roughnessMap = getTexture(json.roughnessMap);\n\t\t\tif (json.metalnessMap !== undefined) material.metalnessMap = getTexture(json.metalnessMap);\n\t\t\tif (json.emissiveMap !== undefined) material.emissiveMap = getTexture(json.emissiveMap);\n\t\t\tif (json.emissiveIntensity !== undefined) material.emissiveIntensity = json.emissiveIntensity;\n\t\t\tif (json.specularMap !== undefined) material.specularMap = getTexture(json.specularMap);\n\t\t\tif (json.envMap !== undefined) material.envMap = getTexture(json.envMap);\n\t\t\tif (json.envMapIntensity !== undefined) material.envMapIntensity = json.envMapIntensity;\n\t\t\tif (json.reflectivity !== undefined) material.reflectivity = json.reflectivity;\n\t\t\tif (json.refractionRatio !== undefined) material.refractionRatio = json.refractionRatio;\n\t\t\tif (json.lightMap !== undefined) material.lightMap = getTexture(json.lightMap);\n\t\t\tif (json.lightMapIntensity !== undefined) material.lightMapIntensity = json.lightMapIntensity;\n\t\t\tif (json.aoMap !== undefined) material.aoMap = getTexture(json.aoMap);\n\t\t\tif (json.aoMapIntensity !== undefined) material.aoMapIntensity = json.aoMapIntensity;\n\t\t\tif (json.gradientMap !== undefined) material.gradientMap = getTexture(json.gradientMap);\n\t\t\tif (json.clearcoatMap !== undefined) material.clearcoatMap = getTexture(json.clearcoatMap);\n\t\t\tif (json.clearcoatRoughnessMap !== undefined) material.clearcoatRoughnessMap = getTexture(json.clearcoatRoughnessMap);\n\t\t\tif (json.clearcoatNormalMap !== undefined) material.clearcoatNormalMap = getTexture(json.clearcoatNormalMap);\n\t\t\tif (json.clearcoatNormalScale !== undefined) material.clearcoatNormalScale = new Vector2().fromArray(json.clearcoatNormalScale);\n\t\t\tif (json.transmissionMap !== undefined) material.transmissionMap = getTexture(json.transmissionMap);\n\t\t\tif (json.thicknessMap !== undefined) material.thicknessMap = getTexture(json.thicknessMap);\n\t\t\treturn material;\n\t\t}\n\n\t\tsetTextures(value) {\n\t\t\tthis.textures = value;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass LoaderUtils {\n\t\tstatic decodeText(array) {\n\t\t\tif (typeof TextDecoder !== 'undefined') {\n\t\t\t\treturn new TextDecoder().decode(array);\n\t\t\t} // Avoid the String.fromCharCode.apply(null, array) shortcut, which\n\t\t\t// throws a \"maximum call stack size exceeded\" error for large arrays.\n\n\n\t\t\tlet s = '';\n\n\t\t\tfor (let i = 0, il = array.length; i < il; i++) {\n\t\t\t\t// Implicitly assumes little-endian.\n\t\t\t\ts += String.fromCharCode(array[i]);\n\t\t\t}\n\n\t\t\ttry {\n\t\t\t\t// merges multi-byte utf-8 characters.\n\t\t\t\treturn decodeURIComponent(escape(s));\n\t\t\t} catch (e) {\n\t\t\t\t// see #16358\n\t\t\t\treturn s;\n\t\t\t}\n\t\t}\n\n\t\tstatic extractUrlBase(url) {\n\t\t\tconst index = url.lastIndexOf('/');\n\t\t\tif (index === -1) return './';\n\t\t\treturn url.substr(0, index + 1);\n\t\t}\n\n\t}\n\n\tclass InstancedBufferGeometry extends BufferGeometry {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'InstancedBufferGeometry';\n\t\t\tthis.instanceCount = Infinity;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.instanceCount = source.instanceCount;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON(this);\n\t\t\tdata.instanceCount = this.instanceCount;\n\t\t\tdata.isInstancedBufferGeometry = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferGeometry.prototype.isInstancedBufferGeometry = true;\n\n\tclass InstancedBufferAttribute extends BufferAttribute {\n\t\tconstructor(array, itemSize, normalized, meshPerAttribute) {\n\t\t\tif (typeof normalized === 'number') {\n\t\t\t\tmeshPerAttribute = normalized;\n\t\t\t\tnormalized = false;\n\t\t\t\tconsole.error('THREE.InstancedBufferAttribute: The constructor now expects normalized as the third argument.');\n\t\t\t}\n\n\t\t\tsuper(array, itemSize, normalized);\n\t\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\ttoJSON() {\n\t\t\tconst data = super.toJSON();\n\t\t\tdata.meshPerAttribute = this.meshPerAttribute;\n\t\t\tdata.isInstancedBufferAttribute = true;\n\t\t\treturn data;\n\t\t}\n\n\t}\n\n\tInstancedBufferAttribute.prototype.isInstancedBufferAttribute = true;\n\n\tclass BufferGeometryLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(scope.manager);\n\t\t\tloader.setPath(scope.path);\n\t\t\tloader.setRequestHeader(scope.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\ttry {\n\t\t\t\t\tonLoad(scope.parse(JSON.parse(text)));\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\tconst interleavedBufferMap = {};\n\t\t\tconst arrayBufferMap = {};\n\n\t\t\tfunction getInterleavedBuffer(json, uuid) {\n\t\t\t\tif (interleavedBufferMap[uuid] !== undefined) return interleavedBufferMap[uuid];\n\t\t\t\tconst interleavedBuffers = json.interleavedBuffers;\n\t\t\t\tconst interleavedBuffer = interleavedBuffers[uuid];\n\t\t\t\tconst buffer = getArrayBuffer(json, interleavedBuffer.buffer);\n\t\t\t\tconst array = getTypedArray(interleavedBuffer.type, buffer);\n\t\t\t\tconst ib = new InterleavedBuffer(array, interleavedBuffer.stride);\n\t\t\t\tib.uuid = interleavedBuffer.uuid;\n\t\t\t\tinterleavedBufferMap[uuid] = ib;\n\t\t\t\treturn ib;\n\t\t\t}\n\n\t\t\tfunction getArrayBuffer(json, uuid) {\n\t\t\t\tif (arrayBufferMap[uuid] !== undefined) return arrayBufferMap[uuid];\n\t\t\t\tconst arrayBuffers = json.arrayBuffers;\n\t\t\t\tconst arrayBuffer = arrayBuffers[uuid];\n\t\t\t\tconst ab = new Uint32Array(arrayBuffer).buffer;\n\t\t\t\tarrayBufferMap[uuid] = ab;\n\t\t\t\treturn ab;\n\t\t\t}\n\n\t\t\tconst geometry = json.isInstancedBufferGeometry ? new InstancedBufferGeometry() : new BufferGeometry();\n\t\t\tconst index = json.data.index;\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst typedArray = getTypedArray(index.type, index.array);\n\t\t\t\tgeometry.setIndex(new BufferAttribute(typedArray, 1));\n\t\t\t}\n\n\t\t\tconst attributes = json.data.attributes;\n\n\t\t\tfor (const key in attributes) {\n\t\t\t\tconst attribute = attributes[key];\n\t\t\t\tlet bufferAttribute;\n\n\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t} else {\n\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\tconst bufferAttributeConstr = attribute.isInstancedBufferAttribute ? InstancedBufferAttribute : BufferAttribute;\n\t\t\t\t\tbufferAttribute = new bufferAttributeConstr(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t}\n\n\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\tif (attribute.usage !== undefined) bufferAttribute.setUsage(attribute.usage);\n\n\t\t\t\tif (attribute.updateRange !== undefined) {\n\t\t\t\t\tbufferAttribute.updateRange.offset = attribute.updateRange.offset;\n\t\t\t\t\tbufferAttribute.updateRange.count = attribute.updateRange.count;\n\t\t\t\t}\n\n\t\t\t\tgeometry.setAttribute(key, bufferAttribute);\n\t\t\t}\n\n\t\t\tconst morphAttributes = json.data.morphAttributes;\n\n\t\t\tif (morphAttributes) {\n\t\t\t\tfor (const key in morphAttributes) {\n\t\t\t\t\tconst attributeArray = morphAttributes[key];\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, il = attributeArray.length; i < il; i++) {\n\t\t\t\t\t\tconst attribute = attributeArray[i];\n\t\t\t\t\t\tlet bufferAttribute;\n\n\t\t\t\t\t\tif (attribute.isInterleavedBufferAttribute) {\n\t\t\t\t\t\t\tconst interleavedBuffer = getInterleavedBuffer(json.data, attribute.data);\n\t\t\t\t\t\t\tbufferAttribute = new InterleavedBufferAttribute(interleavedBuffer, attribute.itemSize, attribute.offset, attribute.normalized);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst typedArray = getTypedArray(attribute.type, attribute.array);\n\t\t\t\t\t\t\tbufferAttribute = new BufferAttribute(typedArray, attribute.itemSize, attribute.normalized);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (attribute.name !== undefined) bufferAttribute.name = attribute.name;\n\t\t\t\t\t\tarray.push(bufferAttribute);\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.morphAttributes[key] = array;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst morphTargetsRelative = json.data.morphTargetsRelative;\n\n\t\t\tif (morphTargetsRelative) {\n\t\t\t\tgeometry.morphTargetsRelative = true;\n\t\t\t}\n\n\t\t\tconst groups = json.data.groups || json.data.drawcalls || json.data.offsets;\n\n\t\t\tif (groups !== undefined) {\n\t\t\t\tfor (let i = 0, n = groups.length; i !== n; ++i) {\n\t\t\t\t\tconst group = groups[i];\n\t\t\t\t\tgeometry.addGroup(group.start, group.count, group.materialIndex);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst boundingSphere = json.data.boundingSphere;\n\n\t\t\tif (boundingSphere !== undefined) {\n\t\t\t\tconst center = new Vector3();\n\n\t\t\t\tif (boundingSphere.center !== undefined) {\n\t\t\t\t\tcenter.fromArray(boundingSphere.center);\n\t\t\t\t}\n\n\t\t\t\tgeometry.boundingSphere = new Sphere(center, boundingSphere.radius);\n\t\t\t}\n\n\t\t\tif (json.name) geometry.name = json.name;\n\t\t\tif (json.userData) geometry.userData = json.userData;\n\t\t\treturn geometry;\n\t\t}\n\n\t}\n\n\tclass ObjectLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst path = this.path === '' ? LoaderUtils.extractUrlBase(url) : this.path;\n\t\t\tthis.resourcePath = this.resourcePath || path;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json = null;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (error) {\n\t\t\t\t\tif (onError !== undefined) onError(error);\n\t\t\t\t\tconsole.error('THREE:ObjectLoader: Can\\'t parse ' + url + '.', error.message);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tconst metadata = json.metadata;\n\n\t\t\t\tif (metadata === undefined || metadata.type === undefined || metadata.type.toLowerCase() === 'geometry') {\n\t\t\t\t\tconsole.error('THREE.ObjectLoader: Can\\'t load ' + url);\n\t\t\t\t\treturn;\n\t\t\t\t}\n\n\t\t\t\tscope.parse(json, onLoad);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json, onLoad) {\n\t\t\tconst animations = this.parseAnimations(json.animations);\n\t\t\tconst shapes = this.parseShapes(json.shapes);\n\t\t\tconst geometries = this.parseGeometries(json.geometries, shapes);\n\t\t\tconst images = this.parseImages(json.images, function () {\n\t\t\t\tif (onLoad !== undefined) onLoad(object);\n\t\t\t});\n\t\t\tconst textures = this.parseTextures(json.textures, images);\n\t\t\tconst materials = this.parseMaterials(json.materials, textures);\n\t\t\tconst object = this.parseObject(json.object, geometries, materials, animations);\n\t\t\tconst skeletons = this.parseSkeletons(json.skeletons, object);\n\t\t\tthis.bindSkeletons(object, skeletons); //\n\n\t\t\tif (onLoad !== undefined) {\n\t\t\t\tlet hasImages = false;\n\n\t\t\t\tfor (const uuid in images) {\n\t\t\t\t\tif (images[uuid] instanceof HTMLImageElement) {\n\t\t\t\t\t\thasImages = true;\n\t\t\t\t\t\tbreak;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (hasImages === false) onLoad(object);\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tparseShapes(json) {\n\t\t\tconst shapes = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst shape = new Shape().fromJSON(json[i]);\n\t\t\t\t\tshapes[shape.uuid] = shape;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t\tparseSkeletons(json, object) {\n\t\t\tconst skeletons = {};\n\t\t\tconst bones = {}; // generate bone lookup table\n\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isBone) bones[child.uuid] = child;\n\t\t\t}); // create skeletons\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst skeleton = new Skeleton().fromJSON(json[i], bones);\n\t\t\t\t\tskeletons[skeleton.uuid] = skeleton;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn skeletons;\n\t\t}\n\n\t\tparseGeometries(json, shapes) {\n\t\t\tconst geometries = {};\n\t\t\tlet geometryShapes;\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst bufferGeometryLoader = new BufferGeometryLoader();\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tlet geometry;\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tswitch (data.type) {\n\t\t\t\t\t\tcase 'PlaneGeometry':\n\t\t\t\t\t\tcase 'PlaneBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.width, data.height, data.widthSegments, data.heightSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BoxGeometry':\n\t\t\t\t\t\tcase 'BoxBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.width, data.height, data.depth, data.widthSegments, data.heightSegments, data.depthSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CircleGeometry':\n\t\t\t\t\t\tcase 'CircleBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.segments, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'CylinderGeometry':\n\t\t\t\t\t\tcase 'CylinderBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radiusTop, data.radiusBottom, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ConeGeometry':\n\t\t\t\t\t\tcase 'ConeBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.height, data.radialSegments, data.heightSegments, data.openEnded, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'SphereGeometry':\n\t\t\t\t\t\tcase 'SphereBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.widthSegments, data.heightSegments, data.phiStart, data.phiLength, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'DodecahedronGeometry':\n\t\t\t\t\t\tcase 'DodecahedronBufferGeometry':\n\t\t\t\t\t\tcase 'IcosahedronGeometry':\n\t\t\t\t\t\tcase 'IcosahedronBufferGeometry':\n\t\t\t\t\t\tcase 'OctahedronGeometry':\n\t\t\t\t\t\tcase 'OctahedronBufferGeometry':\n\t\t\t\t\t\tcase 'TetrahedronGeometry':\n\t\t\t\t\t\tcase 'TetrahedronBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.detail);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'RingGeometry':\n\t\t\t\t\t\tcase 'RingBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.innerRadius, data.outerRadius, data.thetaSegments, data.phiSegments, data.thetaStart, data.thetaLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusGeometry':\n\t\t\t\t\t\tcase 'TorusBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.tube, data.radialSegments, data.tubularSegments, data.arc);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TorusKnotGeometry':\n\t\t\t\t\t\tcase 'TorusKnotBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.radius, data.tube, data.tubularSegments, data.radialSegments, data.p, data.q);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'TubeGeometry':\n\t\t\t\t\t\tcase 'TubeBufferGeometry':\n\t\t\t\t\t\t\t// This only works for built-in curves (e.g. CatmullRomCurve3).\n\t\t\t\t\t\t\t// User defined curves or instances of CurvePath will not be deserialized.\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](new Curves[data.path.type]().fromJSON(data.path), data.tubularSegments, data.radius, data.radialSegments, data.closed);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'LatheGeometry':\n\t\t\t\t\t\tcase 'LatheBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.points, data.segments, data.phiStart, data.phiLength);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'PolyhedronGeometry':\n\t\t\t\t\t\tcase 'PolyhedronBufferGeometry':\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](data.vertices, data.indices, data.radius, data.details);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ShapeGeometry':\n\t\t\t\t\t\tcase 'ShapeBufferGeometry':\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\t\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\t\t\t\t\tgeometryShapes.push(shape);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](geometryShapes, data.curveSegments);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'ExtrudeGeometry':\n\t\t\t\t\t\tcase 'ExtrudeBufferGeometry':\n\t\t\t\t\t\t\tgeometryShapes = [];\n\n\t\t\t\t\t\t\tfor (let j = 0, jl = data.shapes.length; j < jl; j++) {\n\t\t\t\t\t\t\t\tconst shape = shapes[data.shapes[j]];\n\t\t\t\t\t\t\t\tgeometryShapes.push(shape);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tconst extrudePath = data.options.extrudePath;\n\n\t\t\t\t\t\t\tif (extrudePath !== undefined) {\n\t\t\t\t\t\t\t\tdata.options.extrudePath = new Curves[extrudePath.type]().fromJSON(extrudePath);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tgeometry = new Geometries[data.type](geometryShapes, data.options);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'BufferGeometry':\n\t\t\t\t\t\tcase 'InstancedBufferGeometry':\n\t\t\t\t\t\t\tgeometry = bufferGeometryLoader.parse(data);\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tcase 'Geometry':\n\t\t\t\t\t\t\tconsole.error('THREE.ObjectLoader: Loading \"Geometry\" is not supported anymore.');\n\t\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t\tdefault:\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Unsupported geometry type \"' + data.type + '\"');\n\t\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tgeometry.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) geometry.name = data.name;\n\t\t\t\t\tif (geometry.isBufferGeometry === true && data.userData !== undefined) geometry.userData = data.userData;\n\t\t\t\t\tgeometries[data.uuid] = geometry;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn geometries;\n\t\t}\n\n\t\tparseMaterials(json, textures) {\n\t\t\tconst cache = {}; // MultiMaterial\n\n\t\t\tconst materials = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tconst loader = new MaterialLoader();\n\t\t\t\tloader.setTextures(textures);\n\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.type === 'MultiMaterial') {\n\t\t\t\t\t\t// Deprecated\n\t\t\t\t\t\tconst array = [];\n\n\t\t\t\t\t\tfor (let j = 0; j < data.materials.length; j++) {\n\t\t\t\t\t\t\tconst material = data.materials[j];\n\n\t\t\t\t\t\t\tif (cache[material.uuid] === undefined) {\n\t\t\t\t\t\t\t\tcache[material.uuid] = loader.parse(material);\n\t\t\t\t\t\t\t}\n\n\t\t\t\t\t\t\tarray.push(cache[material.uuid]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = array;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (cache[data.uuid] === undefined) {\n\t\t\t\t\t\t\tcache[data.uuid] = loader.parse(data);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tmaterials[data.uuid] = cache[data.uuid];\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn materials;\n\t\t}\n\n\t\tparseAnimations(json) {\n\t\t\tconst animations = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0; i < json.length; i++) {\n\t\t\t\t\tconst data = json[i];\n\t\t\t\t\tconst clip = AnimationClip.parse(data);\n\t\t\t\t\tanimations[clip.uuid] = clip;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn animations;\n\t\t}\n\n\t\tparseImages(json, onLoad) {\n\t\t\tconst scope = this;\n\t\t\tconst images = {};\n\t\t\tlet loader;\n\n\t\t\tfunction loadImage(url) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\treturn loader.load(url, function () {\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, undefined, function () {\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t});\n\t\t\t}\n\n\t\t\tfunction deserializeImage(image) {\n\t\t\t\tif (typeof image === 'string') {\n\t\t\t\t\tconst url = image;\n\t\t\t\t\tconst path = /^(\\/\\/)|([a-z]+:(\\/\\/)?)/i.test(url) ? url : scope.resourcePath + url;\n\t\t\t\t\treturn loadImage(path);\n\t\t\t\t} else {\n\t\t\t\t\tif (image.data) {\n\t\t\t\t\t\treturn {\n\t\t\t\t\t\t\tdata: getTypedArray(image.type, image.data),\n\t\t\t\t\t\t\twidth: image.width,\n\t\t\t\t\t\t\theight: image.height\n\t\t\t\t\t\t};\n\t\t\t\t\t} else {\n\t\t\t\t\t\treturn null;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (json !== undefined && json.length > 0) {\n\t\t\t\tconst manager = new LoadingManager(onLoad);\n\t\t\t\tloader = new ImageLoader(manager);\n\t\t\t\tloader.setCrossOrigin(this.crossOrigin);\n\n\t\t\t\tfor (let i = 0, il = json.length; i < il; i++) {\n\t\t\t\t\tconst image = json[i];\n\t\t\t\t\tconst url = image.url;\n\n\t\t\t\t\tif (Array.isArray(url)) {\n\t\t\t\t\t\t// load array of images e.g CubeTexture\n\t\t\t\t\t\timages[image.uuid] = [];\n\n\t\t\t\t\t\tfor (let j = 0, jl = url.length; j < jl; j++) {\n\t\t\t\t\t\t\tconst currentUrl = url[j];\n\t\t\t\t\t\t\tconst deserializedImage = deserializeImage(currentUrl);\n\n\t\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\t\tif (deserializedImage instanceof HTMLImageElement) {\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(deserializedImage);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\t// special case: handle array of data textures for cube textures\n\t\t\t\t\t\t\t\t\timages[image.uuid].push(new DataTexture(deserializedImage.data, deserializedImage.width, deserializedImage.height));\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// load single image\n\t\t\t\t\t\tconst deserializedImage = deserializeImage(image.url);\n\n\t\t\t\t\t\tif (deserializedImage !== null) {\n\t\t\t\t\t\t\timages[image.uuid] = deserializedImage;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn images;\n\t\t}\n\n\t\tparseTextures(json, images) {\n\t\t\tfunction parseConstant(value, type) {\n\t\t\t\tif (typeof value === 'number') return value;\n\t\t\t\tconsole.warn('THREE.ObjectLoader.parseTexture: Constant should be in numeric form.', value);\n\t\t\t\treturn type[value];\n\t\t\t}\n\n\t\t\tconst textures = {};\n\n\t\t\tif (json !== undefined) {\n\t\t\t\tfor (let i = 0, l = json.length; i < l; i++) {\n\t\t\t\t\tconst data = json[i];\n\n\t\t\t\t\tif (data.image === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No \"image\" specified for', data.uuid);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (images[data.image] === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined image', data.image);\n\t\t\t\t\t}\n\n\t\t\t\t\tlet texture;\n\t\t\t\t\tconst image = images[data.image];\n\n\t\t\t\t\tif (Array.isArray(image)) {\n\t\t\t\t\t\ttexture = new CubeTexture(image);\n\t\t\t\t\t\tif (image.length === 6) texture.needsUpdate = true;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tif (image && image.data) {\n\t\t\t\t\t\t\ttexture = new DataTexture(image.data, image.width, image.height);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\ttexture = new Texture(image);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (image) texture.needsUpdate = true; // textures can have undefined image data\n\t\t\t\t\t}\n\n\t\t\t\t\ttexture.uuid = data.uuid;\n\t\t\t\t\tif (data.name !== undefined) texture.name = data.name;\n\t\t\t\t\tif (data.mapping !== undefined) texture.mapping = parseConstant(data.mapping, TEXTURE_MAPPING);\n\t\t\t\t\tif (data.offset !== undefined) texture.offset.fromArray(data.offset);\n\t\t\t\t\tif (data.repeat !== undefined) texture.repeat.fromArray(data.repeat);\n\t\t\t\t\tif (data.center !== undefined) texture.center.fromArray(data.center);\n\t\t\t\t\tif (data.rotation !== undefined) texture.rotation = data.rotation;\n\n\t\t\t\t\tif (data.wrap !== undefined) {\n\t\t\t\t\t\ttexture.wrapS = parseConstant(data.wrap[0], TEXTURE_WRAPPING);\n\t\t\t\t\t\ttexture.wrapT = parseConstant(data.wrap[1], TEXTURE_WRAPPING);\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.format !== undefined) texture.format = data.format;\n\t\t\t\t\tif (data.type !== undefined) texture.type = data.type;\n\t\t\t\t\tif (data.encoding !== undefined) texture.encoding = data.encoding;\n\t\t\t\t\tif (data.minFilter !== undefined) texture.minFilter = parseConstant(data.minFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.magFilter !== undefined) texture.magFilter = parseConstant(data.magFilter, TEXTURE_FILTER);\n\t\t\t\t\tif (data.anisotropy !== undefined) texture.anisotropy = data.anisotropy;\n\t\t\t\t\tif (data.flipY !== undefined) texture.flipY = data.flipY;\n\t\t\t\t\tif (data.premultiplyAlpha !== undefined) texture.premultiplyAlpha = data.premultiplyAlpha;\n\t\t\t\t\tif (data.unpackAlignment !== undefined) texture.unpackAlignment = data.unpackAlignment;\n\t\t\t\t\ttextures[data.uuid] = texture;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn textures;\n\t\t}\n\n\t\tparseObject(data, geometries, materials, animations) {\n\t\t\tlet object;\n\n\t\t\tfunction getGeometry(name) {\n\t\t\t\tif (geometries[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined geometry', name);\n\t\t\t\t}\n\n\t\t\t\treturn geometries[name];\n\t\t\t}\n\n\t\t\tfunction getMaterial(name) {\n\t\t\t\tif (name === undefined) return undefined;\n\n\t\t\t\tif (Array.isArray(name)) {\n\t\t\t\t\tconst array = [];\n\n\t\t\t\t\tfor (let i = 0, l = name.length; i < l; i++) {\n\t\t\t\t\t\tconst uuid = name[i];\n\n\t\t\t\t\t\tif (materials[uuid] === undefined) {\n\t\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', uuid);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tarray.push(materials[uuid]);\n\t\t\t\t\t}\n\n\t\t\t\t\treturn array;\n\t\t\t\t}\n\n\t\t\t\tif (materials[name] === undefined) {\n\t\t\t\t\tconsole.warn('THREE.ObjectLoader: Undefined material', name);\n\t\t\t\t}\n\n\t\t\t\treturn materials[name];\n\t\t\t}\n\n\t\t\tlet geometry, material;\n\n\t\t\tswitch (data.type) {\n\t\t\t\tcase 'Scene':\n\t\t\t\t\tobject = new Scene();\n\n\t\t\t\t\tif (data.background !== undefined) {\n\t\t\t\t\t\tif (Number.isInteger(data.background)) {\n\t\t\t\t\t\t\tobject.background = new Color(data.background);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tif (data.fog !== undefined) {\n\t\t\t\t\t\tif (data.fog.type === 'Fog') {\n\t\t\t\t\t\t\tobject.fog = new Fog(data.fog.color, data.fog.near, data.fog.far);\n\t\t\t\t\t\t} else if (data.fog.type === 'FogExp2') {\n\t\t\t\t\t\t\tobject.fog = new FogExp2(data.fog.color, data.fog.density);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PerspectiveCamera':\n\t\t\t\t\tobject = new PerspectiveCamera(data.fov, data.aspect, data.near, data.far);\n\t\t\t\t\tif (data.focus !== undefined) object.focus = data.focus;\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.filmGauge !== undefined) object.filmGauge = data.filmGauge;\n\t\t\t\t\tif (data.filmOffset !== undefined) object.filmOffset = data.filmOffset;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'OrthographicCamera':\n\t\t\t\t\tobject = new OrthographicCamera(data.left, data.right, data.top, data.bottom, data.near, data.far);\n\t\t\t\t\tif (data.zoom !== undefined) object.zoom = data.zoom;\n\t\t\t\t\tif (data.view !== undefined) object.view = Object.assign({}, data.view);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'AmbientLight':\n\t\t\t\t\tobject = new AmbientLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'DirectionalLight':\n\t\t\t\t\tobject = new DirectionalLight(data.color, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointLight':\n\t\t\t\t\tobject = new PointLight(data.color, data.intensity, data.distance, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'RectAreaLight':\n\t\t\t\t\tobject = new RectAreaLight(data.color, data.intensity, data.width, data.height);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SpotLight':\n\t\t\t\t\tobject = new SpotLight(data.color, data.intensity, data.distance, data.angle, data.penumbra, data.decay);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'HemisphereLight':\n\t\t\t\t\tobject = new HemisphereLight(data.color, data.groundColor, data.intensity);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LightProbe':\n\t\t\t\t\tobject = new LightProbe().fromJSON(data);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'SkinnedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new SkinnedMesh(geometry, material);\n\t\t\t\t\tif (data.bindMode !== undefined) object.bindMode = data.bindMode;\n\t\t\t\t\tif (data.bindMatrix !== undefined) object.bindMatrix.fromArray(data.bindMatrix);\n\t\t\t\t\tif (data.skeleton !== undefined) object.skeleton = data.skeleton;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Mesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tobject = new Mesh(geometry, material);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'InstancedMesh':\n\t\t\t\t\tgeometry = getGeometry(data.geometry);\n\t\t\t\t\tmaterial = getMaterial(data.material);\n\t\t\t\t\tconst count = data.count;\n\t\t\t\t\tconst instanceMatrix = data.instanceMatrix;\n\t\t\t\t\tconst instanceColor = data.instanceColor;\n\t\t\t\t\tobject = new InstancedMesh(geometry, material, count);\n\t\t\t\t\tobject.instanceMatrix = new BufferAttribute(new Float32Array(instanceMatrix.array), 16);\n\t\t\t\t\tif (instanceColor !== undefined) object.instanceColor = new BufferAttribute(new Float32Array(instanceColor.array), instanceColor.itemSize);\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LOD':\n\t\t\t\t\tobject = new LOD();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Line':\n\t\t\t\t\tobject = new Line(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineLoop':\n\t\t\t\t\tobject = new LineLoop(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'LineSegments':\n\t\t\t\t\tobject = new LineSegments(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'PointCloud':\n\t\t\t\tcase 'Points':\n\t\t\t\t\tobject = new Points(getGeometry(data.geometry), getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Sprite':\n\t\t\t\t\tobject = new Sprite(getMaterial(data.material));\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Group':\n\t\t\t\t\tobject = new Group();\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'Bone':\n\t\t\t\t\tobject = new Bone();\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tobject = new Object3D();\n\t\t\t}\n\n\t\t\tobject.uuid = data.uuid;\n\t\t\tif (data.name !== undefined) object.name = data.name;\n\n\t\t\tif (data.matrix !== undefined) {\n\t\t\t\tobject.matrix.fromArray(data.matrix);\n\t\t\t\tif (data.matrixAutoUpdate !== undefined) object.matrixAutoUpdate = data.matrixAutoUpdate;\n\t\t\t\tif (object.matrixAutoUpdate) object.matrix.decompose(object.position, object.quaternion, object.scale);\n\t\t\t} else {\n\t\t\t\tif (data.position !== undefined) object.position.fromArray(data.position);\n\t\t\t\tif (data.rotation !== undefined) object.rotation.fromArray(data.rotation);\n\t\t\t\tif (data.quaternion !== undefined) object.quaternion.fromArray(data.quaternion);\n\t\t\t\tif (data.scale !== undefined) object.scale.fromArray(data.scale);\n\t\t\t}\n\n\t\t\tif (data.castShadow !== undefined) object.castShadow = data.castShadow;\n\t\t\tif (data.receiveShadow !== undefined) object.receiveShadow = data.receiveShadow;\n\n\t\t\tif (data.shadow) {\n\t\t\t\tif (data.shadow.bias !== undefined) object.shadow.bias = data.shadow.bias;\n\t\t\t\tif (data.shadow.normalBias !== undefined) object.shadow.normalBias = data.shadow.normalBias;\n\t\t\t\tif (data.shadow.radius !== undefined) object.shadow.radius = data.shadow.radius;\n\t\t\t\tif (data.shadow.mapSize !== undefined) object.shadow.mapSize.fromArray(data.shadow.mapSize);\n\t\t\t\tif (data.shadow.camera !== undefined) object.shadow.camera = this.parseObject(data.shadow.camera);\n\t\t\t}\n\n\t\t\tif (data.visible !== undefined) object.visible = data.visible;\n\t\t\tif (data.frustumCulled !== undefined) object.frustumCulled = data.frustumCulled;\n\t\t\tif (data.renderOrder !== undefined) object.renderOrder = data.renderOrder;\n\t\t\tif (data.userData !== undefined) object.userData = data.userData;\n\t\t\tif (data.layers !== undefined) object.layers.mask = data.layers;\n\n\t\t\tif (data.children !== undefined) {\n\t\t\t\tconst children = data.children;\n\n\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\tobject.add(this.parseObject(children[i], geometries, materials, animations));\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.animations !== undefined) {\n\t\t\t\tconst objectAnimations = data.animations;\n\n\t\t\t\tfor (let i = 0; i < objectAnimations.length; i++) {\n\t\t\t\t\tconst uuid = objectAnimations[i];\n\t\t\t\t\tobject.animations.push(animations[uuid]);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (data.type === 'LOD') {\n\t\t\t\tif (data.autoUpdate !== undefined) object.autoUpdate = data.autoUpdate;\n\t\t\t\tconst levels = data.levels;\n\n\t\t\t\tfor (let l = 0; l < levels.length; l++) {\n\t\t\t\t\tconst level = levels[l];\n\t\t\t\t\tconst child = object.getObjectByProperty('uuid', level.object);\n\n\t\t\t\t\tif (child !== undefined) {\n\t\t\t\t\t\tobject.addLevel(child, level.distance);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn object;\n\t\t}\n\n\t\tbindSkeletons(object, skeletons) {\n\t\t\tif (Object.keys(skeletons).length === 0) return;\n\t\t\tobject.traverse(function (child) {\n\t\t\t\tif (child.isSkinnedMesh === true && child.skeleton !== undefined) {\n\t\t\t\t\tconst skeleton = skeletons[child.skeleton];\n\n\t\t\t\t\tif (skeleton === undefined) {\n\t\t\t\t\t\tconsole.warn('THREE.ObjectLoader: No skeleton found with UUID:', child.skeleton);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tchild.bind(skeleton, child.bindMatrix);\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t});\n\t\t}\n\t\t/* DEPRECATED */\n\n\n\t\tsetTexturePath(value) {\n\t\t\tconsole.warn('THREE.ObjectLoader: .setTexturePath() has been renamed to .setResourcePath().');\n\t\t\treturn this.setResourcePath(value);\n\t\t}\n\n\t}\n\n\tconst TEXTURE_MAPPING = {\n\t\tUVMapping: UVMapping,\n\t\tCubeReflectionMapping: CubeReflectionMapping,\n\t\tCubeRefractionMapping: CubeRefractionMapping,\n\t\tEquirectangularReflectionMapping: EquirectangularReflectionMapping,\n\t\tEquirectangularRefractionMapping: EquirectangularRefractionMapping,\n\t\tCubeUVReflectionMapping: CubeUVReflectionMapping,\n\t\tCubeUVRefractionMapping: CubeUVRefractionMapping\n\t};\n\tconst TEXTURE_WRAPPING = {\n\t\tRepeatWrapping: RepeatWrapping,\n\t\tClampToEdgeWrapping: ClampToEdgeWrapping,\n\t\tMirroredRepeatWrapping: MirroredRepeatWrapping\n\t};\n\tconst TEXTURE_FILTER = {\n\t\tNearestFilter: NearestFilter,\n\t\tNearestMipmapNearestFilter: NearestMipmapNearestFilter,\n\t\tNearestMipmapLinearFilter: NearestMipmapLinearFilter,\n\t\tLinearFilter: LinearFilter,\n\t\tLinearMipmapNearestFilter: LinearMipmapNearestFilter,\n\t\tLinearMipmapLinearFilter: LinearMipmapLinearFilter\n\t};\n\n\tclass ImageBitmapLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\n\t\t\tif (typeof createImageBitmap === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: createImageBitmap() not supported.');\n\t\t\t}\n\n\t\t\tif (typeof fetch === 'undefined') {\n\t\t\t\tconsole.warn('THREE.ImageBitmapLoader: fetch() not supported.');\n\t\t\t}\n\n\t\t\tthis.options = {\n\t\t\t\tpremultiplyAlpha: 'none'\n\t\t\t};\n\t\t}\n\n\t\tsetOptions(options) {\n\t\t\tthis.options = options;\n\t\t\treturn this;\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tif (url === undefined) url = '';\n\t\t\tif (this.path !== undefined) url = this.path + url;\n\t\t\turl = this.manager.resolveURL(url);\n\t\t\tconst scope = this;\n\t\t\tconst cached = Cache.get(url);\n\n\t\t\tif (cached !== undefined) {\n\t\t\t\tscope.manager.itemStart(url);\n\t\t\t\tsetTimeout(function () {\n\t\t\t\t\tif (onLoad) onLoad(cached);\n\t\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t\t}, 0);\n\t\t\t\treturn cached;\n\t\t\t}\n\n\t\t\tconst fetchOptions = {};\n\t\t\tfetchOptions.credentials = this.crossOrigin === 'anonymous' ? 'same-origin' : 'include';\n\t\t\tfetchOptions.headers = this.requestHeader;\n\t\t\tfetch(url, fetchOptions).then(function (res) {\n\t\t\t\treturn res.blob();\n\t\t\t}).then(function (blob) {\n\t\t\t\treturn createImageBitmap(blob, Object.assign(scope.options, {\n\t\t\t\t\tcolorSpaceConversion: 'none'\n\t\t\t\t}));\n\t\t\t}).then(function (imageBitmap) {\n\t\t\t\tCache.add(url, imageBitmap);\n\t\t\t\tif (onLoad) onLoad(imageBitmap);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t}).catch(function (e) {\n\t\t\t\tif (onError) onError(e);\n\t\t\t\tscope.manager.itemError(url);\n\t\t\t\tscope.manager.itemEnd(url);\n\t\t\t});\n\t\t\tscope.manager.itemStart(url);\n\t\t}\n\n\t}\n\n\tImageBitmapLoader.prototype.isImageBitmapLoader = true;\n\n\tclass ShapePath {\n\t\tconstructor() {\n\t\t\tthis.type = 'ShapePath';\n\t\t\tthis.color = new Color();\n\t\t\tthis.subPaths = [];\n\t\t\tthis.currentPath = null;\n\t\t}\n\n\t\tmoveTo(x, y) {\n\t\t\tthis.currentPath = new Path();\n\t\t\tthis.subPaths.push(this.currentPath);\n\t\t\tthis.currentPath.moveTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tlineTo(x, y) {\n\t\t\tthis.currentPath.lineTo(x, y);\n\t\t\treturn this;\n\t\t}\n\n\t\tquadraticCurveTo(aCPx, aCPy, aX, aY) {\n\t\t\tthis.currentPath.quadraticCurveTo(aCPx, aCPy, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tbezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY) {\n\t\t\tthis.currentPath.bezierCurveTo(aCP1x, aCP1y, aCP2x, aCP2y, aX, aY);\n\t\t\treturn this;\n\t\t}\n\n\t\tsplineThru(pts) {\n\t\t\tthis.currentPath.splineThru(pts);\n\t\t\treturn this;\n\t\t}\n\n\t\ttoShapes(isCCW, noHoles) {\n\t\t\tfunction toShapesNoHoles(inSubpaths) {\n\t\t\t\tconst shapes = [];\n\n\t\t\t\tfor (let i = 0, l = inSubpaths.length; i < l; i++) {\n\t\t\t\t\tconst tmpPath = inSubpaths[i];\n\t\t\t\t\tconst tmpShape = new Shape();\n\t\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\t\tshapes.push(tmpShape);\n\t\t\t\t}\n\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tfunction isPointInsidePolygon(inPt, inPolygon) {\n\t\t\t\tconst polyLen = inPolygon.length; // inPt on polygon contour => immediate success\t\tor\n\t\t\t\t// toggling of inside/outside at every single! intersection point of an edge\n\t\t\t\t//\twith the horizontal line through inPt, left of inPt\n\t\t\t\t//\tnot counting lowerY endpoints of edges and whole edges on that line\n\n\t\t\t\tlet inside = false;\n\n\t\t\t\tfor (let p = polyLen - 1, q = 0; q < polyLen; p = q++) {\n\t\t\t\t\tlet edgeLowPt = inPolygon[p];\n\t\t\t\t\tlet edgeHighPt = inPolygon[q];\n\t\t\t\t\tlet edgeDx = edgeHighPt.x - edgeLowPt.x;\n\t\t\t\t\tlet edgeDy = edgeHighPt.y - edgeLowPt.y;\n\n\t\t\t\t\tif (Math.abs(edgeDy) > Number.EPSILON) {\n\t\t\t\t\t\t// not parallel\n\t\t\t\t\t\tif (edgeDy < 0) {\n\t\t\t\t\t\t\tedgeLowPt = inPolygon[q];\n\t\t\t\t\t\t\tedgeDx = -edgeDx;\n\t\t\t\t\t\t\tedgeHighPt = inPolygon[p];\n\t\t\t\t\t\t\tedgeDy = -edgeDy;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (inPt.y < edgeLowPt.y || inPt.y > edgeHighPt.y) continue;\n\n\t\t\t\t\t\tif (inPt.y === edgeLowPt.y) {\n\t\t\t\t\t\t\tif (inPt.x === edgeLowPt.x) return true; // inPt is on contour ?\n\t\t\t\t\t\t\t// continue;\t\t\t\t// no intersection or edgeLowPt => doesn't count !!!\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tconst perpEdge = edgeDy * (inPt.x - edgeLowPt.x) - edgeDx * (inPt.y - edgeLowPt.y);\n\t\t\t\t\t\t\tif (perpEdge === 0) return true; // inPt is on contour ?\n\n\t\t\t\t\t\t\tif (perpEdge < 0) continue;\n\t\t\t\t\t\t\tinside = !inside; // true intersection left of inPt\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// parallel or collinear\n\t\t\t\t\t\tif (inPt.y !== edgeLowPt.y) continue; // parallel\n\t\t\t\t\t\t// edge lies on the same horizontal line as inPt\n\n\t\t\t\t\t\tif (edgeHighPt.x <= inPt.x && inPt.x <= edgeLowPt.x || edgeLowPt.x <= inPt.x && inPt.x <= edgeHighPt.x) return true; // inPt: Point on contour !\n\t\t\t\t\t\t// continue;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\treturn inside;\n\t\t\t}\n\n\t\t\tconst isClockWise = ShapeUtils.isClockWise;\n\t\t\tconst subPaths = this.subPaths;\n\t\t\tif (subPaths.length === 0) return [];\n\t\t\tif (noHoles === true) return toShapesNoHoles(subPaths);\n\t\t\tlet solid, tmpPath, tmpShape;\n\t\t\tconst shapes = [];\n\n\t\t\tif (subPaths.length === 1) {\n\t\t\t\ttmpPath = subPaths[0];\n\t\t\t\ttmpShape = new Shape();\n\t\t\t\ttmpShape.curves = tmpPath.curves;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\treturn shapes;\n\t\t\t}\n\n\t\t\tlet holesFirst = !isClockWise(subPaths[0].getPoints());\n\t\t\tholesFirst = isCCW ? !holesFirst : holesFirst; // console.log(\"Holes first\", holesFirst);\n\n\t\t\tconst betterShapeHoles = [];\n\t\t\tconst newShapes = [];\n\t\t\tlet newShapeHoles = [];\n\t\t\tlet mainIdx = 0;\n\t\t\tlet tmpPoints;\n\t\t\tnewShapes[mainIdx] = undefined;\n\t\t\tnewShapeHoles[mainIdx] = [];\n\n\t\t\tfor (let i = 0, l = subPaths.length; i < l; i++) {\n\t\t\t\ttmpPath = subPaths[i];\n\t\t\t\ttmpPoints = tmpPath.getPoints();\n\t\t\t\tsolid = isClockWise(tmpPoints);\n\t\t\t\tsolid = isCCW ? !solid : solid;\n\n\t\t\t\tif (solid) {\n\t\t\t\t\tif (!holesFirst && newShapes[mainIdx]) mainIdx++;\n\t\t\t\t\tnewShapes[mainIdx] = {\n\t\t\t\t\t\ts: new Shape(),\n\t\t\t\t\t\tp: tmpPoints\n\t\t\t\t\t};\n\t\t\t\t\tnewShapes[mainIdx].s.curves = tmpPath.curves;\n\t\t\t\t\tif (holesFirst) mainIdx++;\n\t\t\t\t\tnewShapeHoles[mainIdx] = []; //console.log('cw', i);\n\t\t\t\t} else {\n\t\t\t\t\tnewShapeHoles[mainIdx].push({\n\t\t\t\t\t\th: tmpPath,\n\t\t\t\t\t\tp: tmpPoints[0]\n\t\t\t\t\t}); //console.log('ccw', i);\n\t\t\t\t}\n\t\t\t} // only Holes? -> probably all Shapes with wrong orientation\n\n\n\t\t\tif (!newShapes[0]) return toShapesNoHoles(subPaths);\n\n\t\t\tif (newShapes.length > 1) {\n\t\t\t\tlet ambiguous = false;\n\t\t\t\tconst toChange = [];\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tbetterShapeHoles[sIdx] = [];\n\t\t\t\t}\n\n\t\t\t\tfor (let sIdx = 0, sLen = newShapes.length; sIdx < sLen; sIdx++) {\n\t\t\t\t\tconst sho = newShapeHoles[sIdx];\n\n\t\t\t\t\tfor (let hIdx = 0; hIdx < sho.length; hIdx++) {\n\t\t\t\t\t\tconst ho = sho[hIdx];\n\t\t\t\t\t\tlet hole_unassigned = true;\n\n\t\t\t\t\t\tfor (let s2Idx = 0; s2Idx < newShapes.length; s2Idx++) {\n\t\t\t\t\t\t\tif (isPointInsidePolygon(ho.p, newShapes[s2Idx].p)) {\n\t\t\t\t\t\t\t\tif (sIdx !== s2Idx) toChange.push({\n\t\t\t\t\t\t\t\t\tfroms: sIdx,\n\t\t\t\t\t\t\t\t\ttos: s2Idx,\n\t\t\t\t\t\t\t\t\thole: hIdx\n\t\t\t\t\t\t\t\t});\n\n\t\t\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\t\t\thole_unassigned = false;\n\t\t\t\t\t\t\t\t\tbetterShapeHoles[s2Idx].push(ho);\n\t\t\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t\t\tambiguous = true;\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (hole_unassigned) {\n\t\t\t\t\t\t\tbetterShapeHoles[sIdx].push(ho);\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t} // console.log(\"ambiguous: \", ambiguous);\n\n\n\t\t\t\tif (toChange.length > 0) {\n\t\t\t\t\t// console.log(\"to change: \", toChange);\n\t\t\t\t\tif (!ambiguous) newShapeHoles = betterShapeHoles;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tlet tmpHoles;\n\n\t\t\tfor (let i = 0, il = newShapes.length; i < il; i++) {\n\t\t\t\ttmpShape = newShapes[i].s;\n\t\t\t\tshapes.push(tmpShape);\n\t\t\t\ttmpHoles = newShapeHoles[i];\n\n\t\t\t\tfor (let j = 0, jl = tmpHoles.length; j < jl; j++) {\n\t\t\t\t\ttmpShape.holes.push(tmpHoles[j].h);\n\t\t\t\t}\n\t\t\t} //console.log(\"shape\", shapes);\n\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tclass Font {\n\t\tconstructor(data) {\n\t\t\tthis.type = 'Font';\n\t\t\tthis.data = data;\n\t\t}\n\n\t\tgenerateShapes(text, size = 100) {\n\t\t\tconst shapes = [];\n\t\t\tconst paths = createPaths(text, size, this.data);\n\n\t\t\tfor (let p = 0, pl = paths.length; p < pl; p++) {\n\t\t\t\tArray.prototype.push.apply(shapes, paths[p].toShapes());\n\t\t\t}\n\n\t\t\treturn shapes;\n\t\t}\n\n\t}\n\n\tfunction createPaths(text, size, data) {\n\t\tconst chars = Array.from(text);\n\t\tconst scale = size / data.resolution;\n\t\tconst line_height = (data.boundingBox.yMax - data.boundingBox.yMin + data.underlineThickness) * scale;\n\t\tconst paths = [];\n\t\tlet offsetX = 0,\n\t\t\t\toffsetY = 0;\n\n\t\tfor (let i = 0; i < chars.length; i++) {\n\t\t\tconst char = chars[i];\n\n\t\t\tif (char === '\\n') {\n\t\t\t\toffsetX = 0;\n\t\t\t\toffsetY -= line_height;\n\t\t\t} else {\n\t\t\t\tconst ret = createPath(char, scale, offsetX, offsetY, data);\n\t\t\t\toffsetX += ret.offsetX;\n\t\t\t\tpaths.push(ret.path);\n\t\t\t}\n\t\t}\n\n\t\treturn paths;\n\t}\n\n\tfunction createPath(char, scale, offsetX, offsetY, data) {\n\t\tconst glyph = data.glyphs[char] || data.glyphs['?'];\n\n\t\tif (!glyph) {\n\t\t\tconsole.error('THREE.Font: character \"' + char + '\" does not exists in font family ' + data.familyName + '.');\n\t\t\treturn;\n\t\t}\n\n\t\tconst path = new ShapePath();\n\t\tlet x, y, cpx, cpy, cpx1, cpy1, cpx2, cpy2;\n\n\t\tif (glyph.o) {\n\t\t\tconst outline = glyph._cachedOutline || (glyph._cachedOutline = glyph.o.split(' '));\n\n\t\t\tfor (let i = 0, l = outline.length; i < l;) {\n\t\t\t\tconst action = outline[i++];\n\n\t\t\t\tswitch (action) {\n\t\t\t\t\tcase 'm':\n\t\t\t\t\t\t// moveTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.moveTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'l':\n\t\t\t\t\t\t// lineTo\n\t\t\t\t\t\tx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\ty = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.lineTo(x, y);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'q':\n\t\t\t\t\t\t// quadraticCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.quadraticCurveTo(cpx1, cpy1, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'b':\n\t\t\t\t\t\t// bezierCurveTo\n\t\t\t\t\t\tcpx = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx1 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy1 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tcpx2 = outline[i++] * scale + offsetX;\n\t\t\t\t\t\tcpy2 = outline[i++] * scale + offsetY;\n\t\t\t\t\t\tpath.bezierCurveTo(cpx1, cpy1, cpx2, cpy2, cpx, cpy);\n\t\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\toffsetX: glyph.ha * scale,\n\t\t\tpath: path\n\t\t};\n\t}\n\n\tFont.prototype.isFont = true;\n\n\tclass FontLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(scope.withCredentials);\n\t\t\tloader.load(url, function (text) {\n\t\t\t\tlet json;\n\n\t\t\t\ttry {\n\t\t\t\t\tjson = JSON.parse(text);\n\t\t\t\t} catch (e) {\n\t\t\t\t\tconsole.warn('THREE.FontLoader: typeface.js support is being deprecated. Use typeface.json instead.');\n\t\t\t\t\tjson = JSON.parse(text.substring(65, text.length - 2));\n\t\t\t\t}\n\n\t\t\t\tconst font = scope.parse(json);\n\t\t\t\tif (onLoad) onLoad(font);\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t\tparse(json) {\n\t\t\treturn new Font(json);\n\t\t}\n\n\t}\n\n\tlet _context;\n\n\tconst AudioContext = {\n\t\tgetContext: function () {\n\t\t\tif (_context === undefined) {\n\t\t\t\t_context = new (window.AudioContext || window.webkitAudioContext)();\n\t\t\t}\n\n\t\t\treturn _context;\n\t\t},\n\t\tsetContext: function (value) {\n\t\t\t_context = value;\n\t\t}\n\t};\n\n\tclass AudioLoader extends Loader {\n\t\tconstructor(manager) {\n\t\t\tsuper(manager);\n\t\t}\n\n\t\tload(url, onLoad, onProgress, onError) {\n\t\t\tconst scope = this;\n\t\t\tconst loader = new FileLoader(this.manager);\n\t\t\tloader.setResponseType('arraybuffer');\n\t\t\tloader.setPath(this.path);\n\t\t\tloader.setRequestHeader(this.requestHeader);\n\t\t\tloader.setWithCredentials(this.withCredentials);\n\t\t\tloader.load(url, function (buffer) {\n\t\t\t\ttry {\n\t\t\t\t\t// Create a copy of the buffer. The `decodeAudioData` method\n\t\t\t\t\t// detaches the buffer when complete, preventing reuse.\n\t\t\t\t\tconst bufferCopy = buffer.slice(0);\n\t\t\t\t\tconst context = AudioContext.getContext();\n\t\t\t\t\tcontext.decodeAudioData(bufferCopy, function (audioBuffer) {\n\t\t\t\t\t\tonLoad(audioBuffer);\n\t\t\t\t\t});\n\t\t\t\t} catch (e) {\n\t\t\t\t\tif (onError) {\n\t\t\t\t\t\tonError(e);\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error(e);\n\t\t\t\t\t}\n\n\t\t\t\t\tscope.manager.itemError(url);\n\t\t\t\t}\n\t\t\t}, onProgress, onError);\n\t\t}\n\n\t}\n\n\tclass HemisphereLightProbe extends LightProbe {\n\t\tconstructor(skyColor, groundColor, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(skyColor);\n\t\t\tconst color2 = new Color().set(groundColor);\n\t\t\tconst sky = new Vector3(color1.r, color1.g, color1.b);\n\t\t\tconst ground = new Vector3(color2.r, color2.g, color2.b); // without extra factor of PI in the shader, should = 1 / Math.sqrt( Math.PI );\n\n\t\t\tconst c0 = Math.sqrt(Math.PI);\n\t\t\tconst c1 = c0 * Math.sqrt(0.75);\n\t\t\tthis.sh.coefficients[0].copy(sky).add(ground).multiplyScalar(c0);\n\t\t\tthis.sh.coefficients[1].copy(sky).sub(ground).multiplyScalar(c1);\n\t\t}\n\n\t}\n\n\tHemisphereLightProbe.prototype.isHemisphereLightProbe = true;\n\n\tclass AmbientLightProbe extends LightProbe {\n\t\tconstructor(color, intensity = 1) {\n\t\t\tsuper(undefined, intensity);\n\t\t\tconst color1 = new Color().set(color); // without extra factor of PI in the shader, would be 2 / Math.sqrt( Math.PI );\n\n\t\t\tthis.sh.coefficients[0].set(color1.r, color1.g, color1.b).multiplyScalar(2 * Math.sqrt(Math.PI));\n\t\t}\n\n\t}\n\n\tAmbientLightProbe.prototype.isAmbientLightProbe = true;\n\n\tconst _eyeRight = /*@__PURE__*/new Matrix4();\n\n\tconst _eyeLeft = /*@__PURE__*/new Matrix4();\n\n\tclass StereoCamera {\n\t\tconstructor() {\n\t\t\tthis.type = 'StereoCamera';\n\t\t\tthis.aspect = 1;\n\t\t\tthis.eyeSep = 0.064;\n\t\t\tthis.cameraL = new PerspectiveCamera();\n\t\t\tthis.cameraL.layers.enable(1);\n\t\t\tthis.cameraL.matrixAutoUpdate = false;\n\t\t\tthis.cameraR = new PerspectiveCamera();\n\t\t\tthis.cameraR.layers.enable(2);\n\t\t\tthis.cameraR.matrixAutoUpdate = false;\n\t\t\tthis._cache = {\n\t\t\t\tfocus: null,\n\t\t\t\tfov: null,\n\t\t\t\taspect: null,\n\t\t\t\tnear: null,\n\t\t\t\tfar: null,\n\t\t\t\tzoom: null,\n\t\t\t\teyeSep: null\n\t\t\t};\n\t\t}\n\n\t\tupdate(camera) {\n\t\t\tconst cache = this._cache;\n\t\t\tconst needsUpdate = cache.focus !== camera.focus || cache.fov !== camera.fov || cache.aspect !== camera.aspect * this.aspect || cache.near !== camera.near || cache.far !== camera.far || cache.zoom !== camera.zoom || cache.eyeSep !== this.eyeSep;\n\n\t\t\tif (needsUpdate) {\n\t\t\t\tcache.focus = camera.focus;\n\t\t\t\tcache.fov = camera.fov;\n\t\t\t\tcache.aspect = camera.aspect * this.aspect;\n\t\t\t\tcache.near = camera.near;\n\t\t\t\tcache.far = camera.far;\n\t\t\t\tcache.zoom = camera.zoom;\n\t\t\t\tcache.eyeSep = this.eyeSep; // Off-axis stereoscopic effect based on\n\t\t\t\t// http://paulbourke.net/stereographics/stereorender/\n\n\t\t\t\tconst projectionMatrix = camera.projectionMatrix.clone();\n\t\t\t\tconst eyeSepHalf = cache.eyeSep / 2;\n\t\t\t\tconst eyeSepOnProjection = eyeSepHalf * cache.near / cache.focus;\n\t\t\t\tconst ymax = cache.near * Math.tan(DEG2RAD * cache.fov * 0.5) / cache.zoom;\n\t\t\t\tlet xmin, xmax; // translate xOffset\n\n\t\t\t\t_eyeLeft.elements[12] = -eyeSepHalf;\n\t\t\t\t_eyeRight.elements[12] = eyeSepHalf; // for left eye\n\n\t\t\t\txmin = -ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect + eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraL.projectionMatrix.copy(projectionMatrix); // for right eye\n\n\t\t\t\txmin = -ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\txmax = ymax * cache.aspect - eyeSepOnProjection;\n\t\t\t\tprojectionMatrix.elements[0] = 2 * cache.near / (xmax - xmin);\n\t\t\t\tprojectionMatrix.elements[8] = (xmax + xmin) / (xmax - xmin);\n\t\t\t\tthis.cameraR.projectionMatrix.copy(projectionMatrix);\n\t\t\t}\n\n\t\t\tthis.cameraL.matrixWorld.copy(camera.matrixWorld).multiply(_eyeLeft);\n\t\t\tthis.cameraR.matrixWorld.copy(camera.matrixWorld).multiply(_eyeRight);\n\t\t}\n\n\t}\n\n\tclass Clock {\n\t\tconstructor(autoStart = true) {\n\t\t\tthis.autoStart = autoStart;\n\t\t\tthis.startTime = 0;\n\t\t\tthis.oldTime = 0;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = false;\n\t\t}\n\n\t\tstart() {\n\t\t\tthis.startTime = now();\n\t\t\tthis.oldTime = this.startTime;\n\t\t\tthis.elapsedTime = 0;\n\t\t\tthis.running = true;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis.getElapsedTime();\n\t\t\tthis.running = false;\n\t\t\tthis.autoStart = false;\n\t\t}\n\n\t\tgetElapsedTime() {\n\t\t\tthis.getDelta();\n\t\t\treturn this.elapsedTime;\n\t\t}\n\n\t\tgetDelta() {\n\t\t\tlet diff = 0;\n\n\t\t\tif (this.autoStart && !this.running) {\n\t\t\t\tthis.start();\n\t\t\t\treturn 0;\n\t\t\t}\n\n\t\t\tif (this.running) {\n\t\t\t\tconst newTime = now();\n\t\t\t\tdiff = (newTime - this.oldTime) / 1000;\n\t\t\t\tthis.oldTime = newTime;\n\t\t\t\tthis.elapsedTime += diff;\n\t\t\t}\n\n\t\t\treturn diff;\n\t\t}\n\n\t}\n\n\tfunction now() {\n\t\treturn (typeof performance === 'undefined' ? Date : performance).now(); // see #10732\n\t}\n\n\tconst _position$1 = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion$1 = /*@__PURE__*/new Quaternion();\n\n\tconst _scale$1 = /*@__PURE__*/new Vector3();\n\n\tconst _orientation$1 = /*@__PURE__*/new Vector3();\n\n\tclass AudioListener extends Object3D {\n\t\tconstructor() {\n\t\t\tsuper();\n\t\t\tthis.type = 'AudioListener';\n\t\t\tthis.context = AudioContext.getContext();\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(this.context.destination);\n\t\t\tthis.filter = null;\n\t\t\tthis.timeDelta = 0; // private\n\n\t\t\tthis._clock = new Clock();\n\t\t}\n\n\t\tgetInput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tremoveFilter() {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t\tthis.gain.connect(this.context.destination);\n\t\t\t\tthis.filter = null;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.filter;\n\t\t}\n\n\t\tsetFilter(value) {\n\t\t\tif (this.filter !== null) {\n\t\t\t\tthis.gain.disconnect(this.filter);\n\t\t\t\tthis.filter.disconnect(this.context.destination);\n\t\t\t} else {\n\t\t\t\tthis.gain.disconnect(this.context.destination);\n\t\t\t}\n\n\t\t\tthis.filter = value;\n\t\t\tthis.gain.connect(this.filter);\n\t\t\tthis.filter.connect(this.context.destination);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMasterVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetMasterVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tconst listener = this.context.listener;\n\t\t\tconst up = this.up;\n\t\t\tthis.timeDelta = this._clock.getDelta();\n\t\t\tthis.matrixWorld.decompose(_position$1, _quaternion$1, _scale$1);\n\n\t\t\t_orientation$1.set(0, 0, -1).applyQuaternion(_quaternion$1);\n\n\t\t\tif (listener.positionX) {\n\t\t\t\t// code path for Chrome (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.timeDelta;\n\t\t\t\tlistener.positionX.linearRampToValueAtTime(_position$1.x, endTime);\n\t\t\t\tlistener.positionY.linearRampToValueAtTime(_position$1.y, endTime);\n\t\t\t\tlistener.positionZ.linearRampToValueAtTime(_position$1.z, endTime);\n\t\t\t\tlistener.forwardX.linearRampToValueAtTime(_orientation$1.x, endTime);\n\t\t\t\tlistener.forwardY.linearRampToValueAtTime(_orientation$1.y, endTime);\n\t\t\t\tlistener.forwardZ.linearRampToValueAtTime(_orientation$1.z, endTime);\n\t\t\t\tlistener.upX.linearRampToValueAtTime(up.x, endTime);\n\t\t\t\tlistener.upY.linearRampToValueAtTime(up.y, endTime);\n\t\t\t\tlistener.upZ.linearRampToValueAtTime(up.z, endTime);\n\t\t\t} else {\n\t\t\t\tlistener.setPosition(_position$1.x, _position$1.y, _position$1.z);\n\t\t\t\tlistener.setOrientation(_orientation$1.x, _orientation$1.y, _orientation$1.z, up.x, up.y, up.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass Audio extends Object3D {\n\t\tconstructor(listener) {\n\t\t\tsuper();\n\t\t\tthis.type = 'Audio';\n\t\t\tthis.listener = listener;\n\t\t\tthis.context = listener.context;\n\t\t\tthis.gain = this.context.createGain();\n\t\t\tthis.gain.connect(listener.getInput());\n\t\t\tthis.autoplay = false;\n\t\t\tthis.buffer = null;\n\t\t\tthis.detune = 0;\n\t\t\tthis.loop = false;\n\t\t\tthis.loopStart = 0;\n\t\t\tthis.loopEnd = 0;\n\t\t\tthis.offset = 0;\n\t\t\tthis.duration = undefined;\n\t\t\tthis.playbackRate = 1;\n\t\t\tthis.isPlaying = false;\n\t\t\tthis.hasPlaybackControl = true;\n\t\t\tthis.source = null;\n\t\t\tthis.sourceType = 'empty';\n\t\t\tthis._startedAt = 0;\n\t\t\tthis._progress = 0;\n\t\t\tthis._connected = false;\n\t\t\tthis.filters = [];\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.gain;\n\t\t}\n\n\t\tsetNodeSource(audioNode) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'audioNode';\n\t\t\tthis.source = audioNode;\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaElementSource(mediaElement) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaNode';\n\t\t\tthis.source = this.context.createMediaElementSource(mediaElement);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetMediaStreamSource(mediaStream) {\n\t\t\tthis.hasPlaybackControl = false;\n\t\t\tthis.sourceType = 'mediaStreamNode';\n\t\t\tthis.source = this.context.createMediaStreamSource(mediaStream);\n\t\t\tthis.connect();\n\t\t\treturn this;\n\t\t}\n\n\t\tsetBuffer(audioBuffer) {\n\t\t\tthis.buffer = audioBuffer;\n\t\t\tthis.sourceType = 'buffer';\n\t\t\tif (this.autoplay) this.play();\n\t\t\treturn this;\n\t\t}\n\n\t\tplay(delay = 0) {\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tconsole.warn('THREE.Audio: Audio is already playing.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._startedAt = this.context.currentTime + delay;\n\t\t\tconst source = this.context.createBufferSource();\n\t\t\tsource.buffer = this.buffer;\n\t\t\tsource.loop = this.loop;\n\t\t\tsource.loopStart = this.loopStart;\n\t\t\tsource.loopEnd = this.loopEnd;\n\t\t\tsource.onended = this.onEnded.bind(this);\n\t\t\tsource.start(this._startedAt, this._progress + this.offset, this.duration);\n\t\t\tthis.isPlaying = true;\n\t\t\tthis.source = source;\n\t\t\tthis.setDetune(this.detune);\n\t\t\tthis.setPlaybackRate(this.playbackRate);\n\t\t\treturn this.connect();\n\t\t}\n\n\t\tpause() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\t// update current progress\n\t\t\t\tthis._progress += Math.max(this.context.currentTime - this._startedAt, 0) * this.playbackRate;\n\n\t\t\t\tif (this.loop === true) {\n\t\t\t\t\t// ensure _progress does not exceed duration with looped audios\n\t\t\t\t\tthis._progress = this._progress % (this.duration || this.buffer.duration);\n\t\t\t\t}\n\n\t\t\t\tthis.source.stop();\n\t\t\t\tthis.source.onended = null;\n\t\t\t\tthis.isPlaying = false;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis._progress = 0;\n\t\t\tthis.source.stop();\n\t\t\tthis.source.onended = null;\n\t\t\tthis.isPlaying = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.connect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].connect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].connect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.connect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = true;\n\t\t\treturn this;\n\t\t}\n\n\t\tdisconnect() {\n\t\t\tif (this.filters.length > 0) {\n\t\t\t\tthis.source.disconnect(this.filters[0]);\n\n\t\t\t\tfor (let i = 1, l = this.filters.length; i < l; i++) {\n\t\t\t\t\tthis.filters[i - 1].disconnect(this.filters[i]);\n\t\t\t\t}\n\n\t\t\t\tthis.filters[this.filters.length - 1].disconnect(this.getOutput());\n\t\t\t} else {\n\t\t\t\tthis.source.disconnect(this.getOutput());\n\t\t\t}\n\n\t\t\tthis._connected = false;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetFilters() {\n\t\t\treturn this.filters;\n\t\t}\n\n\t\tsetFilters(value) {\n\t\t\tif (!value) value = [];\n\n\t\t\tif (this._connected === true) {\n\t\t\t\tthis.disconnect();\n\t\t\t\tthis.filters = value.slice();\n\t\t\t\tthis.connect();\n\t\t\t} else {\n\t\t\t\tthis.filters = value.slice();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDetune(value) {\n\t\t\tthis.detune = value;\n\t\t\tif (this.source.detune === undefined) return; // only set detune when available\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.detune.setTargetAtTime(this.detune, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDetune() {\n\t\t\treturn this.detune;\n\t\t}\n\n\t\tgetFilter() {\n\t\t\treturn this.getFilters()[0];\n\t\t}\n\n\t\tsetFilter(filter) {\n\t\t\treturn this.setFilters(filter ? [filter] : []);\n\t\t}\n\n\t\tsetPlaybackRate(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.playbackRate = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.playbackRate.setTargetAtTime(this.playbackRate, this.context.currentTime, 0.01);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tgetPlaybackRate() {\n\t\t\treturn this.playbackRate;\n\t\t}\n\n\t\tonEnded() {\n\t\t\tthis.isPlaying = false;\n\t\t}\n\n\t\tgetLoop() {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn false;\n\t\t\t}\n\n\t\t\treturn this.loop;\n\t\t}\n\n\t\tsetLoop(value) {\n\t\t\tif (this.hasPlaybackControl === false) {\n\t\t\t\tconsole.warn('THREE.Audio: this Audio has no playback control.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tthis.loop = value;\n\n\t\t\tif (this.isPlaying === true) {\n\t\t\t\tthis.source.loop = this.loop;\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopStart(value) {\n\t\t\tthis.loopStart = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoopEnd(value) {\n\t\t\tthis.loopEnd = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetVolume() {\n\t\t\treturn this.gain.gain.value;\n\t\t}\n\n\t\tsetVolume(value) {\n\t\t\tthis.gain.gain.setTargetAtTime(value, this.context.currentTime, 0.01);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tconst _position = /*@__PURE__*/new Vector3();\n\n\tconst _quaternion = /*@__PURE__*/new Quaternion();\n\n\tconst _scale = /*@__PURE__*/new Vector3();\n\n\tconst _orientation = /*@__PURE__*/new Vector3();\n\n\tclass PositionalAudio extends Audio {\n\t\tconstructor(listener) {\n\t\t\tsuper(listener);\n\t\t\tthis.panner = this.context.createPanner();\n\t\t\tthis.panner.panningModel = 'HRTF';\n\t\t\tthis.panner.connect(this.gain);\n\t\t}\n\n\t\tgetOutput() {\n\t\t\treturn this.panner;\n\t\t}\n\n\t\tgetRefDistance() {\n\t\t\treturn this.panner.refDistance;\n\t\t}\n\n\t\tsetRefDistance(value) {\n\t\t\tthis.panner.refDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetRolloffFactor() {\n\t\t\treturn this.panner.rolloffFactor;\n\t\t}\n\n\t\tsetRolloffFactor(value) {\n\t\t\tthis.panner.rolloffFactor = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetDistanceModel() {\n\t\t\treturn this.panner.distanceModel;\n\t\t}\n\n\t\tsetDistanceModel(value) {\n\t\t\tthis.panner.distanceModel = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tgetMaxDistance() {\n\t\t\treturn this.panner.maxDistance;\n\t\t}\n\n\t\tsetMaxDistance(value) {\n\t\t\tthis.panner.maxDistance = value;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetDirectionalCone(coneInnerAngle, coneOuterAngle, coneOuterGain) {\n\t\t\tthis.panner.coneInnerAngle = coneInnerAngle;\n\t\t\tthis.panner.coneOuterAngle = coneOuterAngle;\n\t\t\tthis.panner.coneOuterGain = coneOuterGain;\n\t\t\treturn this;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t\tif (this.hasPlaybackControl === true && this.isPlaying === false) return;\n\t\t\tthis.matrixWorld.decompose(_position, _quaternion, _scale);\n\n\t\t\t_orientation.set(0, 0, 1).applyQuaternion(_quaternion);\n\n\t\t\tconst panner = this.panner;\n\n\t\t\tif (panner.positionX) {\n\t\t\t\t// code path for Chrome and Firefox (see #14393)\n\t\t\t\tconst endTime = this.context.currentTime + this.listener.timeDelta;\n\t\t\t\tpanner.positionX.linearRampToValueAtTime(_position.x, endTime);\n\t\t\t\tpanner.positionY.linearRampToValueAtTime(_position.y, endTime);\n\t\t\t\tpanner.positionZ.linearRampToValueAtTime(_position.z, endTime);\n\t\t\t\tpanner.orientationX.linearRampToValueAtTime(_orientation.x, endTime);\n\t\t\t\tpanner.orientationY.linearRampToValueAtTime(_orientation.y, endTime);\n\t\t\t\tpanner.orientationZ.linearRampToValueAtTime(_orientation.z, endTime);\n\t\t\t} else {\n\t\t\t\tpanner.setPosition(_position.x, _position.y, _position.z);\n\t\t\t\tpanner.setOrientation(_orientation.x, _orientation.y, _orientation.z);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tclass AudioAnalyser {\n\t\tconstructor(audio, fftSize = 2048) {\n\t\t\tthis.analyser = audio.context.createAnalyser();\n\t\t\tthis.analyser.fftSize = fftSize;\n\t\t\tthis.data = new Uint8Array(this.analyser.frequencyBinCount);\n\t\t\taudio.getOutput().connect(this.analyser);\n\t\t}\n\n\t\tgetFrequencyData() {\n\t\t\tthis.analyser.getByteFrequencyData(this.data);\n\t\t\treturn this.data;\n\t\t}\n\n\t\tgetAverageFrequency() {\n\t\t\tlet value = 0;\n\t\t\tconst data = this.getFrequencyData();\n\n\t\t\tfor (let i = 0; i < data.length; i++) {\n\t\t\t\tvalue += data[i];\n\t\t\t}\n\n\t\t\treturn value / data.length;\n\t\t}\n\n\t}\n\n\tclass PropertyMixer {\n\t\tconstructor(binding, typeName, valueSize) {\n\t\t\tthis.binding = binding;\n\t\t\tthis.valueSize = valueSize;\n\t\t\tlet mixFunction, mixFunctionAdditive, setIdentity; // buffer layout: [ incoming | accu0 | accu1 | orig | addAccu | (optional work) ]\n\t\t\t//\n\t\t\t// interpolators can use .buffer as their .result\n\t\t\t// the data then goes to 'incoming'\n\t\t\t//\n\t\t\t// 'accu0' and 'accu1' are used frame-interleaved for\n\t\t\t// the cumulative result and are compared to detect\n\t\t\t// changes\n\t\t\t//\n\t\t\t// 'orig' stores the original state of the property\n\t\t\t//\n\t\t\t// 'add' is used for additive cumulative results\n\t\t\t//\n\t\t\t// 'work' is optional and is only present for quaternion types. It is used\n\t\t\t// to store intermediate quaternion multiplication results\n\n\t\t\tswitch (typeName) {\n\t\t\t\tcase 'quaternion':\n\t\t\t\t\tmixFunction = this._slerp;\n\t\t\t\t\tmixFunctionAdditive = this._slerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityQuaternion;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 6);\n\t\t\t\t\tthis._workIndex = 5;\n\t\t\t\t\tbreak;\n\n\t\t\t\tcase 'string':\n\t\t\t\tcase 'bool':\n\t\t\t\t\tmixFunction = this._select; // Use the regular mix function and for additive on these types,\n\t\t\t\t\t// additive is not relevant for non-numeric types\n\n\t\t\t\t\tmixFunctionAdditive = this._select;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityOther;\n\t\t\t\t\tthis.buffer = new Array(valueSize * 5);\n\t\t\t\t\tbreak;\n\n\t\t\t\tdefault:\n\t\t\t\t\tmixFunction = this._lerp;\n\t\t\t\t\tmixFunctionAdditive = this._lerpAdditive;\n\t\t\t\t\tsetIdentity = this._setAdditiveIdentityNumeric;\n\t\t\t\t\tthis.buffer = new Float64Array(valueSize * 5);\n\t\t\t}\n\n\t\t\tthis._mixBufferRegion = mixFunction;\n\t\t\tthis._mixBufferRegionAdditive = mixFunctionAdditive;\n\t\t\tthis._setIdentity = setIdentity;\n\t\t\tthis._origIndex = 3;\n\t\t\tthis._addIndex = 4;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t\tthis.useCount = 0;\n\t\t\tthis.referenceCount = 0;\n\t\t} // accumulate data in the 'incoming' region into 'accu<i>'\n\n\n\t\taccumulate(accuIndex, weight) {\n\t\t\t// note: happily accumulating nothing when weight = 0, the caller knows\n\t\t\t// the weight and shouldn't have made the call in the first place\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = accuIndex * stride + stride;\n\t\t\tlet currentWeight = this.cumulativeWeight;\n\n\t\t\tif (currentWeight === 0) {\n\t\t\t\t// accuN := incoming * weight\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[offset + i] = buffer[i];\n\t\t\t\t}\n\n\t\t\t\tcurrentWeight = weight;\n\t\t\t} else {\n\t\t\t\t// accuN := accuN + incoming * weight\n\t\t\t\tcurrentWeight += weight;\n\t\t\t\tconst mix = weight / currentWeight;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, 0, mix, stride);\n\t\t\t}\n\n\t\t\tthis.cumulativeWeight = currentWeight;\n\t\t} // accumulate data in the 'incoming' region into 'add'\n\n\n\t\taccumulateAdditive(weight) {\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toffset = stride * this._addIndex;\n\n\t\t\tif (this.cumulativeWeightAdditive === 0) {\n\t\t\t\t// add = identity\n\t\t\t\tthis._setIdentity();\n\t\t\t} // add := add + incoming * weight\n\n\n\t\t\tthis._mixBufferRegionAdditive(buffer, offset, 0, weight, stride);\n\n\t\t\tthis.cumulativeWeightAdditive += weight;\n\t\t} // apply the state of 'accu<i>' to the binding when accus differ\n\n\n\t\tapply(accuIndex) {\n\t\t\tconst stride = this.valueSize,\n\t\t\t\t\t\tbuffer = this.buffer,\n\t\t\t\t\t\toffset = accuIndex * stride + stride,\n\t\t\t\t\t\tweight = this.cumulativeWeight,\n\t\t\t\t\t\tweightAdditive = this.cumulativeWeightAdditive,\n\t\t\t\t\t\tbinding = this.binding;\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\n\t\t\tif (weight < 1) {\n\t\t\t\t// accuN := accuN + original * ( 1 - cumulativeWeight )\n\t\t\t\tconst originalValueOffset = stride * this._origIndex;\n\n\t\t\t\tthis._mixBufferRegion(buffer, offset, originalValueOffset, 1 - weight, stride);\n\t\t\t}\n\n\t\t\tif (weightAdditive > 0) {\n\t\t\t\t// accuN := accuN + additive accuN\n\t\t\t\tthis._mixBufferRegionAdditive(buffer, offset, this._addIndex * stride, 1, stride);\n\t\t\t}\n\n\t\t\tfor (let i = stride, e = stride + stride; i !== e; ++i) {\n\t\t\t\tif (buffer[i] !== buffer[i + stride]) {\n\t\t\t\t\t// value has changed -> update scene graph\n\t\t\t\t\tbinding.setValue(buffer, offset);\n\t\t\t\t\tbreak;\n\t\t\t\t}\n\t\t\t}\n\t\t} // remember the state of the bound property and copy it to both accus\n\n\n\t\tsaveOriginalState() {\n\t\t\tconst binding = this.binding;\n\t\t\tconst buffer = this.buffer,\n\t\t\t\t\t\tstride = this.valueSize,\n\t\t\t\t\t\toriginalValueOffset = stride * this._origIndex;\n\t\t\tbinding.getValue(buffer, originalValueOffset); // accu[0..1] := orig -- initially detect changes against the original\n\n\t\t\tfor (let i = stride, e = originalValueOffset; i !== e; ++i) {\n\t\t\t\tbuffer[i] = buffer[originalValueOffset + i % stride];\n\t\t\t} // Add to identity for additive\n\n\n\t\t\tthis._setIdentity();\n\n\t\t\tthis.cumulativeWeight = 0;\n\t\t\tthis.cumulativeWeightAdditive = 0;\n\t\t} // apply the state previously taken via 'saveOriginalState' to the binding\n\n\n\t\trestoreOriginalState() {\n\t\t\tconst originalValueOffset = this.valueSize * 3;\n\t\t\tthis.binding.setValue(this.buffer, originalValueOffset);\n\t\t}\n\n\t\t_setAdditiveIdentityNumeric() {\n\t\t\tconst startIndex = this._addIndex * this.valueSize;\n\t\t\tconst endIndex = startIndex + this.valueSize;\n\n\t\t\tfor (let i = startIndex; i < endIndex; i++) {\n\t\t\t\tthis.buffer[i] = 0;\n\t\t\t}\n\t\t}\n\n\t\t_setAdditiveIdentityQuaternion() {\n\t\t\tthis._setAdditiveIdentityNumeric();\n\n\t\t\tthis.buffer[this._addIndex * this.valueSize + 3] = 1;\n\t\t}\n\n\t\t_setAdditiveIdentityOther() {\n\t\t\tconst startIndex = this._origIndex * this.valueSize;\n\t\t\tconst targetIndex = this._addIndex * this.valueSize;\n\n\t\t\tfor (let i = 0; i < this.valueSize; i++) {\n\t\t\t\tthis.buffer[targetIndex + i] = this.buffer[startIndex + i];\n\t\t\t}\n\t\t} // mix functions\n\n\n\t\t_select(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tif (t >= 0.5) {\n\t\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\t\tbuffer[dstOffset + i] = buffer[srcOffset + i];\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_slerp(buffer, dstOffset, srcOffset, t) {\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, srcOffset, t);\n\t\t}\n\n\t\t_slerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst workOffset = this._workIndex * stride; // Store result in intermediate buffer offset\n\n\t\t\tQuaternion.multiplyQuaternionsFlat(buffer, workOffset, buffer, dstOffset, buffer, srcOffset); // Slerp to the intermediate result\n\n\t\t\tQuaternion.slerpFlat(buffer, dstOffset, buffer, dstOffset, buffer, workOffset, t);\n\t\t}\n\n\t\t_lerp(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tconst s = 1 - t;\n\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] * s + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t\t_lerpAdditive(buffer, dstOffset, srcOffset, t, stride) {\n\t\t\tfor (let i = 0; i !== stride; ++i) {\n\t\t\t\tconst j = dstOffset + i;\n\t\t\t\tbuffer[j] = buffer[j] + buffer[srcOffset + i] * t;\n\t\t\t}\n\t\t}\n\n\t}\n\n\t// Characters [].:/ are reserved for track binding syntax.\n\tconst _RESERVED_CHARS_RE = '\\\\[\\\\]\\\\.:\\\\/';\n\n\tconst _reservedRe = new RegExp('[' + _RESERVED_CHARS_RE + ']', 'g'); // Attempts to allow node names from any language. ES5's `\\w` regexp matches\n\t// only latin characters, and the unicode \\p{L} is not yet supported. So\n\t// instead, we exclude reserved characters and match everything else.\n\n\n\tconst _wordChar = '[^' + _RESERVED_CHARS_RE + ']';\n\n\tconst _wordCharOrDot = '[^' + _RESERVED_CHARS_RE.replace('\\\\.', '') + ']'; // Parent directories, delimited by '/' or ':'. Currently unused, but must\n\t// be matched to parse the rest of the track name.\n\n\n\tconst _directoryRe = /((?:WC+[\\/:])*)/.source.replace('WC', _wordChar); // Target node. May contain word characters (a-zA-Z0-9_) and '.' or '-'.\n\n\n\tconst _nodeRe = /(WCOD+)?/.source.replace('WCOD', _wordCharOrDot); // Object on target node, and accessor. May not contain reserved\n\t// characters. Accessor may contain any character except closing bracket.\n\n\n\tconst _objectRe = /(?:\\.(WC+)(?:\\[(.+)\\])?)?/.source.replace('WC', _wordChar); // Property and accessor. May not contain reserved characters. Accessor may\n\t// contain any non-bracket characters.\n\n\n\tconst _propertyRe = /\\.(WC+)(?:\\[(.+)\\])?/.source.replace('WC', _wordChar);\n\n\tconst _trackRe = new RegExp('' + '^' + _directoryRe + _nodeRe + _objectRe + _propertyRe + '$');\n\n\tconst _supportedObjectNames = ['material', 'materials', 'bones'];\n\n\tclass Composite {\n\t\tconstructor(targetGroup, path, optionalParsedPath) {\n\t\t\tconst parsedPath = optionalParsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis._targetGroup = targetGroup;\n\t\t\tthis._bindings = targetGroup.subscribe_(path, parsedPath);\n\t\t}\n\n\t\tgetValue(array, offset) {\n\t\t\tthis.bind(); // bind all binding\n\n\t\t\tconst firstValidIndex = this._targetGroup.nCachedObjects_,\n\t\t\t\t\t\tbinding = this._bindings[firstValidIndex]; // and only call .getValue on the first\n\n\t\t\tif (binding !== undefined) binding.getValue(array, offset);\n\t\t}\n\n\t\tsetValue(array, offset) {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].setValue(array, offset);\n\t\t\t}\n\t\t}\n\n\t\tbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].bind();\n\t\t\t}\n\t\t}\n\n\t\tunbind() {\n\t\t\tconst bindings = this._bindings;\n\n\t\t\tfor (let i = this._targetGroup.nCachedObjects_, n = bindings.length; i !== n; ++i) {\n\t\t\t\tbindings[i].unbind();\n\t\t\t}\n\t\t}\n\n\t} // Note: This class uses a State pattern on a per-method basis:\n\t// 'bind' sets 'this.getValue' / 'setValue' and shadows the\n\t// prototype version of these methods with one that represents\n\t// the bound state. When the property is not found, the methods\n\t// become no-ops.\n\n\n\tclass PropertyBinding {\n\t\tconstructor(rootNode, path, parsedPath) {\n\t\t\tthis.path = path;\n\t\t\tthis.parsedPath = parsedPath || PropertyBinding.parseTrackName(path);\n\t\t\tthis.node = PropertyBinding.findNode(rootNode, this.parsedPath.nodeName) || rootNode;\n\t\t\tthis.rootNode = rootNode; // initial state of these methods that calls 'bind'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t\tstatic create(root, path, parsedPath) {\n\t\t\tif (!(root && root.isAnimationObjectGroup)) {\n\t\t\t\treturn new PropertyBinding(root, path, parsedPath);\n\t\t\t} else {\n\t\t\t\treturn new PropertyBinding.Composite(root, path, parsedPath);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Replaces spaces with underscores and removes unsupported characters from\n\t\t * node names, to ensure compatibility with parseTrackName().\n\t\t *\n\t\t * @param {string} name Node name to be sanitized.\n\t\t * @return {string}\n\t\t */\n\n\n\t\tstatic sanitizeNodeName(name) {\n\t\t\treturn name.replace(/\\s/g, '_').replace(_reservedRe, '');\n\t\t}\n\n\t\tstatic parseTrackName(trackName) {\n\t\t\tconst matches = _trackRe.exec(trackName);\n\n\t\t\tif (!matches) {\n\t\t\t\tthrow new Error('PropertyBinding: Cannot parse trackName: ' + trackName);\n\t\t\t}\n\n\t\t\tconst results = {\n\t\t\t\t// directoryName: matches[ 1 ], // (tschw) currently unused\n\t\t\t\tnodeName: matches[2],\n\t\t\t\tobjectName: matches[3],\n\t\t\t\tobjectIndex: matches[4],\n\t\t\t\tpropertyName: matches[5],\n\t\t\t\t// required\n\t\t\t\tpropertyIndex: matches[6]\n\t\t\t};\n\t\t\tconst lastDot = results.nodeName && results.nodeName.lastIndexOf('.');\n\n\t\t\tif (lastDot !== undefined && lastDot !== -1) {\n\t\t\t\tconst objectName = results.nodeName.substring(lastDot + 1); // Object names must be checked against an allowlist. Otherwise, there\n\t\t\t\t// is no way to parse 'foo.bar.baz': 'baz' must be a property, but\n\t\t\t\t// 'bar' could be the objectName, or part of a nodeName (which can\n\t\t\t\t// include '.' characters).\n\n\t\t\t\tif (_supportedObjectNames.indexOf(objectName) !== -1) {\n\t\t\t\t\tresults.nodeName = results.nodeName.substring(0, lastDot);\n\t\t\t\t\tresults.objectName = objectName;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (results.propertyName === null || results.propertyName.length === 0) {\n\t\t\t\tthrow new Error('PropertyBinding: can not parse propertyName from trackName: ' + trackName);\n\t\t\t}\n\n\t\t\treturn results;\n\t\t}\n\n\t\tstatic findNode(root, nodeName) {\n\t\t\tif (!nodeName || nodeName === '' || nodeName === '.' || nodeName === -1 || nodeName === root.name || nodeName === root.uuid) {\n\t\t\t\treturn root;\n\t\t\t} // search into skeleton bones.\n\n\n\t\t\tif (root.skeleton) {\n\t\t\t\tconst bone = root.skeleton.getBoneByName(nodeName);\n\n\t\t\t\tif (bone !== undefined) {\n\t\t\t\t\treturn bone;\n\t\t\t\t}\n\t\t\t} // search into node subtree.\n\n\n\t\t\tif (root.children) {\n\t\t\t\tconst searchNodeSubtree = function (children) {\n\t\t\t\t\tfor (let i = 0; i < children.length; i++) {\n\t\t\t\t\t\tconst childNode = children[i];\n\n\t\t\t\t\t\tif (childNode.name === nodeName || childNode.uuid === nodeName) {\n\t\t\t\t\t\t\treturn childNode;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tconst result = searchNodeSubtree(childNode.children);\n\t\t\t\t\t\tif (result) return result;\n\t\t\t\t\t}\n\n\t\t\t\t\treturn null;\n\t\t\t\t};\n\n\t\t\t\tconst subTreeNode = searchNodeSubtree(root.children);\n\n\t\t\t\tif (subTreeNode) {\n\t\t\t\t\treturn subTreeNode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // these are used to \"bind\" a nonexistent property\n\n\n\t\t_getValue_unavailable() {}\n\n\t\t_setValue_unavailable() {} // Getters\n\n\n\t\t_getValue_direct(buffer, offset) {\n\t\t\tbuffer[offset] = this.node[this.propertyName];\n\t\t}\n\n\t\t_getValue_array(buffer, offset) {\n\t\t\tconst source = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = source.length; i !== n; ++i) {\n\t\t\t\tbuffer[offset++] = source[i];\n\t\t\t}\n\t\t}\n\n\t\t_getValue_arrayElement(buffer, offset) {\n\t\t\tbuffer[offset] = this.resolvedProperty[this.propertyIndex];\n\t\t}\n\n\t\t_getValue_toArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.toArray(buffer, offset);\n\t\t} // Direct\n\n\n\t\t_setValue_direct(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t}\n\n\t\t_setValue_direct_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_direct_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.targetObject[this.propertyName] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // EntireArray\n\n\n\t\t_setValue_array(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\t\t}\n\n\t\t_setValue_array_setNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_array_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tconst dest = this.resolvedProperty;\n\n\t\t\tfor (let i = 0, n = dest.length; i !== n; ++i) {\n\t\t\t\tdest[i] = buffer[offset++];\n\t\t\t}\n\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // ArrayElement\n\n\n\t\t_setValue_arrayElement(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t}\n\n\t\t_setValue_arrayElement_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_arrayElement_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty[this.propertyIndex] = buffer[offset];\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t} // HasToFromArray\n\n\n\t\t_setValue_fromArray(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t}\n\n\t\t_setValue_fromArray_setNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.needsUpdate = true;\n\t\t}\n\n\t\t_setValue_fromArray_setMatrixWorldNeedsUpdate(buffer, offset) {\n\t\t\tthis.resolvedProperty.fromArray(buffer, offset);\n\t\t\tthis.targetObject.matrixWorldNeedsUpdate = true;\n\t\t}\n\n\t\t_getValue_unbound(targetArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.getValue(targetArray, offset);\n\t\t}\n\n\t\t_setValue_unbound(sourceArray, offset) {\n\t\t\tthis.bind();\n\t\t\tthis.setValue(sourceArray, offset);\n\t\t} // create getter / setter pair for a property in the scene graph\n\n\n\t\tbind() {\n\t\t\tlet targetObject = this.node;\n\t\t\tconst parsedPath = this.parsedPath;\n\t\t\tconst objectName = parsedPath.objectName;\n\t\t\tconst propertyName = parsedPath.propertyName;\n\t\t\tlet propertyIndex = parsedPath.propertyIndex;\n\n\t\t\tif (!targetObject) {\n\t\t\t\ttargetObject = PropertyBinding.findNode(this.rootNode, parsedPath.nodeName) || this.rootNode;\n\t\t\t\tthis.node = targetObject;\n\t\t\t} // set fail state so we can just 'return' on error\n\n\n\t\t\tthis.getValue = this._getValue_unavailable;\n\t\t\tthis.setValue = this._setValue_unavailable; // ensure there is a value node\n\n\t\t\tif (!targetObject) {\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update node for track: ' + this.path + ' but it wasn\\'t found.');\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tif (objectName) {\n\t\t\t\tlet objectIndex = parsedPath.objectIndex; // special cases were we need to reach deeper into the hierarchy to get the face materials....\n\n\t\t\t\tswitch (objectName) {\n\t\t\t\t\tcase 'materials':\n\t\t\t\t\t\tif (!targetObject.material) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material as node does not have a material.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (!targetObject.material.materials) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to material.materials as node.material does not have a materials array.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject.material.materials;\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase 'bones':\n\t\t\t\t\t\tif (!targetObject.skeleton) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to bones as node does not have a skeleton.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t} // potential future optimization: skip this if propertyIndex is already an integer\n\t\t\t\t\t\t// and convert the integer string to a true integer.\n\n\n\t\t\t\t\t\ttargetObject = targetObject.skeleton.bones; // support resolving morphTarget names into indices.\n\n\t\t\t\t\t\tfor (let i = 0; i < targetObject.length; i++) {\n\t\t\t\t\t\t\tif (targetObject[i].name === objectIndex) {\n\t\t\t\t\t\t\t\tobjectIndex = i;\n\t\t\t\t\t\t\t\tbreak;\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tif (targetObject[objectName] === undefined) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to objectName of node undefined.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\ttargetObject = targetObject[objectName];\n\t\t\t\t}\n\n\t\t\t\tif (objectIndex !== undefined) {\n\t\t\t\t\tif (targetObject[objectIndex] === undefined) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to bind to objectIndex of objectName, but is undefined.', this, targetObject);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\ttargetObject = targetObject[objectIndex];\n\t\t\t\t}\n\t\t\t} // resolve property\n\n\n\t\t\tconst nodeProperty = targetObject[propertyName];\n\n\t\t\tif (nodeProperty === undefined) {\n\t\t\t\tconst nodeName = parsedPath.nodeName;\n\t\t\t\tconsole.error('THREE.PropertyBinding: Trying to update property for track: ' + nodeName + '.' + propertyName + ' but it wasn\\'t found.', targetObject);\n\t\t\t\treturn;\n\t\t\t} // determine versioning scheme\n\n\n\t\t\tlet versioning = this.Versioning.None;\n\t\t\tthis.targetObject = targetObject;\n\n\t\t\tif (targetObject.needsUpdate !== undefined) {\n\t\t\t\t// material\n\t\t\t\tversioning = this.Versioning.NeedsUpdate;\n\t\t\t} else if (targetObject.matrixWorldNeedsUpdate !== undefined) {\n\t\t\t\t// node transform\n\t\t\t\tversioning = this.Versioning.MatrixWorldNeedsUpdate;\n\t\t\t} // determine how the property gets bound\n\n\n\t\t\tlet bindingType = this.BindingType.Direct;\n\n\t\t\tif (propertyIndex !== undefined) {\n\t\t\t\t// access a sub element of the property array (only primitives are supported right now)\n\t\t\t\tif (propertyName === 'morphTargetInfluences') {\n\t\t\t\t\t// potential optimization, skip this if propertyIndex is already an integer, and convert the integer string to a true integer.\n\t\t\t\t\t// support resolving morphTarget names into indices.\n\t\t\t\t\tif (!targetObject.geometry) {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (targetObject.geometry.isBufferGeometry) {\n\t\t\t\t\t\tif (!targetObject.geometry.morphAttributes) {\n\t\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences because node does not have a geometry.morphAttributes.', this);\n\t\t\t\t\t\t\treturn;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tif (targetObject.morphTargetDictionary[propertyIndex] !== undefined) {\n\t\t\t\t\t\t\tpropertyIndex = targetObject.morphTargetDictionary[propertyIndex];\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\tconsole.error('THREE.PropertyBinding: Can not bind to morphTargetInfluences on THREE.Geometry. Use THREE.BufferGeometry instead.', this);\n\t\t\t\t\t\treturn;\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tbindingType = this.BindingType.ArrayElement;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t\tthis.propertyIndex = propertyIndex;\n\t\t\t} else if (nodeProperty.fromArray !== undefined && nodeProperty.toArray !== undefined) {\n\t\t\t\t// must use copy for Object3D.Euler/Quaternion\n\t\t\t\tbindingType = this.BindingType.HasFromToArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else if (Array.isArray(nodeProperty)) {\n\t\t\t\tbindingType = this.BindingType.EntireArray;\n\t\t\t\tthis.resolvedProperty = nodeProperty;\n\t\t\t} else {\n\t\t\t\tthis.propertyName = propertyName;\n\t\t\t} // select getter / setter\n\n\n\t\t\tthis.getValue = this.GetterByBindingType[bindingType];\n\t\t\tthis.setValue = this.SetterByBindingTypeAndVersioning[bindingType][versioning];\n\t\t}\n\n\t\tunbind() {\n\t\t\tthis.node = null; // back to the prototype version of getValue / setValue\n\t\t\t// note: avoiding to mutate the shape of 'this' via 'delete'\n\n\t\t\tthis.getValue = this._getValue_unbound;\n\t\t\tthis.setValue = this._setValue_unbound;\n\t\t}\n\n\t}\n\n\tPropertyBinding.Composite = Composite;\n\tPropertyBinding.prototype.BindingType = {\n\t\tDirect: 0,\n\t\tEntireArray: 1,\n\t\tArrayElement: 2,\n\t\tHasFromToArray: 3\n\t};\n\tPropertyBinding.prototype.Versioning = {\n\t\tNone: 0,\n\t\tNeedsUpdate: 1,\n\t\tMatrixWorldNeedsUpdate: 2\n\t};\n\tPropertyBinding.prototype.GetterByBindingType = [PropertyBinding.prototype._getValue_direct, PropertyBinding.prototype._getValue_array, PropertyBinding.prototype._getValue_arrayElement, PropertyBinding.prototype._getValue_toArray];\n\tPropertyBinding.prototype.SetterByBindingTypeAndVersioning = [[// Direct\n\tPropertyBinding.prototype._setValue_direct, PropertyBinding.prototype._setValue_direct_setNeedsUpdate, PropertyBinding.prototype._setValue_direct_setMatrixWorldNeedsUpdate], [// EntireArray\n\tPropertyBinding.prototype._setValue_array, PropertyBinding.prototype._setValue_array_setNeedsUpdate, PropertyBinding.prototype._setValue_array_setMatrixWorldNeedsUpdate], [// ArrayElement\n\tPropertyBinding.prototype._setValue_arrayElement, PropertyBinding.prototype._setValue_arrayElement_setNeedsUpdate, PropertyBinding.prototype._setValue_arrayElement_setMatrixWorldNeedsUpdate], [// HasToFromArray\n\tPropertyBinding.prototype._setValue_fromArray, PropertyBinding.prototype._setValue_fromArray_setNeedsUpdate, PropertyBinding.prototype._setValue_fromArray_setMatrixWorldNeedsUpdate]];\n\n\t/**\n\t *\n\t * A group of objects that receives a shared animation state.\n\t *\n\t * Usage:\n\t *\n\t *\t- Add objects you would otherwise pass as 'root' to the\n\t *\t\tconstructor or the .clipAction method of AnimationMixer.\n\t *\n\t *\t- Instead pass this object as 'root'.\n\t *\n\t *\t- You can also add and remove objects later when the mixer\n\t *\t\tis running.\n\t *\n\t * Note:\n\t *\n\t *\t\tObjects of this class appear as one object to the mixer,\n\t *\t\tso cache control of the individual objects must be done\n\t *\t\ton the group.\n\t *\n\t * Limitation:\n\t *\n\t *\t- The animated properties must be compatible among the\n\t *\t\tall objects in the group.\n\t *\n\t *\t- A single property can either be controlled through a\n\t *\t\ttarget group or directly, but not both.\n\t */\n\n\tclass AnimationObjectGroup {\n\t\tconstructor() {\n\t\t\tthis.uuid = generateUUID(); // cached objects followed by the active ones\n\n\t\t\tthis._objects = Array.prototype.slice.call(arguments);\n\t\t\tthis.nCachedObjects_ = 0; // threshold\n\t\t\t// note: read by PropertyBinding.Composite\n\n\t\t\tconst indices = {};\n\t\t\tthis._indicesByUUID = indices; // for bookkeeping\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tindices[arguments[i].uuid] = i;\n\t\t\t}\n\n\t\t\tthis._paths = []; // inside: string\n\n\t\t\tthis._parsedPaths = []; // inside: { we don't care, here }\n\n\t\t\tthis._bindings = []; // inside: Array< PropertyBinding >\n\n\t\t\tthis._bindingsIndicesByPath = {}; // inside: indices in these arrays\n\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tobjects: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._objects.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn this.total - scope.nCachedObjects_;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\n\t\t\t\tget bindingsPerObject() {\n\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t}\n\n\t\t\t};\n\t\t}\n\n\t\tadd() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tpaths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet knownObject = undefined,\n\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\tnCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid;\n\t\t\t\tlet index = indicesByUUID[uuid];\n\n\t\t\t\tif (index === undefined) {\n\t\t\t\t\t// unknown object -> add it to the ACTIVE region\n\t\t\t\t\tindex = nObjects++;\n\t\t\t\t\tindicesByUUID[uuid] = index;\n\t\t\t\t\tobjects.push(object); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tbindings[j].push(new PropertyBinding(object, paths[j], parsedPaths[j]));\n\t\t\t\t\t}\n\t\t\t\t} else if (index < nCachedObjects) {\n\t\t\t\t\tknownObject = objects[index]; // move existing object to the ACTIVE region\n\n\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex];\n\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\tobjects[index] = lastCachedObject;\n\t\t\t\t\tindicesByUUID[uuid] = firstActiveIndex;\n\t\t\t\t\tobjects[firstActiveIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex];\n\t\t\t\t\t\tlet binding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\n\t\t\t\t\t\tif (binding === undefined) {\n\t\t\t\t\t\t\t// since we do not bother to create new bindings\n\t\t\t\t\t\t\t// for objects that are cached, the binding may\n\t\t\t\t\t\t\t// or may not exist\n\t\t\t\t\t\t\tbinding = new PropertyBinding(object, paths[j], parsedPaths[j]);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t} else if (objects[index] !== knownObject) {\n\t\t\t\t\tconsole.error('THREE.AnimationObjectGroup: Different objects with the same UUID ' + 'detected. Clean the caches or recreate your infrastructure when reloading scenes.');\n\t\t\t\t} // else the object is already where we want it to be\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t}\n\n\t\tremove() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined && index >= nCachedObjects) {\n\t\t\t\t\t// move existing object into the CACHED region\n\t\t\t\t\tconst lastCachedIndex = nCachedObjects++,\n\t\t\t\t\t\t\t\tfirstActiveObject = objects[lastCachedIndex];\n\t\t\t\t\tindicesByUUID[firstActiveObject.uuid] = index;\n\t\t\t\t\tobjects[index] = firstActiveObject;\n\t\t\t\t\tindicesByUUID[uuid] = lastCachedIndex;\n\t\t\t\t\tobjects[lastCachedIndex] = object; // accounting is done, now do the same for all bindings\n\n\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\tfirstActive = bindingsForPath[lastCachedIndex],\n\t\t\t\t\t\t\t\t\tbinding = bindingsForPath[index];\n\t\t\t\t\t\tbindingsForPath[index] = firstActive;\n\t\t\t\t\t\tbindingsForPath[lastCachedIndex] = binding;\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // remove & forget\n\n\n\t\tuncache() {\n\t\t\tconst objects = this._objects,\n\t\t\t\t\t\tindicesByUUID = this._indicesByUUID,\n\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\tnBindings = bindings.length;\n\t\t\tlet nCachedObjects = this.nCachedObjects_,\n\t\t\t\t\tnObjects = objects.length;\n\n\t\t\tfor (let i = 0, n = arguments.length; i !== n; ++i) {\n\t\t\t\tconst object = arguments[i],\n\t\t\t\t\t\t\tuuid = object.uuid,\n\t\t\t\t\t\t\tindex = indicesByUUID[uuid];\n\n\t\t\t\tif (index !== undefined) {\n\t\t\t\t\tdelete indicesByUUID[uuid];\n\n\t\t\t\t\tif (index < nCachedObjects) {\n\t\t\t\t\t\t// object is cached, shrink the CACHED region\n\t\t\t\t\t\tconst firstActiveIndex = --nCachedObjects,\n\t\t\t\t\t\t\t\t\tlastCachedObject = objects[firstActiveIndex],\n\t\t\t\t\t\t\t\t\tlastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex]; // last cached object takes this object's place\n\n\t\t\t\t\t\tindicesByUUID[lastCachedObject.uuid] = index;\n\t\t\t\t\t\tobjects[index] = lastCachedObject; // last object goes to the activated slot and pop\n\n\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = firstActiveIndex;\n\t\t\t\t\t\tobjects[firstActiveIndex] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j],\n\t\t\t\t\t\t\t\t\t\tlastCached = bindingsForPath[firstActiveIndex],\n\t\t\t\t\t\t\t\t\t\tlast = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath[index] = lastCached;\n\t\t\t\t\t\t\tbindingsForPath[firstActiveIndex] = last;\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// object is active, just swap with the last and pop\n\t\t\t\t\t\tconst lastIndex = --nObjects,\n\t\t\t\t\t\t\t\t\tlastObject = objects[lastIndex];\n\n\t\t\t\t\t\tif (lastIndex > 0) {\n\t\t\t\t\t\t\tindicesByUUID[lastObject.uuid] = index;\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tobjects[index] = lastObject;\n\t\t\t\t\t\tobjects.pop(); // accounting is done, now do the same for all bindings\n\n\t\t\t\t\t\tfor (let j = 0, m = nBindings; j !== m; ++j) {\n\t\t\t\t\t\t\tconst bindingsForPath = bindings[j];\n\t\t\t\t\t\t\tbindingsForPath[index] = bindingsForPath[lastIndex];\n\t\t\t\t\t\t\tbindingsForPath.pop();\n\t\t\t\t\t\t}\n\t\t\t\t\t} // cached or active\n\n\t\t\t\t} // if object is known\n\n\t\t\t} // for arguments\n\n\n\t\t\tthis.nCachedObjects_ = nCachedObjects;\n\t\t} // Internal interface used by befriended PropertyBinding.Composite:\n\n\n\t\tsubscribe_(path, parsedPath) {\n\t\t\t// returns an array of bindings for the given path that is changed\n\t\t\t// according to the contained objects in the group\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath;\n\t\t\tlet index = indicesByPath[path];\n\t\t\tconst bindings = this._bindings;\n\t\t\tif (index !== undefined) return bindings[index];\n\t\t\tconst paths = this._paths,\n\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\tobjects = this._objects,\n\t\t\t\t\t\tnObjects = objects.length,\n\t\t\t\t\t\tnCachedObjects = this.nCachedObjects_,\n\t\t\t\t\t\tbindingsForPath = new Array(nObjects);\n\t\t\tindex = bindings.length;\n\t\t\tindicesByPath[path] = index;\n\t\t\tpaths.push(path);\n\t\t\tparsedPaths.push(parsedPath);\n\t\t\tbindings.push(bindingsForPath);\n\n\t\t\tfor (let i = nCachedObjects, n = objects.length; i !== n; ++i) {\n\t\t\t\tconst object = objects[i];\n\t\t\t\tbindingsForPath[i] = new PropertyBinding(object, path, parsedPath);\n\t\t\t}\n\n\t\t\treturn bindingsForPath;\n\t\t}\n\n\t\tunsubscribe_(path) {\n\t\t\t// tells the group to forget about a property path and no longer\n\t\t\t// update the array previously obtained with 'subscribe_'\n\t\t\tconst indicesByPath = this._bindingsIndicesByPath,\n\t\t\t\t\t\tindex = indicesByPath[path];\n\n\t\t\tif (index !== undefined) {\n\t\t\t\tconst paths = this._paths,\n\t\t\t\t\t\t\tparsedPaths = this._parsedPaths,\n\t\t\t\t\t\t\tbindings = this._bindings,\n\t\t\t\t\t\t\tlastBindingsIndex = bindings.length - 1,\n\t\t\t\t\t\t\tlastBindings = bindings[lastBindingsIndex],\n\t\t\t\t\t\t\tlastBindingsPath = path[lastBindingsIndex];\n\t\t\t\tindicesByPath[lastBindingsPath] = index;\n\t\t\t\tbindings[index] = lastBindings;\n\t\t\t\tbindings.pop();\n\t\t\t\tparsedPaths[index] = parsedPaths[lastBindingsIndex];\n\t\t\t\tparsedPaths.pop();\n\t\t\t\tpaths[index] = paths[lastBindingsIndex];\n\t\t\t\tpaths.pop();\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationObjectGroup.prototype.isAnimationObjectGroup = true;\n\n\tclass AnimationAction {\n\t\tconstructor(mixer, clip, localRoot = null, blendMode = clip.blendMode) {\n\t\t\tthis._mixer = mixer;\n\t\t\tthis._clip = clip;\n\t\t\tthis._localRoot = localRoot;\n\t\t\tthis.blendMode = blendMode;\n\t\t\tconst tracks = clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tinterpolants = new Array(nTracks);\n\t\t\tconst interpolantSettings = {\n\t\t\t\tendingStart: ZeroCurvatureEnding,\n\t\t\t\tendingEnd: ZeroCurvatureEnding\n\t\t\t};\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst interpolant = tracks[i].createInterpolant(null);\n\t\t\t\tinterpolants[i] = interpolant;\n\t\t\t\tinterpolant.settings = interpolantSettings;\n\t\t\t}\n\n\t\t\tthis._interpolantSettings = interpolantSettings;\n\t\t\tthis._interpolants = interpolants; // bound by the mixer\n\t\t\t// inside: PropertyMixer (managed by the mixer)\n\n\t\t\tthis._propertyBindings = new Array(nTracks);\n\t\t\tthis._cacheIndex = null; // for the memory manager\n\n\t\t\tthis._byClipCacheIndex = null; // for the memory manager\n\n\t\t\tthis._timeScaleInterpolant = null;\n\t\t\tthis._weightInterpolant = null;\n\t\t\tthis.loop = LoopRepeat;\n\t\t\tthis._loopCount = -1; // global mixer time when the action is to be started\n\t\t\t// it's set back to 'null' upon start of the action\n\n\t\t\tthis._startTime = null; // scaled local time of the action\n\t\t\t// gets clamped or wrapped to 0..clip.duration according to loop\n\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1;\n\t\t\tthis._effectiveTimeScale = 1;\n\t\t\tthis.weight = 1;\n\t\t\tthis._effectiveWeight = 1;\n\t\t\tthis.repetitions = Infinity; // no. of repetitions when looping\n\n\t\t\tthis.paused = false; // true -> zero effective time scale\n\n\t\t\tthis.enabled = true; // false -> zero effective weight\n\n\t\t\tthis.clampWhenFinished = false; // keep feeding the last frame?\n\n\t\t\tthis.zeroSlopeAtStart = true; // for smooth interpolation w/o separate\n\n\t\t\tthis.zeroSlopeAtEnd = true; // clips for start, loop and end\n\t\t} // State & Scheduling\n\n\n\t\tplay() {\n\t\t\tthis._mixer._activateAction(this);\n\n\t\t\treturn this;\n\t\t}\n\n\t\tstop() {\n\t\t\tthis._mixer._deactivateAction(this);\n\n\t\t\treturn this.reset();\n\t\t}\n\n\t\treset() {\n\t\t\tthis.paused = false;\n\t\t\tthis.enabled = true;\n\t\t\tthis.time = 0; // restart clip\n\n\t\t\tthis._loopCount = -1; // forget previous loops\n\n\t\t\tthis._startTime = null; // forget scheduling\n\n\t\t\treturn this.stopFading().stopWarping();\n\t\t}\n\n\t\tisRunning() {\n\t\t\treturn this.enabled && !this.paused && this.timeScale !== 0 && this._startTime === null && this._mixer._isActiveAction(this);\n\t\t} // return true when play has been called\n\n\n\t\tisScheduled() {\n\t\t\treturn this._mixer._isActiveAction(this);\n\t\t}\n\n\t\tstartAt(time) {\n\t\t\tthis._startTime = time;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetLoop(mode, repetitions) {\n\t\t\tthis.loop = mode;\n\t\t\tthis.repetitions = repetitions;\n\t\t\treturn this;\n\t\t} // Weight\n\t\t// set the weight stopping any scheduled fading\n\t\t// although .enabled = false yields an effective weight of zero, this\n\t\t// method does *not* change .enabled, because it would be confusing\n\n\n\t\tsetEffectiveWeight(weight) {\n\t\t\tthis.weight = weight; // note: same logic as when updated at runtime\n\n\t\t\tthis._effectiveWeight = this.enabled ? weight : 0;\n\t\t\treturn this.stopFading();\n\t\t} // return the weight considering fading and .enabled\n\n\n\t\tgetEffectiveWeight() {\n\t\t\treturn this._effectiveWeight;\n\t\t}\n\n\t\tfadeIn(duration) {\n\t\t\treturn this._scheduleFading(duration, 0, 1);\n\t\t}\n\n\t\tfadeOut(duration) {\n\t\t\treturn this._scheduleFading(duration, 1, 0);\n\t\t}\n\n\t\tcrossFadeFrom(fadeOutAction, duration, warp) {\n\t\t\tfadeOutAction.fadeOut(duration);\n\t\t\tthis.fadeIn(duration);\n\n\t\t\tif (warp) {\n\t\t\t\tconst fadeInDuration = this._clip.duration,\n\t\t\t\t\t\t\tfadeOutDuration = fadeOutAction._clip.duration,\n\t\t\t\t\t\t\tstartEndRatio = fadeOutDuration / fadeInDuration,\n\t\t\t\t\t\t\tendStartRatio = fadeInDuration / fadeOutDuration;\n\t\t\t\tfadeOutAction.warp(1.0, startEndRatio, duration);\n\t\t\t\tthis.warp(endStartRatio, 1.0, duration);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tcrossFadeTo(fadeInAction, duration, warp) {\n\t\t\treturn fadeInAction.crossFadeFrom(this, duration, warp);\n\t\t}\n\n\t\tstopFading() {\n\t\t\tconst weightInterpolant = this._weightInterpolant;\n\n\t\t\tif (weightInterpolant !== null) {\n\t\t\t\tthis._weightInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(weightInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Time Scale Control\n\t\t// set the time scale stopping any scheduled warping\n\t\t// although .paused = true yields an effective time scale of zero, this\n\t\t// method does *not* change .paused, because it would be confusing\n\n\n\t\tsetEffectiveTimeScale(timeScale) {\n\t\t\tthis.timeScale = timeScale;\n\t\t\tthis._effectiveTimeScale = this.paused ? 0 : timeScale;\n\t\t\treturn this.stopWarping();\n\t\t} // return the time scale considering warping and .paused\n\n\n\t\tgetEffectiveTimeScale() {\n\t\t\treturn this._effectiveTimeScale;\n\t\t}\n\n\t\tsetDuration(duration) {\n\t\t\tthis.timeScale = this._clip.duration / duration;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\tsyncWith(action) {\n\t\t\tthis.time = action.time;\n\t\t\tthis.timeScale = action.timeScale;\n\t\t\treturn this.stopWarping();\n\t\t}\n\n\t\thalt(duration) {\n\t\t\treturn this.warp(this._effectiveTimeScale, 0, duration);\n\t\t}\n\n\t\twarp(startTimeScale, endTimeScale, duration) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time,\n\t\t\t\t\t\ttimeScale = this.timeScale;\n\t\t\tlet interpolant = this._timeScaleInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._timeScaleInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[0] = startTimeScale / timeScale;\n\t\t\tvalues[1] = endTimeScale / timeScale;\n\t\t\treturn this;\n\t\t}\n\n\t\tstopWarping() {\n\t\t\tconst timeScaleInterpolant = this._timeScaleInterpolant;\n\n\t\t\tif (timeScaleInterpolant !== null) {\n\t\t\t\tthis._timeScaleInterpolant = null;\n\n\t\t\t\tthis._mixer._takeBackControlInterpolant(timeScaleInterpolant);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Object Accessors\n\n\n\t\tgetMixer() {\n\t\t\treturn this._mixer;\n\t\t}\n\n\t\tgetClip() {\n\t\t\treturn this._clip;\n\t\t}\n\n\t\tgetRoot() {\n\t\t\treturn this._localRoot || this._mixer._root;\n\t\t} // Interna\n\n\n\t\t_update(time, deltaTime, timeDirection, accuIndex) {\n\t\t\t// called by the mixer\n\t\t\tif (!this.enabled) {\n\t\t\t\t// call ._updateWeight() to update ._effectiveWeight\n\t\t\t\tthis._updateWeight(time);\n\n\t\t\t\treturn;\n\t\t\t}\n\n\t\t\tconst startTime = this._startTime;\n\n\t\t\tif (startTime !== null) {\n\t\t\t\t// check for scheduled start of action\n\t\t\t\tconst timeRunning = (time - startTime) * timeDirection;\n\n\t\t\t\tif (timeRunning < 0 || timeDirection === 0) {\n\t\t\t\t\treturn; // yet to come / don't decide when delta = 0\n\t\t\t\t} // start\n\n\n\t\t\t\tthis._startTime = null; // unschedule\n\n\t\t\t\tdeltaTime = timeDirection * timeRunning;\n\t\t\t} // apply time scale and advance time\n\n\n\t\t\tdeltaTime *= this._updateTimeScale(time);\n\n\t\t\tconst clipTime = this._updateTime(deltaTime); // note: _updateTime may disable the action resulting in\n\t\t\t// an effective weight of 0\n\n\n\t\t\tconst weight = this._updateWeight(time);\n\n\t\t\tif (weight > 0) {\n\t\t\t\tconst interpolants = this._interpolants;\n\t\t\t\tconst propertyMixers = this._propertyBindings;\n\n\t\t\t\tswitch (this.blendMode) {\n\t\t\t\t\tcase AdditiveAnimationBlendMode:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulateAdditive(weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\tcase NormalAnimationBlendMode:\n\t\t\t\t\tdefault:\n\t\t\t\t\t\tfor (let j = 0, m = interpolants.length; j !== m; ++j) {\n\t\t\t\t\t\t\tinterpolants[j].evaluate(clipTime);\n\t\t\t\t\t\t\tpropertyMixers[j].accumulate(accuIndex, weight);\n\t\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_updateWeight(time) {\n\t\t\tlet weight = 0;\n\n\t\t\tif (this.enabled) {\n\t\t\t\tweight = this.weight;\n\t\t\t\tconst interpolant = this._weightInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\tweight *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopFading();\n\n\t\t\t\t\t\tif (interpolantValue === 0) {\n\t\t\t\t\t\t\t// faded out, disable\n\t\t\t\t\t\t\tthis.enabled = false;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveWeight = weight;\n\t\t\treturn weight;\n\t\t}\n\n\t\t_updateTimeScale(time) {\n\t\t\tlet timeScale = 0;\n\n\t\t\tif (!this.paused) {\n\t\t\t\ttimeScale = this.timeScale;\n\t\t\t\tconst interpolant = this._timeScaleInterpolant;\n\n\t\t\t\tif (interpolant !== null) {\n\t\t\t\t\tconst interpolantValue = interpolant.evaluate(time)[0];\n\t\t\t\t\ttimeScale *= interpolantValue;\n\n\t\t\t\t\tif (time > interpolant.parameterPositions[1]) {\n\t\t\t\t\t\tthis.stopWarping();\n\n\t\t\t\t\t\tif (timeScale === 0) {\n\t\t\t\t\t\t\t// motion has halted, pause\n\t\t\t\t\t\t\tthis.paused = true;\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\t// warp done - apply final time scale\n\t\t\t\t\t\t\tthis.timeScale = timeScale;\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tthis._effectiveTimeScale = timeScale;\n\t\t\treturn timeScale;\n\t\t}\n\n\t\t_updateTime(deltaTime) {\n\t\t\tconst duration = this._clip.duration;\n\t\t\tconst loop = this.loop;\n\t\t\tlet time = this.time + deltaTime;\n\t\t\tlet loopCount = this._loopCount;\n\t\t\tconst pingPong = loop === LoopPingPong;\n\n\t\t\tif (deltaTime === 0) {\n\t\t\t\tif (loopCount === -1) return time;\n\t\t\t\treturn pingPong && (loopCount & 1) === 1 ? duration - time : time;\n\t\t\t}\n\n\t\t\tif (loop === LoopOnce) {\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tthis._loopCount = 0;\n\n\t\t\t\t\tthis._setEndings(true, true, false);\n\t\t\t\t}\n\n\t\t\t\thandle_stop: {\n\t\t\t\t\tif (time >= duration) {\n\t\t\t\t\t\ttime = duration;\n\t\t\t\t\t} else if (time < 0) {\n\t\t\t\t\t\ttime = 0;\n\t\t\t\t\t} else {\n\t\t\t\t\t\tthis.time = time;\n\t\t\t\t\t\tbreak handle_stop;\n\t\t\t\t\t}\n\n\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\taction: this,\n\t\t\t\t\t\tdirection: deltaTime < 0 ? -1 : 1\n\t\t\t\t\t});\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\t// repetitive Repeat or PingPong\n\t\t\t\tif (loopCount === -1) {\n\t\t\t\t\t// just started\n\t\t\t\t\tif (deltaTime >= 0) {\n\t\t\t\t\t\tloopCount = 0;\n\n\t\t\t\t\t\tthis._setEndings(true, this.repetitions === 0, pingPong);\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// when looping in reverse direction, the initial\n\t\t\t\t\t\t// transition through zero counts as a repetition,\n\t\t\t\t\t\t// so leave loopCount at -1\n\t\t\t\t\t\tthis._setEndings(this.repetitions === 0, true, pingPong);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tif (time >= duration || time < 0) {\n\t\t\t\t\t// wrap around\n\t\t\t\t\tconst loopDelta = Math.floor(time / duration); // signed\n\n\t\t\t\t\ttime -= duration * loopDelta;\n\t\t\t\t\tloopCount += Math.abs(loopDelta);\n\t\t\t\t\tconst pending = this.repetitions - loopCount;\n\n\t\t\t\t\tif (pending <= 0) {\n\t\t\t\t\t\t// have to stop (switch state, clamp time, fire event)\n\t\t\t\t\t\tif (this.clampWhenFinished) this.paused = true;else this.enabled = false;\n\t\t\t\t\t\ttime = deltaTime > 0 ? duration : 0;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'finished',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tdirection: deltaTime > 0 ? 1 : -1\n\t\t\t\t\t\t});\n\t\t\t\t\t} else {\n\t\t\t\t\t\t// keep running\n\t\t\t\t\t\tif (pending === 1) {\n\t\t\t\t\t\t\t// entering the last round\n\t\t\t\t\t\t\tconst atStart = deltaTime < 0;\n\n\t\t\t\t\t\t\tthis._setEndings(atStart, !atStart, pingPong);\n\t\t\t\t\t\t} else {\n\t\t\t\t\t\t\tthis._setEndings(false, false, pingPong);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tthis._loopCount = loopCount;\n\t\t\t\t\t\tthis.time = time;\n\n\t\t\t\t\t\tthis._mixer.dispatchEvent({\n\t\t\t\t\t\t\ttype: 'loop',\n\t\t\t\t\t\t\taction: this,\n\t\t\t\t\t\t\tloopDelta: loopDelta\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t} else {\n\t\t\t\t\tthis.time = time;\n\t\t\t\t}\n\n\t\t\t\tif (pingPong && (loopCount & 1) === 1) {\n\t\t\t\t\t// invert time for the \"pong round\"\n\t\t\t\t\treturn duration - time;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\treturn time;\n\t\t}\n\n\t\t_setEndings(atStart, atEnd, pingPong) {\n\t\t\tconst settings = this._interpolantSettings;\n\n\t\t\tif (pingPong) {\n\t\t\t\tsettings.endingStart = ZeroSlopeEnding;\n\t\t\t\tsettings.endingEnd = ZeroSlopeEnding;\n\t\t\t} else {\n\t\t\t\t// assuming for LoopOnce atStart == atEnd == true\n\t\t\t\tif (atStart) {\n\t\t\t\t\tsettings.endingStart = this.zeroSlopeAtStart ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingStart = WrapAroundEnding;\n\t\t\t\t}\n\n\t\t\t\tif (atEnd) {\n\t\t\t\t\tsettings.endingEnd = this.zeroSlopeAtEnd ? ZeroSlopeEnding : ZeroCurvatureEnding;\n\t\t\t\t} else {\n\t\t\t\t\tsettings.endingEnd = WrapAroundEnding;\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_scheduleFading(duration, weightNow, weightThen) {\n\t\t\tconst mixer = this._mixer,\n\t\t\t\t\t\tnow = mixer.time;\n\t\t\tlet interpolant = this._weightInterpolant;\n\n\t\t\tif (interpolant === null) {\n\t\t\t\tinterpolant = mixer._lendControlInterpolant();\n\t\t\t\tthis._weightInterpolant = interpolant;\n\t\t\t}\n\n\t\t\tconst times = interpolant.parameterPositions,\n\t\t\t\t\t\tvalues = interpolant.sampleValues;\n\t\t\ttimes[0] = now;\n\t\t\tvalues[0] = weightNow;\n\t\t\ttimes[1] = now + duration;\n\t\t\tvalues[1] = weightThen;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AnimationMixer extends EventDispatcher {\n\t\tconstructor(root) {\n\t\t\tsuper();\n\t\t\tthis._root = root;\n\n\t\t\tthis._initMemoryManager();\n\n\t\t\tthis._accuIndex = 0;\n\t\t\tthis.time = 0;\n\t\t\tthis.timeScale = 1.0;\n\t\t}\n\n\t\t_bindAction(action, prototypeAction) {\n\t\t\tconst root = action._localRoot || this._root,\n\t\t\t\t\t\ttracks = action._clip.tracks,\n\t\t\t\t\t\tnTracks = tracks.length,\n\t\t\t\t\t\tbindings = action._propertyBindings,\n\t\t\t\t\t\tinterpolants = action._interpolants,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName;\n\t\t\tlet bindingsByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingsByName === undefined) {\n\t\t\t\tbindingsByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingsByName;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i !== nTracks; ++i) {\n\t\t\t\tconst track = tracks[i],\n\t\t\t\t\t\t\ttrackName = track.name;\n\t\t\t\tlet binding = bindingsByName[trackName];\n\n\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t} else {\n\t\t\t\t\tbinding = bindings[i];\n\n\t\t\t\t\tif (binding !== undefined) {\n\t\t\t\t\t\t// existing binding, make sure the cache knows\n\t\t\t\t\t\tif (binding._cacheIndex === null) {\n\t\t\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\t\t\t\t\t\t}\n\n\t\t\t\t\t\tcontinue;\n\t\t\t\t\t}\n\n\t\t\t\t\tconst path = prototypeAction && prototypeAction._propertyBindings[i].binding.parsedPath;\n\t\t\t\t\tbinding = new PropertyMixer(PropertyBinding.create(root, trackName, path), track.ValueTypeName, track.getValueSize());\n\t\t\t\t\t++binding.referenceCount;\n\n\t\t\t\t\tthis._addInactiveBinding(binding, rootUuid, trackName);\n\n\t\t\t\t\tbindings[i] = binding;\n\t\t\t\t}\n\n\t\t\t\tinterpolants[i].resultBuffer = binding.buffer;\n\t\t\t}\n\t\t}\n\n\t\t_activateAction(action) {\n\t\t\tif (!this._isActiveAction(action)) {\n\t\t\t\tif (action._cacheIndex === null) {\n\t\t\t\t\t// this action has been forgotten by the cache, but the user\n\t\t\t\t\t// appears to be still using it -> rebind\n\t\t\t\t\tconst rootUuid = (action._localRoot || this._root).uuid,\n\t\t\t\t\t\t\t\tclipUuid = action._clip.uuid,\n\t\t\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\t\t\tthis._bindAction(action, actionsForClip && actionsForClip.knownActions[0]);\n\n\t\t\t\t\tthis._addInactiveAction(action, clipUuid, rootUuid);\n\t\t\t\t}\n\n\t\t\t\tconst bindings = action._propertyBindings; // increment reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (binding.useCount++ === 0) {\n\t\t\t\t\t\tthis._lendBinding(binding);\n\n\t\t\t\t\t\tbinding.saveOriginalState();\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._lendAction(action);\n\t\t\t}\n\t\t}\n\n\t\t_deactivateAction(action) {\n\t\t\tif (this._isActiveAction(action)) {\n\t\t\t\tconst bindings = action._propertyBindings; // decrement reference counts / sort out state\n\n\t\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\t\tif (--binding.useCount === 0) {\n\t\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\t\tthis._takeBackBinding(binding);\n\t\t\t\t\t}\n\t\t\t\t}\n\n\t\t\t\tthis._takeBackAction(action);\n\t\t\t}\n\t\t} // Memory manager\n\n\n\t\t_initMemoryManager() {\n\t\t\tthis._actions = []; // 'nActiveActions' followed by inactive ones\n\n\t\t\tthis._nActiveActions = 0;\n\t\t\tthis._actionsByClip = {}; // inside:\n\t\t\t// {\n\t\t\t// \tknownActions: Array< AnimationAction > - used as prototypes\n\t\t\t// \tactionByRoot: AnimationAction - lookup\n\t\t\t// }\n\n\t\t\tthis._bindings = []; // 'nActiveBindings' followed by inactive ones\n\n\t\t\tthis._nActiveBindings = 0;\n\t\t\tthis._bindingsByRootAndName = {}; // inside: Map< name, PropertyMixer >\n\n\t\t\tthis._controlInterpolants = []; // same game as above\n\n\t\t\tthis._nActiveControlInterpolants = 0;\n\t\t\tconst scope = this;\n\t\t\tthis.stats = {\n\t\t\t\tactions: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._actions.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveActions;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tbindings: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._bindings.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveBindings;\n\t\t\t\t\t}\n\n\t\t\t\t},\n\t\t\t\tcontrolInterpolants: {\n\t\t\t\t\tget total() {\n\t\t\t\t\t\treturn scope._controlInterpolants.length;\n\t\t\t\t\t},\n\n\t\t\t\t\tget inUse() {\n\t\t\t\t\t\treturn scope._nActiveControlInterpolants;\n\t\t\t\t\t}\n\n\t\t\t\t}\n\t\t\t};\n\t\t} // Memory management for AnimationAction objects\n\n\n\t\t_isActiveAction(action) {\n\t\t\tconst index = action._cacheIndex;\n\t\t\treturn index !== null && index < this._nActiveActions;\n\t\t}\n\n\t\t_addInactiveAction(action, clipUuid, rootUuid) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\t\t\tlet actionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip === undefined) {\n\t\t\t\tactionsForClip = {\n\t\t\t\t\tknownActions: [action],\n\t\t\t\t\tactionByRoot: {}\n\t\t\t\t};\n\t\t\t\taction._byClipCacheIndex = 0;\n\t\t\t\tactionsByClip[clipUuid] = actionsForClip;\n\t\t\t} else {\n\t\t\t\tconst knownActions = actionsForClip.knownActions;\n\t\t\t\taction._byClipCacheIndex = knownActions.length;\n\t\t\t\tknownActions.push(action);\n\t\t\t}\n\n\t\t\taction._cacheIndex = actions.length;\n\t\t\tactions.push(action);\n\t\t\tactionsForClip.actionByRoot[rootUuid] = action;\n\t\t}\n\n\t\t_removeInactiveAction(action) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1],\n\t\t\t\t\t\tcacheIndex = action._cacheIndex;\n\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\tactions.pop();\n\t\t\taction._cacheIndex = null;\n\t\t\tconst clipUuid = action._clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid],\n\t\t\t\t\t\tknownActionsForClip = actionsForClip.knownActions,\n\t\t\t\t\t\tlastKnownAction = knownActionsForClip[knownActionsForClip.length - 1],\n\t\t\t\t\t\tbyClipCacheIndex = action._byClipCacheIndex;\n\t\t\tlastKnownAction._byClipCacheIndex = byClipCacheIndex;\n\t\t\tknownActionsForClip[byClipCacheIndex] = lastKnownAction;\n\t\t\tknownActionsForClip.pop();\n\t\t\taction._byClipCacheIndex = null;\n\t\t\tconst actionByRoot = actionsForClip.actionByRoot,\n\t\t\t\t\t\trootUuid = (action._localRoot || this._root).uuid;\n\t\t\tdelete actionByRoot[rootUuid];\n\n\t\t\tif (knownActionsForClip.length === 0) {\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\n\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t}\n\n\t\t_removeInactiveBindingsForAction(action) {\n\t\t\tconst bindings = action._propertyBindings;\n\n\t\t\tfor (let i = 0, n = bindings.length; i !== n; ++i) {\n\t\t\t\tconst binding = bindings[i];\n\n\t\t\t\tif (--binding.referenceCount === 0) {\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\n\t\t_lendAction(action) {\n\t\t\t// [ active actions |\tinactive actions\t]\n\t\t\t// [\tactive actions >| inactive actions ]\n\t\t\t//\t\t\t\t\t\t\t\t s\t\t\t\ta\n\t\t\t//\t\t\t\t\t\t\t\t\t<-swap->\n\t\t\t//\t\t\t\t\t\t\t\t a\t\t\t\ts\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveActions++,\n\t\t\t\t\t\tfirstInactiveAction = actions[lastActiveIndex];\n\t\t\taction._cacheIndex = lastActiveIndex;\n\t\t\tactions[lastActiveIndex] = action;\n\t\t\tfirstInactiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = firstInactiveAction;\n\t\t}\n\n\t\t_takeBackAction(action) {\n\t\t\t// [\tactive actions\t| inactive actions ]\n\t\t\t// [ active actions |< inactive actions\t]\n\t\t\t//\t\t\t\ta\t\t\t\ts\n\t\t\t//\t\t\t\t <-swap->\n\t\t\t//\t\t\t\ts\t\t\t\ta\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tprevIndex = action._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveActions,\n\t\t\t\t\t\tlastActiveAction = actions[firstInactiveIndex];\n\t\t\taction._cacheIndex = firstInactiveIndex;\n\t\t\tactions[firstInactiveIndex] = action;\n\t\t\tlastActiveAction._cacheIndex = prevIndex;\n\t\t\tactions[prevIndex] = lastActiveAction;\n\t\t} // Memory management for PropertyMixer objects\n\n\n\t\t_addInactiveBinding(binding, rootUuid, trackName) {\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindings = this._bindings;\n\t\t\tlet bindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName === undefined) {\n\t\t\t\tbindingByName = {};\n\t\t\t\tbindingsByRoot[rootUuid] = bindingByName;\n\t\t\t}\n\n\t\t\tbindingByName[trackName] = binding;\n\t\t\tbinding._cacheIndex = bindings.length;\n\t\t\tbindings.push(binding);\n\t\t}\n\n\t\t_removeInactiveBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tpropBinding = binding.binding,\n\t\t\t\t\t\trootUuid = propBinding.rootNode.uuid,\n\t\t\t\t\t\ttrackName = propBinding.path,\n\t\t\t\t\t\tbindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid],\n\t\t\t\t\t\tlastInactiveBinding = bindings[bindings.length - 1],\n\t\t\t\t\t\tcacheIndex = binding._cacheIndex;\n\t\t\tlastInactiveBinding._cacheIndex = cacheIndex;\n\t\t\tbindings[cacheIndex] = lastInactiveBinding;\n\t\t\tbindings.pop();\n\t\t\tdelete bindingByName[trackName];\n\n\t\t\tif (Object.keys(bindingByName).length === 0) {\n\t\t\t\tdelete bindingsByRoot[rootUuid];\n\t\t\t}\n\t\t}\n\n\t\t_lendBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveBindings++,\n\t\t\t\t\t\tfirstInactiveBinding = bindings[lastActiveIndex];\n\t\t\tbinding._cacheIndex = lastActiveIndex;\n\t\t\tbindings[lastActiveIndex] = binding;\n\t\t\tfirstInactiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = firstInactiveBinding;\n\t\t}\n\n\t\t_takeBackBinding(binding) {\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tprevIndex = binding._cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveBindings,\n\t\t\t\t\t\tlastActiveBinding = bindings[firstInactiveIndex];\n\t\t\tbinding._cacheIndex = firstInactiveIndex;\n\t\t\tbindings[firstInactiveIndex] = binding;\n\t\t\tlastActiveBinding._cacheIndex = prevIndex;\n\t\t\tbindings[prevIndex] = lastActiveBinding;\n\t\t} // Memory management of Interpolants for weight and time scale\n\n\n\t\t_lendControlInterpolant() {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tlastActiveIndex = this._nActiveControlInterpolants++;\n\t\t\tlet interpolant = interpolants[lastActiveIndex];\n\n\t\t\tif (interpolant === undefined) {\n\t\t\t\tinterpolant = new LinearInterpolant(new Float32Array(2), new Float32Array(2), 1, this._controlInterpolantsResultBuffer);\n\t\t\t\tinterpolant.__cacheIndex = lastActiveIndex;\n\t\t\t\tinterpolants[lastActiveIndex] = interpolant;\n\t\t\t}\n\n\t\t\treturn interpolant;\n\t\t}\n\n\t\t_takeBackControlInterpolant(interpolant) {\n\t\t\tconst interpolants = this._controlInterpolants,\n\t\t\t\t\t\tprevIndex = interpolant.__cacheIndex,\n\t\t\t\t\t\tfirstInactiveIndex = --this._nActiveControlInterpolants,\n\t\t\t\t\t\tlastActiveInterpolant = interpolants[firstInactiveIndex];\n\t\t\tinterpolant.__cacheIndex = firstInactiveIndex;\n\t\t\tinterpolants[firstInactiveIndex] = interpolant;\n\t\t\tlastActiveInterpolant.__cacheIndex = prevIndex;\n\t\t\tinterpolants[prevIndex] = lastActiveInterpolant;\n\t\t} // return an action for a clip optionally using a custom root target\n\t\t// object (this method allocates a lot of dynamic memory in case a\n\t\t// previously unknown clip/root combination is specified)\n\n\n\t\tclipAction(clip, optionalRoot, blendMode) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid;\n\t\t\tlet clipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip;\n\t\t\tconst clipUuid = clipObject !== null ? clipObject.uuid : clip;\n\t\t\tconst actionsForClip = this._actionsByClip[clipUuid];\n\t\t\tlet prototypeAction = null;\n\n\t\t\tif (blendMode === undefined) {\n\t\t\t\tif (clipObject !== null) {\n\t\t\t\t\tblendMode = clipObject.blendMode;\n\t\t\t\t} else {\n\t\t\t\t\tblendMode = NormalAnimationBlendMode;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\tconst existingAction = actionsForClip.actionByRoot[rootUuid];\n\n\t\t\t\tif (existingAction !== undefined && existingAction.blendMode === blendMode) {\n\t\t\t\t\treturn existingAction;\n\t\t\t\t} // we know the clip, so we don't have to parse all\n\t\t\t\t// the bindings again but can just copy\n\n\n\t\t\t\tprototypeAction = actionsForClip.knownActions[0]; // also, take the clip from the prototype action\n\n\t\t\t\tif (clipObject === null) clipObject = prototypeAction._clip;\n\t\t\t} // clip must be known when specified via string\n\n\n\t\t\tif (clipObject === null) return null; // allocate all resources required to run it\n\n\t\t\tconst newAction = new AnimationAction(this, clipObject, optionalRoot, blendMode);\n\n\t\t\tthis._bindAction(newAction, prototypeAction); // and make the action known to the memory manager\n\n\n\t\t\tthis._addInactiveAction(newAction, clipUuid, rootUuid);\n\n\t\t\treturn newAction;\n\t\t} // get an existing action\n\n\n\t\texistingAction(clip, optionalRoot) {\n\t\t\tconst root = optionalRoot || this._root,\n\t\t\t\t\t\trootUuid = root.uuid,\n\t\t\t\t\t\tclipObject = typeof clip === 'string' ? AnimationClip.findByName(root, clip) : clip,\n\t\t\t\t\t\tclipUuid = clipObject ? clipObject.uuid : clip,\n\t\t\t\t\t\tactionsForClip = this._actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\treturn actionsForClip.actionByRoot[rootUuid] || null;\n\t\t\t}\n\n\t\t\treturn null;\n\t\t} // deactivates all previously scheduled actions\n\n\n\t\tstopAllAction() {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions;\n\n\t\t\tfor (let i = nActions - 1; i >= 0; --i) {\n\t\t\t\tactions[i].stop();\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // advance the time and update apply the animation\n\n\n\t\tupdate(deltaTime) {\n\t\t\tdeltaTime *= this.timeScale;\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tnActions = this._nActiveActions,\n\t\t\t\t\t\ttime = this.time += deltaTime,\n\t\t\t\t\t\ttimeDirection = Math.sign(deltaTime),\n\t\t\t\t\t\taccuIndex = this._accuIndex ^= 1; // run active actions\n\n\t\t\tfor (let i = 0; i !== nActions; ++i) {\n\t\t\t\tconst action = actions[i];\n\n\t\t\t\taction._update(time, deltaTime, timeDirection, accuIndex);\n\t\t\t} // update scene graph\n\n\n\t\t\tconst bindings = this._bindings,\n\t\t\t\t\t\tnBindings = this._nActiveBindings;\n\n\t\t\tfor (let i = 0; i !== nBindings; ++i) {\n\t\t\t\tbindings[i].apply(accuIndex);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t} // Allows you to seek to a specific time in an animation.\n\n\n\t\tsetTime(timeInSeconds) {\n\t\t\tthis.time = 0; // Zero out time attribute for AnimationMixer object;\n\n\t\t\tfor (let i = 0; i < this._actions.length; i++) {\n\t\t\t\tthis._actions[i].time = 0; // Zero out time attribute for all associated AnimationAction objects.\n\t\t\t}\n\n\t\t\treturn this.update(timeInSeconds); // Update used to set exact time. Returns \"this\" AnimationMixer object.\n\t\t} // return this mixer's root target object\n\n\n\t\tgetRoot() {\n\t\t\treturn this._root;\n\t\t} // free all resources specific to a particular clip\n\n\n\t\tuncacheClip(clip) {\n\t\t\tconst actions = this._actions,\n\t\t\t\t\t\tclipUuid = clip.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip,\n\t\t\t\t\t\tactionsForClip = actionsByClip[clipUuid];\n\n\t\t\tif (actionsForClip !== undefined) {\n\t\t\t\t// note: just calling _removeInactiveAction would mess up the\n\t\t\t\t// iteration state and also require updating the state we can\n\t\t\t\t// just throw away\n\t\t\t\tconst actionsToRemove = actionsForClip.knownActions;\n\n\t\t\t\tfor (let i = 0, n = actionsToRemove.length; i !== n; ++i) {\n\t\t\t\t\tconst action = actionsToRemove[i];\n\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tconst cacheIndex = action._cacheIndex,\n\t\t\t\t\t\t\t\tlastInactiveAction = actions[actions.length - 1];\n\t\t\t\t\taction._cacheIndex = null;\n\t\t\t\t\taction._byClipCacheIndex = null;\n\t\t\t\t\tlastInactiveAction._cacheIndex = cacheIndex;\n\t\t\t\t\tactions[cacheIndex] = lastInactiveAction;\n\t\t\t\t\tactions.pop();\n\n\t\t\t\t\tthis._removeInactiveBindingsForAction(action);\n\t\t\t\t}\n\n\t\t\t\tdelete actionsByClip[clipUuid];\n\t\t\t}\n\t\t} // free all resources specific to a particular root target object\n\n\n\t\tuncacheRoot(root) {\n\t\t\tconst rootUuid = root.uuid,\n\t\t\t\t\t\tactionsByClip = this._actionsByClip;\n\n\t\t\tfor (const clipUuid in actionsByClip) {\n\t\t\t\tconst actionByRoot = actionsByClip[clipUuid].actionByRoot,\n\t\t\t\t\t\t\taction = actionByRoot[rootUuid];\n\n\t\t\t\tif (action !== undefined) {\n\t\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst bindingsByRoot = this._bindingsByRootAndName,\n\t\t\t\t\t\tbindingByName = bindingsByRoot[rootUuid];\n\n\t\t\tif (bindingByName !== undefined) {\n\t\t\t\tfor (const trackName in bindingByName) {\n\t\t\t\t\tconst binding = bindingByName[trackName];\n\t\t\t\t\tbinding.restoreOriginalState();\n\n\t\t\t\t\tthis._removeInactiveBinding(binding);\n\t\t\t\t}\n\t\t\t}\n\t\t} // remove a targeted clip from the cache\n\n\n\t\tuncacheAction(clip, optionalRoot) {\n\t\t\tconst action = this.existingAction(clip, optionalRoot);\n\n\t\t\tif (action !== null) {\n\t\t\t\tthis._deactivateAction(action);\n\n\t\t\t\tthis._removeInactiveAction(action);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tAnimationMixer.prototype._controlInterpolantsResultBuffer = new Float32Array(1);\n\n\tclass Uniform {\n\t\tconstructor(value) {\n\t\t\tif (typeof value === 'string') {\n\t\t\t\tconsole.warn('THREE.Uniform: Type parameter is no longer needed.');\n\t\t\t\tvalue = arguments[1];\n\t\t\t}\n\n\t\t\tthis.value = value;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new Uniform(this.value.clone === undefined ? this.value : this.value.clone());\n\t\t}\n\n\t}\n\n\tclass InstancedInterleavedBuffer extends InterleavedBuffer {\n\t\tconstructor(array, stride, meshPerAttribute = 1) {\n\t\t\tsuper(array, stride);\n\t\t\tthis.meshPerAttribute = meshPerAttribute || 1;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source);\n\t\t\tthis.meshPerAttribute = source.meshPerAttribute;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone(data) {\n\t\t\tconst ib = super.clone(data);\n\t\t\tib.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn ib;\n\t\t}\n\n\t\ttoJSON(data) {\n\t\t\tconst json = super.toJSON(data);\n\t\t\tjson.isInstancedInterleavedBuffer = true;\n\t\t\tjson.meshPerAttribute = this.meshPerAttribute;\n\t\t\treturn json;\n\t\t}\n\n\t}\n\n\tInstancedInterleavedBuffer.prototype.isInstancedInterleavedBuffer = true;\n\n\tclass GLBufferAttribute {\n\t\tconstructor(buffer, type, itemSize, elementSize, count) {\n\t\t\tthis.buffer = buffer;\n\t\t\tthis.type = type;\n\t\t\tthis.itemSize = itemSize;\n\t\t\tthis.elementSize = elementSize;\n\t\t\tthis.count = count;\n\t\t\tthis.version = 0;\n\t\t}\n\n\t\tset needsUpdate(value) {\n\t\t\tif (value === true) this.version++;\n\t\t}\n\n\t\tsetBuffer(buffer) {\n\t\t\tthis.buffer = buffer;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetType(type, elementSize) {\n\t\t\tthis.type = type;\n\t\t\tthis.elementSize = elementSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetItemSize(itemSize) {\n\t\t\tthis.itemSize = itemSize;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetCount(count) {\n\t\t\tthis.count = count;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tGLBufferAttribute.prototype.isGLBufferAttribute = true;\n\n\tclass Raycaster {\n\t\tconstructor(origin, direction, near = 0, far = Infinity) {\n\t\t\tthis.ray = new Ray(origin, direction); // direction is assumed to be normalized (for accurate distance calculations)\n\n\t\t\tthis.near = near;\n\t\t\tthis.far = far;\n\t\t\tthis.camera = null;\n\t\t\tthis.layers = new Layers();\n\t\t\tthis.params = {\n\t\t\t\tMesh: {},\n\t\t\t\tLine: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tLOD: {},\n\t\t\t\tPoints: {\n\t\t\t\t\tthreshold: 1\n\t\t\t\t},\n\t\t\t\tSprite: {}\n\t\t\t};\n\t\t}\n\n\t\tset(origin, direction) {\n\t\t\t// direction is assumed to be normalized (for accurate distance calculations)\n\t\t\tthis.ray.set(origin, direction);\n\t\t}\n\n\t\tsetFromCamera(coords, camera) {\n\t\t\tif (camera && camera.isPerspectiveCamera) {\n\t\t\t\tthis.ray.origin.setFromMatrixPosition(camera.matrixWorld);\n\t\t\t\tthis.ray.direction.set(coords.x, coords.y, 0.5).unproject(camera).sub(this.ray.origin).normalize();\n\t\t\t\tthis.camera = camera;\n\t\t\t} else if (camera && camera.isOrthographicCamera) {\n\t\t\t\tthis.ray.origin.set(coords.x, coords.y, (camera.near + camera.far) / (camera.near - camera.far)).unproject(camera); // set origin in plane of camera\n\n\t\t\t\tthis.ray.direction.set(0, 0, -1).transformDirection(camera.matrixWorld);\n\t\t\t\tthis.camera = camera;\n\t\t\t} else {\n\t\t\t\tconsole.error('THREE.Raycaster: Unsupported camera type: ' + camera.type);\n\t\t\t}\n\t\t}\n\n\t\tintersectObject(object, recursive = false, intersects = []) {\n\t\t\tintersectObject(object, this, intersects, recursive);\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t\tintersectObjects(objects, recursive = false, intersects = []) {\n\t\t\tfor (let i = 0, l = objects.length; i < l; i++) {\n\t\t\t\tintersectObject(objects[i], this, intersects, recursive);\n\t\t\t}\n\n\t\t\tintersects.sort(ascSort);\n\t\t\treturn intersects;\n\t\t}\n\n\t}\n\n\tfunction ascSort(a, b) {\n\t\treturn a.distance - b.distance;\n\t}\n\n\tfunction intersectObject(object, raycaster, intersects, recursive) {\n\t\tif (object.layers.test(raycaster.layers)) {\n\t\t\tobject.raycast(raycaster, intersects);\n\t\t}\n\n\t\tif (recursive === true) {\n\t\t\tconst children = object.children;\n\n\t\t\tfor (let i = 0, l = children.length; i < l; i++) {\n\t\t\t\tintersectObject(children[i], raycaster, intersects, true);\n\t\t\t}\n\t\t}\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Spherical_coordinate_system\n\t *\n\t * The polar angle (phi) is measured from the positive y-axis. The positive y-axis is up.\n\t * The azimuthal angle (theta) is measured from the positive z-axis.\n\t */\n\n\tclass Spherical {\n\t\tconstructor(radius = 1, phi = 0, theta = 0) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi; // polar angle\n\n\t\t\tthis.theta = theta; // azimuthal angle\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, phi, theta) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.phi = phi;\n\t\t\tthis.theta = theta;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.phi = other.phi;\n\t\t\tthis.theta = other.theta;\n\t\t\treturn this;\n\t\t} // restrict phi to be betwee EPS and PI-EPS\n\n\n\t\tmakeSafe() {\n\t\t\tconst EPS = 0.000001;\n\t\t\tthis.phi = Math.max(EPS, Math.min(Math.PI - EPS, this.phi));\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + y * y + z * z);\n\n\t\t\tif (this.radius === 0) {\n\t\t\t\tthis.theta = 0;\n\t\t\t\tthis.phi = 0;\n\t\t\t} else {\n\t\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\t\tthis.phi = Math.acos(clamp(y / this.radius, -1, 1));\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\t/**\n\t * Ref: https://en.wikipedia.org/wiki/Cylindrical_coordinate_system\n\t */\n\tclass Cylindrical {\n\t\tconstructor(radius = 1, theta = 0, y = 0) {\n\t\t\tthis.radius = radius; // distance from the origin to a point in the x-z plane\n\n\t\t\tthis.theta = theta; // counterclockwise angle in the x-z plane measured in radians from the positive z-axis\n\n\t\t\tthis.y = y; // height above the x-z plane\n\n\t\t\treturn this;\n\t\t}\n\n\t\tset(radius, theta, y) {\n\t\t\tthis.radius = radius;\n\t\t\tthis.theta = theta;\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(other) {\n\t\t\tthis.radius = other.radius;\n\t\t\tthis.theta = other.theta;\n\t\t\tthis.y = other.y;\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromVector3(v) {\n\t\t\treturn this.setFromCartesianCoords(v.x, v.y, v.z);\n\t\t}\n\n\t\tsetFromCartesianCoords(x, y, z) {\n\t\t\tthis.radius = Math.sqrt(x * x + z * z);\n\t\t\tthis.theta = Math.atan2(x, z);\n\t\t\tthis.y = y;\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tconst _vector$4 = /*@__PURE__*/new Vector2();\n\n\tclass Box2 {\n\t\tconstructor(min = new Vector2(+Infinity, +Infinity), max = new Vector2(-Infinity, -Infinity)) {\n\t\t\tthis.min = min;\n\t\t\tthis.max = max;\n\t\t}\n\n\t\tset(min, max) {\n\t\t\tthis.min.copy(min);\n\t\t\tthis.max.copy(max);\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromPoints(points) {\n\t\t\tthis.makeEmpty();\n\n\t\t\tfor (let i = 0, il = points.length; i < il; i++) {\n\t\t\t\tthis.expandByPoint(points[i]);\n\t\t\t}\n\n\t\t\treturn this;\n\t\t}\n\n\t\tsetFromCenterAndSize(center, size) {\n\t\t\tconst halfSize = _vector$4.copy(size).multiplyScalar(0.5);\n\n\t\t\tthis.min.copy(center).sub(halfSize);\n\t\t\tthis.max.copy(center).add(halfSize);\n\t\t\treturn this;\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t\tcopy(box) {\n\t\t\tthis.min.copy(box.min);\n\t\t\tthis.max.copy(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tmakeEmpty() {\n\t\t\tthis.min.x = this.min.y = +Infinity;\n\t\t\tthis.max.x = this.max.y = -Infinity;\n\t\t\treturn this;\n\t\t}\n\n\t\tisEmpty() {\n\t\t\t// this is a more robust check for empty than ( volume <= 0 ) because volume can get positive with two negative axes\n\t\t\treturn this.max.x < this.min.x || this.max.y < this.min.y;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.addVectors(this.min, this.max).multiplyScalar(0.5);\n\t\t}\n\n\t\tgetSize(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getSize() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn this.isEmpty() ? target.set(0, 0) : target.subVectors(this.max, this.min);\n\t\t}\n\n\t\texpandByPoint(point) {\n\t\t\tthis.min.min(point);\n\t\t\tthis.max.max(point);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByVector(vector) {\n\t\t\tthis.min.sub(vector);\n\t\t\tthis.max.add(vector);\n\t\t\treturn this;\n\t\t}\n\n\t\texpandByScalar(scalar) {\n\t\t\tthis.min.addScalar(-scalar);\n\t\t\tthis.max.addScalar(scalar);\n\t\t\treturn this;\n\t\t}\n\n\t\tcontainsPoint(point) {\n\t\t\treturn point.x < this.min.x || point.x > this.max.x || point.y < this.min.y || point.y > this.max.y ? false : true;\n\t\t}\n\n\t\tcontainsBox(box) {\n\t\t\treturn this.min.x <= box.min.x && box.max.x <= this.max.x && this.min.y <= box.min.y && box.max.y <= this.max.y;\n\t\t}\n\n\t\tgetParameter(point, target) {\n\t\t\t// This can potentially have a divide by zero if the box\n\t\t\t// has a size dimension of 0.\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .getParameter() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.set((point.x - this.min.x) / (this.max.x - this.min.x), (point.y - this.min.y) / (this.max.y - this.min.y));\n\t\t}\n\n\t\tintersectsBox(box) {\n\t\t\t// using 4 splitting planes to rule out intersections\n\t\t\treturn box.max.x < this.min.x || box.min.x > this.max.x || box.max.y < this.min.y || box.min.y > this.max.y ? false : true;\n\t\t}\n\n\t\tclampPoint(point, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Box2: .clampPoint() target is now required');\n\t\t\t\ttarget = new Vector2();\n\t\t\t}\n\n\t\t\treturn target.copy(point).clamp(this.min, this.max);\n\t\t}\n\n\t\tdistanceToPoint(point) {\n\t\t\tconst clampedPoint = _vector$4.copy(point).clamp(this.min, this.max);\n\n\t\t\treturn clampedPoint.sub(point).length();\n\t\t}\n\n\t\tintersect(box) {\n\t\t\tthis.min.max(box.min);\n\t\t\tthis.max.min(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\tunion(box) {\n\t\t\tthis.min.min(box.min);\n\t\t\tthis.max.max(box.max);\n\t\t\treturn this;\n\t\t}\n\n\t\ttranslate(offset) {\n\t\t\tthis.min.add(offset);\n\t\t\tthis.max.add(offset);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(box) {\n\t\t\treturn box.min.equals(this.min) && box.max.equals(this.max);\n\t\t}\n\n\t}\n\n\tBox2.prototype.isBox2 = true;\n\n\tconst _startP = /*@__PURE__*/new Vector3();\n\n\tconst _startEnd = /*@__PURE__*/new Vector3();\n\n\tclass Line3 {\n\t\tconstructor(start = new Vector3(), end = new Vector3()) {\n\t\t\tthis.start = start;\n\t\t\tthis.end = end;\n\t\t}\n\n\t\tset(start, end) {\n\t\t\tthis.start.copy(start);\n\t\t\tthis.end.copy(end);\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(line) {\n\t\t\tthis.start.copy(line.start);\n\t\t\tthis.end.copy(line.end);\n\t\t\treturn this;\n\t\t}\n\n\t\tgetCenter(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .getCenter() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.addVectors(this.start, this.end).multiplyScalar(0.5);\n\t\t}\n\n\t\tdelta(target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .delta() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn target.subVectors(this.end, this.start);\n\t\t}\n\n\t\tdistanceSq() {\n\t\t\treturn this.start.distanceToSquared(this.end);\n\t\t}\n\n\t\tdistance() {\n\t\t\treturn this.start.distanceTo(this.end);\n\t\t}\n\n\t\tat(t, target) {\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .at() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tclosestPointToPointParameter(point, clampToLine) {\n\t\t\t_startP.subVectors(point, this.start);\n\n\t\t\t_startEnd.subVectors(this.end, this.start);\n\n\t\t\tconst startEnd2 = _startEnd.dot(_startEnd);\n\n\t\t\tconst startEnd_startP = _startEnd.dot(_startP);\n\n\t\t\tlet t = startEnd_startP / startEnd2;\n\n\t\t\tif (clampToLine) {\n\t\t\t\tt = clamp(t, 0, 1);\n\t\t\t}\n\n\t\t\treturn t;\n\t\t}\n\n\t\tclosestPointToPoint(point, clampToLine, target) {\n\t\t\tconst t = this.closestPointToPointParameter(point, clampToLine);\n\n\t\t\tif (target === undefined) {\n\t\t\t\tconsole.warn('THREE.Line3: .closestPointToPoint() target is now required');\n\t\t\t\ttarget = new Vector3();\n\t\t\t}\n\n\t\t\treturn this.delta(target).multiplyScalar(t).add(this.start);\n\t\t}\n\n\t\tapplyMatrix4(matrix) {\n\t\t\tthis.start.applyMatrix4(matrix);\n\t\t\tthis.end.applyMatrix4(matrix);\n\t\t\treturn this;\n\t\t}\n\n\t\tequals(line) {\n\t\t\treturn line.start.equals(this.start) && line.end.equals(this.end);\n\t\t}\n\n\t\tclone() {\n\t\t\treturn new this.constructor().copy(this);\n\t\t}\n\n\t}\n\n\tclass ImmediateRenderObject extends Object3D {\n\t\tconstructor(material) {\n\t\t\tsuper();\n\t\t\tthis.material = material;\n\n\t\t\tthis.render = function ()\n\t\t\t/* renderCallback */\n\t\t\t{};\n\n\t\t\tthis.hasPositions = false;\n\t\t\tthis.hasNormals = false;\n\t\t\tthis.hasColors = false;\n\t\t\tthis.hasUvs = false;\n\t\t\tthis.positionArray = null;\n\t\t\tthis.normalArray = null;\n\t\t\tthis.colorArray = null;\n\t\t\tthis.uvArray = null;\n\t\t\tthis.count = 0;\n\t\t}\n\n\t}\n\n\tImmediateRenderObject.prototype.isImmediateRenderObject = true;\n\n\tconst _vector$3 = /*@__PURE__*/new Vector3();\n\n\tclass SpotLightHelper extends Object3D {\n\t\tconstructor(light, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst positions = [0, 0, 0, 0, 0, 1, 0, 0, 0, 1, 0, 1, 0, 0, 0, -1, 0, 1, 0, 0, 0, 0, 1, 1, 0, 0, 0, 0, -1, 1];\n\n\t\t\tfor (let i = 0, j = 1, l = 32; i < l; i++, j++) {\n\t\t\t\tconst p1 = i / l * Math.PI * 2;\n\t\t\t\tconst p2 = j / l * Math.PI * 2;\n\t\t\t\tpositions.push(Math.cos(p1), Math.sin(p1), 1, Math.cos(p2), Math.sin(p2), 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.cone = new LineSegments(geometry, material);\n\t\t\tthis.add(this.cone);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.cone.geometry.dispose();\n\t\t\tthis.cone.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tconst coneLength = this.light.distance ? this.light.distance : 1000;\n\t\t\tconst coneWidth = coneLength * Math.tan(this.light.angle);\n\t\t\tthis.cone.scale.set(coneWidth, coneWidth, coneLength);\n\n\t\t\t_vector$3.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\tthis.cone.lookAt(_vector$3);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.cone.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.cone.material.color.copy(this.light.color);\n\t\t\t}\n\t\t}\n\n\t}\n\n\tconst _vector$2 = /*@__PURE__*/new Vector3();\n\n\tconst _boneMatrix = /*@__PURE__*/new Matrix4();\n\n\tconst _matrixWorldInv = /*@__PURE__*/new Matrix4();\n\n\tclass SkeletonHelper extends LineSegments {\n\t\tconstructor(object) {\n\t\t\tconst bones = getBoneList(object);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst color1 = new Color(0, 0, 1);\n\t\t\tconst color2 = new Color(0, 1, 0);\n\n\t\t\tfor (let i = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\t\tcolors.push(color1.r, color1.g, color1.b);\n\t\t\t\t\tcolors.push(color2.r, color2.g, color2.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\tdepthTest: false,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false,\n\t\t\t\ttransparent: true\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'SkeletonHelper';\n\t\t\tthis.isSkeletonHelper = true;\n\t\t\tthis.root = object;\n\t\t\tthis.bones = bones;\n\t\t\tthis.matrix = object.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst bones = this.bones;\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\t_matrixWorldInv.copy(this.root.matrixWorld).invert();\n\n\t\t\tfor (let i = 0, j = 0; i < bones.length; i++) {\n\t\t\t\tconst bone = bones[i];\n\n\t\t\t\tif (bone.parent && bone.parent.isBone) {\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j, _vector$2.x, _vector$2.y, _vector$2.z);\n\n\t\t\t\t\t_boneMatrix.multiplyMatrices(_matrixWorldInv, bone.parent.matrixWorld);\n\n\t\t\t\t\t_vector$2.setFromMatrixPosition(_boneMatrix);\n\n\t\t\t\t\tposition.setXYZ(j + 1, _vector$2.x, _vector$2.y, _vector$2.z);\n\t\t\t\t\tj += 2;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tfunction getBoneList(object) {\n\t\tconst boneList = [];\n\n\t\tif (object && object.isBone) {\n\t\t\tboneList.push(object);\n\t\t}\n\n\t\tfor (let i = 0; i < object.children.length; i++) {\n\t\t\tboneList.push.apply(boneList, getBoneList(object.children[i]));\n\t\t}\n\n\t\treturn boneList;\n\t}\n\n\tclass PointLightHelper extends Mesh {\n\t\tconstructor(light, sphereSize, color) {\n\t\t\tconst geometry = new SphereGeometry(sphereSize, 4, 2);\n\t\t\tconst material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.color = color;\n\t\t\tthis.type = 'PointLightHelper';\n\t\t\tthis.matrix = this.light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t\t/*\n\t\t\t// TODO: delete this comment?\n\t\t\tconst distanceGeometry = new THREE.IcosahedronBufferGeometry( 1, 2 );\n\t\t\tconst distanceMaterial = new THREE.MeshBasicMaterial( { color: hexColor, fog: false, wireframe: true, opacity: 0.1, transparent: true } );\n\t\t\tthis.lightSphere = new THREE.Mesh( bulbGeometry, bulbMaterial );\n\t\t\tthis.lightDistance = new THREE.Mesh( distanceGeometry, distanceMaterial );\n\t\t\tconst d = light.distance;\n\t\t\tif ( d === 0.0 ) {\n\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t} else {\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t}\n\t\t\tthis.add( this.lightDistance );\n\t\t\t*/\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.material.color.copy(this.light.color);\n\t\t\t}\n\t\t\t/*\n\t\t\tconst d = this.light.distance;\n\t\t\t\tif ( d === 0.0 ) {\n\t\t\t\t\tthis.lightDistance.visible = false;\n\t\t\t\t} else {\n\t\t\t\t\tthis.lightDistance.visible = true;\n\t\t\t\tthis.lightDistance.scale.set( d, d, d );\n\t\t\t\t}\n\t\t\t*/\n\n\t\t}\n\n\t}\n\n\tconst _vector$1 = /*@__PURE__*/new Vector3();\n\n\tconst _color1 = /*@__PURE__*/new Color();\n\n\tconst _color2 = /*@__PURE__*/new Color();\n\n\tclass HemisphereLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tconst geometry = new OctahedronGeometry(size);\n\t\t\tgeometry.rotateY(Math.PI * 0.5);\n\t\t\tthis.material = new MeshBasicMaterial({\n\t\t\t\twireframe: true,\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tif (this.color === undefined) this.material.vertexColors = true;\n\t\t\tconst position = geometry.getAttribute('position');\n\t\t\tconst colors = new Float32Array(position.count * 3);\n\t\t\tgeometry.setAttribute('color', new BufferAttribute(colors, 3));\n\t\t\tthis.add(new Mesh(geometry, this.material));\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.children[0].geometry.dispose();\n\t\t\tthis.children[0].material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst mesh = this.children[0];\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tconst colors = mesh.geometry.getAttribute('color');\n\n\t\t\t\t_color1.copy(this.light.color);\n\n\t\t\t\t_color2.copy(this.light.groundColor);\n\n\t\t\t\tfor (let i = 0, l = colors.count; i < l; i++) {\n\t\t\t\t\tconst color = i < l / 2 ? _color1 : _color2;\n\t\t\t\t\tcolors.setXYZ(i, color.r, color.g, color.b);\n\t\t\t\t}\n\n\t\t\t\tcolors.needsUpdate = true;\n\t\t\t}\n\n\t\t\tmesh.lookAt(_vector$1.setFromMatrixPosition(this.light.matrixWorld).negate());\n\t\t}\n\n\t}\n\n\tclass GridHelper extends LineSegments {\n\t\tconstructor(size = 10, divisions = 10, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst center = divisions / 2;\n\t\t\tconst step = size / divisions;\n\t\t\tconst halfSize = size / 2;\n\t\t\tconst vertices = [],\n\t\t\t\t\t\tcolors = [];\n\n\t\t\tfor (let i = 0, j = 0, k = -halfSize; i <= divisions; i++, k += step) {\n\t\t\t\tvertices.push(-halfSize, 0, k, halfSize, 0, k);\n\t\t\t\tvertices.push(k, 0, -halfSize, k, 0, halfSize);\n\t\t\t\tconst color = i === center ? color1 : color2;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t\tcolor.toArray(colors, j);\n\t\t\t\tj += 3;\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'GridHelper';\n\t\t}\n\n\t}\n\n\tclass PolarGridHelper extends LineSegments {\n\t\tconstructor(radius = 10, radials = 16, circles = 8, divisions = 64, color1 = 0x444444, color2 = 0x888888) {\n\t\t\tcolor1 = new Color(color1);\n\t\t\tcolor2 = new Color(color2);\n\t\t\tconst vertices = [];\n\t\t\tconst colors = []; // create the radials\n\n\t\t\tfor (let i = 0; i <= radials; i++) {\n\t\t\t\tconst v = i / radials * (Math.PI * 2);\n\t\t\t\tconst x = Math.sin(v) * radius;\n\t\t\t\tconst z = Math.cos(v) * radius;\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t} // create the circles\n\n\n\t\t\tfor (let i = 0; i <= circles; i++) {\n\t\t\t\tconst color = i & 1 ? color1 : color2;\n\t\t\t\tconst r = radius - radius / circles * i;\n\n\t\t\t\tfor (let j = 0; j < divisions; j++) {\n\t\t\t\t\t// first vertex\n\t\t\t\t\tlet v = j / divisions * (Math.PI * 2);\n\t\t\t\t\tlet x = Math.sin(v) * r;\n\t\t\t\t\tlet z = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b); // second vertex\n\n\t\t\t\t\tv = (j + 1) / divisions * (Math.PI * 2);\n\t\t\t\t\tx = Math.sin(v) * r;\n\t\t\t\t\tz = Math.cos(v) * r;\n\t\t\t\t\tvertices.push(x, 0, z);\n\t\t\t\t\tcolors.push(color.r, color.g, color.b);\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'PolarGridHelper';\n\t\t}\n\n\t}\n\n\tconst _v1 = /*@__PURE__*/new Vector3();\n\n\tconst _v2 = /*@__PURE__*/new Vector3();\n\n\tconst _v3 = /*@__PURE__*/new Vector3();\n\n\tclass DirectionalLightHelper extends Object3D {\n\t\tconstructor(light, size, color) {\n\t\t\tsuper();\n\t\t\tthis.light = light;\n\t\t\tthis.light.updateMatrixWorld();\n\t\t\tthis.matrix = light.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.color = color;\n\t\t\tif (size === undefined) size = 1;\n\t\t\tlet geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([-size, size, 0, size, size, 0, size, -size, 0, -size, -size, 0, -size, size, 0], 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tfog: false,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tthis.lightPlane = new Line(geometry, material);\n\t\t\tthis.add(this.lightPlane);\n\t\t\tgeometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 0, 1], 3));\n\t\t\tthis.targetLine = new Line(geometry, material);\n\t\t\tthis.add(this.targetLine);\n\t\t\tthis.update();\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.lightPlane.geometry.dispose();\n\t\t\tthis.lightPlane.material.dispose();\n\t\t\tthis.targetLine.geometry.dispose();\n\t\t\tthis.targetLine.material.dispose();\n\t\t}\n\n\t\tupdate() {\n\t\t\t_v1.setFromMatrixPosition(this.light.matrixWorld);\n\n\t\t\t_v2.setFromMatrixPosition(this.light.target.matrixWorld);\n\n\t\t\t_v3.subVectors(_v2, _v1);\n\n\t\t\tthis.lightPlane.lookAt(_v2);\n\n\t\t\tif (this.color !== undefined) {\n\t\t\t\tthis.lightPlane.material.color.set(this.color);\n\t\t\t\tthis.targetLine.material.color.set(this.color);\n\t\t\t} else {\n\t\t\t\tthis.lightPlane.material.color.copy(this.light.color);\n\t\t\t\tthis.targetLine.material.color.copy(this.light.color);\n\t\t\t}\n\n\t\t\tthis.targetLine.lookAt(_v2);\n\t\t\tthis.targetLine.scale.z = _v3.length();\n\t\t}\n\n\t}\n\n\tconst _vector = /*@__PURE__*/new Vector3();\n\n\tconst _camera = /*@__PURE__*/new Camera();\n\t/**\n\t *\t- shows frustum, line of sight and up of the camera\n\t *\t- suitable for fast updates\n\t * \t- based on frustum visualization in lightgl.js shadowmap example\n\t *\t\thttp://evanw.github.com/lightgl.js/tests/shadowmap.html\n\t */\n\n\n\tclass CameraHelper extends LineSegments {\n\t\tconstructor(camera) {\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tcolor: 0xffffff,\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tconst vertices = [];\n\t\t\tconst colors = [];\n\t\t\tconst pointMap = {}; // colors\n\n\t\t\tconst colorFrustum = new Color(0xffaa00);\n\t\t\tconst colorCone = new Color(0xff0000);\n\t\t\tconst colorUp = new Color(0x00aaff);\n\t\t\tconst colorTarget = new Color(0xffffff);\n\t\t\tconst colorCross = new Color(0x333333); // near\n\n\t\t\taddLine('n1', 'n2', colorFrustum);\n\t\t\taddLine('n2', 'n4', colorFrustum);\n\t\t\taddLine('n4', 'n3', colorFrustum);\n\t\t\taddLine('n3', 'n1', colorFrustum); // far\n\n\t\t\taddLine('f1', 'f2', colorFrustum);\n\t\t\taddLine('f2', 'f4', colorFrustum);\n\t\t\taddLine('f4', 'f3', colorFrustum);\n\t\t\taddLine('f3', 'f1', colorFrustum); // sides\n\n\t\t\taddLine('n1', 'f1', colorFrustum);\n\t\t\taddLine('n2', 'f2', colorFrustum);\n\t\t\taddLine('n3', 'f3', colorFrustum);\n\t\t\taddLine('n4', 'f4', colorFrustum); // cone\n\n\t\t\taddLine('p', 'n1', colorCone);\n\t\t\taddLine('p', 'n2', colorCone);\n\t\t\taddLine('p', 'n3', colorCone);\n\t\t\taddLine('p', 'n4', colorCone); // up\n\n\t\t\taddLine('u1', 'u2', colorUp);\n\t\t\taddLine('u2', 'u3', colorUp);\n\t\t\taddLine('u3', 'u1', colorUp); // target\n\n\t\t\taddLine('c', 't', colorTarget);\n\t\t\taddLine('p', 'c', colorCross); // cross\n\n\t\t\taddLine('cn1', 'cn2', colorCross);\n\t\t\taddLine('cn3', 'cn4', colorCross);\n\t\t\taddLine('cf1', 'cf2', colorCross);\n\t\t\taddLine('cf3', 'cf4', colorCross);\n\n\t\t\tfunction addLine(a, b, color) {\n\t\t\t\taddPoint(a, color);\n\t\t\t\taddPoint(b, color);\n\t\t\t}\n\n\t\t\tfunction addPoint(id, color) {\n\t\t\t\tvertices.push(0, 0, 0);\n\t\t\t\tcolors.push(color.r, color.g, color.b);\n\n\t\t\t\tif (pointMap[id] === undefined) {\n\t\t\t\t\tpointMap[id] = [];\n\t\t\t\t}\n\n\t\t\t\tpointMap[id].push(vertices.length / 3 - 1);\n\t\t\t}\n\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'CameraHelper';\n\t\t\tthis.camera = camera;\n\t\t\tif (this.camera.updateProjectionMatrix) this.camera.updateProjectionMatrix();\n\t\t\tthis.matrix = camera.matrixWorld;\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.pointMap = pointMap;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate() {\n\t\t\tconst geometry = this.geometry;\n\t\t\tconst pointMap = this.pointMap;\n\t\t\tconst w = 1,\n\t\t\t\t\t\th = 1; // we need just camera projection matrix inverse\n\t\t\t// world matrix must be identity\n\n\t\t\t_camera.projectionMatrixInverse.copy(this.camera.projectionMatrixInverse); // center / target\n\n\n\t\t\tsetPoint('c', pointMap, geometry, _camera, 0, 0, -1);\n\t\t\tsetPoint('t', pointMap, geometry, _camera, 0, 0, 1); // near\n\n\t\t\tsetPoint('n1', pointMap, geometry, _camera, -w, -h, -1);\n\t\t\tsetPoint('n2', pointMap, geometry, _camera, w, -h, -1);\n\t\t\tsetPoint('n3', pointMap, geometry, _camera, -w, h, -1);\n\t\t\tsetPoint('n4', pointMap, geometry, _camera, w, h, -1); // far\n\n\t\t\tsetPoint('f1', pointMap, geometry, _camera, -w, -h, 1);\n\t\t\tsetPoint('f2', pointMap, geometry, _camera, w, -h, 1);\n\t\t\tsetPoint('f3', pointMap, geometry, _camera, -w, h, 1);\n\t\t\tsetPoint('f4', pointMap, geometry, _camera, w, h, 1); // up\n\n\t\t\tsetPoint('u1', pointMap, geometry, _camera, w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u2', pointMap, geometry, _camera, -w * 0.7, h * 1.1, -1);\n\t\t\tsetPoint('u3', pointMap, geometry, _camera, 0, h * 2, -1); // cross\n\n\t\t\tsetPoint('cf1', pointMap, geometry, _camera, -w, 0, 1);\n\t\t\tsetPoint('cf2', pointMap, geometry, _camera, w, 0, 1);\n\t\t\tsetPoint('cf3', pointMap, geometry, _camera, 0, -h, 1);\n\t\t\tsetPoint('cf4', pointMap, geometry, _camera, 0, h, 1);\n\t\t\tsetPoint('cn1', pointMap, geometry, _camera, -w, 0, -1);\n\t\t\tsetPoint('cn2', pointMap, geometry, _camera, w, 0, -1);\n\t\t\tsetPoint('cn3', pointMap, geometry, _camera, 0, -h, -1);\n\t\t\tsetPoint('cn4', pointMap, geometry, _camera, 0, h, -1);\n\t\t\tgeometry.getAttribute('position').needsUpdate = true;\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tfunction setPoint(point, pointMap, geometry, camera, x, y, z) {\n\t\t_vector.set(x, y, z).unproject(camera);\n\n\t\tconst points = pointMap[point];\n\n\t\tif (points !== undefined) {\n\t\t\tconst position = geometry.getAttribute('position');\n\n\t\t\tfor (let i = 0, l = points.length; i < l; i++) {\n\t\t\t\tposition.setXYZ(points[i], _vector.x, _vector.y, _vector.z);\n\t\t\t}\n\t\t}\n\t}\n\n\tconst _box = /*@__PURE__*/new Box3();\n\n\tclass BoxHelper extends LineSegments {\n\t\tconstructor(object, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = new Float32Array(8 * 3);\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.object = object;\n\t\t\tthis.type = 'BoxHelper';\n\t\t\tthis.matrixAutoUpdate = false;\n\t\t\tthis.update();\n\t\t}\n\n\t\tupdate(object) {\n\t\t\tif (object !== undefined) {\n\t\t\t\tconsole.warn('THREE.BoxHelper: .update() has no longer arguments.');\n\t\t\t}\n\n\t\t\tif (this.object !== undefined) {\n\t\t\t\t_box.setFromObject(this.object);\n\t\t\t}\n\n\t\t\tif (_box.isEmpty()) return;\n\t\t\tconst min = _box.min;\n\t\t\tconst max = _box.max;\n\t\t\t/*\n\t\t\t\t5____4\n\t\t\t1/___0/|\n\t\t\t| 6__|_7\n\t\t\t2/___3/\n\t\t\t\t0: max.x, max.y, max.z\n\t\t\t1: min.x, max.y, max.z\n\t\t\t2: min.x, min.y, max.z\n\t\t\t3: max.x, min.y, max.z\n\t\t\t4: max.x, max.y, min.z\n\t\t\t5: min.x, max.y, min.z\n\t\t\t6: min.x, min.y, min.z\n\t\t\t7: max.x, min.y, min.z\n\t\t\t*/\n\n\t\t\tconst position = this.geometry.attributes.position;\n\t\t\tconst array = position.array;\n\t\t\tarray[0] = max.x;\n\t\t\tarray[1] = max.y;\n\t\t\tarray[2] = max.z;\n\t\t\tarray[3] = min.x;\n\t\t\tarray[4] = max.y;\n\t\t\tarray[5] = max.z;\n\t\t\tarray[6] = min.x;\n\t\t\tarray[7] = min.y;\n\t\t\tarray[8] = max.z;\n\t\t\tarray[9] = max.x;\n\t\t\tarray[10] = min.y;\n\t\t\tarray[11] = max.z;\n\t\t\tarray[12] = max.x;\n\t\t\tarray[13] = max.y;\n\t\t\tarray[14] = min.z;\n\t\t\tarray[15] = min.x;\n\t\t\tarray[16] = max.y;\n\t\t\tarray[17] = min.z;\n\t\t\tarray[18] = min.x;\n\t\t\tarray[19] = min.y;\n\t\t\tarray[20] = min.z;\n\t\t\tarray[21] = max.x;\n\t\t\tarray[22] = min.y;\n\t\t\tarray[23] = min.z;\n\t\t\tposition.needsUpdate = true;\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tsetFromObject(object) {\n\t\t\tthis.object = object;\n\t\t\tthis.update();\n\t\t\treturn this;\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tLineSegments.prototype.copy.call(this, source);\n\t\t\tthis.object = source.object;\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass Box3Helper extends LineSegments {\n\t\tconstructor(box, color = 0xffff00) {\n\t\t\tconst indices = new Uint16Array([0, 1, 1, 2, 2, 3, 3, 0, 4, 5, 5, 6, 6, 7, 7, 4, 0, 4, 1, 5, 2, 6, 3, 7]);\n\t\t\tconst positions = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, -1, -1, 1, -1, -1, -1, -1, 1, -1, -1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setIndex(new BufferAttribute(indices, 1));\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.box = box;\n\t\t\tthis.type = 'Box3Helper';\n\t\t\tthis.geometry.computeBoundingSphere();\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tconst box = this.box;\n\t\t\tif (box.isEmpty()) return;\n\t\t\tbox.getCenter(this.position);\n\t\t\tbox.getSize(this.scale);\n\t\t\tthis.scale.multiplyScalar(0.5);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tclass PlaneHelper extends Line {\n\t\tconstructor(plane, size = 1, hex = 0xffff00) {\n\t\t\tconst color = hex;\n\t\t\tconst positions = [1, -1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, 1, 1, -1, -1, 1, 1, -1, 1, 1, 1, 1, 0, 0, 1, 0, 0, 0];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(positions, 3));\n\t\t\tgeometry.computeBoundingSphere();\n\t\t\tsuper(geometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.type = 'PlaneHelper';\n\t\t\tthis.plane = plane;\n\t\t\tthis.size = size;\n\t\t\tconst positions2 = [1, 1, 1, -1, 1, 1, -1, -1, 1, 1, 1, 1, -1, -1, 1, 1, -1, 1];\n\t\t\tconst geometry2 = new BufferGeometry();\n\t\t\tgeometry2.setAttribute('position', new Float32BufferAttribute(positions2, 3));\n\t\t\tgeometry2.computeBoundingSphere();\n\t\t\tthis.add(new Mesh(geometry2, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\topacity: 0.2,\n\t\t\t\ttransparent: true,\n\t\t\t\tdepthWrite: false,\n\t\t\t\ttoneMapped: false\n\t\t\t})));\n\t\t}\n\n\t\tupdateMatrixWorld(force) {\n\t\t\tlet scale = -this.plane.constant;\n\t\t\tif (Math.abs(scale) < 1e-8) scale = 1e-8; // sign does not matter\n\n\t\t\tthis.scale.set(0.5 * this.size, 0.5 * this.size, scale);\n\t\t\tthis.children[0].material.side = scale < 0 ? BackSide : FrontSide; // renderer flips side when determinant < 0; flipping not wanted here\n\n\t\t\tthis.lookAt(this.plane.normal);\n\t\t\tsuper.updateMatrixWorld(force);\n\t\t}\n\n\t}\n\n\tconst _axis = /*@__PURE__*/new Vector3();\n\n\tlet _lineGeometry, _coneGeometry;\n\n\tclass ArrowHelper extends Object3D {\n\t\t// dir is assumed to be normalized\n\t\tconstructor(dir = new Vector3(0, 0, 1), origin = new Vector3(0, 0, 0), length = 1, color = 0xffff00, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tsuper();\n\t\t\tthis.type = 'ArrowHelper';\n\n\t\t\tif (_lineGeometry === undefined) {\n\t\t\t\t_lineGeometry = new BufferGeometry();\n\n\t\t\t\t_lineGeometry.setAttribute('position', new Float32BufferAttribute([0, 0, 0, 0, 1, 0], 3));\n\n\t\t\t\t_coneGeometry = new CylinderGeometry(0, 0.5, 1, 5, 1);\n\n\t\t\t\t_coneGeometry.translate(0, -0.5, 0);\n\t\t\t}\n\n\t\t\tthis.position.copy(origin);\n\t\t\tthis.line = new Line(_lineGeometry, new LineBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.line.matrixAutoUpdate = false;\n\t\t\tthis.add(this.line);\n\t\t\tthis.cone = new Mesh(_coneGeometry, new MeshBasicMaterial({\n\t\t\t\tcolor: color,\n\t\t\t\ttoneMapped: false\n\t\t\t}));\n\t\t\tthis.cone.matrixAutoUpdate = false;\n\t\t\tthis.add(this.cone);\n\t\t\tthis.setDirection(dir);\n\t\t\tthis.setLength(length, headLength, headWidth);\n\t\t}\n\n\t\tsetDirection(dir) {\n\t\t\t// dir is assumed to be normalized\n\t\t\tif (dir.y > 0.99999) {\n\t\t\t\tthis.quaternion.set(0, 0, 0, 1);\n\t\t\t} else if (dir.y < -0.99999) {\n\t\t\t\tthis.quaternion.set(1, 0, 0, 0);\n\t\t\t} else {\n\t\t\t\t_axis.set(dir.z, 0, -dir.x).normalize();\n\n\t\t\t\tconst radians = Math.acos(dir.y);\n\t\t\t\tthis.quaternion.setFromAxisAngle(_axis, radians);\n\t\t\t}\n\t\t}\n\n\t\tsetLength(length, headLength = length * 0.2, headWidth = headLength * 0.2) {\n\t\t\tthis.line.scale.set(1, Math.max(0.0001, length - headLength), 1); // see #17458\n\n\t\t\tthis.line.updateMatrix();\n\t\t\tthis.cone.scale.set(headWidth, headLength, headWidth);\n\t\t\tthis.cone.position.y = length;\n\t\t\tthis.cone.updateMatrix();\n\t\t}\n\n\t\tsetColor(color) {\n\t\t\tthis.line.material.color.set(color);\n\t\t\tthis.cone.material.color.set(color);\n\t\t}\n\n\t\tcopy(source) {\n\t\t\tsuper.copy(source, false);\n\t\t\tthis.line.copy(source.line);\n\t\t\tthis.cone.copy(source.cone);\n\t\t\treturn this;\n\t\t}\n\n\t}\n\n\tclass AxesHelper extends LineSegments {\n\t\tconstructor(size = 1) {\n\t\t\tconst vertices = [0, 0, 0, size, 0, 0, 0, 0, 0, 0, size, 0, 0, 0, 0, 0, 0, size];\n\t\t\tconst colors = [1, 0, 0, 1, 0.6, 0, 0, 1, 0, 0.6, 1, 0, 0, 0, 1, 0, 0.6, 1];\n\t\t\tconst geometry = new BufferGeometry();\n\t\t\tgeometry.setAttribute('position', new Float32BufferAttribute(vertices, 3));\n\t\t\tgeometry.setAttribute('color', new Float32BufferAttribute(colors, 3));\n\t\t\tconst material = new LineBasicMaterial({\n\t\t\t\tvertexColors: true,\n\t\t\t\ttoneMapped: false\n\t\t\t});\n\t\t\tsuper(geometry, material);\n\t\t\tthis.type = 'AxesHelper';\n\t\t}\n\n\t\tdispose() {\n\t\t\tthis.geometry.dispose();\n\t\t\tthis.material.dispose();\n\t\t}\n\n\t}\n\n\tconst _floatView = new Float32Array(1);\n\n\tconst _int32View = new Int32Array(_floatView.buffer);\n\n\tclass DataUtils {\n\t\t// Converts float32 to float16 (stored as uint16 value).\n\t\tstatic toHalfFloat(val) {\n\t\t\t// Source: http://gamedev.stackexchange.com/questions/17326/conversion-of-a-number-from-single-precision-floating-point-representation-to-a/17410#17410\n\n\t\t\t/* This method is faster than the OpenEXR implementation (very often\n\t\t\t* used, eg. in Ogre), with the additional benefit of rounding, inspired\n\t\t\t* by James Tursa?s half-precision code. */\n\t\t\t_floatView[0] = val;\n\t\t\tconst x = _int32View[0];\n\t\t\tlet bits = x >> 16 & 0x8000;\n\t\t\t/* Get the sign */\n\n\t\t\tlet m = x >> 12 & 0x07ff;\n\t\t\t/* Keep one extra bit for rounding */\n\n\t\t\tconst e = x >> 23 & 0xff;\n\t\t\t/* Using int is faster here */\n\n\t\t\t/* If zero, or denormal, or exponent underflows too much for a denormal\n\t\t\t\t* half, return signed zero. */\n\n\t\t\tif (e < 103) return bits;\n\t\t\t/* If NaN, return NaN. If Inf or exponent overflow, return Inf. */\n\n\t\t\tif (e > 142) {\n\t\t\t\tbits |= 0x7c00;\n\t\t\t\t/* If exponent was 0xff and one mantissa bit was set, it means NaN,\n\t\t\t\t\t\t\t* not Inf, so make sure we set one mantissa bit too. */\n\n\t\t\t\tbits |= (e == 255 ? 0 : 1) && x & 0x007fffff;\n\t\t\t\treturn bits;\n\t\t\t}\n\t\t\t/* If exponent underflows but not too much, return a denormal */\n\n\n\t\t\tif (e < 113) {\n\t\t\t\tm |= 0x0800;\n\t\t\t\t/* Extra rounding may overflow and set mantissa to 0 and exponent\n\t\t\t\t\t* to 1, which is OK. */\n\n\t\t\t\tbits |= (m >> 114 - e) + (m >> 113 - e & 1);\n\t\t\t\treturn bits;\n\t\t\t}\n\n\t\t\tbits |= e - 112 << 10 | m >> 1;\n\t\t\t/* Extra rounding. An overflow will set mantissa to 0 and increment\n\t\t\t\t* the exponent, which is OK. */\n\n\t\t\tbits += m & 1;\n\t\t\treturn bits;\n\t\t}\n\n\t}\n\n\tconst LOD_MIN = 4;\n\tconst LOD_MAX = 8;\n\tconst SIZE_MAX = Math.pow(2, LOD_MAX); // The standard deviations (radians) associated with the extra mips. These are\n\t// chosen to approximate a Trowbridge-Reitz distribution function times the\n\t// geometric shadowing function. These sigma values squared must match the\n\t// variance #defines in cube_uv_reflection_fragment.glsl.js.\n\n\tconst EXTRA_LOD_SIGMA = [0.125, 0.215, 0.35, 0.446, 0.526, 0.582];\n\tconst TOTAL_LODS = LOD_MAX - LOD_MIN + 1 + EXTRA_LOD_SIGMA.length; // The maximum length of the blur for loop. Smaller sigmas will use fewer\n\t// samples and exit early, but not recompile the shader.\n\n\tconst MAX_SAMPLES = 20;\n\tconst ENCODINGS = {\n\t\t[LinearEncoding]: 0,\n\t\t[sRGBEncoding]: 1,\n\t\t[RGBEEncoding]: 2,\n\t\t[RGBM7Encoding]: 3,\n\t\t[RGBM16Encoding]: 4,\n\t\t[RGBDEncoding]: 5,\n\t\t[GammaEncoding]: 6\n\t};\n\tconst backgroundMaterial = new MeshBasicMaterial({\n\t\tside: BackSide,\n\t\tdepthWrite: false,\n\t\tdepthTest: false\n\t});\n\tconst backgroundBox = new Mesh(new BoxGeometry(), backgroundMaterial);\n\n\tconst _flatCamera = /*@__PURE__*/new OrthographicCamera();\n\n\tconst {\n\t\t_lodPlanes,\n\t\t_sizeLods,\n\t\t_sigmas\n\t} = /*@__PURE__*/_createPlanes();\n\n\tconst _clearColor = /*@__PURE__*/new Color();\n\n\tlet _oldTarget = null; // Golden Ratio\n\n\tconst PHI = (1 + Math.sqrt(5)) / 2;\n\tconst INV_PHI = 1 / PHI; // Vertices of a dodecahedron (except the opposites, which represent the\n\t// same axis), used as axis directions evenly spread on a sphere.\n\n\tconst _axisDirections = [/*@__PURE__*/new Vector3(1, 1, 1), /*@__PURE__*/new Vector3(-1, 1, 1), /*@__PURE__*/new Vector3(1, 1, -1), /*@__PURE__*/new Vector3(-1, 1, -1), /*@__PURE__*/new Vector3(0, PHI, INV_PHI), /*@__PURE__*/new Vector3(0, PHI, -INV_PHI), /*@__PURE__*/new Vector3(INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(-INV_PHI, 0, PHI), /*@__PURE__*/new Vector3(PHI, INV_PHI, 0), /*@__PURE__*/new Vector3(-PHI, INV_PHI, 0)];\n\t/**\n\t * This class generates a Prefiltered, Mipmapped Radiance Environment Map\n\t * (PMREM) from a cubeMap environment texture. This allows different levels of\n\t * blur to be quickly accessed based on material roughness. It is packed into a\n\t * special CubeUV format that allows us to perform custom interpolation so that\n\t * we can support nonlinear formats such as RGBE. Unlike a traditional mipmap\n\t * chain, it only goes down to the LOD_MIN level (above), and then creates extra\n\t * even more filtered 'mips' at the same LOD_MIN resolution, associated with\n\t * higher roughness levels. In this way we maintain resolution to smoothly\n\t * interpolate diffuse lighting while limiting sampling computation.\n\t *\n\t * Paper: Fast, Accurate Image-Based Lighting\n\t * https://drive.google.com/file/d/15y8r_UpKlU9SvV4ILb0C3qCPecS8pvLz/view\n\t*/\n\n\tfunction convertLinearToRGBE(color) {\n\t\tconst maxComponent = Math.max(color.r, color.g, color.b);\n\t\tconst fExp = Math.min(Math.max(Math.ceil(Math.log2(maxComponent)), -128.0), 127.0);\n\t\tcolor.multiplyScalar(Math.pow(2.0, -fExp));\n\t\tconst alpha = (fExp + 128.0) / 255.0;\n\t\treturn alpha;\n\t}\n\n\tclass PMREMGenerator {\n\t\tconstructor(renderer) {\n\t\t\tthis._renderer = renderer;\n\t\t\tthis._pingPongRenderTarget = null;\n\t\t\tthis._blurMaterial = _getBlurShader(MAX_SAMPLES);\n\t\t\tthis._equirectShader = null;\n\t\t\tthis._cubemapShader = null;\n\n\t\t\tthis._compileMaterial(this._blurMaterial);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from a supplied Scene, which can be faster than using an\n\t\t * image if networking bandwidth is low. Optional sigma specifies a blur radius\n\t\t * in radians to be applied to the scene before PMREM generation. Optional near\n\t\t * and far planes ensure the scene is rendered in its entirety (the cubeCamera\n\t\t * is placed at the origin).\n\t\t */\n\n\n\t\tfromScene(scene, sigma = 0, near = 0.1, far = 100) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets();\n\n\t\t\tthis._sceneToCubeUV(scene, near, far, cubeUVRenderTarget);\n\n\t\t\tif (sigma > 0) {\n\t\t\t\tthis._blur(cubeUVRenderTarget, 0, 0, sigma);\n\t\t\t}\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an equirectangular texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input image size is 1k (1024 x 512),\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromEquirectangular(equirectangular) {\n\t\t\treturn this._fromTexture(equirectangular);\n\t\t}\n\t\t/**\n\t\t * Generates a PMREM from an cubemap texture, which can be either LDR\n\t\t * (RGBFormat) or HDR (RGBEFormat). The ideal input cube size is 256 x 256,\n\t\t * as this matches best with the 256 x 256 cubemap output.\n\t\t */\n\n\n\t\tfromCubemap(cubemap) {\n\t\t\treturn this._fromTexture(cubemap);\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the cubemap shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileCubemapShader() {\n\t\t\tif (this._cubemapShader === null) {\n\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\n\t\t\t\tthis._compileMaterial(this._cubemapShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Pre-compiles the equirectangular shader. You can get faster start-up by invoking this method during\n\t\t * your texture's network fetch for increased concurrency.\n\t\t */\n\n\n\t\tcompileEquirectangularShader() {\n\t\t\tif (this._equirectShader === null) {\n\t\t\t\tthis._equirectShader = _getEquirectShader();\n\n\t\t\t\tthis._compileMaterial(this._equirectShader);\n\t\t\t}\n\t\t}\n\t\t/**\n\t\t * Disposes of the PMREMGenerator's internal memory. Note that PMREMGenerator is a static class,\n\t\t * so you should not need more than one PMREMGenerator object. If you do, calling dispose() on\n\t\t * one of them will cause any others to also become unusable.\n\t\t */\n\n\n\t\tdispose() {\n\t\t\tthis._blurMaterial.dispose();\n\n\t\t\tif (this._cubemapShader !== null) this._cubemapShader.dispose();\n\t\t\tif (this._equirectShader !== null) this._equirectShader.dispose();\n\n\t\t\tfor (let i = 0; i < _lodPlanes.length; i++) {\n\t\t\t\t_lodPlanes[i].dispose();\n\t\t\t}\n\t\t} // private interface\n\n\n\t\t_cleanup(outputTarget) {\n\t\t\tthis._pingPongRenderTarget.dispose();\n\n\t\t\tthis._renderer.setRenderTarget(_oldTarget);\n\n\t\t\toutputTarget.scissorTest = false;\n\n\t\t\t_setViewport(outputTarget, 0, 0, outputTarget.width, outputTarget.height);\n\t\t}\n\n\t\t_fromTexture(texture) {\n\t\t\t_oldTarget = this._renderer.getRenderTarget();\n\n\t\t\tconst cubeUVRenderTarget = this._allocateTargets(texture);\n\n\t\t\tthis._textureToCubeUV(texture, cubeUVRenderTarget);\n\n\t\t\tthis._applyPMREM(cubeUVRenderTarget);\n\n\t\t\tthis._cleanup(cubeUVRenderTarget);\n\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_allocateTargets(texture) {\n\t\t\t// warning: null texture is valid\n\t\t\tconst params = {\n\t\t\t\tmagFilter: NearestFilter,\n\t\t\t\tminFilter: NearestFilter,\n\t\t\t\tgenerateMipmaps: false,\n\t\t\t\ttype: UnsignedByteType,\n\t\t\t\tformat: RGBEFormat,\n\t\t\t\tencoding: _isLDR(texture) ? texture.encoding : RGBEEncoding,\n\t\t\t\tdepthBuffer: false\n\t\t\t};\n\n\t\t\tconst cubeUVRenderTarget = _createRenderTarget(params);\n\n\t\t\tcubeUVRenderTarget.depthBuffer = texture ? false : true;\n\t\t\tthis._pingPongRenderTarget = _createRenderTarget(params);\n\t\t\treturn cubeUVRenderTarget;\n\t\t}\n\n\t\t_compileMaterial(material) {\n\t\t\tconst tmpMesh = new Mesh(_lodPlanes[0], material);\n\n\t\t\tthis._renderer.compile(tmpMesh, _flatCamera);\n\t\t}\n\n\t\t_sceneToCubeUV(scene, near, far, cubeUVRenderTarget) {\n\t\t\tconst fov = 90;\n\t\t\tconst aspect = 1;\n\t\t\tconst cubeCamera = new PerspectiveCamera(fov, aspect, near, far);\n\t\t\tconst upSign = [1, -1, 1, 1, 1, 1];\n\t\t\tconst forwardSign = [1, 1, 1, -1, -1, -1];\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst originalAutoClear = renderer.autoClear;\n\t\t\tconst outputEncoding = renderer.outputEncoding;\n\t\t\tconst toneMapping = renderer.toneMapping;\n\t\t\trenderer.getClearColor(_clearColor);\n\t\t\trenderer.toneMapping = NoToneMapping;\n\t\t\trenderer.outputEncoding = LinearEncoding;\n\t\t\trenderer.autoClear = false;\n\t\t\tlet useSolidColor = false;\n\t\t\tconst background = scene.background;\n\n\t\t\tif (background) {\n\t\t\t\tif (background.isColor) {\n\t\t\t\t\tbackgroundMaterial.color.copy(background).convertSRGBToLinear();\n\t\t\t\t\tscene.background = null;\n\t\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\t\tuseSolidColor = true;\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tbackgroundMaterial.color.copy(_clearColor).convertSRGBToLinear();\n\t\t\t\tconst alpha = convertLinearToRGBE(backgroundMaterial.color);\n\t\t\t\tbackgroundMaterial.opacity = alpha;\n\t\t\t\tuseSolidColor = true;\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < 6; i++) {\n\t\t\t\tconst col = i % 3;\n\n\t\t\t\tif (col == 0) {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(forwardSign[i], 0, 0);\n\t\t\t\t} else if (col == 1) {\n\t\t\t\t\tcubeCamera.up.set(0, 0, upSign[i]);\n\t\t\t\t\tcubeCamera.lookAt(0, forwardSign[i], 0);\n\t\t\t\t} else {\n\t\t\t\t\tcubeCamera.up.set(0, upSign[i], 0);\n\t\t\t\t\tcubeCamera.lookAt(0, 0, forwardSign[i]);\n\t\t\t\t}\n\n\t\t\t\t_setViewport(cubeUVRenderTarget, col * SIZE_MAX, i > 2 ? SIZE_MAX : 0, SIZE_MAX, SIZE_MAX);\n\n\t\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\n\t\t\t\tif (useSolidColor) {\n\t\t\t\t\trenderer.render(backgroundBox, cubeCamera);\n\t\t\t\t}\n\n\t\t\t\trenderer.render(scene, cubeCamera);\n\t\t\t}\n\n\t\t\trenderer.toneMapping = toneMapping;\n\t\t\trenderer.outputEncoding = outputEncoding;\n\t\t\trenderer.autoClear = originalAutoClear;\n\t\t}\n\n\t\t_textureToCubeUV(texture, cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\n\t\t\tif (texture.isCubeTexture) {\n\t\t\t\tif (this._cubemapShader == null) {\n\t\t\t\t\tthis._cubemapShader = _getCubemapShader();\n\t\t\t\t}\n\t\t\t} else {\n\t\t\t\tif (this._equirectShader == null) {\n\t\t\t\t\tthis._equirectShader = _getEquirectShader();\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tconst material = texture.isCubeTexture ? this._cubemapShader : this._equirectShader;\n\t\t\tconst mesh = new Mesh(_lodPlanes[0], material);\n\t\t\tconst uniforms = material.uniforms;\n\t\t\tuniforms['envMap'].value = texture;\n\n\t\t\tif (!texture.isCubeTexture) {\n\t\t\t\tuniforms['texelSize'].value.set(1.0 / texture.image.width, 1.0 / texture.image.height);\n\t\t\t}\n\n\t\t\tuniforms['inputEncoding'].value = ENCODINGS[texture.encoding];\n\t\t\tuniforms['outputEncoding'].value = ENCODINGS[cubeUVRenderTarget.texture.encoding];\n\n\t\t\t_setViewport(cubeUVRenderTarget, 0, 0, 3 * SIZE_MAX, 2 * SIZE_MAX);\n\n\t\t\trenderer.setRenderTarget(cubeUVRenderTarget);\n\t\t\trenderer.render(mesh, _flatCamera);\n\t\t}\n\n\t\t_applyPMREM(cubeUVRenderTarget) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst autoClear = renderer.autoClear;\n\t\t\trenderer.autoClear = false;\n\n\t\t\tfor (let i = 1; i < TOTAL_LODS; i++) {\n\t\t\t\tconst sigma = Math.sqrt(_sigmas[i] * _sigmas[i] - _sigmas[i - 1] * _sigmas[i - 1]);\n\t\t\t\tconst poleAxis = _axisDirections[(i - 1) % _axisDirections.length];\n\n\t\t\t\tthis._blur(cubeUVRenderTarget, i - 1, i, sigma, poleAxis);\n\t\t\t}\n\n\t\t\trenderer.autoClear = autoClear;\n\t\t}\n\t\t/**\n\t\t * This is a two-pass Gaussian blur for a cubemap. Normally this is done\n\t\t * vertically and horizontally, but this breaks down on a cube. Here we apply\n\t\t * the blur latitudinally (around the poles), and then longitudinally (towards\n\t\t * the poles) to approximate the orthogonally-separable blur. It is least\n\t\t * accurate at the poles, but still does a decent job.\n\t\t */\n\n\n\t\t_blur(cubeUVRenderTarget, lodIn, lodOut, sigma, poleAxis) {\n\t\t\tconst pingPongRenderTarget = this._pingPongRenderTarget;\n\n\t\t\tthis._halfBlur(cubeUVRenderTarget, pingPongRenderTarget, lodIn, lodOut, sigma, 'latitudinal', poleAxis);\n\n\t\t\tthis._halfBlur(pingPongRenderTarget, cubeUVRenderTarget, lodOut, lodOut, sigma, 'longitudinal', poleAxis);\n\t\t}\n\n\t\t_halfBlur(targetIn, targetOut, lodIn, lodOut, sigmaRadians, direction, poleAxis) {\n\t\t\tconst renderer = this._renderer;\n\t\t\tconst blurMaterial = this._blurMaterial;\n\n\t\t\tif (direction !== 'latitudinal' && direction !== 'longitudinal') {\n\t\t\t\tconsole.error('blur direction must be either latitudinal or longitudinal!');\n\t\t\t} // Number of standard deviations at which to cut off the discrete approximation.\n\n\n\t\t\tconst STANDARD_DEVIATIONS = 3;\n\t\t\tconst blurMesh = new Mesh(_lodPlanes[lodOut], blurMaterial);\n\t\t\tconst blurUniforms = blurMaterial.uniforms;\n\t\t\tconst pixels = _sizeLods[lodIn] - 1;\n\t\t\tconst radiansPerPixel = isFinite(sigmaRadians) ? Math.PI / (2 * pixels) : 2 * Math.PI / (2 * MAX_SAMPLES - 1);\n\t\t\tconst sigmaPixels = sigmaRadians / radiansPerPixel;\n\t\t\tconst samples = isFinite(sigmaRadians) ? 1 + Math.floor(STANDARD_DEVIATIONS * sigmaPixels) : MAX_SAMPLES;\n\n\t\t\tif (samples > MAX_SAMPLES) {\n\t\t\t\tconsole.warn(`sigmaRadians, ${sigmaRadians}, is too large and will clip, as it requested ${samples} samples when the maximum is set to ${MAX_SAMPLES}`);\n\t\t\t}\n\n\t\t\tconst weights = [];\n\t\t\tlet sum = 0;\n\n\t\t\tfor (let i = 0; i < MAX_SAMPLES; ++i) {\n\t\t\t\tconst x = i / sigmaPixels;\n\t\t\t\tconst weight = Math.exp(-x * x / 2);\n\t\t\t\tweights.push(weight);\n\n\t\t\t\tif (i == 0) {\n\t\t\t\t\tsum += weight;\n\t\t\t\t} else if (i < samples) {\n\t\t\t\t\tsum += 2 * weight;\n\t\t\t\t}\n\t\t\t}\n\n\t\t\tfor (let i = 0; i < weights.length; i++) {\n\t\t\t\tweights[i] = weights[i] / sum;\n\t\t\t}\n\n\t\t\tblurUniforms['envMap'].value = targetIn.texture;\n\t\t\tblurUniforms['samples'].value = samples;\n\t\t\tblurUniforms['weights'].value = weights;\n\t\t\tblurUniforms['latitudinal'].value = direction === 'latitudinal';\n\n\t\t\tif (poleAxis) {\n\t\t\t\tblurUniforms['poleAxis'].value = poleAxis;\n\t\t\t}\n\n\t\t\tblurUniforms['dTheta'].value = radiansPerPixel;\n\t\t\tblurUniforms['mipInt'].value = LOD_MAX - lodIn;\n\t\t\tblurUniforms['inputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tblurUniforms['outputEncoding'].value = ENCODINGS[targetIn.texture.encoding];\n\t\t\tconst outputSize = _sizeLods[lodOut];\n\t\t\tconst x = 3 * Math.max(0, SIZE_MAX - 2 * outputSize);\n\t\t\tconst y = (lodOut === 0 ? 0 : 2 * SIZE_MAX) + 2 * outputSize * (lodOut > LOD_MAX - LOD_MIN ? lodOut - LOD_MAX + LOD_MIN : 0);\n\n\t\t\t_setViewport(targetOut, x, y, 3 * outputSize, 2 * outputSize);\n\n\t\t\trenderer.setRenderTarget(targetOut);\n\t\t\trenderer.render(blurMesh, _flatCamera);\n\t\t}\n\n\t}\n\n\tfunction _isLDR(texture) {\n\t\tif (texture === undefined || texture.type !== UnsignedByteType) return false;\n\t\treturn texture.encoding === LinearEncoding || texture.encoding === sRGBEncoding || texture.encoding === GammaEncoding;\n\t}\n\n\tfunction _createPlanes() {\n\t\tconst _lodPlanes = [];\n\t\tconst _sizeLods = [];\n\t\tconst _sigmas = [];\n\t\tlet lod = LOD_MAX;\n\n\t\tfor (let i = 0; i < TOTAL_LODS; i++) {\n\t\t\tconst sizeLod = Math.pow(2, lod);\n\n\t\t\t_sizeLods.push(sizeLod);\n\n\t\t\tlet sigma = 1.0 / sizeLod;\n\n\t\t\tif (i > LOD_MAX - LOD_MIN) {\n\t\t\t\tsigma = EXTRA_LOD_SIGMA[i - LOD_MAX + LOD_MIN - 1];\n\t\t\t} else if (i == 0) {\n\t\t\t\tsigma = 0;\n\t\t\t}\n\n\t\t\t_sigmas.push(sigma);\n\n\t\t\tconst texelSize = 1.0 / (sizeLod - 1);\n\t\t\tconst min = -texelSize / 2;\n\t\t\tconst max = 1 + texelSize / 2;\n\t\t\tconst uv1 = [min, min, max, min, max, max, min, min, max, max, min, max];\n\t\t\tconst cubeFaces = 6;\n\t\t\tconst vertices = 6;\n\t\t\tconst positionSize = 3;\n\t\t\tconst uvSize = 2;\n\t\t\tconst faceIndexSize = 1;\n\t\t\tconst position = new Float32Array(positionSize * vertices * cubeFaces);\n\t\t\tconst uv = new Float32Array(uvSize * vertices * cubeFaces);\n\t\t\tconst faceIndex = new Float32Array(faceIndexSize * vertices * cubeFaces);\n\n\t\t\tfor (let face = 0; face < cubeFaces; face++) {\n\t\t\t\tconst x = face % 3 * 2 / 3 - 1;\n\t\t\t\tconst y = face > 2 ? 0 : -1;\n\t\t\t\tconst coordinates = [x, y, 0, x + 2 / 3, y, 0, x + 2 / 3, y + 1, 0, x, y, 0, x + 2 / 3, y + 1, 0, x, y + 1, 0];\n\t\t\t\tposition.set(coordinates, positionSize * vertices * face);\n\t\t\t\tuv.set(uv1, uvSize * vertices * face);\n\t\t\t\tconst fill = [face, face, face, face, face, face];\n\t\t\t\tfaceIndex.set(fill, faceIndexSize * vertices * face);\n\t\t\t}\n\n\t\t\tconst planes = new BufferGeometry();\n\t\t\tplanes.setAttribute('position', new BufferAttribute(position, positionSize));\n\t\t\tplanes.setAttribute('uv', new BufferAttribute(uv, uvSize));\n\t\t\tplanes.setAttribute('faceIndex', new BufferAttribute(faceIndex, faceIndexSize));\n\n\t\t\t_lodPlanes.push(planes);\n\n\t\t\tif (lod > LOD_MIN) {\n\t\t\t\tlod--;\n\t\t\t}\n\t\t}\n\n\t\treturn {\n\t\t\t_lodPlanes,\n\t\t\t_sizeLods,\n\t\t\t_sigmas\n\t\t};\n\t}\n\n\tfunction _createRenderTarget(params) {\n\t\tconst cubeUVRenderTarget = new WebGLRenderTarget(3 * SIZE_MAX, 3 * SIZE_MAX, params);\n\t\tcubeUVRenderTarget.texture.mapping = CubeUVReflectionMapping;\n\t\tcubeUVRenderTarget.texture.name = 'PMREM.cubeUv';\n\t\tcubeUVRenderTarget.scissorTest = true;\n\t\treturn cubeUVRenderTarget;\n\t}\n\n\tfunction _setViewport(target, x, y, width, height) {\n\t\ttarget.viewport.set(x, y, width, height);\n\t\ttarget.scissor.set(x, y, width, height);\n\t}\n\n\tfunction _getBlurShader(maxSamples) {\n\t\tconst weights = new Float32Array(maxSamples);\n\t\tconst poleAxis = new Vector3(0, 1, 0);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'SphericalGaussianBlur',\n\t\t\tdefines: {\n\t\t\t\t'n': maxSamples\n\t\t\t},\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'samples': {\n\t\t\t\t\tvalue: 1\n\t\t\t\t},\n\t\t\t\t'weights': {\n\t\t\t\t\tvalue: weights\n\t\t\t\t},\n\t\t\t\t'latitudinal': {\n\t\t\t\t\tvalue: false\n\t\t\t\t},\n\t\t\t\t'dTheta': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'mipInt': {\n\t\t\t\t\tvalue: 0\n\t\t\t\t},\n\t\t\t\t'poleAxis': {\n\t\t\t\t\tvalue: poleAxis\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform int samples;\n\t\t\tuniform float weights[ n ];\n\t\t\tuniform bool latitudinal;\n\t\t\tuniform float dTheta;\n\t\t\tuniform float mipInt;\n\t\t\tuniform vec3 poleAxis;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#define ENVMAP_TYPE_CUBE_UV\n\t\t\t#include <cube_uv_reflection_fragment>\n\n\t\t\tvec3 getSample( float theta, vec3 axis ) {\n\n\t\t\t\tfloat cosTheta = cos( theta );\n\t\t\t\t// Rodrigues' axis-angle rotation\n\t\t\t\tvec3 sampleDirection = vOutputDirection * cosTheta\n\t\t\t\t\t+ cross( axis, vOutputDirection ) * sin( theta )\n\t\t\t\t\t+ axis * dot( axis, vOutputDirection ) * ( 1.0 - cosTheta );\n\n\t\t\t\treturn bilinearCubeUV( envMap, sampleDirection, mipInt );\n\n\t\t\t}\n\n\t\t\tvoid main() {\n\n\t\t\t\tvec3 axis = latitudinal ? poleAxis : cross( poleAxis, vOutputDirection );\n\n\t\t\t\tif ( all( equal( axis, vec3( 0.0 ) ) ) ) {\n\n\t\t\t\t\taxis = vec3( vOutputDirection.z, 0.0, - vOutputDirection.x );\n\n\t\t\t\t}\n\n\t\t\t\taxis = normalize( axis );\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb += weights[ 0 ] * getSample( 0.0, axis );\n\n\t\t\t\tfor ( int i = 1; i < n; i++ ) {\n\n\t\t\t\t\tif ( i >= samples ) {\n\n\t\t\t\t\t\tbreak;\n\n\t\t\t\t\t}\n\n\t\t\t\t\tfloat theta = dTheta * float( i );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( -1.0 * theta, axis );\n\t\t\t\t\tgl_FragColor.rgb += weights[ i ] * getSample( theta, axis );\n\n\t\t\t\t}\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getEquirectShader() {\n\t\tconst texelSize = new Vector2(1, 1);\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'EquirectangularToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'texelSize': {\n\t\t\t\t\tvalue: texelSize\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform sampler2D envMap;\n\t\t\tuniform vec2 texelSize;\n\n\t\t\t${_getEncodings()}\n\n\t\t\t#include <common>\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\n\t\t\t\tvec3 outputDirection = normalize( vOutputDirection );\n\t\t\t\tvec2 uv = equirectUv( outputDirection );\n\n\t\t\t\tvec2 f = fract( uv / texelSize - 0.5 );\n\t\t\t\tuv -= f * texelSize;\n\t\t\t\tvec3 tl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x += texelSize.x;\n\t\t\t\tvec3 tr = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.y += texelSize.y;\n\t\t\t\tvec3 br = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\t\t\t\tuv.x -= texelSize.x;\n\t\t\t\tvec3 bl = envMapTexelToLinear( texture2D ( envMap, uv ) ).rgb;\n\n\t\t\t\tvec3 tm = mix( tl, tr, f.x );\n\t\t\t\tvec3 bm = mix( bl, br, f.x );\n\t\t\t\tgl_FragColor.rgb = mix( tm, bm, f.y );\n\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCubemapShader() {\n\t\tconst shaderMaterial = new RawShaderMaterial({\n\t\t\tname: 'CubemapToCubeUV',\n\t\t\tuniforms: {\n\t\t\t\t'envMap': {\n\t\t\t\t\tvalue: null\n\t\t\t\t},\n\t\t\t\t'inputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t},\n\t\t\t\t'outputEncoding': {\n\t\t\t\t\tvalue: ENCODINGS[LinearEncoding]\n\t\t\t\t}\n\t\t\t},\n\t\t\tvertexShader: _getCommonVertexShader(),\n\t\t\tfragmentShader:\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\t\tprecision mediump float;\n\t\t\tprecision mediump int;\n\n\t\t\tvarying vec3 vOutputDirection;\n\n\t\t\tuniform samplerCube envMap;\n\n\t\t\t${_getEncodings()}\n\n\t\t\tvoid main() {\n\n\t\t\t\tgl_FragColor = vec4( 0.0, 0.0, 0.0, 1.0 );\n\t\t\t\tgl_FragColor.rgb = envMapTexelToLinear( textureCube( envMap, vec3( - vOutputDirection.x, vOutputDirection.yz ) ) ).rgb;\n\t\t\t\tgl_FragColor = linearToOutputTexel( gl_FragColor );\n\n\t\t\t}\n\t\t`,\n\t\t\tblending: NoBlending,\n\t\t\tdepthTest: false,\n\t\t\tdepthWrite: false\n\t\t});\n\t\treturn shaderMaterial;\n\t}\n\n\tfunction _getCommonVertexShader() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tprecision mediump float;\n\t\tprecision mediump int;\n\n\t\tattribute vec3 position;\n\t\tattribute vec2 uv;\n\t\tattribute float faceIndex;\n\n\t\tvarying vec3 vOutputDirection;\n\n\t\t// RH coordinate system; PMREM face-indexing convention\n\t\tvec3 getDirection( vec2 uv, float face ) {\n\n\t\t\tuv = 2.0 * uv - 1.0;\n\n\t\t\tvec3 direction = vec3( uv, 1.0 );\n\n\t\t\tif ( face == 0.0 ) {\n\n\t\t\t\tdirection = direction.zyx; // ( 1, v, u ) pos x\n\n\t\t\t} else if ( face == 1.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xz *= -1.0; // ( -u, 1, -v ) pos y\n\n\t\t\t} else if ( face == 2.0 ) {\n\n\t\t\t\tdirection.x *= -1.0; // ( -u, v, 1 ) pos z\n\n\t\t\t} else if ( face == 3.0 ) {\n\n\t\t\t\tdirection = direction.zyx;\n\t\t\t\tdirection.xz *= -1.0; // ( -1, v, -u ) neg x\n\n\t\t\t} else if ( face == 4.0 ) {\n\n\t\t\t\tdirection = direction.xzy;\n\t\t\t\tdirection.xy *= -1.0; // ( -u, -1, v ) neg y\n\n\t\t\t} else if ( face == 5.0 ) {\n\n\t\t\t\tdirection.z *= -1.0; // ( u, v, -1 ) neg z\n\n\t\t\t}\n\n\t\t\treturn direction;\n\n\t\t}\n\n\t\tvoid main() {\n\n\t\t\tvOutputDirection = getDirection( uv, faceIndex );\n\t\t\tgl_Position = vec4( position, 1.0 );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tfunction _getEncodings() {\n\t\treturn (\n\t\t\t/* glsl */\n\t\t\t`\n\n\t\tuniform int inputEncoding;\n\t\tuniform int outputEncoding;\n\n\t\t#include <encodings_pars_fragment>\n\n\t\tvec4 inputTexelToLinear( vec4 value ) {\n\n\t\t\tif ( inputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( inputEncoding == 1 ) {\n\n\t\t\t\treturn sRGBToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 2 ) {\n\n\t\t\t\treturn RGBEToLinear( value );\n\n\t\t\t} else if ( inputEncoding == 3 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 7.0 );\n\n\t\t\t} else if ( inputEncoding == 4 ) {\n\n\t\t\t\treturn RGBMToLinear( value, 16.0 );\n\n\t\t\t} else if ( inputEncoding == 5 ) {\n\n\t\t\t\treturn RGBDToLinear( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn GammaToLinear( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 linearToOutputTexel( vec4 value ) {\n\n\t\t\tif ( outputEncoding == 0 ) {\n\n\t\t\t\treturn value;\n\n\t\t\t} else if ( outputEncoding == 1 ) {\n\n\t\t\t\treturn LinearTosRGB( value );\n\n\t\t\t} else if ( outputEncoding == 2 ) {\n\n\t\t\t\treturn LinearToRGBE( value );\n\n\t\t\t} else if ( outputEncoding == 3 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 7.0 );\n\n\t\t\t} else if ( outputEncoding == 4 ) {\n\n\t\t\t\treturn LinearToRGBM( value, 16.0 );\n\n\t\t\t} else if ( outputEncoding == 5 ) {\n\n\t\t\t\treturn LinearToRGBD( value, 256.0 );\n\n\t\t\t} else {\n\n\t\t\t\treturn LinearToGamma( value, 2.2 );\n\n\t\t\t}\n\n\t\t}\n\n\t\tvec4 envMapTexelToLinear( vec4 color ) {\n\n\t\t\treturn inputTexelToLinear( color );\n\n\t\t}\n\t`\n\t\t);\n\t}\n\n\tconst LineStrip = 0;\n\tconst LinePieces = 1;\n\tconst NoColors = 0;\n\tconst FaceColors = 1;\n\tconst VertexColors = 2;\n\tfunction MeshFaceMaterial(materials) {\n\t\tconsole.warn('THREE.MeshFaceMaterial has been removed. Use an Array instead.');\n\t\treturn materials;\n\t}\n\tfunction MultiMaterial(materials = []) {\n\t\tconsole.warn('THREE.MultiMaterial has been removed. Use an Array instead.');\n\t\tmaterials.isMultiMaterial = true;\n\t\tmaterials.materials = materials;\n\n\t\tmaterials.clone = function () {\n\t\t\treturn materials.slice();\n\t\t};\n\n\t\treturn materials;\n\t}\n\tfunction PointCloud(geometry, material) {\n\t\tconsole.warn('THREE.PointCloud has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction Particle(material) {\n\t\tconsole.warn('THREE.Particle has been renamed to THREE.Sprite.');\n\t\treturn new Sprite(material);\n\t}\n\tfunction ParticleSystem(geometry, material) {\n\t\tconsole.warn('THREE.ParticleSystem has been renamed to THREE.Points.');\n\t\treturn new Points(geometry, material);\n\t}\n\tfunction PointCloudMaterial(parameters) {\n\t\tconsole.warn('THREE.PointCloudMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleBasicMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleBasicMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction ParticleSystemMaterial(parameters) {\n\t\tconsole.warn('THREE.ParticleSystemMaterial has been renamed to THREE.PointsMaterial.');\n\t\treturn new PointsMaterial(parameters);\n\t}\n\tfunction Vertex(x, y, z) {\n\t\tconsole.warn('THREE.Vertex has been removed. Use THREE.Vector3 instead.');\n\t\treturn new Vector3(x, y, z);\n\t} //\n\n\tfunction DynamicBufferAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.DynamicBufferAttribute has been removed. Use new THREE.BufferAttribute().setUsage( THREE.DynamicDrawUsage ) instead.');\n\t\treturn new BufferAttribute(array, itemSize).setUsage(DynamicDrawUsage);\n\t}\n\tfunction Int8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int8Attribute has been removed. Use new THREE.Int8BufferAttribute() instead.');\n\t\treturn new Int8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8Attribute has been removed. Use new THREE.Uint8BufferAttribute() instead.');\n\t\treturn new Uint8BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint8ClampedAttribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint8ClampedAttribute has been removed. Use new THREE.Uint8ClampedBufferAttribute() instead.');\n\t\treturn new Uint8ClampedBufferAttribute(array, itemSize);\n\t}\n\tfunction Int16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int16Attribute has been removed. Use new THREE.Int16BufferAttribute() instead.');\n\t\treturn new Int16BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint16Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint16Attribute has been removed. Use new THREE.Uint16BufferAttribute() instead.');\n\t\treturn new Uint16BufferAttribute(array, itemSize);\n\t}\n\tfunction Int32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Int32Attribute has been removed. Use new THREE.Int32BufferAttribute() instead.');\n\t\treturn new Int32BufferAttribute(array, itemSize);\n\t}\n\tfunction Uint32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Uint32Attribute has been removed. Use new THREE.Uint32BufferAttribute() instead.');\n\t\treturn new Uint32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float32Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float32Attribute has been removed. Use new THREE.Float32BufferAttribute() instead.');\n\t\treturn new Float32BufferAttribute(array, itemSize);\n\t}\n\tfunction Float64Attribute(array, itemSize) {\n\t\tconsole.warn('THREE.Float64Attribute has been removed. Use new THREE.Float64BufferAttribute() instead.');\n\t\treturn new Float64BufferAttribute(array, itemSize);\n\t} //\n\n\tCurve.create = function (construct, getPoint) {\n\t\tconsole.log('THREE.Curve.create() has been deprecated');\n\t\tconstruct.prototype = Object.create(Curve.prototype);\n\t\tconstruct.prototype.constructor = construct;\n\t\tconstruct.prototype.getPoint = getPoint;\n\t\treturn construct;\n\t}; //\n\n\n\tPath.prototype.fromPoints = function (points) {\n\t\tconsole.warn('THREE.Path: .fromPoints() has been renamed to .setFromPoints().');\n\t\treturn this.setFromPoints(points);\n\t}; //\n\n\n\tfunction AxisHelper(size) {\n\t\tconsole.warn('THREE.AxisHelper has been renamed to THREE.AxesHelper.');\n\t\treturn new AxesHelper(size);\n\t}\n\tfunction BoundingBoxHelper(object, color) {\n\t\tconsole.warn('THREE.BoundingBoxHelper has been deprecated. Creating a THREE.BoxHelper instead.');\n\t\treturn new BoxHelper(object, color);\n\t}\n\tfunction EdgesHelper(object, hex) {\n\t\tconsole.warn('THREE.EdgesHelper has been removed. Use THREE.EdgesGeometry instead.');\n\t\treturn new LineSegments(new EdgesGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t}\n\n\tGridHelper.prototype.setColors = function () {\n\t\tconsole.error('THREE.GridHelper: setColors() has been deprecated, pass them in the constructor instead.');\n\t};\n\n\tSkeletonHelper.prototype.update = function () {\n\t\tconsole.error('THREE.SkeletonHelper: update() no longer needs to be called.');\n\t};\n\n\tfunction WireframeHelper(object, hex) {\n\t\tconsole.warn('THREE.WireframeHelper has been removed. Use THREE.WireframeGeometry instead.');\n\t\treturn new LineSegments(new WireframeGeometry(object.geometry), new LineBasicMaterial({\n\t\t\tcolor: hex !== undefined ? hex : 0xffffff\n\t\t}));\n\t} //\n\n\tLoader.prototype.extractUrlBase = function (url) {\n\t\tconsole.warn('THREE.Loader: .extractUrlBase() has been deprecated. Use THREE.LoaderUtils.extractUrlBase() instead.');\n\t\treturn LoaderUtils.extractUrlBase(url);\n\t};\n\n\tLoader.Handlers = {\n\t\tadd: function ()\n\t\t/* regex, loader */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.add() has been removed. Use LoadingManager.addHandler() instead.');\n\t\t},\n\t\tget: function ()\n\t\t/* file */\n\t\t{\n\t\t\tconsole.error('THREE.Loader: Handlers.get() has been removed. Use LoadingManager.getHandler() instead.');\n\t\t}\n\t};\n\tfunction XHRLoader(manager) {\n\t\tconsole.warn('THREE.XHRLoader has been renamed to THREE.FileLoader.');\n\t\treturn new FileLoader(manager);\n\t}\n\tfunction BinaryTextureLoader(manager) {\n\t\tconsole.warn('THREE.BinaryTextureLoader has been renamed to THREE.DataTextureLoader.');\n\t\treturn new DataTextureLoader(manager);\n\t} //\n\n\tBox2.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox2.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box2: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox2.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box2: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox2.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box2: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tBox3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t};\n\n\tBox3.prototype.empty = function () {\n\t\tconsole.warn('THREE.Box3: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t};\n\n\tBox3.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tBox3.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Box3: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t};\n\n\tBox3.prototype.size = function (optionalTarget) {\n\t\tconsole.warn('THREE.Box3: .size() has been renamed to .getSize().');\n\t\treturn this.getSize(optionalTarget);\n\t}; //\n\n\n\tSphere.prototype.empty = function () {\n\t\tconsole.warn('THREE.Sphere: .empty() has been renamed to .isEmpty().');\n\t\treturn this.isEmpty();\n\t}; //\n\n\n\tFrustum.prototype.setFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Frustum: .setFromMatrix() has been renamed to .setFromProjectionMatrix().');\n\t\treturn this.setFromProjectionMatrix(m);\n\t}; //\n\n\n\tLine3.prototype.center = function (optionalTarget) {\n\t\tconsole.warn('THREE.Line3: .center() has been renamed to .getCenter().');\n\t\treturn this.getCenter(optionalTarget);\n\t}; //\n\n\n\tMatrix3.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix3: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix3.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix3: .multiplyVector3() has been removed. Use vector.applyMatrix3( matrix ) instead.');\n\t\treturn vector.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix3: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix3: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix3( matrix ) instead.');\n\t\treturn attribute.applyMatrix3(this);\n\t};\n\n\tMatrix3.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix3: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix3.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix3: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tMatrix4.prototype.extractPosition = function (m) {\n\t\tconsole.warn('THREE.Matrix4: .extractPosition() has been renamed to .copyPosition().');\n\t\treturn this.copyPosition(m);\n\t};\n\n\tMatrix4.prototype.flattenToArrayOffset = function (array, offset) {\n\t\tconsole.warn('THREE.Matrix4: .flattenToArrayOffset() has been deprecated. Use .toArray() instead.');\n\t\treturn this.toArray(array, offset);\n\t};\n\n\tMatrix4.prototype.getPosition = function () {\n\t\tconsole.warn('THREE.Matrix4: .getPosition() has been removed. Use Vector3.setFromMatrixPosition( matrix ) instead.');\n\t\treturn new Vector3().setFromMatrixColumn(this, 3);\n\t};\n\n\tMatrix4.prototype.setRotationFromQuaternion = function (q) {\n\t\tconsole.warn('THREE.Matrix4: .setRotationFromQuaternion() has been renamed to .makeRotationFromQuaternion().');\n\t\treturn this.makeRotationFromQuaternion(q);\n\t};\n\n\tMatrix4.prototype.multiplyToArray = function () {\n\t\tconsole.warn('THREE.Matrix4: .multiplyToArray() has been removed.');\n\t};\n\n\tMatrix4.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector3() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector4 = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .multiplyVector4() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.multiplyVector3Array = function ()\n\t/* a */\n\t{\n\t\tconsole.error('THREE.Matrix4: .multiplyVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateAxis = function (v) {\n\t\tconsole.warn('THREE.Matrix4: .rotateAxis() has been removed. Use Vector3.transformDirection( matrix ) instead.');\n\t\tv.transformDirection(this);\n\t};\n\n\tMatrix4.prototype.crossVector = function (vector) {\n\t\tconsole.warn('THREE.Matrix4: .crossVector() has been removed. Use vector.applyMatrix4( matrix ) instead.');\n\t\treturn vector.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.translate = function () {\n\t\tconsole.error('THREE.Matrix4: .translate() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateX = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateX() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateY = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateY() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateZ = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateZ() has been removed.');\n\t};\n\n\tMatrix4.prototype.rotateByAxis = function () {\n\t\tconsole.error('THREE.Matrix4: .rotateByAxis() has been removed.');\n\t};\n\n\tMatrix4.prototype.applyToBufferAttribute = function (attribute) {\n\t\tconsole.warn('THREE.Matrix4: .applyToBufferAttribute() has been removed. Use attribute.applyMatrix4( matrix ) instead.');\n\t\treturn attribute.applyMatrix4(this);\n\t};\n\n\tMatrix4.prototype.applyToVector3Array = function ()\n\t/* array, offset, length */\n\t{\n\t\tconsole.error('THREE.Matrix4: .applyToVector3Array() has been removed.');\n\t};\n\n\tMatrix4.prototype.makeFrustum = function (left, right, bottom, top, near, far) {\n\t\tconsole.warn('THREE.Matrix4: .makeFrustum() has been removed. Use .makePerspective( left, right, top, bottom, near, far ) instead.');\n\t\treturn this.makePerspective(left, right, top, bottom, near, far);\n\t};\n\n\tMatrix4.prototype.getInverse = function (matrix) {\n\t\tconsole.warn('THREE.Matrix4: .getInverse() has been removed. Use matrixInv.copy( matrix ).invert(); instead.');\n\t\treturn this.copy(matrix).invert();\n\t}; //\n\n\n\tPlane.prototype.isIntersectionLine = function (line) {\n\t\tconsole.warn('THREE.Plane: .isIntersectionLine() has been renamed to .intersectsLine().');\n\t\treturn this.intersectsLine(line);\n\t}; //\n\n\n\tQuaternion.prototype.multiplyVector3 = function (vector) {\n\t\tconsole.warn('THREE.Quaternion: .multiplyVector3() has been removed. Use is now vector.applyQuaternion( quaternion ) instead.');\n\t\treturn vector.applyQuaternion(this);\n\t};\n\n\tQuaternion.prototype.inverse = function () {\n\t\tconsole.warn('THREE.Quaternion: .inverse() has been renamed to invert().');\n\t\treturn this.invert();\n\t}; //\n\n\n\tRay.prototype.isIntersectionBox = function (box) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionBox() has been renamed to .intersectsBox().');\n\t\treturn this.intersectsBox(box);\n\t};\n\n\tRay.prototype.isIntersectionPlane = function (plane) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionPlane() has been renamed to .intersectsPlane().');\n\t\treturn this.intersectsPlane(plane);\n\t};\n\n\tRay.prototype.isIntersectionSphere = function (sphere) {\n\t\tconsole.warn('THREE.Ray: .isIntersectionSphere() has been renamed to .intersectsSphere().');\n\t\treturn this.intersectsSphere(sphere);\n\t}; //\n\n\n\tTriangle.prototype.area = function () {\n\t\tconsole.warn('THREE.Triangle: .area() has been renamed to .getArea().');\n\t\treturn this.getArea();\n\t};\n\n\tTriangle.prototype.barycoordFromPoint = function (point, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn this.getBarycoord(point, target);\n\t};\n\n\tTriangle.prototype.midpoint = function (target) {\n\t\tconsole.warn('THREE.Triangle: .midpoint() has been renamed to .getMidpoint().');\n\t\treturn this.getMidpoint(target);\n\t};\n\n\tTriangle.prototypenormal = function (target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn this.getNormal(target);\n\t};\n\n\tTriangle.prototype.plane = function (target) {\n\t\tconsole.warn('THREE.Triangle: .plane() has been renamed to .getPlane().');\n\t\treturn this.getPlane(target);\n\t};\n\n\tTriangle.barycoordFromPoint = function (point, a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .barycoordFromPoint() has been renamed to .getBarycoord().');\n\t\treturn Triangle.getBarycoord(point, a, b, c, target);\n\t};\n\n\tTriangle.normal = function (a, b, c, target) {\n\t\tconsole.warn('THREE.Triangle: .normal() has been renamed to .getNormal().');\n\t\treturn Triangle.getNormal(a, b, c, target);\n\t}; //\n\n\n\tShape.prototype.extractAllPoints = function (divisions) {\n\t\tconsole.warn('THREE.Shape: .extractAllPoints() has been removed. Use .extractPoints() instead.');\n\t\treturn this.extractPoints(divisions);\n\t};\n\n\tShape.prototype.extrude = function (options) {\n\t\tconsole.warn('THREE.Shape: .extrude() has been removed. Use ExtrudeGeometry() instead.');\n\t\treturn new ExtrudeGeometry(this, options);\n\t};\n\n\tShape.prototype.makeGeometry = function (options) {\n\t\tconsole.warn('THREE.Shape: .makeGeometry() has been removed. Use ShapeGeometry() instead.');\n\t\treturn new ShapeGeometry(this, options);\n\t}; //\n\n\n\tVector2.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector2: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector2.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector2: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector2.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector2: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector3.prototype.setEulerFromRotationMatrix = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromRotationMatrix() has been removed. Use Euler.setFromRotationMatrix() instead.');\n\t};\n\n\tVector3.prototype.setEulerFromQuaternion = function () {\n\t\tconsole.error('THREE.Vector3: .setEulerFromQuaternion() has been removed. Use Euler.setFromQuaternion() instead.');\n\t};\n\n\tVector3.prototype.getPositionFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getPositionFromMatrix() has been renamed to .setFromMatrixPosition().');\n\t\treturn this.setFromMatrixPosition(m);\n\t};\n\n\tVector3.prototype.getScaleFromMatrix = function (m) {\n\t\tconsole.warn('THREE.Vector3: .getScaleFromMatrix() has been renamed to .setFromMatrixScale().');\n\t\treturn this.setFromMatrixScale(m);\n\t};\n\n\tVector3.prototype.getColumnFromMatrix = function (index, matrix) {\n\t\tconsole.warn('THREE.Vector3: .getColumnFromMatrix() has been renamed to .setFromMatrixColumn().');\n\t\treturn this.setFromMatrixColumn(matrix, index);\n\t};\n\n\tVector3.prototype.applyProjection = function (m) {\n\t\tconsole.warn('THREE.Vector3: .applyProjection() has been removed. Use .applyMatrix4( m ) instead.');\n\t\treturn this.applyMatrix4(m);\n\t};\n\n\tVector3.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector3: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector3.prototype.distanceToManhattan = function (v) {\n\t\tconsole.warn('THREE.Vector3: .distanceToManhattan() has been renamed to .manhattanDistanceTo().');\n\t\treturn this.manhattanDistanceTo(v);\n\t};\n\n\tVector3.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector3: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tVector4.prototype.fromAttribute = function (attribute, index, offset) {\n\t\tconsole.warn('THREE.Vector4: .fromAttribute() has been renamed to .fromBufferAttribute().');\n\t\treturn this.fromBufferAttribute(attribute, index, offset);\n\t};\n\n\tVector4.prototype.lengthManhattan = function () {\n\t\tconsole.warn('THREE.Vector4: .lengthManhattan() has been renamed to .manhattanLength().');\n\t\treturn this.manhattanLength();\n\t}; //\n\n\n\tObject3D.prototype.getChildByName = function (name) {\n\t\tconsole.warn('THREE.Object3D: .getChildByName() has been renamed to .getObjectByName().');\n\t\treturn this.getObjectByName(name);\n\t};\n\n\tObject3D.prototype.renderDepth = function () {\n\t\tconsole.warn('THREE.Object3D: .renderDepth has been removed. Use .renderOrder, instead.');\n\t};\n\n\tObject3D.prototype.translate = function (distance, axis) {\n\t\tconsole.warn('THREE.Object3D: .translate() has been removed. Use .translateOnAxis( axis, distance ) instead.');\n\t\treturn this.translateOnAxis(axis, distance);\n\t};\n\n\tObject3D.prototype.getWorldRotation = function () {\n\t\tconsole.error('THREE.Object3D: .getWorldRotation() has been removed. Use THREE.Object3D.getWorldQuaternion( target ) instead.');\n\t};\n\n\tObject3D.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.Object3D: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(Object3D.prototype, {\n\t\teulerOrder: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\treturn this.rotation.order;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Object3D: .eulerOrder is now .rotation.order.');\n\t\t\t\tthis.rotation.order = value;\n\t\t\t}\n\t\t},\n\t\tuseQuaternion: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Object3D: .useQuaternion has been removed. The library now uses quaternions by default.');\n\t\t\t}\n\t\t}\n\t});\n\n\tMesh.prototype.setDrawMode = function () {\n\t\tconsole.error('THREE.Mesh: .setDrawMode() has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t};\n\n\tObject.defineProperties(Mesh.prototype, {\n\t\tdrawMode: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode.');\n\t\t\t\treturn TrianglesDrawMode;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.error('THREE.Mesh: .drawMode has been removed. The renderer now always assumes THREE.TrianglesDrawMode. Transform your geometry via BufferGeometryUtils.toTrianglesDrawMode() if necessary.');\n\t\t\t}\n\t\t}\n\t});\n\n\tSkinnedMesh.prototype.initBones = function () {\n\t\tconsole.error('THREE.SkinnedMesh: initBones() has been removed.');\n\t}; //\n\n\n\tPerspectiveCamera.prototype.setLens = function (focalLength, filmGauge) {\n\t\tconsole.warn('THREE.PerspectiveCamera.setLens is deprecated. ' + 'Use .setFocalLength and .filmGauge for a photographic setup.');\n\t\tif (filmGauge !== undefined) this.filmGauge = filmGauge;\n\t\tthis.setFocalLength(focalLength);\n\t}; //\n\n\n\tObject.defineProperties(Light.prototype, {\n\t\tonlyShadow: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .onlyShadow has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowCameraFov: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFov is now .shadow.camera.fov.');\n\t\t\t\tthis.shadow.camera.fov = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraLeft: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraLeft is now .shadow.camera.left.');\n\t\t\t\tthis.shadow.camera.left = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraRight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraRight is now .shadow.camera.right.');\n\t\t\t\tthis.shadow.camera.right = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraTop: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraTop is now .shadow.camera.top.');\n\t\t\t\tthis.shadow.camera.top = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraBottom: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraBottom is now .shadow.camera.bottom.');\n\t\t\t\tthis.shadow.camera.bottom = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraNear: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraNear is now .shadow.camera.near.');\n\t\t\t\tthis.shadow.camera.near = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraFar: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraFar is now .shadow.camera.far.');\n\t\t\t\tthis.shadow.camera.far = value;\n\t\t\t}\n\t\t},\n\t\tshadowCameraVisible: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowCameraVisible has been removed. Use new THREE.CameraHelper( light.shadow.camera ) instead.');\n\t\t\t}\n\t\t},\n\t\tshadowBias: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowBias is now .shadow.bias.');\n\t\t\t\tthis.shadow.bias = value;\n\t\t\t}\n\t\t},\n\t\tshadowDarkness: {\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Light: .shadowDarkness has been removed.');\n\t\t\t}\n\t\t},\n\t\tshadowMapWidth: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapWidth is now .shadow.mapSize.width.');\n\t\t\t\tthis.shadow.mapSize.width = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapHeight: {\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.Light: .shadowMapHeight is now .shadow.mapSize.height.');\n\t\t\t\tthis.shadow.mapSize.height = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tObject.defineProperties(BufferAttribute.prototype, {\n\t\tlength: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .length has been deprecated. Use .count instead.');\n\t\t\t\treturn this.array.length;\n\t\t\t}\n\t\t},\n\t\tdynamic: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\treturn this.usage === DynamicDrawUsage;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.BufferAttribute: .dynamic has been deprecated. Use .usage instead.');\n\t\t\t\tthis.setUsage(DynamicDrawUsage);\n\t\t\t}\n\t\t}\n\t});\n\n\tBufferAttribute.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.BufferAttribute: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tBufferAttribute.prototype.copyIndicesArray = function ()\n\t/* indices */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .copyIndicesArray() has been removed.');\n\t}, BufferAttribute.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.BufferAttribute: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\tBufferGeometry.prototype.addIndex = function (index) {\n\t\tconsole.warn('THREE.BufferGeometry: .addIndex() has been renamed to .setIndex().');\n\t\tthis.setIndex(index);\n\t};\n\n\tBufferGeometry.prototype.addAttribute = function (name, attribute) {\n\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() has been renamed to .setAttribute().');\n\n\t\tif (!(attribute && attribute.isBufferAttribute) && !(attribute && attribute.isInterleavedBufferAttribute)) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addAttribute() now expects ( name, attribute ).');\n\t\t\treturn this.setAttribute(name, new BufferAttribute(arguments[1], arguments[2]));\n\t\t}\n\n\t\tif (name === 'index') {\n\t\t\tconsole.warn('THREE.BufferGeometry.addAttribute: Use .setIndex() for index attribute.');\n\t\t\tthis.setIndex(attribute);\n\t\t\treturn this;\n\t\t}\n\n\t\treturn this.setAttribute(name, attribute);\n\t};\n\n\tBufferGeometry.prototype.addDrawCall = function (start, count, indexOffset) {\n\t\tif (indexOffset !== undefined) {\n\t\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() no longer supports indexOffset.');\n\t\t}\n\n\t\tconsole.warn('THREE.BufferGeometry: .addDrawCall() is now .addGroup().');\n\t\tthis.addGroup(start, count);\n\t};\n\n\tBufferGeometry.prototype.clearDrawCalls = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .clearDrawCalls() is now .clearGroups().');\n\t\tthis.clearGroups();\n\t};\n\n\tBufferGeometry.prototype.computeOffsets = function () {\n\t\tconsole.warn('THREE.BufferGeometry: .computeOffsets() has been removed.');\n\t};\n\n\tBufferGeometry.prototype.removeAttribute = function (name) {\n\t\tconsole.warn('THREE.BufferGeometry: .removeAttribute() has been renamed to .deleteAttribute().');\n\t\treturn this.deleteAttribute(name);\n\t};\n\n\tBufferGeometry.prototype.applyMatrix = function (matrix) {\n\t\tconsole.warn('THREE.BufferGeometry: .applyMatrix() has been renamed to .applyMatrix4().');\n\t\treturn this.applyMatrix4(matrix);\n\t};\n\n\tObject.defineProperties(BufferGeometry.prototype, {\n\t\tdrawcalls: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.BufferGeometry: .drawcalls has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t},\n\t\toffsets: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.BufferGeometry: .offsets has been renamed to .groups.');\n\t\t\t\treturn this.groups;\n\t\t\t}\n\t\t}\n\t});\n\n\tInterleavedBuffer.prototype.setDynamic = function (value) {\n\t\tconsole.warn('THREE.InterleavedBuffer: .setDynamic() has been deprecated. Use .setUsage() instead.');\n\t\tthis.setUsage(value === true ? DynamicDrawUsage : StaticDrawUsage);\n\t\treturn this;\n\t};\n\n\tInterleavedBuffer.prototype.setArray = function ()\n\t/* array */\n\t{\n\t\tconsole.error('THREE.InterleavedBuffer: .setArray has been removed. Use BufferGeometry .setAttribute to replace/resize attribute buffers');\n\t}; //\n\n\n\tExtrudeGeometry.prototype.getArrays = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .getArrays() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShapeList = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShapeList() has been removed.');\n\t};\n\n\tExtrudeGeometry.prototype.addShape = function () {\n\t\tconsole.error('THREE.ExtrudeGeometry: .addShape() has been removed.');\n\t}; //\n\n\n\tScene.prototype.dispose = function () {\n\t\tconsole.error('THREE.Scene: .dispose() has been removed.');\n\t}; //\n\n\n\tUniform.prototype.onUpdate = function () {\n\t\tconsole.warn('THREE.Uniform: .onUpdate() has been removed. Use object.onBeforeRender() instead.');\n\t\treturn this;\n\t}; //\n\n\n\tObject.defineProperties(Material.prototype, {\n\t\twrapAround: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapAround has been removed.');\n\t\t\t}\n\t\t},\n\t\toverdraw: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.Material: .overdraw has been removed.');\n\t\t\t}\n\t\t},\n\t\twrapRGB: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.Material: .wrapRGB has been removed.');\n\t\t\t\treturn new Color();\n\t\t\t}\n\t\t},\n\t\tshading: {\n\t\t\tget: function () {\n\t\t\t\tconsole.error('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .shading has been removed. Use the boolean .flatShading instead.');\n\t\t\t\tthis.flatShading = value === FlatShading;\n\t\t\t}\n\t\t},\n\t\tstencilMask: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\treturn this.stencilFuncMask;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.' + this.type + ': .stencilMask has been removed. Use .stencilFuncMask instead.');\n\t\t\t\tthis.stencilFuncMask = value;\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(ShaderMaterial.prototype, {\n\t\tderivatives: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\treturn this.extensions.derivatives;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE. ShaderMaterial: .derivatives has been moved to .extensions.derivatives.');\n\t\t\t\tthis.extensions.derivatives = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tWebGLRenderer.prototype.clearTarget = function (renderTarget, color, depth, stencil) {\n\t\tconsole.warn('THREE.WebGLRenderer: .clearTarget() has been deprecated. Use .setRenderTarget() and .clear() instead.');\n\t\tthis.setRenderTarget(renderTarget);\n\t\tthis.clear(color, depth, stencil);\n\t};\n\n\tWebGLRenderer.prototype.animate = function (callback) {\n\t\tconsole.warn('THREE.WebGLRenderer: .animate() is now .setAnimationLoop().');\n\t\tthis.setAnimationLoop(callback);\n\t};\n\n\tWebGLRenderer.prototype.getCurrentRenderTarget = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getCurrentRenderTarget() is now .getRenderTarget().');\n\t\treturn this.getRenderTarget();\n\t};\n\n\tWebGLRenderer.prototype.getMaxAnisotropy = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getMaxAnisotropy() is now .capabilities.getMaxAnisotropy().');\n\t\treturn this.capabilities.getMaxAnisotropy();\n\t};\n\n\tWebGLRenderer.prototype.getPrecision = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getPrecision() is now .capabilities.precision.');\n\t\treturn this.capabilities.precision;\n\t};\n\n\tWebGLRenderer.prototype.resetGLState = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .resetGLState() is now .state.reset().');\n\t\treturn this.state.reset();\n\t};\n\n\tWebGLRenderer.prototype.supportsFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsFloatTextures() is now .extensions.get( \\'OES_texture_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsHalfFloatTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsHalfFloatTextures() is now .extensions.get( \\'OES_texture_half_float\\' ).');\n\t\treturn this.extensions.get('OES_texture_half_float');\n\t};\n\n\tWebGLRenderer.prototype.supportsStandardDerivatives = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsStandardDerivatives() is now .extensions.get( \\'OES_standard_derivatives\\' ).');\n\t\treturn this.extensions.get('OES_standard_derivatives');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTextureS3TC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTextureS3TC() is now .extensions.get( \\'WEBGL_compressed_texture_s3tc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_s3tc');\n\t};\n\n\tWebGLRenderer.prototype.supportsCompressedTexturePVRTC = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsCompressedTexturePVRTC() is now .extensions.get( \\'WEBGL_compressed_texture_pvrtc\\' ).');\n\t\treturn this.extensions.get('WEBGL_compressed_texture_pvrtc');\n\t};\n\n\tWebGLRenderer.prototype.supportsBlendMinMax = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsBlendMinMax() is now .extensions.get( \\'EXT_blend_minmax\\' ).');\n\t\treturn this.extensions.get('EXT_blend_minmax');\n\t};\n\n\tWebGLRenderer.prototype.supportsVertexTextures = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsVertexTextures() is now .capabilities.vertexTextures.');\n\t\treturn this.capabilities.vertexTextures;\n\t};\n\n\tWebGLRenderer.prototype.supportsInstancedArrays = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .supportsInstancedArrays() is now .extensions.get( \\'ANGLE_instanced_arrays\\' ).');\n\t\treturn this.extensions.get('ANGLE_instanced_arrays');\n\t};\n\n\tWebGLRenderer.prototype.enableScissorTest = function (boolean) {\n\t\tconsole.warn('THREE.WebGLRenderer: .enableScissorTest() is now .setScissorTest().');\n\t\tthis.setScissorTest(boolean);\n\t};\n\n\tWebGLRenderer.prototype.initMaterial = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .initMaterial() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPrePlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPrePlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.addPostPlugin = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .addPostPlugin() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.updateShadowMap = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .updateShadowMap() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setFaceCulling = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setFaceCulling() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.allocTextureUnit = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .allocTextureUnit() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTexture2D = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTexture2D() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.setTextureCube = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .setTextureCube() has been removed.');\n\t};\n\n\tWebGLRenderer.prototype.getActiveMipMapLevel = function () {\n\t\tconsole.warn('THREE.WebGLRenderer: .getActiveMipMapLevel() is now .getActiveMipmapLevel().');\n\t\treturn this.getActiveMipmapLevel();\n\t};\n\n\tObject.defineProperties(WebGLRenderer.prototype, {\n\t\tshadowMapEnabled: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.enabled;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapEnabled is now .shadowMap.enabled.');\n\t\t\t\tthis.shadowMap.enabled = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapType: {\n\t\t\tget: function () {\n\t\t\t\treturn this.shadowMap.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapType is now .shadowMap.type.');\n\t\t\t\tthis.shadowMap.type = value;\n\t\t\t}\n\t\t},\n\t\tshadowMapCullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* value */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMapCullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\tcontext: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .context has been removed. Use .getContext() instead.');\n\t\t\t\treturn this.getContext();\n\t\t\t}\n\t\t},\n\t\tvr: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .vr has been renamed to .xr');\n\t\t\t\treturn this.xr;\n\t\t\t}\n\t\t},\n\t\tgammaInput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaInput has been removed. Set the encoding for textures via Texture.encoding instead.');\n\t\t\t}\n\t\t},\n\t\tgammaOutput: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\treturn false;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .gammaOutput has been removed. Set WebGLRenderer.outputEncoding instead.');\n\t\t\t\tthis.outputEncoding = value === true ? sRGBEncoding : LinearEncoding;\n\t\t\t}\n\t\t},\n\t\ttoneMappingWhitePoint: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t\treturn 1.0;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .toneMappingWhitePoint has been removed.');\n\t\t\t}\n\t\t}\n\t});\n\tObject.defineProperties(WebGLShadowMap.prototype, {\n\t\tcullFace: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function ()\n\t\t\t/* cullFace */\n\t\t\t{\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.cullFace has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderReverseSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderReverseSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t},\n\t\trenderSingleSided: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t\treturn undefined;\n\t\t\t},\n\t\t\tset: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderer: .shadowMap.renderSingleSided has been removed. Set Material.shadowSide instead.');\n\t\t\t}\n\t\t}\n\t});\n\tfunction WebGLRenderTargetCube(width, height, options) {\n\t\tconsole.warn('THREE.WebGLRenderTargetCube( width, height, options ) is now WebGLCubeRenderTarget( size, options ).');\n\t\treturn new WebGLCubeRenderTarget(width, options);\n\t} //\n\n\tObject.defineProperties(WebGLRenderTarget.prototype, {\n\t\twrapS: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\treturn this.texture.wrapS;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapS is now .texture.wrapS.');\n\t\t\t\tthis.texture.wrapS = value;\n\t\t\t}\n\t\t},\n\t\twrapT: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\treturn this.texture.wrapT;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .wrapT is now .texture.wrapT.');\n\t\t\t\tthis.texture.wrapT = value;\n\t\t\t}\n\t\t},\n\t\tmagFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\treturn this.texture.magFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .magFilter is now .texture.magFilter.');\n\t\t\t\tthis.texture.magFilter = value;\n\t\t\t}\n\t\t},\n\t\tminFilter: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\treturn this.texture.minFilter;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .minFilter is now .texture.minFilter.');\n\t\t\t\tthis.texture.minFilter = value;\n\t\t\t}\n\t\t},\n\t\tanisotropy: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\treturn this.texture.anisotropy;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .anisotropy is now .texture.anisotropy.');\n\t\t\t\tthis.texture.anisotropy = value;\n\t\t\t}\n\t\t},\n\t\toffset: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\treturn this.texture.offset;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .offset is now .texture.offset.');\n\t\t\t\tthis.texture.offset = value;\n\t\t\t}\n\t\t},\n\t\trepeat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\treturn this.texture.repeat;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .repeat is now .texture.repeat.');\n\t\t\t\tthis.texture.repeat = value;\n\t\t\t}\n\t\t},\n\t\tformat: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\treturn this.texture.format;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .format is now .texture.format.');\n\t\t\t\tthis.texture.format = value;\n\t\t\t}\n\t\t},\n\t\ttype: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\treturn this.texture.type;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .type is now .texture.type.');\n\t\t\t\tthis.texture.type = value;\n\t\t\t}\n\t\t},\n\t\tgenerateMipmaps: {\n\t\t\tget: function () {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\treturn this.texture.generateMipmaps;\n\t\t\t},\n\t\t\tset: function (value) {\n\t\t\t\tconsole.warn('THREE.WebGLRenderTarget: .generateMipmaps is now .texture.generateMipmaps.');\n\t\t\t\tthis.texture.generateMipmaps = value;\n\t\t\t}\n\t\t}\n\t}); //\n\n\tAudio.prototype.load = function (file) {\n\t\tconsole.warn('THREE.Audio: .load has been deprecated. Use THREE.AudioLoader instead.');\n\t\tconst scope = this;\n\t\tconst audioLoader = new AudioLoader();\n\t\taudioLoader.load(file, function (buffer) {\n\t\t\tscope.setBuffer(buffer);\n\t\t});\n\t\treturn this;\n\t};\n\n\tAudioAnalyser.prototype.getData = function () {\n\t\tconsole.warn('THREE.AudioAnalyser: .getData() is now .getFrequencyData().');\n\t\treturn this.getFrequencyData();\n\t}; //\n\n\n\tCubeCamera.prototype.updateCubeMap = function (renderer, scene) {\n\t\tconsole.warn('THREE.CubeCamera: .updateCubeMap() is now .update().');\n\t\treturn this.update(renderer, scene);\n\t};\n\n\tCubeCamera.prototype.clear = function (renderer, color, depth, stencil) {\n\t\tconsole.warn('THREE.CubeCamera: .clear() is now .renderTarget.clear().');\n\t\treturn this.renderTarget.clear(renderer, color, depth, stencil);\n\t};\n\n\tImageUtils.crossOrigin = undefined;\n\n\tImageUtils.loadTexture = function (url, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTexture has been deprecated. Use THREE.TextureLoader() instead.');\n\t\tconst loader = new TextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(url, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadTextureCube = function (urls, mapping, onLoad, onError) {\n\t\tconsole.warn('THREE.ImageUtils.loadTextureCube has been deprecated. Use THREE.CubeTextureLoader() instead.');\n\t\tconst loader = new CubeTextureLoader();\n\t\tloader.setCrossOrigin(this.crossOrigin);\n\t\tconst texture = loader.load(urls, onLoad, undefined, onError);\n\t\tif (mapping) texture.mapping = mapping;\n\t\treturn texture;\n\t};\n\n\tImageUtils.loadCompressedTexture = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTexture has been removed. Use THREE.DDSLoader instead.');\n\t};\n\n\tImageUtils.loadCompressedTextureCube = function () {\n\t\tconsole.error('THREE.ImageUtils.loadCompressedTextureCube has been removed. Use THREE.DDSLoader instead.');\n\t}; //\n\n\n\tfunction CanvasRenderer() {\n\t\tconsole.error('THREE.CanvasRenderer has been removed');\n\t} //\n\n\tfunction JSONLoader() {\n\t\tconsole.error('THREE.JSONLoader has been removed.');\n\t} //\n\n\tconst SceneUtils = {\n\t\tcreateMultiMaterialObject: function ()\n\t\t/* geometry, materials */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tdetach: function ()\n\t\t/* child, parent, scene */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t},\n\t\tattach: function ()\n\t\t/* child, scene, parent */\n\t\t{\n\t\t\tconsole.error('THREE.SceneUtils has been moved to /examples/jsm/utils/SceneUtils.js');\n\t\t}\n\t}; //\n\n\tfunction LensFlare() {\n\t\tconsole.error('THREE.LensFlare has been moved to /examples/jsm/objects/Lensflare.js');\n\t}\n\n\tif (typeof __THREE_DEVTOOLS__ !== 'undefined') {\n\t\t/* eslint-disable no-undef */\n\t\t__THREE_DEVTOOLS__.dispatchEvent(new CustomEvent('register', {\n\t\t\tdetail: {\n\t\t\t\trevision: REVISION\n\t\t\t}\n\t\t}));\n\t\t/* eslint-enable no-undef */\n\n\t}\n\n\tif (typeof window !== 'undefined') {\n\t\tif (window.__THREE__) {\n\t\t\tconsole.warn('WARNING: Multiple instances of Three.js being imported.');\n\t\t} else {\n\t\t\twindow.__THREE__ = REVISION;\n\t\t}\n\t}\n\n\texports.ACESFilmicToneMapping = ACESFilmicToneMapping;\n\texports.AddEquation = AddEquation;\n\texports.AddOperation = AddOperation;\n\texports.AdditiveAnimationBlendMode = AdditiveAnimationBlendMode;\n\texports.AdditiveBlending = AdditiveBlending;\n\texports.AlphaFormat = AlphaFormat;\n\texports.AlwaysDepth = AlwaysDepth;\n\texports.AlwaysStencilFunc = AlwaysStencilFunc;\n\texports.AmbientLight = AmbientLight;\n\texports.AmbientLightProbe = AmbientLightProbe;\n\texports.AnimationClip = AnimationClip;\n\texports.AnimationLoader = AnimationLoader;\n\texports.AnimationMixer = AnimationMixer;\n\texports.AnimationObjectGroup = AnimationObjectGroup;\n\texports.AnimationUtils = AnimationUtils;\n\texports.ArcCurve = ArcCurve;\n\texports.ArrayCamera = ArrayCamera;\n\texports.ArrowHelper = ArrowHelper;\n\texports.Audio = Audio;\n\texports.AudioAnalyser = AudioAnalyser;\n\texports.AudioContext = AudioContext;\n\texports.AudioListener = AudioListener;\n\texports.AudioLoader = AudioLoader;\n\texports.AxesHelper = AxesHelper;\n\texports.AxisHelper = AxisHelper;\n\texports.BackSide = BackSide;\n\texports.BasicDepthPacking = BasicDepthPacking;\n\texports.BasicShadowMap = BasicShadowMap;\n\texports.BinaryTextureLoader = BinaryTextureLoader;\n\texports.Bone = Bone;\n\texports.BooleanKeyframeTrack = BooleanKeyframeTrack;\n\texports.BoundingBoxHelper = BoundingBoxHelper;\n\texports.Box2 = Box2;\n\texports.Box3 = Box3;\n\texports.Box3Helper = Box3Helper;\n\texports.BoxBufferGeometry = BoxGeometry;\n\texports.BoxGeometry = BoxGeometry;\n\texports.BoxHelper = BoxHelper;\n\texports.BufferAttribute = BufferAttribute;\n\texports.BufferGeometry = BufferGeometry;\n\texports.BufferGeometryLoader = BufferGeometryLoader;\n\texports.ByteType = ByteType;\n\texports.Cache = Cache;\n\texports.Camera = Camera;\n\texports.CameraHelper = CameraHelper;\n\texports.CanvasRenderer = CanvasRenderer;\n\texports.CanvasTexture = CanvasTexture;\n\texports.CatmullRomCurve3 = CatmullRomCurve3;\n\texports.CineonToneMapping = CineonToneMapping;\n\texports.CircleBufferGeometry = CircleGeometry;\n\texports.CircleGeometry = CircleGeometry;\n\texports.ClampToEdgeWrapping = ClampToEdgeWrapping;\n\texports.Clock = Clock;\n\texports.Color = Color;\n\texports.ColorKeyframeTrack = ColorKeyframeTrack;\n\texports.CompressedTexture = CompressedTexture;\n\texports.CompressedTextureLoader = CompressedTextureLoader;\n\texports.ConeBufferGeometry = ConeGeometry;\n\texports.ConeGeometry = ConeGeometry;\n\texports.CubeCamera = CubeCamera;\n\texports.CubeReflectionMapping = CubeReflectionMapping;\n\texports.CubeRefractionMapping = CubeRefractionMapping;\n\texports.CubeTexture = CubeTexture;\n\texports.CubeTextureLoader = CubeTextureLoader;\n\texports.CubeUVReflectionMapping = CubeUVReflectionMapping;\n\texports.CubeUVRefractionMapping = CubeUVRefractionMapping;\n\texports.CubicBezierCurve = CubicBezierCurve;\n\texports.CubicBezierCurve3 = CubicBezierCurve3;\n\texports.CubicInterpolant = CubicInterpolant;\n\texports.CullFaceBack = CullFaceBack;\n\texports.CullFaceFront = CullFaceFront;\n\texports.CullFaceFrontBack = CullFaceFrontBack;\n\texports.CullFaceNone = CullFaceNone;\n\texports.Curve = Curve;\n\texports.CurvePath = CurvePath;\n\texports.CustomBlending = CustomBlending;\n\texports.CustomToneMapping = CustomToneMapping;\n\texports.CylinderBufferGeometry = CylinderGeometry;\n\texports.CylinderGeometry = CylinderGeometry;\n\texports.Cylindrical = Cylindrical;\n\texports.DataTexture = DataTexture;\n\texports.DataTexture2DArray = DataTexture2DArray;\n\texports.DataTexture3D = DataTexture3D;\n\texports.DataTextureLoader = DataTextureLoader;\n\texports.DataUtils = DataUtils;\n\texports.DecrementStencilOp = DecrementStencilOp;\n\texports.DecrementWrapStencilOp = DecrementWrapStencilOp;\n\texports.DefaultLoadingManager = DefaultLoadingManager;\n\texports.DepthFormat = DepthFormat;\n\texports.DepthStencilFormat = DepthStencilFormat;\n\texports.DepthTexture = DepthTexture;\n\texports.DirectionalLight = DirectionalLight;\n\texports.DirectionalLightHelper = DirectionalLightHelper;\n\texports.DiscreteInterpolant = DiscreteInterpolant;\n\texports.DodecahedronBufferGeometry = DodecahedronGeometry;\n\texports.DodecahedronGeometry = DodecahedronGeometry;\n\texports.DoubleSide = DoubleSide;\n\texports.DstAlphaFactor = DstAlphaFactor;\n\texports.DstColorFactor = DstColorFactor;\n\texports.DynamicBufferAttribute = DynamicBufferAttribute;\n\texports.DynamicCopyUsage = DynamicCopyUsage;\n\texports.DynamicDrawUsage = DynamicDrawUsage;\n\texports.DynamicReadUsage = DynamicReadUsage;\n\texports.EdgesGeometry = EdgesGeometry;\n\texports.EdgesHelper = EdgesHelper;\n\texports.EllipseCurve = EllipseCurve;\n\texports.EqualDepth = EqualDepth;\n\texports.EqualStencilFunc = EqualStencilFunc;\n\texports.EquirectangularReflectionMapping = EquirectangularReflectionMapping;\n\texports.EquirectangularRefractionMapping = EquirectangularRefractionMapping;\n\texports.Euler = Euler;\n\texports.EventDispatcher = EventDispatcher;\n\texports.ExtrudeBufferGeometry = ExtrudeGeometry;\n\texports.ExtrudeGeometry = ExtrudeGeometry;\n\texports.FaceColors = FaceColors;\n\texports.FileLoader = FileLoader;\n\texports.FlatShading = FlatShading;\n\texports.Float16BufferAttribute = Float16BufferAttribute;\n\texports.Float32Attribute = Float32Attribute;\n\texports.Float32BufferAttribute = Float32BufferAttribute;\n\texports.Float64Attribute = Float64Attribute;\n\texports.Float64BufferAttribute = Float64BufferAttribute;\n\texports.FloatType = FloatType;\n\texports.Fog = Fog;\n\texports.FogExp2 = FogExp2;\n\texports.Font = Font;\n\texports.FontLoader = FontLoader;\n\texports.FrontSide = FrontSide;\n\texports.Frustum = Frustum;\n\texports.GLBufferAttribute = GLBufferAttribute;\n\texports.GLSL1 = GLSL1;\n\texports.GLSL3 = GLSL3;\n\texports.GammaEncoding = GammaEncoding;\n\texports.GreaterDepth = GreaterDepth;\n\texports.GreaterEqualDepth = GreaterEqualDepth;\n\texports.GreaterEqualStencilFunc = GreaterEqualStencilFunc;\n\texports.GreaterStencilFunc = GreaterStencilFunc;\n\texports.GridHelper = GridHelper;\n\texports.Group = Group;\n\texports.HalfFloatType = HalfFloatType;\n\texports.HemisphereLight = HemisphereLight;\n\texports.HemisphereLightHelper = HemisphereLightHelper;\n\texports.HemisphereLightProbe = HemisphereLightProbe;\n\texports.IcosahedronBufferGeometry = IcosahedronGeometry;\n\texports.IcosahedronGeometry = IcosahedronGeometry;\n\texports.ImageBitmapLoader = ImageBitmapLoader;\n\texports.ImageLoader = ImageLoader;\n\texports.ImageUtils = ImageUtils;\n\texports.ImmediateRenderObject = ImmediateRenderObject;\n\texports.IncrementStencilOp = IncrementStencilOp;\n\texports.IncrementWrapStencilOp = IncrementWrapStencilOp;\n\texports.InstancedBufferAttribute = InstancedBufferAttribute;\n\texports.InstancedBufferGeometry = InstancedBufferGeometry;\n\texports.InstancedInterleavedBuffer = InstancedInterleavedBuffer;\n\texports.InstancedMesh = InstancedMesh;\n\texports.Int16Attribute = Int16Attribute;\n\texports.Int16BufferAttribute = Int16BufferAttribute;\n\texports.Int32Attribute = Int32Attribute;\n\texports.Int32BufferAttribute = Int32BufferAttribute;\n\texports.Int8Attribute = Int8Attribute;\n\texports.Int8BufferAttribute = Int8BufferAttribute;\n\texports.IntType = IntType;\n\texports.InterleavedBuffer = InterleavedBuffer;\n\texports.InterleavedBufferAttribute = InterleavedBufferAttribute;\n\texports.Interpolant = Interpolant;\n\texports.InterpolateDiscrete = InterpolateDiscrete;\n\texports.InterpolateLinear = InterpolateLinear;\n\texports.InterpolateSmooth = InterpolateSmooth;\n\texports.InvertStencilOp = InvertStencilOp;\n\texports.JSONLoader = JSONLoader;\n\texports.KeepStencilOp = KeepStencilOp;\n\texports.KeyframeTrack = KeyframeTrack;\n\texports.LOD = LOD;\n\texports.LatheBufferGeometry = LatheGeometry;\n\texports.LatheGeometry = LatheGeometry;\n\texports.Layers = Layers;\n\texports.LensFlare = LensFlare;\n\texports.LessDepth = LessDepth;\n\texports.LessEqualDepth = LessEqualDepth;\n\texports.LessEqualStencilFunc = LessEqualStencilFunc;\n\texports.LessStencilFunc = LessStencilFunc;\n\texports.Light = Light;\n\texports.LightProbe = LightProbe;\n\texports.Line = Line;\n\texports.Line3 = Line3;\n\texports.LineBasicMaterial = LineBasicMaterial;\n\texports.LineCurve = LineCurve;\n\texports.LineCurve3 = LineCurve3;\n\texports.LineDashedMaterial = LineDashedMaterial;\n\texports.LineLoop = LineLoop;\n\texports.LinePieces = LinePieces;\n\texports.LineSegments = LineSegments;\n\texports.LineStrip = LineStrip;\n\texports.LinearEncoding = LinearEncoding;\n\texports.LinearFilter = LinearFilter;\n\texports.LinearInterpolant = LinearInterpolant;\n\texports.LinearMipMapLinearFilter = LinearMipMapLinearFilter;\n\texports.LinearMipMapNearestFilter = LinearMipMapNearestFilter;\n\texports.LinearMipmapLinearFilter = LinearMipmapLinearFilter;\n\texports.LinearMipmapNearestFilter = LinearMipmapNearestFilter;\n\texports.LinearToneMapping = LinearToneMapping;\n\texports.Loader = Loader;\n\texports.LoaderUtils = LoaderUtils;\n\texports.LoadingManager = LoadingManager;\n\texports.LogLuvEncoding = LogLuvEncoding;\n\texports.LoopOnce = LoopOnce;\n\texports.LoopPingPong = LoopPingPong;\n\texports.LoopRepeat = LoopRepeat;\n\texports.LuminanceAlphaFormat = LuminanceAlphaFormat;\n\texports.LuminanceFormat = LuminanceFormat;\n\texports.MOUSE = MOUSE;\n\texports.Material = Material;\n\texports.MaterialLoader = MaterialLoader;\n\texports.Math = MathUtils;\n\texports.MathUtils = MathUtils;\n\texports.Matrix3 = Matrix3;\n\texports.Matrix4 = Matrix4;\n\texports.MaxEquation = MaxEquation;\n\texports.Mesh = Mesh;\n\texports.MeshBasicMaterial = MeshBasicMaterial;\n\texports.MeshDepthMaterial = MeshDepthMaterial;\n\texports.MeshDistanceMaterial = MeshDistanceMaterial;\n\texports.MeshFaceMaterial = MeshFaceMaterial;\n\texports.MeshLambertMaterial = MeshLambertMaterial;\n\texports.MeshMatcapMaterial = MeshMatcapMaterial;\n\texports.MeshNormalMaterial = MeshNormalMaterial;\n\texports.MeshPhongMaterial = MeshPhongMaterial;\n\texports.MeshPhysicalMaterial = MeshPhysicalMaterial;\n\texports.MeshStandardMaterial = MeshStandardMaterial;\n\texports.MeshToonMaterial = MeshToonMaterial;\n\texports.MinEquation = MinEquation;\n\texports.MirroredRepeatWrapping = MirroredRepeatWrapping;\n\texports.MixOperation = MixOperation;\n\texports.MultiMaterial = MultiMaterial;\n\texports.MultiplyBlending = MultiplyBlending;\n\texports.MultiplyOperation = MultiplyOperation;\n\texports.NearestFilter = NearestFilter;\n\texports.NearestMipMapLinearFilter = NearestMipMapLinearFilter;\n\texports.NearestMipMapNearestFilter = NearestMipMapNearestFilter;\n\texports.NearestMipmapLinearFilter = NearestMipmapLinearFilter;\n\texports.NearestMipmapNearestFilter = NearestMipmapNearestFilter;\n\texports.NeverDepth = NeverDepth;\n\texports.NeverStencilFunc = NeverStencilFunc;\n\texports.NoBlending = NoBlending;\n\texports.NoColors = NoColors;\n\texports.NoToneMapping = NoToneMapping;\n\texports.NormalAnimationBlendMode = NormalAnimationBlendMode;\n\texports.NormalBlending = NormalBlending;\n\texports.NotEqualDepth = NotEqualDepth;\n\texports.NotEqualStencilFunc = NotEqualStencilFunc;\n\texports.NumberKeyframeTrack = NumberKeyframeTrack;\n\texports.Object3D = Object3D;\n\texports.ObjectLoader = ObjectLoader;\n\texports.ObjectSpaceNormalMap = ObjectSpaceNormalMap;\n\texports.OctahedronBufferGeometry = OctahedronGeometry;\n\texports.OctahedronGeometry = OctahedronGeometry;\n\texports.OneFactor = OneFactor;\n\texports.OneMinusDstAlphaFactor = OneMinusDstAlphaFactor;\n\texports.OneMinusDstColorFactor = OneMinusDstColorFactor;\n\texports.OneMinusSrcAlphaFactor = OneMinusSrcAlphaFactor;\n\texports.OneMinusSrcColorFactor = OneMinusSrcColorFactor;\n\texports.OrthographicCamera = OrthographicCamera;\n\texports.PCFShadowMap = PCFShadowMap;\n\texports.PCFSoftShadowMap = PCFSoftShadowMap;\n\texports.PMREMGenerator = PMREMGenerator;\n\texports.ParametricBufferGeometry = ParametricGeometry;\n\texports.ParametricGeometry = ParametricGeometry;\n\texports.Particle = Particle;\n\texports.ParticleBasicMaterial = ParticleBasicMaterial;\n\texports.ParticleSystem = ParticleSystem;\n\texports.ParticleSystemMaterial = ParticleSystemMaterial;\n\texports.Path = Path;\n\texports.PerspectiveCamera = PerspectiveCamera;\n\texports.Plane = Plane;\n\texports.PlaneBufferGeometry = PlaneGeometry;\n\texports.PlaneGeometry = PlaneGeometry;\n\texports.PlaneHelper = PlaneHelper;\n\texports.PointCloud = PointCloud;\n\texports.PointCloudMaterial = PointCloudMaterial;\n\texports.PointLight = PointLight;\n\texports.PointLightHelper = PointLightHelper;\n\texports.Points = Points;\n\texports.PointsMaterial = PointsMaterial;\n\texports.PolarGridHelper = PolarGridHelper;\n\texports.PolyhedronBufferGeometry = PolyhedronGeometry;\n\texports.PolyhedronGeometry = PolyhedronGeometry;\n\texports.PositionalAudio = PositionalAudio;\n\texports.PropertyBinding = PropertyBinding;\n\texports.PropertyMixer = PropertyMixer;\n\texports.QuadraticBezierCurve = QuadraticBezierCurve;\n\texports.QuadraticBezierCurve3 = QuadraticBezierCurve3;\n\texports.Quaternion = Quaternion;\n\texports.QuaternionKeyframeTrack = QuaternionKeyframeTrack;\n\texports.QuaternionLinearInterpolant = QuaternionLinearInterpolant;\n\texports.REVISION = REVISION;\n\texports.RGBADepthPacking = RGBADepthPacking;\n\texports.RGBAFormat = RGBAFormat;\n\texports.RGBAIntegerFormat = RGBAIntegerFormat;\n\texports.RGBA_ASTC_10x10_Format = RGBA_ASTC_10x10_Format;\n\texports.RGBA_ASTC_10x5_Format = RGBA_ASTC_10x5_Format;\n\texports.RGBA_ASTC_10x6_Format = RGBA_ASTC_10x6_Format;\n\texports.RGBA_ASTC_10x8_Format = RGBA_ASTC_10x8_Format;\n\texports.RGBA_ASTC_12x10_Format = RGBA_ASTC_12x10_Format;\n\texports.RGBA_ASTC_12x12_Format = RGBA_ASTC_12x12_Format;\n\texports.RGBA_ASTC_4x4_Format = RGBA_ASTC_4x4_Format;\n\texports.RGBA_ASTC_5x4_Format = RGBA_ASTC_5x4_Format;\n\texports.RGBA_ASTC_5x5_Format = RGBA_ASTC_5x5_Format;\n\texports.RGBA_ASTC_6x5_Format = RGBA_ASTC_6x5_Format;\n\texports.RGBA_ASTC_6x6_Format = RGBA_ASTC_6x6_Format;\n\texports.RGBA_ASTC_8x5_Format = RGBA_ASTC_8x5_Format;\n\texports.RGBA_ASTC_8x6_Format = RGBA_ASTC_8x6_Format;\n\texports.RGBA_ASTC_8x8_Format = RGBA_ASTC_8x8_Format;\n\texports.RGBA_BPTC_Format = RGBA_BPTC_Format;\n\texports.RGBA_ETC2_EAC_Format = RGBA_ETC2_EAC_Format;\n\texports.RGBA_PVRTC_2BPPV1_Format = RGBA_PVRTC_2BPPV1_Format;\n\texports.RGBA_PVRTC_4BPPV1_Format = RGBA_PVRTC_4BPPV1_Format;\n\texports.RGBA_S3TC_DXT1_Format = RGBA_S3TC_DXT1_Format;\n\texports.RGBA_S3TC_DXT3_Format = RGBA_S3TC_DXT3_Format;\n\texports.RGBA_S3TC_DXT5_Format = RGBA_S3TC_DXT5_Format;\n\texports.RGBDEncoding = RGBDEncoding;\n\texports.RGBEEncoding = RGBEEncoding;\n\texports.RGBEFormat = RGBEFormat;\n\texports.RGBFormat = RGBFormat;\n\texports.RGBIntegerFormat = RGBIntegerFormat;\n\texports.RGBM16Encoding = RGBM16Encoding;\n\texports.RGBM7Encoding = RGBM7Encoding;\n\texports.RGB_ETC1_Format = RGB_ETC1_Format;\n\texports.RGB_ETC2_Format = RGB_ETC2_Format;\n\texports.RGB_PVRTC_2BPPV1_Format = RGB_PVRTC_2BPPV1_Format;\n\texports.RGB_PVRTC_4BPPV1_Format = RGB_PVRTC_4BPPV1_Format;\n\texports.RGB_S3TC_DXT1_Format = RGB_S3TC_DXT1_Format;\n\texports.RGFormat = RGFormat;\n\texports.RGIntegerFormat = RGIntegerFormat;\n\texports.RawShaderMaterial = RawShaderMaterial;\n\texports.Ray = Ray;\n\texports.Raycaster = Raycaster;\n\texports.RectAreaLight = RectAreaLight;\n\texports.RedFormat = RedFormat;\n\texports.RedIntegerFormat = RedIntegerFormat;\n\texports.ReinhardToneMapping = ReinhardToneMapping;\n\texports.RepeatWrapping = RepeatWrapping;\n\texports.ReplaceStencilOp = ReplaceStencilOp;\n\texports.ReverseSubtractEquation = ReverseSubtractEquation;\n\texports.RingBufferGeometry = RingGeometry;\n\texports.RingGeometry = RingGeometry;\n\texports.SRGB8_ALPHA8_ASTC_10x10_Format = SRGB8_ALPHA8_ASTC_10x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x5_Format = SRGB8_ALPHA8_ASTC_10x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x6_Format = SRGB8_ALPHA8_ASTC_10x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_10x8_Format = SRGB8_ALPHA8_ASTC_10x8_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x10_Format = SRGB8_ALPHA8_ASTC_12x10_Format;\n\texports.SRGB8_ALPHA8_ASTC_12x12_Format = SRGB8_ALPHA8_ASTC_12x12_Format;\n\texports.SRGB8_ALPHA8_ASTC_4x4_Format = SRGB8_ALPHA8_ASTC_4x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x4_Format = SRGB8_ALPHA8_ASTC_5x4_Format;\n\texports.SRGB8_ALPHA8_ASTC_5x5_Format = SRGB8_ALPHA8_ASTC_5x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x5_Format = SRGB8_ALPHA8_ASTC_6x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_6x6_Format = SRGB8_ALPHA8_ASTC_6x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x5_Format = SRGB8_ALPHA8_ASTC_8x5_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x6_Format = SRGB8_ALPHA8_ASTC_8x6_Format;\n\texports.SRGB8_ALPHA8_ASTC_8x8_Format = SRGB8_ALPHA8_ASTC_8x8_Format;\n\texports.Scene = Scene;\n\texports.SceneUtils = SceneUtils;\n\texports.ShaderChunk = ShaderChunk;\n\texports.ShaderLib = ShaderLib;\n\texports.ShaderMaterial = ShaderMaterial;\n\texports.ShadowMaterial = ShadowMaterial;\n\texports.Shape = Shape;\n\texports.ShapeBufferGeometry = ShapeGeometry;\n\texports.ShapeGeometry = ShapeGeometry;\n\texports.ShapePath = ShapePath;\n\texports.ShapeUtils = ShapeUtils;\n\texports.ShortType = ShortType;\n\texports.Skeleton = Skeleton;\n\texports.SkeletonHelper = SkeletonHelper;\n\texports.SkinnedMesh = SkinnedMesh;\n\texports.SmoothShading = SmoothShading;\n\texports.Sphere = Sphere;\n\texports.SphereBufferGeometry = SphereGeometry;\n\texports.SphereGeometry = SphereGeometry;\n\texports.Spherical = Spherical;\n\texports.SphericalHarmonics3 = SphericalHarmonics3;\n\texports.SplineCurve = SplineCurve;\n\texports.SpotLight = SpotLight;\n\texports.SpotLightHelper = SpotLightHelper;\n\texports.Sprite = Sprite;\n\texports.SpriteMaterial = SpriteMaterial;\n\texports.SrcAlphaFactor = SrcAlphaFactor;\n\texports.SrcAlphaSaturateFactor = SrcAlphaSaturateFactor;\n\texports.SrcColorFactor = SrcColorFactor;\n\texports.StaticCopyUsage = StaticCopyUsage;\n\texports.StaticDrawUsage = StaticDrawUsage;\n\texports.StaticReadUsage = StaticReadUsage;\n\texports.StereoCamera = StereoCamera;\n\texports.StreamCopyUsage = StreamCopyUsage;\n\texports.StreamDrawUsage = StreamDrawUsage;\n\texports.StreamReadUsage = StreamReadUsage;\n\texports.StringKeyframeTrack = StringKeyframeTrack;\n\texports.SubtractEquation = SubtractEquation;\n\texports.SubtractiveBlending = SubtractiveBlending;\n\texports.TOUCH = TOUCH;\n\texports.TangentSpaceNormalMap = TangentSpaceNormalMap;\n\texports.TetrahedronBufferGeometry = TetrahedronGeometry;\n\texports.TetrahedronGeometry = TetrahedronGeometry;\n\texports.TextBufferGeometry = TextGeometry;\n\texports.TextGeometry = TextGeometry;\n\texports.Texture = Texture;\n\texports.TextureLoader = TextureLoader;\n\texports.TorusBufferGeometry = TorusGeometry;\n\texports.TorusGeometry = TorusGeometry;\n\texports.TorusKnotBufferGeometry = TorusKnotGeometry;\n\texports.TorusKnotGeometry = TorusKnotGeometry;\n\texports.Triangle = Triangle;\n\texports.TriangleFanDrawMode = TriangleFanDrawMode;\n\texports.TriangleStripDrawMode = TriangleStripDrawMode;\n\texports.TrianglesDrawMode = TrianglesDrawMode;\n\texports.TubeBufferGeometry = TubeGeometry;\n\texports.TubeGeometry = TubeGeometry;\n\texports.UVMapping = UVMapping;\n\texports.Uint16Attribute = Uint16Attribute;\n\texports.Uint16BufferAttribute = Uint16BufferAttribute;\n\texports.Uint32Attribute = Uint32Attribute;\n\texports.Uint32BufferAttribute = Uint32BufferAttribute;\n\texports.Uint8Attribute = Uint8Attribute;\n\texports.Uint8BufferAttribute = Uint8BufferAttribute;\n\texports.Uint8ClampedAttribute = Uint8ClampedAttribute;\n\texports.Uint8ClampedBufferAttribute = Uint8ClampedBufferAttribute;\n\texports.Uniform = Uniform;\n\texports.UniformsLib = UniformsLib;\n\texports.UniformsUtils = UniformsUtils;\n\texports.UnsignedByteType = UnsignedByteType;\n\texports.UnsignedInt248Type = UnsignedInt248Type;\n\texports.UnsignedIntType = UnsignedIntType;\n\texports.UnsignedShort4444Type = UnsignedShort4444Type;\n\texports.UnsignedShort5551Type = UnsignedShort5551Type;\n\texports.UnsignedShort565Type = UnsignedShort565Type;\n\texports.UnsignedShortType = UnsignedShortType;\n\texports.VSMShadowMap = VSMShadowMap;\n\texports.Vector2 = Vector2;\n\texports.Vector3 = Vector3;\n\texports.Vector4 = Vector4;\n\texports.VectorKeyframeTrack = VectorKeyframeTrack;\n\texports.Vertex = Vertex;\n\texports.VertexColors = VertexColors;\n\texports.VideoTexture = VideoTexture;\n\texports.WebGL1Renderer = WebGL1Renderer;\n\texports.WebGLCubeRenderTarget = WebGLCubeRenderTarget;\n\texports.WebGLMultipleRenderTargets = WebGLMultipleRenderTargets;\n\texports.WebGLMultisampleRenderTarget = WebGLMultisampleRenderTarget;\n\texports.WebGLRenderTarget = WebGLRenderTarget;\n\texports.WebGLRenderTargetCube = WebGLRenderTargetCube;\n\texports.WebGLRenderer = WebGLRenderer;\n\texports.WebGLUtils = WebGLUtils;\n\texports.WireframeGeometry = WireframeGeometry;\n\texports.WireframeHelper = WireframeHelper;\n\texports.WrapAroundEnding = WrapAroundEnding;\n\texports.XHRLoader = XHRLoader;\n\texports.ZeroCurvatureEnding = ZeroCurvatureEnding;\n\texports.ZeroFactor = ZeroFactor;\n\texports.ZeroSlopeEnding = ZeroSlopeEnding;\n\texports.ZeroStencilOp = ZeroStencilOp;\n\texports.sRGBEncoding = sRGBEncoding;\n\n\tObject.defineProperty(exports, '__esModule', { value: true });\n\n})));\n"]}